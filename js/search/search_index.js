var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccessTokenDialogComponent.html",[0,0.083,1,0.954]],["body/components/AccessTokenDialogComponent.html",[0,0.142,1,1.626,2,0.861,3,0.113,4,0.104,5,0.794,6,1.102,7,1.08,8,1.037,9,0.095,10,7.433,11,1.898,12,6.336,13,1.944,14,1.316,15,2.022,16,0.956,17,1.45,18,1.383,19,1.847,20,1.48,21,0.983,22,3.125,23,0.983,24,2.762,25,0.122,26,0.578,27,1.48,28,3.436,29,3.981,30,0.861,31,6.91,32,7.797,33,0.638,34,2.706,35,3.402,36,3.436,37,0.752,38,5.706,39,0.528,40,0.008,41,0.556,42,0.172,43,0.429,44,3.606,45,0.73,46,1.112,47,3.393,48,4.231,49,0.371,50,0.881,51,0.744,52,6.438,53,0.201,54,0.36,55,1.473,56,0.131,57,0.02,58,1.995,59,0.744,60,1.325,61,2.163,62,1.519,63,2.521,64,1.995,65,5.706,66,7.797,67,6.438,68,6.326,69,5.706,70,3.519,71,6.438,72,4.576,73,7.726,74,4.576,75,3.952,76,4.863,77,2.917,78,2.378,79,4.863,80,2.917,81,2.439,82,2.812,83,4.773,84,1.896,85,2.322,86,3.606,87,0.541,88,1.07,89,1.85,90,2.706,91,1.608,92,1.08,93,1.289,94,1.263,95,0.828,96,1.764,97,1.08,98,2.02,99,0.976,100,0.845,101,1.038,102,1.343,103,0.996,104,1.08,105,0.996,106,0.956,107,1.08,108,0.996,109,1.08,110,0.937,111,0.956,112,0.969,113,0.976,114,0.937,115,1.07,116,1.648,117,0.956,118,0.078,119,0.976,120,0.951,121,0.996,122,0.996,123,0.899,124,1.08,125,0.956,126,1.08,127,0.996,128,1.08,129,0.996,130,1.08,131,0.976,132,1.08,133,0.976,134,1.08,135,0.698,136,1.08,137,0.976,138,0.465,139,1.08,140,0.996,141,1.08,142,0.996,143,1.648,144,0.996,145,1.08,146,0.996,147,1.648,148,0.996,149,1.08,150,1.016,151,1.08,152,0.956,153,1.08,154,0.996,155,1.08,156,0.937,157,0.918,158,1.08,159,0.996,160,1.398,161,1.456,162,0.996,163,1.08,164,0.956,165,0.541,166,1.08,167,0.976,168,0.996,169,1.058,170,0.996,171,1.08,172,0.976,173,0.976,174,0.956,175,1.08,176,0.976,177,1.08,178,0.918,179,0.777,180,0.956,181,1.08,182,0.956,183,1.263,184,0.976,185,0.996,186,0.644,187,0.937,188,0.761,189,0.996,190,0.996,191,0.976,192,1.08,193,0.996,194,0.899,195,1.08,196,0.996,197,1.08,198,0.937,199,0.976,200,0.996,201,0.899,202,1.08,203,0.996,204,0.667,205,0.937,206,0.976,207,1.08,208,0.956,209,1.08,210,0.956,211,1.08,212,0.937,213,1.08,214,0.937,215,1.08,216,0.937,217,1.016,218,1.08,219,0.005,220,0.005]],["title/components/AddProjectMemberDialogComponent.html",[0,0.083,99,0.935]],["body/components/AddProjectMemberDialogComponent.html",[0,0.15,1,0.934,2,0.824,3,0.106,4,0.098,5,0.745,6,1.034,7,1.013,8,0.973,9,0.089,11,0.897,13,1.825,14,1.26,15,1.957,16,0.897,17,1.447,18,1.38,19,0.897,20,1.289,21,0.941,22,3.024,23,0.941,24,2.645,25,0.114,26,0.554,27,1.352,28,3.347,30,0.824,33,0.599,34,2.539,35,3.328,37,0.805,39,0.496,40,0.008,41,0.545,42,0.167,43,0.402,44,3.384,45,0.699,46,1.076,50,1.401,51,1.184,53,0.22,54,0.338,55,1.382,56,0.123,57,0.019,58,1.872,60,1.244,62,1.286,63,2.365,77,3.194,78,1.998,82,3.632,84,1.779,85,1.616,87,0.861,88,0.745,89,2.389,90,2.539,91,1.509,92,1.013,93,1.235,94,1.21,95,0.777,96,1.718,97,1.013,98,1.995,99,1.552,100,1.619,101,1.141,102,1.991,103,0.934,104,1.013,105,0.934,106,0.897,107,1.013,108,0.934,109,1.013,110,0.879,111,0.897,112,0.948,113,0.916,114,0.879,115,1.025,116,1.595,117,0.897,118,0.073,119,0.916,120,0.943,121,0.934,122,0.934,123,0.844,124,1.013,125,0.897,126,1.013,127,0.934,128,1.013,129,0.934,130,1.013,131,0.916,132,1.013,133,0.916,134,1.013,135,0.655,136,1.013,137,0.916,138,0.436,139,1.013,140,0.934,141,1.013,142,0.934,143,1.595,144,0.934,145,1.013,146,0.934,147,1.595,148,0.934,149,1.013,150,0.954,151,1.013,152,0.897,153,1.013,154,0.934,155,1.013,156,0.879,157,0.861,158,1.013,159,0.934,160,1.339,161,1.395,162,0.934,163,1.013,164,0.897,165,0.508,166,1.013,167,0.916,168,0.934,169,0.993,170,0.934,171,1.013,172,0.916,173,0.916,174,0.897,175,1.013,176,0.916,177,1.013,178,0.861,179,0.729,180,0.897,181,1.013,182,0.897,183,1.21,184,0.916,185,0.934,186,0.617,187,0.879,188,0.714,189,0.934,190,0.934,191,0.916,192,1.013,193,0.934,194,0.844,195,1.013,196,0.934,197,1.013,198,0.879,199,0.916,200,0.934,201,0.844,202,1.013,203,0.934,204,0.626,205,0.879,206,0.916,207,1.013,208,0.897,209,1.013,210,0.897,211,1.013,212,0.879,213,1.013,214,0.879,215,1.013,216,0.879,217,0.954,218,1.013,219,0.005,220,0.005,221,7.817,222,6.269,223,0.38,224,2.576,225,3.759,226,4.657,227,6.165,228,1.944,229,4.382,230,3.255,231,1.176,232,2.8,233,6.248,234,6.248,235,7.049,236,4.304,237,5.736,238,6.165,239,3.635,240,3.635,241,1.975,242,2.874,243,5.464,244,1.367,245,3.97,246,3.416,247,3.759,248,4.48,249,1.872,250,2.089,251,1.694,252,2.03,253,4.48,254,0.546,255,4.48,256,3.97,257,3.97,258,5.002,259,5.002,260,5.464,261,1.655,262,1.655,263,5.002,264,2.875,265,3.384,266,3.97,267,2.089,268,2.875,269,1.975,270,2.389,271,3.384,272,3.184]],["title/components/AppComponent.html",[0,0.083,103,0.954]],["body/components/AppComponent.html",[0,0.144,1,1.036,2,0.884,3,0.117,4,0.108,5,0.826,6,1.147,7,1.124,8,1.079,9,0.099,11,0.995,16,0.995,17,1.452,18,1.385,19,0.995,20,0.843,21,1.009,23,1.009,25,0.127,26,0.594,33,0.664,37,0.611,39,0.55,40,0.008,41,0.562,42,0.195,43,0.446,49,0.386,50,0.916,51,1.236,53,0.232,54,0.375,56,0.136,57,0.021,59,0.775,62,1.379,88,0.826,92,1.124,93,1.324,94,1.297,95,0.861,96,1.792,97,1.124,98,2.034,99,1.015,100,1.17,101,1.047,102,1.379,103,1.653,104,1.124,105,1.036,106,0.995,107,1.124,108,1.036,109,1.124,110,0.975,111,0.995,112,0.982,113,1.015,114,0.975,115,1.099,116,1.681,117,0.995,118,0.081,119,1.015,120,0.962,121,1.036,122,1.036,123,0.936,124,1.124,125,0.995,126,1.124,127,1.036,128,1.124,129,1.036,130,1.124,131,1.015,132,1.124,133,1.015,134,1.124,135,0.726,136,1.124,137,1.015,138,0.484,139,1.124,140,1.036,141,1.124,142,1.036,143,1.681,144,1.036,145,1.124,146,1.036,147,1.681,148,1.036,149,1.124,150,1.057,151,1.124,152,0.995,153,1.124,154,1.036,155,1.124,156,0.975,157,0.955,158,1.124,159,1.036,160,1.436,161,1.496,162,1.036,163,1.124,164,0.995,165,0.563,166,1.124,167,1.015,168,1.036,169,1.101,170,1.036,171,1.124,172,1.015,173,1.015,174,0.995,175,1.124,176,1.015,177,1.124,178,0.955,179,0.809,180,0.995,181,1.124,182,0.995,183,1.297,184,1.015,185,1.036,186,0.661,187,0.975,188,0.791,189,1.036,190,1.036,191,1.015,192,1.124,193,1.036,194,0.936,195,1.124,196,1.036,197,1.124,198,0.975,199,1.015,200,1.036,201,0.936,202,1.124,203,1.036,204,0.695,205,0.975,206,1.015,207,1.124,208,0.995,209,1.124,210,0.995,211,1.124,212,0.975,213,1.124,214,0.975,215,1.124,216,0.975,217,1.057,218,1.124,219,0.006,220,0.006,244,1.101,254,1.072,273,4.403,274,1.997,275,7.432,276,6.612,277,2.343,278,4.967,279,8.484,280,8.659,281,6.612,282,4.243,283,4.031,284,3.753,285,3.531,286,1.101,287,4.967,288,4.995,289,2.459,290,4.967,291,4.995,292,3.346,293,4.967,294,3.273,295,4.967,296,4.967,297,4.967,298,4.967,299,4.967,300,3.753,301,4.031,302,5.614,303,3.368,304,2.538,305,2.316,306,3.753,307,7.432,308,0.809,309,4.668,310,2.343,311,2.316,312,4.967,313,4.967,314,4.967,315,4.243,316,4.031,317,6.612,318,5.365,319,5.86,320,4.967,321,4.967,322,4.967]],["title/modules/AppModule.html",[323,3.08,324,3.455]],["body/modules/AppModule.html",[0,0.109,1,1.696,3,0.102,4,0.094,9,0.086,11,1.203,12,3.259,18,0.617,40,0.008,49,0.335,53,0.302,54,0.325,55,1.331,56,0.118,57,0.018,62,1.253,101,0.968,102,1.253,103,1.861,108,1.696,110,1.596,111,1.629,113,1.662,114,0.846,115,0.998,117,1.629,118,0.098,119,1.662,120,0.835,121,1.696,125,1.629,129,1.696,131,1.662,154,1.696,157,1.563,159,1.696,160,0.937,162,1.696,164,1.629,167,1.662,168,1.696,173,1.662,176,1.662,180,1.629,182,1.629,184,1.662,188,0.687,189,1.696,190,1.696,191,0.882,193,1.696,196,1.696,198,1.596,200,1.696,201,0.812,212,1.596,214,1.596,216,1.596,219,0.005,220,0.005,251,1.632,254,0.842,270,1.672,283,3.5,284,4.537,285,3.066,294,2.135,300,4.537,308,0.702,311,2.011,324,7.343,325,2.648,326,4.046,327,3.823,328,3.823,329,3.823,330,3.823,331,5.781,332,5.478,333,5.478,334,4.537,335,2.648,336,3.5,337,4.873,338,4.537,339,6.006,340,5.323,341,6.124,342,5.323,343,4.537,344,4.314,345,4.314,346,5.323,347,3.823,348,6.006,349,3.066,350,5.323,351,3.823,352,5.323,353,4.269,354,5.323,355,3.823,356,5.323,357,5.323,358,3.823,359,5.323,360,3.823,361,4.046,362,5.323,363,5.323,364,3.823,365,0.956,366,3.259,367,3.5,368,3.259,369,3.823,370,3.5,371,4.314,372,3.5,373,4.314,374,4.314,375,5.323,376,3.066,377,3.538,378,3.823,379,4.314,380,5.323,381,5.323,382,6.006,383,3.462,384,6.124,385,4.314,386,6.006,387,6.006,388,4.314,389,6.006,390,3.823,391,5.323,392,6.006,393,6.006,394,4.314,395,6.124,396,2.445,397,5.323,398,4.314,399,3.5,400,4.314,401,4.314,402,3.823,403,3.823,404,3.823,405,2.278,406,3.888,407,4.15,408,5.323,409,3.823,410,5.323,411,3.823,412,2.358,413,5.323,414,3.823,415,6.006,416,4.314,417,4.314,418,3.823,419,5.311,420,3.259,421,6.006,422,2.541,423,6.124,424,5.323,425,4.873,426,2.358,427,5.323,428,2.648,429,3.5,430,6.006,431,3.5,432,3.5,433,3.066,434,3.5,435,6.006,436,3.259,437,3.823,438,3.283,439,2.768,440,3.823,441,3.854,442,2.445,443,2.906,444,4.314,445,3.5,446,6.006,447,3.5,448,3.823,449,4.314,450,3.5,451,4.314,452,3.066,453,4.314,454,2.51,455,3.259,456,3.823,457,4.314,458,3.259,459,4.314,460,5.323,461,3.777,462,3.823,463,3.5,464,4.873,465,3.823,466,3.259,467,4.314,468,3.259,469,4.314,470,2.906,471,4.314,472,3.5,473,3.823,474,3.823,475,3.823,476,4.314,477,3.5,478,3.823,479,4.314,480,3.5,481,2.768,482,3.823,483,2.768,484,3.823,485,4.314,486,4.314,487,4.314,488,3.5,489,3.854,490,5.323]],["title/modules/AppRoutingModule.html",[323,3.08,331,3.25]],["body/modules/AppRoutingModule.html",[0,0.173,3,0.145,4,0.134,9,0.122,40,0.008,53,0.294,54,0.462,56,0.168,57,0.026,86,6.935,101,1.02,120,0.88,125,1.515,131,1.752,137,1.546,138,0.8,157,1.454,167,1.752,172,1.546,173,1.546,174,1.515,176,1.546,180,1.515,219,0.006,220,0.006,254,0.747,325,3.762,331,5.378,338,4.63,343,5.716,365,1.359,366,4.63,367,6.139,368,4.63,369,5.432,377,3.611,378,5.432,402,5.432,403,5.432,404,5.432,441,3.933,454,3.162,455,4.63,456,5.432,491,6.129,492,6.129,493,6.2,494,7.566,495,2.264,496,6.129,497,4.63,498,5.432,499,5.378,500,6.129,501,4.63,502,4.356,503,5.432,504,9.603,505,5.432,506,8.968,507,7.566,508,3.633,509,9.18,510,4.973,511,1.812,512,3.762,513,3.933,514,6.129,515,7.566,516,6.129,517,4.128,518,4.356,519,3.236,520,4.973,521,5.432,522,6.129,523,4.973]],["title/interfaces/AppState.html",[118,0.075,524,3.455]],["body/interfaces/AppState.html",[3,0.143,4,0.132,8,1.313,9,0.121,25,0.154,26,0.674,40,0.008,41,0.401,42,0.143,43,0.674,45,0.686,49,0.47,53,0.278,54,0.456,56,0.205,57,0.025,59,1.17,81,3.089,87,0.851,101,1.117,118,0.099,186,0.605,219,0.006,220,0.006,228,1.907,244,1.34,254,0.994,274,1.826,286,1.34,308,0.984,310,2.218,495,2.233,508,2.903,510,4.906,524,6.163,525,1.611,526,4.906,527,6.921,528,1.804,529,7.56,530,5.359,531,3.974,532,4.298,533,1.578,534,2.838,535,4.073,536,2.527,537,1.75,538,4.624,539,4.906,540,2.74,541,2.665,542,5.359,543,2.528,544,0.923,545,2.315,546,4.073,547,5.359,548,4.566,549,2.594,550,5.359,551,2.74,552,3.193,553,3.596,554,4.568,555,6.921,556,5.359,557,2.819,558,3.712,559,3.193,560,5.359,561,5.359,562,4.073,563,3.305,564,4.568,565,2.594,566,5.359,567,4.906,568,2.463,569,3.193,570,2.903,571,2.002,572,3.193,573,5.359,574,5.668,575,4.568,576,5.359,577,5.359,578,4.906,579,5.359,580,3.833,581,6.65,582,5.359,583,5.359,584,5.359,585,5.359,586,6.65,587,6.65,588,3.712,589,5.359,590,5.359,591,5.359,592,4.253,593,1.611,594,4.568,595,5.359,596,4.906,597,3.305,598,5.359,599,5.359,600,1.454,601,5.359,602,6.088,603,5.359,604,5.359,605,5.359,606,0.75,607,5.359,608,5.359,609,2.463]],["title/guards/AuthGuard.html",[499,3.25,610,3.455]],["body/guards/AuthGuard.html",[3,0.148,4,0.136,9,0.125,14,1.276,25,0.159,30,1.023,33,0.835,37,0.707,39,0.847,40,0.008,41,0.507,42,0.181,43,0.688,45,0.868,53,0.258,54,0.471,56,0.171,57,0.026,59,0.974,204,1.288,219,0.006,220,0.006,223,0.65,244,1.385,254,0.761,274,1.886,286,1.385,308,1.404,396,4.339,495,2.307,499,6.132,505,8.165,517,6.146,520,6.715,528,1.502,531,4.174,548,3.191,553,3.971,571,1.878,574,5.782,575,5.782,596,6.211,597,4.184,600,1.502,606,0.863,610,5.782,611,6.246,612,5.535,613,4.184,614,5.782,615,3.911,616,6.403,617,8.627,618,7.654,619,4.699,620,2.698,621,4.912,622,8.627,623,4.439,624,4.742,625,6.246,626,7.654,627,8.627,628,8.627,629,6.246,630,7.654,631,7.654,632,7.654,633,3.374,634,7.654,635,1.997,636,6.246,637,4.008,638,5.44,639,6.246,640,2.104,641,6.246,642,6.246,643,5.535,644,6.246]],["title/injectables/AuthenticationService.html",[528,1.1,624,2.336]],["body/injectables/AuthenticationService.html",[3,0.128,4,0.118,9,0.108,11,1.698,25,0.138,26,0.628,27,1.39,30,0.934,33,0.723,37,0.836,39,0.857,40,0.008,41,0.616,42,0.205,43,0.696,45,0.962,46,1.182,49,0.704,50,0.998,51,0.843,53,0.271,54,0.408,56,0.148,57,0.023,59,1.277,87,0.613,118,0.089,157,1.574,183,1.372,186,0.699,204,1.339,219,0.006,220,0.006,223,0.594,230,4.324,254,0.852,274,1.633,286,1.199,310,2.067,376,3.843,454,2.26,495,1.997,517,6.033,528,1.3,531,4.005,533,1.411,536,2.26,543,2.977,544,1.393,545,2.157,571,1.715,606,0.819,613,3.821,616,5.506,624,3.571,637,3.47,638,6.027,640,1.822,645,2.26,646,4.387,647,5.281,648,7.515,649,5.672,650,6.195,651,4.824,652,7.833,653,4.09,654,6.865,655,7.257,656,6.644,657,6.99,658,4.968,659,6.865,660,5.407,661,7.257,662,6.99,663,6.195,664,5.407,665,6.195,666,5.516,667,5.407,668,6.195,669,3.821,670,5.205,671,4.806,672,6.195,673,5.672,674,3.962,675,6.186,676,4.234,677,4.291,678,5.407,679,4.486,680,6.195,681,6.195,682,5.407,683,4.563,684,5.407,685,5.407,686,5.407,687,5.407,688,3.642,689,4.085,690,1.599,691,4.792,692,4.792,693,4.387,694,4.792,695,4.792,696,4.792,697,4.792,698,4.792,699,4.792,700,4.792,701,4.792,702,4.387,703,4.792,704,2.148,705,4.792,706,4.792,707,4.792,708,4.792,709,4.792,710,4.792,711,4.792,712,4.792,713,4.792,714,4.792,715,4.792,716,4.387,717,4.792]],["title/classes/CCIMSValidators.html",[57,0.019,718,2.336]],["body/classes/CCIMSValidators.html",[3,0.147,4,0.136,9,0.124,25,0.159,26,0.686,37,0.795,40,0.008,41,0.596,50,1.589,51,1.343,53,0.194,56,0.17,57,0.035,64,2.599,69,5.512,194,1.758,219,0.006,220,0.006,223,0.528,224,3.19,230,4.031,250,3.851,251,2.352,261,2.819,311,2.899,548,4.22,635,2.248,653,4.974,718,3.9,719,2.297,720,5.512,721,7.634,722,5.767,723,6.508,724,2.572,725,1.727,726,4.497,727,4.152,728,8.261,729,8.261,730,7.836,731,8.261,732,8.614,733,6.219,734,9.205,735,6.123,736,7.976,737,7.634,738,7.634,739,6.219,740,4.497,741,7.634,742,6.194,743,4.686,744,7.634,745,5.767,746,7.634,747,6.219,748,6.219,749,5.528,750,4.031,751,1.351,752,5.512,753,6.219,754,6.219,755,4.42,756,6.219]],["title/components/CacheNodeComponent.html",[0,0.083,105,0.954]],["body/components/CacheNodeComponent.html",[0,0.154,1,1.022,2,0.876,3,0.116,4,0.107,5,1.089,7,1.108,8,1.064,9,0.098,11,0.981,14,1.339,15,2.049,16,0.981,17,1.452,18,1.384,19,0.981,20,0.832,25,0.125,26,0.589,33,0.655,37,0.78,39,0.542,40,0.008,41,0.56,42,0.194,43,0.44,50,0.904,51,0.764,53,0.263,54,0.369,56,0.134,57,0.021,60,1.36,62,1.367,87,0.743,88,0.815,92,1.108,93,1.312,94,1.286,95,0.849,96,1.783,97,1.108,98,2.029,99,1.001,100,0.867,101,1.044,102,1.367,103,1.022,104,1.108,105,1.644,106,1.645,107,1.108,108,1.022,109,1.108,110,0.961,111,0.981,112,0.978,113,1.001,114,0.961,115,1.089,116,1.67,117,0.981,118,0.08,119,1.001,120,0.954,121,1.022,122,1.022,123,0.923,124,1.108,125,0.981,126,1.108,127,1.022,128,1.108,129,1.022,130,1.108,131,1.001,132,1.108,133,1.001,134,1.108,135,0.716,136,1.108,137,1.001,138,0.477,139,1.108,140,1.022,141,1.108,142,1.022,143,1.67,144,1.022,145,1.108,146,1.022,147,1.67,148,1.022,149,1.108,150,1.043,151,1.108,152,0.981,153,1.108,154,1.022,155,1.108,156,0.961,157,0.942,158,1.108,159,1.022,160,1.423,161,1.482,162,1.022,163,1.108,164,0.981,165,1.05,166,1.108,167,1.001,168,1.022,169,1.086,170,1.022,171,1.108,172,1.001,173,1.001,174,0.981,175,1.108,176,1.001,177,1.108,178,0.942,179,0.798,180,0.981,181,1.108,182,0.981,183,1.286,184,1.001,185,1.022,186,0.655,187,0.961,188,0.781,189,1.022,190,1.022,191,1.001,192,1.108,193,1.022,194,0.923,195,1.108,196,1.022,197,1.108,198,0.961,199,1.001,200,1.022,201,0.923,202,1.108,203,1.022,204,0.685,205,0.961,206,1.339,207,1.108,208,0.981,209,1.108,210,0.981,211,1.108,212,0.961,213,1.108,214,0.961,215,1.108,216,0.961,217,1.043,218,1.108,219,0.005,220,0.005,223,0.416,231,1.208,241,2.16,286,1.086,308,1.283,396,2.778,533,1.278,600,1.178,725,1.67,757,7.648,758,4.343,759,3.347,760,2.888,761,2.932,762,4.972,763,7.381,764,2.42,765,5.576,766,3.008,767,3.121,768,6.552,769,4.9,770,4.022,771,5.807,772,4.949,773,5.316,774,4.413,775,3.581,776,2.487,777,4.9,778,2.888,779,5.807,780,4.413,781,3.771,782,4.9,783,3.544,784,4.9,785,3.085,786,2.887,787,3.976,788,2.726,789,1.545,790,2.048,791,2.353,792,4.343,793,4.9,794,3.301,795,2.887,796,4.9,797,4.9,798,4.9,799,4.9,800,4.9,801,4.9,802,4.9,803,1.946,804,4.9]],["title/interfaces/CoalescedTimelineItem.html",[118,0.075,805,2.935]],["body/interfaces/CoalescedTimelineItem.html",[0,0.127,3,0.088,4,0.081,9,0.074,14,0.757,17,0.553,18,0.53,21,0.565,23,0.565,25,0.094,26,0.484,27,0.915,40,0.008,41,0.421,42,0.215,45,0.905,46,0.969,49,0.658,51,0.991,53,0.255,54,0.279,56,0.147,57,0.016,59,1.088,61,2.442,75,2.274,80,1.678,86,2.798,87,0.72,88,1.564,101,0.441,115,1.159,118,0.104,120,0.839,165,0.611,178,1.036,179,0.877,194,0.698,196,0.773,199,1.917,204,1.225,219,0.004,220,0.004,223,0.315,224,1.548,244,1.546,254,0.997,286,0.821,301,4.372,302,4.071,308,0.877,310,2.062,365,1.995,461,2.025,464,3.005,495,1.368,512,2.274,525,0.987,531,1.678,534,3.093,541,1.633,543,1.248,544,1.065,545,1.96,546,3.63,565,2.725,571,2.129,575,5.842,580,2.753,600,1.919,606,0.9,609,2.195,633,1.633,635,0.966,653,1.956,690,2.062,725,1.437,727,1.633,749,2.377,751,1.171,760,2.375,767,2.737,775,2.945,776,2.14,785,1.548,788,2.346,789,1.699,790,1.548,791,1.779,805,5.122,806,1.779,807,3.005,808,3.054,809,4.776,810,4.776,811,4.214,812,2.94,813,6.601,814,5.389,815,5.389,816,2.107,817,2.992,818,2.945,819,4.327,820,2.667,821,3.63,822,4.776,823,5.389,824,4.372,825,7.981,826,3.504,827,6.322,828,2.512,829,1.633,830,3.6,831,2.182,832,2.274,833,1.548,834,2.587,835,1.892,836,1.22,837,2.377,838,2.377,839,4.776,840,2.025,841,3.626,842,3.704,843,2.633,844,1.956,845,3.704,846,3.704,847,3.704,848,3.704,849,3.704,850,3.704,851,3.704,852,3.704,853,3.704,854,3.704,855,3.704,856,3.704,857,3.704,858,3.704,859,3.704,860,3.704,861,2.633,862,2.798,863,3.354,864,4.514,865,1.833,866,1.509,867,3.704,868,1.22,869,5.629,870,3.005,871,2.274,872,3.83,873,2.512,874,3.704,875,3.704,876,5.154,877,1.471,878,3.283,879,3.704,880,3.704,881,2.633,882,3.704,883,5.389,884,3.283,885,3.005,886,3.283,887,1.892,888,3.704,889,1.678,890,3.704,891,3.704,892,3.704,893,3.704,894,3.283,895,3.704,896,3.704,897,7.981,898,8.178,899,4.756,900,8.338,901,5.813,902,5.436,903,3.6,904,6.351,905,6.351,906,0.757,907,3.704,908,5.926,909,3.704,910,7.733,911,4.776,912,3.704,913,8.178,914,3.005,915,5.659,916,8.178,917,3.704,918,3.704,919,5.389,920,6.351,921,5.389,922,5.389,923,2.945,924,2.274,925,2.753,926,2.495,927,2.798,928,3.704,929,3.704,930,3.704,931,3.704,932,3.005,933,3.704,934,3.704,935,3.704,936,5.389,937,6.351,938,3.704,939,6.351,940,3.704,941,1.678,942,6.351,943,5.389,944,2.025,945,3.704,946,3.704,947,2.025,948,3.704,949,3.704,950,3.704,951,3.005,952,2.182,953,2.377,954,3.704,955,1.956,956,3.452,957,3.704,958,3.704,959,3.704,960,3.704,961,3.704,962,3.704,963,3.005,964,2.274,965,3.704,966,3.704,967,3.704,968,3.704,969,2.633,970,3.704,971,3.704,972,2.377]],["title/components/CommentComponent.html",[0,0.083,108,0.954]],["body/components/CommentComponent.html",[0,0.153,1,0.848,2,0.77,3,0.096,4,0.089,5,0.676,6,0.939,7,0.92,8,0.884,9,0.081,11,0.815,14,1.178,15,1.858,16,0.815,17,1.441,18,1.374,19,0.815,20,1.236,21,0.88,23,0.88,25,0.104,26,0.518,27,1.532,30,0.77,33,0.544,36,3.209,37,0.788,39,0.638,40,0.008,41,0.544,42,0.182,43,0.518,45,0.654,46,1.111,49,0.52,50,1.235,51,1.044,53,0.272,54,0.307,55,1.255,56,0.111,57,0.017,59,0.899,60,1.129,62,1.202,77,2.612,87,0.826,88,0.676,92,0.92,93,1.154,94,1.131,95,0.705,96,1.647,97,0.92,98,1.956,99,0.831,100,0.72,101,1.015,102,1.202,103,0.848,104,0.92,105,0.848,106,0.815,107,0.92,108,1.519,109,0.92,110,0.798,111,0.815,112,0.915,113,0.831,114,1.313,115,0.958,116,1.514,117,0.815,118,0.067,119,0.831,120,0.963,121,0.848,122,0.848,123,0.766,124,0.92,125,0.815,126,0.92,127,0.848,128,0.92,129,0.848,130,0.92,131,0.831,132,0.92,133,0.831,134,0.92,135,0.594,136,0.92,137,0.831,138,0.396,139,0.92,140,0.848,141,0.92,142,0.848,143,1.514,144,0.848,145,0.92,146,0.848,147,1.514,148,0.848,149,0.92,150,0.866,151,0.92,152,0.815,153,0.92,154,0.848,155,0.92,156,0.798,157,0.782,158,0.92,159,0.848,160,1.252,161,1.304,162,0.848,163,0.92,164,0.815,165,0.654,166,0.92,167,0.831,168,0.848,169,0.902,170,0.848,171,0.92,172,0.831,173,0.831,174,0.815,175,0.92,176,0.831,177,0.92,178,0.782,179,0.662,180,0.815,181,0.92,182,1.154,183,1.131,184,0.831,185,0.848,186,0.728,187,0.798,188,0.648,189,0.848,190,0.848,191,0.831,192,0.92,193,0.848,194,0.766,195,0.92,196,0.848,197,0.92,198,0.798,199,0.831,200,0.848,201,0.766,202,0.92,203,0.848,204,0.806,205,0.798,206,0.831,207,0.92,208,0.815,209,0.92,210,0.815,211,0.92,212,0.798,213,0.92,214,0.798,215,0.92,216,0.798,217,0.866,218,0.92,219,0.005,220,0.005,223,0.678,225,2.014,231,0.824,244,1.769,254,0.496,277,1.283,286,0.902,308,1.388,407,1.953,422,2.396,461,2.223,462,3.605,512,4.109,533,1.061,544,1.111,545,2.463,571,0.998,600,1.386,635,1.504,669,3.15,677,2.497,725,1.647,750,3.043,751,1.252,761,2.659,764,2.129,766,2.497,767,2.948,771,5.108,776,2.589,783,3.214,785,2.797,788,2.472,789,1.817,790,1.7,791,1.953,803,1.616,806,4.152,819,2.945,830,4.524,831,2.396,832,2.497,833,1.7,885,3.301,925,2.078,973,3.605,974,2.612,975,7.63,976,5.763,977,2.54,978,6.693,979,5.763,980,6.693,981,6.693,982,6.453,983,5.763,984,6.693,985,7.281,986,3.033,987,2.821,988,4.068,989,4.068,990,4.068,991,3.267,992,3.395,993,4.097,994,4.834,995,4.068,996,4.354,997,4.068,998,3.882,999,5.763,1000,4.068,1001,4.097,1002,4.068,1003,4.289,1004,5.175,1005,4.068,1006,3.699,1007,4.068,1008,2.891,1009,2.61,1010,1.7,1011,1.616,1012,1.7,1013,4.068,1014,1.899,1015,3.267,1016,4.068,1017,4.068,1018,4.068,1019,4.068,1020,4.068,1021,4.068,1022,5.763,1023,2.61,1024,4.068,1025,4.068,1026,4.068,1027,4.068,1028,2.497,1029,3.301,1030,2.891,1031,2.74,1032,3.212,1033,2.61,1034,2.497,1035,2.306,1036,2.891,1037,3.301,1038,4.068,1039,3.882,1040,4.068,1041,3.301,1042,4.068,1043,4.068,1044,3.301,1045,1.899,1046,2.223,1047,5.108,1048,5.763,1049,4.068,1050,5.763]],["title/components/ComponentContextMenuComponent.html",[0,0.083,110,0.897]],["body/components/ComponentContextMenuComponent.html",[0,0.163,1,0.721,2,0.685,3,0.082,4,0.075,5,0.574,6,0.798,7,0.782,8,0.751,9,0.069,11,0.692,14,1.047,16,0.692,17,1.43,18,1.36,19,0.692,20,1.223,21,0.782,23,0.782,25,0.088,26,0.46,27,1.036,30,0.685,33,0.462,37,0.721,39,0.567,40,0.008,41,0.517,42,0.19,43,0.46,45,0.581,46,1.152,49,0.587,50,0.945,51,0.799,53,0.235,54,0.261,56,0.14,57,0.021,59,1.277,61,3.419,62,1.068,64,1.444,70,1.889,78,2.139,85,1.247,87,0.765,88,0.574,92,0.782,93,1.025,94,1.197,95,0.599,96,1.526,97,0.782,98,1.885,99,0.706,100,0.612,101,0.992,102,1.068,103,0.721,104,0.782,105,0.721,106,0.692,107,0.782,108,0.721,109,0.782,110,1.48,111,0.692,112,0.898,113,0.706,114,0.678,115,0.851,116,1.38,117,0.692,118,0.11,119,0.706,120,0.919,121,0.721,122,0.721,123,0.651,124,0.782,125,0.692,126,0.782,127,0.721,128,0.782,129,0.721,130,0.782,131,0.706,132,0.782,133,0.706,134,0.782,135,0.986,136,0.782,137,0.706,138,0.702,139,0.782,140,0.721,141,0.782,142,0.721,143,1.38,144,0.721,145,0.782,146,0.721,147,1.38,148,0.721,149,0.782,150,0.736,151,0.782,152,0.692,153,0.782,154,0.721,155,0.782,156,0.678,157,0.664,158,0.782,159,0.721,160,1.112,161,1.158,162,0.721,163,0.782,164,1.222,165,0.929,166,0.782,167,0.706,168,0.721,169,0.766,170,0.721,171,0.782,172,0.706,173,0.706,174,0.692,175,0.782,176,0.706,177,0.782,178,0.664,179,0.562,180,0.692,181,0.782,182,0.692,183,1.005,184,0.706,185,0.721,186,0.61,187,0.678,188,0.551,189,0.721,190,0.721,191,0.706,192,0.782,193,0.721,194,0.964,195,0.782,196,0.721,197,0.782,198,0.678,199,0.706,200,0.721,201,1.628,202,0.782,203,0.721,204,0.483,205,0.678,206,0.706,207,0.782,208,0.692,209,0.782,210,0.692,211,0.782,212,0.678,213,0.782,214,0.678,215,0.782,216,0.678,217,0.736,218,0.782,219,0.004,220,0.004,223,0.435,231,1.03,241,1.523,244,1.135,249,1.444,254,0.92,261,2.492,262,2.786,269,2.257,270,1.339,274,1.044,277,1.09,286,0.766,291,2.61,292,5.613,308,1.098,310,1.022,436,2.61,438,5.122,439,5.146,441,2.218,442,1.959,443,2.328,454,2.14,528,0.831,541,1.523,544,1.03,545,2.082,571,2.01,580,1.765,600,1.467,606,0.61,633,1.523,635,1.592,637,2.218,669,1.889,670,2.121,671,1.959,690,1.514,727,2.973,751,0.751,761,2.423,776,2.427,778,2.257,803,1.373,820,1.71,828,2.844,829,1.523,836,2.01,866,1.407,868,2.373,873,1.611,877,1.373,906,1.728,996,2.61,1014,2.785,1051,5.7,1052,2.456,1053,3.143,1054,5.469,1055,2.903,1056,4.95,1057,4.155,1058,4.95,1059,5.121,1060,3.456,1061,5.12,1062,3.221,1063,3.562,1064,3.456,1065,3.456,1066,4.155,1067,2.273,1068,3.533,1069,3.456,1070,2.197,1071,3.336,1072,3.514,1073,4.795,1074,3.394,1075,4.445,1076,4.643,1077,3.456,1078,3.456,1079,4.95,1080,3.456,1081,3.456,1082,4.95,1083,3.456,1084,4.336,1085,2.804,1086,2.804,1087,5.474,1088,4.95,1089,5.12,1090,5.474,1091,2.804,1092,2.804,1093,2.804,1094,2.456,1095,1.307,1096,2.456,1097,3.915,1098,3.64,1099,2.61,1100,1.765,1101,3.449,1102,3.458,1103,4.329,1104,1.114,1105,3.143,1106,2.456,1107,2.61,1108,4.609,1109,2.804,1110,4.155,1111,2.804,1112,2.799,1113,2.804,1114,2.804,1115,2.804,1116,2.804,1117,2.804,1118,2.804,1119,4.155,1120,2.804,1121,2.804,1122,4.155,1123,2.804,1124,2.218,1125,2.804,1126,2.804,1127,2.804,1128,2.804,1129,2.804,1130,2.804,1131,2.804,1132,2.804,1133,2.804,1134,2.804,1135,2.804,1136,4.95,1137,2.804,1138,4.95,1139,2.804,1140,3.868,1141,2.804,1142,2.804,1143,2.804,1144,4.95,1145,2.804,1146,2.804,1147,2.804,1148,2.804,1149,4.155,1150,2.804,1151,2.804,1152,1.889,1153,4.155,1154,4.155,1155,2.804,1156,3.868,1157,2.804,1158,2.804,1159,2.804,1160,2.804,1161,2.804,1162,2.804,1163,2.804,1164,2.804,1165,2.804,1166,2.804,1167,2.61,1168,2.804,1169,2.804,1170,2.804,1171,2.804,1172,5.121,1173,5.121,1174,3.063,1175,1.276,1176,4.538,1177,1.566,1178,1.71,1179,1.765,1180,1.659,1181,2.456,1182,3.456,1183,2.456,1184,2.804,1185,5.407,1186,2.61,1187,3.456,1188,2.036,1189,2.804,1190,3.456,1191,3.456,1192,1.825,1193,2.804,1194,1.523,1195,1.444,1196,1.139,1197,2.456,1198,1.483,1199,3.456,1200,2.804,1201,2.218,1202,1.825]],["title/interfaces/ComponentContextMenuData.html",[118,0.075,1061,3.25]],["body/interfaces/ComponentContextMenuData.html",[0,0.164,3,0.106,4,0.097,9,0.089,14,0.914,20,1.045,21,0.683,23,0.683,25,0.114,26,0.553,27,0.759,40,0.008,42,0.215,46,1.158,49,0.698,53,0.248,54,0.337,56,0.168,57,0.026,59,1.359,61,2.79,64,1.869,70,3.365,78,1.745,87,0.861,94,0.877,101,0.838,110,1.382,112,0.532,118,0.13,120,0.723,135,1.163,138,0.836,164,1.233,165,0.974,186,0.447,201,1.617,219,0.005,220,0.005,223,0.38,231,1.007,244,1.365,249,1.869,254,1.002,261,2.802,262,2.274,274,1.351,286,0.991,291,3.378,292,5.54,308,1.146,310,1.322,436,3.378,438,5.062,439,2.87,441,2.87,442,2.535,443,3.012,454,1.869,525,1.191,528,1.075,541,1.971,544,1.255,545,1.9,571,2.138,580,2.284,600,1.48,606,0.704,633,2.714,635,2.146,637,2.87,669,2.444,670,2.745,671,2.535,690,1.821,727,3.344,751,0.971,761,2.446,776,2.892,778,1.971,803,1.776,820,3.048,828,2.871,829,1.971,836,2.32,866,2.508,868,2.828,873,2.085,877,1.776,996,3.378,1014,2.933,1051,3.178,1052,3.178,1053,2.745,1054,5.64,1055,2.535,1056,3.628,1057,3.628,1058,3.628,1061,5.005,1062,2.361,1063,3.251,1066,3.628,1067,2.151,1068,3.588,1070,1.918,1071,3.657,1072,3.615,1073,4.376,1074,3.35,1075,4.47,1076,4.776,1079,4.996,1082,4.996,1084,5.005,1085,3.628,1086,3.628,1087,6.156,1088,6.456,1089,5.989,1090,7.069,1091,3.628,1092,3.628,1093,3.628,1094,3.178,1095,1.691,1096,3.178,1097,5.106,1098,4.376,1099,4.651,1100,3.146,1101,4.744,1102,4.301,1103,5.278,1104,1.984,1105,3.78,1106,3.178,1107,3.378,1108,5.32,1109,3.628,1110,4.996,1111,3.628,1112,3.365,1113,3.628,1114,3.628,1115,3.628,1116,3.628,1117,3.628,1118,3.628,1119,4.996,1120,3.628,1121,3.628,1122,4.996,1123,3.628,1124,2.87,1125,3.628,1126,3.628,1127,3.628,1128,3.628,1129,3.628,1130,3.628,1131,3.628,1132,3.628,1133,3.628,1134,3.628,1135,3.628,1136,5.714,1137,3.628,1138,5.714,1139,3.628,1140,3.378,1141,3.628,1142,3.628,1143,3.628,1144,5.714,1145,3.628,1146,3.628,1147,3.628,1148,3.628,1149,4.996,1150,3.628,1151,3.628,1152,2.444,1153,4.996,1154,4.996,1155,3.628,1156,4.651,1157,3.628,1158,3.628,1159,3.628,1160,3.628,1161,3.628,1162,3.628,1163,3.628,1164,3.628,1165,3.628,1166,3.628,1167,3.378,1168,3.628,1169,3.628,1170,3.628,1171,3.628]],["title/injectables/ComponentContextMenuService.html",[528,1.1,1101,3.08]],["body/injectables/ComponentContextMenuService.html",[0,0.162,3,0.104,4,0.096,9,0.088,14,0.902,20,1.036,21,0.674,23,0.674,25,0.113,27,0.749,30,0.816,33,0.59,37,0.564,39,0.675,40,0.008,41,0.404,42,0.198,43,0.548,45,0.501,46,1.152,49,0.684,53,0.247,54,0.333,56,0.167,57,0.026,59,1.355,61,2.765,64,1.845,70,2.413,78,1.73,87,0.898,94,1.372,101,0.833,110,1.554,112,0.726,118,0.114,120,0.718,135,1.157,138,0.772,164,1.222,165,0.985,186,0.441,201,1.656,219,0.005,220,0.005,223,0.518,231,0.872,244,1.353,249,1.845,254,0.998,261,2.583,262,2.254,274,1.333,286,0.978,291,3.335,292,5.764,308,1.138,310,1.305,436,3.335,438,5.101,439,4.489,441,2.833,442,2.502,443,2.973,454,1.845,528,1.061,541,2.69,544,1.25,545,1.883,571,2.132,580,2.255,600,1.467,606,0.7,633,1.946,635,1.825,637,2.833,645,1.845,669,2.413,670,2.71,671,2.502,690,1.804,727,3.326,751,0.959,761,2.424,776,2.829,778,1.946,803,1.753,820,2.185,828,2.845,829,1.946,836,2.61,866,1.798,868,2.767,873,2.058,877,2.424,996,4.61,1014,2.927,1051,4.971,1052,3.137,1053,2.71,1054,5.604,1055,2.502,1056,3.581,1057,3.581,1058,3.581,1061,4.338,1062,2.331,1063,3.222,1066,3.581,1067,2.426,1068,3.712,1070,1.894,1071,3.582,1072,3.773,1073,4.338,1074,3.486,1075,4.826,1076,5.035,1079,4.951,1082,4.951,1084,4.971,1085,3.581,1086,3.581,1087,6.944,1088,5.675,1089,6.083,1090,6.123,1091,3.581,1092,3.581,1093,3.581,1094,3.137,1095,1.67,1096,3.137,1097,5.083,1098,4.338,1099,3.335,1100,2.255,1101,4.711,1102,4.643,1103,5.257,1104,1.423,1105,2.71,1106,3.137,1107,3.335,1108,5.983,1109,3.581,1110,4.951,1111,3.581,1112,3.336,1113,3.581,1114,3.581,1115,3.581,1116,3.581,1117,3.581,1118,3.581,1119,4.951,1120,3.581,1121,3.581,1122,4.951,1123,3.581,1124,2.833,1125,3.581,1126,3.581,1127,3.581,1128,3.581,1129,3.581,1130,3.581,1131,3.581,1132,3.581,1133,3.581,1134,3.581,1135,3.581,1136,5.675,1137,3.581,1138,5.675,1139,3.581,1140,3.335,1141,3.581,1142,3.581,1143,3.581,1144,5.675,1145,3.581,1146,3.581,1147,3.581,1148,3.581,1149,4.951,1150,3.581,1151,3.581,1152,2.413,1153,4.951,1154,4.951,1155,3.581,1156,4.61,1157,3.581,1158,3.581,1159,3.581,1160,3.581,1161,3.581,1162,3.581,1163,3.581,1164,3.581,1165,3.581,1166,3.581,1167,3.335,1168,3.581,1169,3.581,1170,3.581,1171,3.581,1203,4.414,1204,4.414,1205,4.414,1206,4.414]],["title/interfaces/ComponentNode.html",[118,0.075,1207,2.694]],["body/interfaces/ComponentNode.html",[0,0.148,3,0.126,4,0.177,5,1.151,9,0.138,25,0.136,26,0.622,40,0.008,42,0.217,49,0.724,53,0.254,56,0.189,57,0.029,87,0.872,101,0.634,112,0.634,118,0.151,120,0.711,135,0.779,138,0.675,165,0.981,186,0.844,188,0.849,219,0.006,220,0.006,231,1.259,254,0.649,277,2.425,289,4.178,309,3.138,511,1.575,525,1.419,537,1.542,544,1.32,593,2.378,606,0.893,620,1.878,719,1.967,724,1.795,817,2.286,836,1.755,906,1.825,952,3.138,1067,1.963,1068,3.403,1071,3.708,1072,3.493,1095,2.015,1198,3.3,1207,4.797,1208,2.414,1209,3.02,1210,4.814,1211,5.188,1212,4.052,1213,3.324,1214,2.912,1215,2.558,1216,3.298,1217,3.324,1218,2.722,1219,2.813,1220,4.204,1221,4.299,1222,4.531,1223,3.27,1224,3.27,1225,3.27,1226,3.27,1227,3.27,1228,3.27,1229,3.27,1230,3.27,1231,3.228,1232,3.27,1233,3.27,1234,4.25,1235,3.693,1236,3.138,1237,3.138,1238,2.286,1239,3.784,1240,3.419,1241,3.419,1242,1.795,1243,2.484,1244,2.558,1245,3.27,1246,2.912,1247,2.484,1248,2.912,1249,3.27,1250,3.419,1251,2.015,1252,3.419,1253,2.722,1254,3.419,1255,2.348,1256,3.419,1257,2.912,1258,3.419,1259,3.27,1260,3.419,1261,4.359,1262,2.813,1263,3.02,1264,2.558,1265,3.924,1266,3.419,1267,3.419,1268,3.419,1269,4.078,1270,3.419,1271,4.443,1272,3.419,1273,3.419,1274,3.419,1275,3.27,1276,1.967,1277,3.924,1278,4.935,1279,3.419,1280,3.419,1281,4.443,1282,3.419,1283,4.443,1284,4.443,1285,3.419,1286,3.419,1287,4.204,1288,4.443,1289,3.27,1290,4.25,1291,4.443,1292,3.419,1293,4.615,1294,3.656,1295,3.419,1296,3.27,1297,3.419,1298,3.419,1299,3.419,1300,3.27,1301,4.078,1302,3.27,1303,2.912,1304,3.27,1305,2.813]],["title/injectables/ComponentStoreService.html",[528,1.1,1306,2.807]],["body/injectables/ComponentStoreService.html",[0,0.102,2,0.954,3,0.132,4,0.122,9,0.157,25,0.142,30,0.954,33,0.954,37,0.833,39,0.998,40,0.008,41,0.597,42,0.213,43,0.81,45,1.01,49,0.731,53,0.258,54,0.421,56,0.153,57,0.023,59,1.389,179,1.162,219,0.006,220,0.006,223,0.474,224,2.983,228,2.251,231,1.185,254,0.681,274,1.688,528,1.716,533,1.458,536,2.335,537,1.618,543,3.068,544,1.337,551,2.532,606,0.891,645,2.335,690,1.652,725,1.78,818,3.902,924,4.382,1247,3.328,1306,4.382,1307,8.07,1308,3.586,1309,6.327,1310,5.074,1311,6.327,1312,4.531,1313,8.29,1314,5.792,1315,7.139,1316,5.089,1317,7.347,1318,7.139,1319,4.809,1320,7.139,1321,7.139,1322,7.139,1323,7.139,1324,7.139,1325,7.139,1326,7.139,1327,5.587,1328,8.29,1329,7.867,1330,8.29,1331,7.867,1332,7.347,1333,7.867,1334,8.29,1335,7.867,1336,8.29,1337,7.347,1338,8.29,1339,8.29,1340,8.29,1341,5.587,1342,7.139,1343,6.726,1344,4.952,1345,7.139,1346,5.587,1347,7.139,1348,5.587,1349,7.139,1350,5.587,1351,7.139,1352,5.587,1353,7.139,1354,5.587,1355,7.139,1356,7.347,1357,4.952,1358,7.139,1359,5.587,1360,4.952,1361,5.587,1362,5.587,1363,5.587,1364,5.587,1365,5.587,1366,5.587,1367,5.587]],["title/injectables/ComponentsService.html",[528,1.1,1368,3.455]],["body/injectables/ComponentsService.html",[3,0.15,4,0.139,9,0.127,25,0.162,30,1.034,33,1.034,37,0.821,39,0.985,40,0.008,41,0.589,42,0.21,43,0.799,45,0.984,49,0.734,53,0.26,54,0.479,56,0.174,57,0.027,59,1.354,101,0.921,219,0.006,220,0.006,274,1.92,365,2.049,528,1.86,537,1.84,544,1.181,551,2.88,606,0.868,645,2.656,788,2.347,789,2.004,1332,7.692,1368,5.844,1369,4.218,1370,5.633,1371,7.736,1372,6.857,1373,7.736,1374,7.736,1375,6.356,1376,8.679,1377,8.34,1378,8.679,1379,8.34,1380,8.34,1381,7.692,1382,6.356,1383,7.736,1384,7.736,1385,6.356,1386,6.857,1387,6.356,1388,7.736,1389,6.168,1390,6.356,1391,7.736,1392,6.356,1393,5.157,1394,6.356,1395,4.801,1396,5.157,1397,6.356,1398,6.356,1399,6.356,1400,6.356]],["title/interfaces/CreateComponentData.html",[118,0.075,1401,3.455]],["body/interfaces/CreateComponentData.html",[0,0.169,3,0.147,4,0.135,9,0.124,13,2.526,17,0.926,18,0.887,20,1.294,21,0.947,22,2.661,23,0.947,24,2.661,25,0.158,26,0.685,27,1.294,28,2.734,33,0.829,35,3.185,40,0.008,41,0.411,42,0.147,46,1.163,49,0.725,53,0.287,54,0.468,55,1.914,56,0.17,57,0.026,59,1.287,61,2.811,63,4.025,64,2.592,77,2.811,87,1.002,100,1.098,111,1.242,112,0.982,118,0.102,138,0.604,178,1.586,219,0.006,220,0.006,223,0.647,229,4.409,231,0.887,236,3.516,242,2.892,246,3.859,247,4.26,249,2.592,250,2.892,251,2.346,252,2.811,254,0.756,405,3.275,406,3.07,508,2.978,525,1.652,537,1.796,540,2.811,548,3.894,606,0.62,620,2.187,633,2.734,718,3.169,725,1.947,726,3.654,829,2.734,837,3.981,838,3.981,868,2.911,871,3.808,906,1.268,1095,2.346,1214,3.39,1238,2.661,1306,4.679,1316,3.808,1343,6.184,1401,6.233,1402,4.891,1403,6.755,1404,4.49,1405,3.654,1406,4.686,1407,3.516,1408,3.981,1409,4.178,1410,5.497,1411,5.417,1412,5.497,1413,4.409,1414,4.178,1415,5.033,1416,6.184,1417,5.033,1418,5.033,1419,4.409,1420,3.808,1421,3.275,1422,4.409,1423,5.417,1424,4.178,1425,2.892,1426,2.978,1427,3.981,1428,4.686,1429,5.497,1430,5.497,1431,5.497,1432,5.497,1433,5.497]],["title/components/CreateComponentDialogComponent.html",[0,0.083,111,0.916]],["body/components/CreateComponentDialogComponent.html",[0,0.175,1,0.848,2,0.77,3,0.096,4,0.089,5,0.676,6,0.939,7,0.92,8,0.884,9,0.081,11,0.815,13,1.657,16,0.815,17,1.441,18,1.374,19,0.815,20,1.305,21,0.88,22,2.872,23,0.88,24,2.473,25,0.104,26,0.518,27,1.355,28,3.209,30,0.77,33,0.77,34,2.306,35,3.212,37,0.822,39,0.741,40,0.008,41,0.594,42,0.202,43,0.601,44,4.354,45,0.759,46,1.111,47,2.891,49,0.719,50,1.418,51,1.199,53,0.266,54,0.307,55,1.255,56,0.111,57,0.017,59,1.044,61,1.843,62,1.202,63,3.043,64,1.7,77,3.033,78,1.153,84,1.616,87,0.981,88,0.676,92,0.92,93,1.154,94,1.131,95,0.705,96,1.647,97,0.92,98,1.956,99,0.831,100,1.02,101,0.998,102,1.202,103,0.848,104,0.92,105,0.848,106,0.815,107,0.92,108,0.848,109,0.92,110,0.798,111,1.458,112,1.08,113,0.831,114,0.798,115,0.958,116,1.514,117,0.815,118,0.094,119,0.831,120,0.931,121,0.848,122,0.848,123,0.766,124,0.92,125,0.815,126,0.92,127,0.848,128,0.92,129,0.848,130,0.92,131,0.831,132,0.92,133,0.831,134,0.92,135,0.594,136,0.92,137,0.831,138,0.562,139,0.92,140,0.848,141,0.92,142,0.848,143,1.514,144,0.848,145,0.92,146,0.848,147,1.514,148,0.848,149,0.92,150,0.866,151,0.92,152,0.815,153,0.92,154,0.848,155,0.92,156,0.798,157,0.782,158,0.92,159,0.848,160,1.252,161,1.304,162,0.848,163,0.92,164,0.815,165,0.461,166,0.92,167,0.831,168,0.848,169,0.902,170,0.848,171,0.92,172,0.831,173,0.831,174,0.815,175,0.92,176,0.831,177,0.92,178,1.578,179,0.662,180,0.815,181,0.92,182,0.815,183,1.131,184,0.831,185,0.848,186,0.576,187,0.798,188,0.648,189,0.848,190,0.848,191,0.831,192,0.92,193,0.848,194,0.766,195,0.92,196,0.848,197,0.92,198,0.798,199,0.831,200,0.848,201,0.766,202,0.92,203,0.848,204,0.569,205,0.798,206,0.831,207,0.92,208,0.815,209,0.92,210,0.815,211,0.92,212,0.798,213,0.92,214,0.798,215,0.92,216,0.798,217,0.866,218,0.92,219,0.005,220,0.005,223,0.678,229,2.891,231,1.099,236,4.127,237,4.354,240,3.301,241,2.54,242,2.687,243,3.605,246,3.753,247,4.15,249,1.7,250,1.897,251,1.539,252,1.843,254,0.496,264,2.61,405,4.735,406,4.439,426,3.15,508,1.953,537,1.178,540,1.843,548,4.512,606,0.407,620,1.434,633,1.793,718,2.078,725,1.647,726,2.396,764,2.129,829,1.793,837,2.61,838,2.61,868,2.399,871,3.538,906,0.831,1095,1.539,1214,2.223,1238,1.745,1306,4.47,1316,2.497,1343,4.676,1401,5.806,1402,4.672,1403,5.932,1404,4.289,1405,2.396,1406,3.073,1407,2.306,1408,4.295,1409,4.509,1410,5.932,1411,4.097,1412,3.605,1413,4.758,1414,3.882,1415,5.431,1416,5.908,1417,5.431,1418,5.431,1419,4.758,1420,3.538,1421,2.148,1422,4.097,1423,5.96,1424,5.528,1425,1.897,1426,1.953,1427,2.61,1428,3.073,1429,3.605,1430,3.605,1431,5.108,1432,3.605,1433,3.605,1434,5.763,1435,4.068,1436,4.068,1437,4.068,1438,2.891,1439,3.073,1440,3.605,1441,4.068,1442,3.301,1443,3.605,1444,3.699,1445,4.354,1446,5.175,1447,4.47,1448,5.108,1449,3.073,1450,2.891]],["title/components/CreateEditLabelDialogComponent.html",[0,0.083,113,0.935]],["body/components/CreateEditLabelDialogComponent.html",[0,0.155,1,0.704,2,1.036,3,0.08,4,0.145,5,0.561,6,0.779,7,0.764,8,0.733,9,0.067,11,0.676,13,1.375,14,1.029,15,1.671,16,0.676,17,1.43,18,1.36,19,0.676,20,1.352,21,0.768,22,2.582,23,0.768,24,2.159,25,0.086,26,0.452,27,1.022,30,0.673,33,0.673,35,2.787,37,0.777,39,0.79,40,0.008,41,0.592,42,0.188,43,0.452,45,0.683,46,1.089,49,0.602,50,1.316,51,1.113,53,0.248,54,0.255,55,1.042,56,0.138,57,0.014,59,0.938,60,0.937,61,2.281,62,1.05,77,2.281,78,0.957,85,1.218,87,0.954,88,1.288,89,1.308,90,1.914,91,1.137,92,0.764,93,1.008,94,0.988,95,0.585,96,1.509,97,0.764,98,1.875,99,0.69,100,0.598,101,0.969,102,1.05,103,0.704,104,0.764,105,0.704,106,0.676,107,0.764,108,0.704,109,0.764,110,0.662,111,0.676,112,1.063,113,1.363,114,1.776,115,1.596,116,1.361,117,0.676,118,0.082,119,0.69,120,0.911,121,0.704,122,0.704,123,0.636,124,0.764,125,0.676,126,0.764,127,0.704,128,0.764,129,0.704,130,0.764,131,0.69,132,0.764,133,0.69,134,0.764,135,0.493,136,0.764,137,0.69,138,0.329,139,0.764,140,0.704,141,0.764,142,0.704,143,1.361,144,0.704,145,0.764,146,0.704,147,1.361,148,0.704,149,0.764,150,0.719,151,0.764,152,0.676,153,0.764,154,0.704,155,0.764,156,0.662,157,0.649,158,0.764,159,0.704,160,1.093,161,1.139,162,0.704,163,0.764,164,0.676,165,0.879,166,0.764,167,0.69,168,0.704,169,0.748,170,0.704,171,0.764,172,0.69,173,0.69,174,0.676,175,0.764,176,0.69,177,0.764,178,0.649,179,0.55,180,0.676,181,0.764,182,0.676,183,0.988,184,0.69,185,0.704,186,0.748,187,0.662,188,0.959,189,0.704,190,0.704,191,0.69,192,0.764,193,0.704,194,0.636,195,0.764,196,0.704,197,0.764,198,0.662,199,0.69,200,0.704,201,0.948,202,0.764,203,0.704,204,0.997,205,0.662,206,0.69,207,0.764,208,0.676,209,0.764,210,0.676,211,0.764,212,0.662,213,0.764,214,0.662,215,0.764,216,0.662,217,0.719,218,0.764,219,0.004,220,0.004,223,0.714,231,1.164,232,2.833,241,1.488,242,2.347,244,1.581,246,3.061,247,2.491,249,1.411,250,1.574,251,1.277,252,1.53,254,0.992,265,2.551,267,1.574,268,2.167,269,2.218,270,3.394,271,2.551,272,2.4,308,1.086,310,1.488,365,1.658,405,4.496,406,4.215,426,1.845,512,2.073,544,0.768,549,2.159,553,2.218,606,0.713,609,2.451,635,1.313,718,1.725,725,0.764,743,2.073,751,0.733,767,2.862,776,2.742,788,1.859,789,1.587,790,1.411,811,1.783,816,1.02,820,1.671,833,1.411,835,1.725,868,1.112,953,3.23,977,2.218,986,2.727,987,2.585,992,3.545,1001,3.577,1004,4.741,1010,1.411,1011,1.341,1012,1.411,1014,1.658,1023,3.23,1028,3.694,1045,1.983,1046,2.751,1070,2.582,1074,1.375,1175,1.247,1179,1.725,1196,1.983,1238,2.159,1276,1.247,1393,4.084,1407,1.914,1420,3.09,1428,2.551,1440,2.992,1444,3.23,1451,2.658,1452,5.854,1453,5.333,1454,5.333,1455,5.333,1456,5.333,1457,5.033,1458,5.911,1459,5.911,1460,2.739,1461,4.461,1462,4.461,1463,3.376,1464,4.461,1465,4.461,1466,3.802,1467,1.914,1468,3.376,1469,4.084,1470,3.376,1471,4.461,1472,3.003,1473,4.461,1474,2.551,1475,3.376,1476,2.585,1477,2.218,1478,3.862,1479,3.376,1480,2.992,1481,3.577,1482,2.551,1483,5.911,1484,4.461,1485,1.725,1486,2.992,1487,2.167,1488,2.274,1489,2.992,1490,6.63,1491,5.333,1492,3.802,1493,3.899,1494,2.992,1495,1.989,1496,2.992,1497,2.992,1498,2.4,1499,2.4,1500,2.992,1501,6.322,1502,2.992,1503,2.992,1504,3.545,1505,2.992,1506,1.449,1507,4.461,1508,2.992,1509,4.461,1510,2.992,1511,2.992,1512,1.488,1513,2.992,1514,2.551,1515,3.862,1516,3.862,1517,2.992,1518,2.992,1519,2.992,1520,1.989,1521,4.461,1522,2.992,1523,2.992,1524,2.992,1525,2.992,1526,3.577,1527,2.992,1528,2.992,1529,2.992,1530,2.992,1531,2.992,1532,2.992,1533,2.992,1534,2.992,1535,3.23,1536,5.333,1537,4.546,1538,5.333,1539,3.802,1540,5.033,1541,3.577,1542,5.033,1543,3.23,1544,1.845,1545,2.551,1546,3.376,1547,4.461,1548,1.914,1549,3.376]],["title/interfaces/CreateEditLabelDialogData.html",[118,0.075,1452,3.455]],["body/interfaces/CreateEditLabelDialogData.html",[0,0.153,2,0.975,3,0.113,4,0.159,9,0.096,13,1.949,14,0.978,15,1.79,17,0.715,18,0.684,20,1.383,21,0.731,22,2.053,23,0.731,24,2.053,25,0.122,26,0.579,27,0.813,33,0.64,35,2.695,39,0.807,40,0.008,41,0.54,42,0.193,43,0.701,46,0.984,49,0.501,53,0.272,54,0.361,55,1.477,56,0.176,57,0.02,59,1.138,60,1.329,61,2.169,87,0.952,88,1.395,101,0.768,112,0.929,113,0.978,114,1.647,115,1.567,118,0.078,120,0.662,165,0.924,186,0.84,188,1.028,204,0.902,219,0.005,220,0.005,223,0.713,231,1.116,232,2.562,242,2.231,244,1.73,246,3.129,247,2.369,249,2,250,2.231,251,1.81,252,2.169,254,1.077,270,3.025,308,1.187,310,1.415,365,1.617,405,2.527,406,2.369,426,3.525,512,4.791,525,1.275,544,1.113,549,2.053,553,2.11,606,0.73,609,2.971,635,1.683,718,2.445,751,1.04,767,2.694,776,3.094,788,2.382,789,2.034,790,2,811,3.405,816,1.446,820,3.192,833,2,835,2.445,868,2.572,953,4.139,977,2.11,986,2.169,987,2.499,992,3.799,1001,3.402,1004,4.584,1010,2,1011,1.901,1012,2,1014,2.125,1023,4.139,1028,4.478,1045,2.125,1046,3.525,1070,2.053,1238,2.053,1393,5.233,1407,2.713,1420,2.938,1428,3.616,1451,2.527,1452,5.896,1453,4.242,1454,4.242,1455,4.242,1456,4.242,1458,4.242,1459,4.242,1462,4.242,1464,4.242,1465,4.242,1466,3.616,1469,3.883,1471,4.242,1472,3.025,1473,4.242,1476,2.499,1477,2.11,1478,4.681,1481,3.402,1483,5.716,1484,4.242,1485,2.445,1486,5.716,1487,4.139,1488,4.344,1489,6.918,1490,7.439,1491,6.465,1492,4.872,1493,4.454,1494,4.242,1495,2.82,1496,4.242,1497,4.242,1498,3.402,1499,3.402,1500,4.242,1501,7.221,1502,4.242,1503,4.242,1504,4.297,1505,4.242,1506,2.053,1507,5.716,1508,4.242,1509,5.716,1510,4.242,1511,4.242,1512,2.11,1513,4.242,1514,3.616,1515,4.681,1516,4.681,1517,4.242,1518,4.242,1519,4.242,1520,2.82,1521,5.716,1522,4.242,1523,4.242,1524,4.242,1525,4.242,1526,4.584,1527,4.242,1528,4.242,1529,4.242,1530,4.242,1531,4.242,1532,4.242,1533,4.242,1534,4.242,1535,4.139,1536,6.465,1537,5.51,1538,6.465,1539,4.872]],["title/interfaces/CreateInterfaceData.html",[118,0.075,1550,3.25]],["body/interfaces/CreateInterfaceData.html",[0,0.139,3,0.147,4,0.135,9,0.124,13,2.526,17,0.926,18,0.887,20,1.401,21,0.947,22,2.661,23,0.947,24,2.661,25,0.158,26,0.685,27,1.461,28,2.734,33,0.829,35,3.185,40,0.008,42,0.209,46,1.259,49,0.708,53,0.287,54,0.468,55,1.914,56,0.209,57,0.026,59,1.378,61,2.811,63,3.275,87,0.865,112,1.052,117,1.242,118,0.152,138,0.604,219,0.006,220,0.006,223,0.527,231,1.09,232,2.464,236,3.516,242,2.892,244,1.908,246,3.54,247,3.07,249,2.592,250,2.892,251,2.346,252,2.811,308,1.241,405,3.275,406,3.07,525,1.652,540,2.811,544,0.947,600,1.833,606,0.62,624,3.894,718,3.169,725,1.724,868,2.044,924,3.808,986,2.811,987,2.954,1010,2.592,1011,2.464,1012,2.592,1045,2.511,1046,3.39,1067,2.161,1068,2.592,1071,3.506,1072,2.661,1095,2.346,1214,3.39,1265,4.879,1316,3.808,1402,4.891,1404,4.49,1405,3.654,1407,3.516,1408,3.981,1409,4.178,1413,4.409,1414,4.178,1419,4.409,1420,3.808,1422,4.409,1493,4.704,1550,5.865,1551,4.679,1552,4.409,1553,4.891,1554,4.686,1555,4.409,1556,4.178,1557,5.497,1558,5.497,1559,5.497,1560,5.497,1561,5.033,1562,5.497,1563,5.417,1564,4.409]],["title/components/CreateInterfaceDialogComponent.html",[0,0.083,117,0.916]],["body/components/CreateInterfaceDialogComponent.html",[0,0.135,1,0.887,2,0.795,3,0.101,4,0.093,5,0.707,6,0.982,7,0.962,8,0.924,9,0.085,11,0.852,13,1.732,16,0.852,17,1.444,18,1.376,19,0.852,20,1.375,21,0.908,22,2.942,23,0.908,24,2.551,25,0.108,26,0.534,27,1.511,28,3.273,30,0.795,33,0.795,34,2.411,35,3.266,37,0.815,39,0.658,40,0.008,41,0.59,42,0.21,43,0.534,44,3.213,45,0.778,46,1.236,47,3.023,49,0.692,50,1.097,51,0.927,53,0.268,54,0.321,55,1.312,56,0.163,57,0.018,59,1.219,61,1.927,62,1.24,63,2.245,77,2.695,78,1.206,84,1.689,87,0.842,88,0.707,92,0.962,93,1.191,94,1.167,95,0.737,96,1.68,97,0.962,98,1.974,99,0.869,100,0.753,101,1.009,102,1.24,103,0.887,104,0.962,105,0.887,106,0.852,107,0.962,108,0.887,109,0.962,110,0.834,111,0.852,112,1.096,113,0.869,114,0.834,115,0.989,116,1.551,117,1.487,118,0.157,119,0.869,120,0.937,121,0.887,122,0.887,123,0.801,124,0.962,125,0.852,126,0.962,127,0.887,128,0.962,129,0.887,130,0.962,131,0.869,132,0.962,133,0.869,134,0.962,135,0.621,136,0.962,137,0.869,138,0.579,139,0.962,140,0.887,141,0.962,142,0.887,143,1.551,144,0.887,145,0.962,146,0.887,147,1.551,148,0.887,149,0.962,150,0.905,151,0.962,152,0.852,153,0.962,154,0.887,155,0.962,156,0.834,157,0.817,158,0.962,159,0.887,160,1.292,161,1.345,162,0.887,163,0.962,164,0.852,165,0.482,166,0.962,167,0.869,168,0.887,169,0.943,170,0.887,171,0.962,172,0.869,173,0.869,174,0.852,175,0.962,176,0.869,177,0.962,178,0.817,179,0.692,180,0.852,181,0.962,182,0.852,183,1.167,184,0.869,185,0.887,186,0.595,187,0.834,188,0.678,189,0.887,190,0.887,191,0.869,192,0.962,193,0.887,194,0.801,195,0.962,196,0.887,197,0.962,198,0.834,199,0.869,200,0.887,201,0.801,202,0.962,203,0.887,204,0.595,205,0.834,206,0.869,207,0.962,208,0.852,209,0.962,210,0.852,211,0.962,212,0.834,213,0.962,214,0.834,215,0.962,216,0.834,217,0.905,218,0.962,219,0.005,220,0.005,223,0.664,231,1.157,232,2.723,236,4.209,237,4.492,241,1.874,242,2.772,244,1.646,246,3.353,247,2.943,249,1.777,250,1.983,251,1.608,252,1.927,264,2.729,308,0.968,405,4.7,406,4.406,540,1.927,544,0.649,600,1.785,606,0.425,624,3.794,718,2.173,725,1.345,764,2.196,868,2.259,924,2.611,986,3.107,987,2.877,1010,1.777,1011,1.689,1012,1.777,1045,1.959,1046,2.324,1067,1.686,1068,1.777,1071,1.732,1072,1.825,1095,1.608,1214,2.324,1265,2.411,1316,2.611,1402,4.765,1404,4.374,1405,2.505,1407,2.411,1408,4.4,1409,4.619,1413,4.874,1414,4.005,1419,4.874,1420,3.65,1422,4.227,1438,3.023,1439,3.213,1444,3.816,1449,3.213,1450,3.023,1474,3.213,1493,4.059,1550,5.554,1552,3.023,1553,4.765,1554,3.213,1555,4.874,1556,4.619,1557,6.077,1558,3.769,1559,3.769,1560,3.769,1561,3.45,1562,3.769,1563,4.227,1564,5.278,1565,4.825,1566,3.769,1567,4.253,1568,3.45,1569,3.45]],["title/components/CreateIssueDialogComponent.html",[0,0.083,119,0.935]],["body/components/CreateIssueDialogComponent.html",[0,0.14,1,0.762,2,1.111,3,0.086,4,0.08,5,0.607,6,0.843,7,0.826,8,0.794,9,0.073,11,0.732,13,1.488,14,1.09,15,1.749,16,0.732,17,1.435,18,1.366,19,0.732,20,1.383,21,0.814,22,2.704,23,0.814,24,2.289,25,0.093,26,0.479,27,1.507,28,3.054,29,3.444,30,0.713,33,0.713,34,2.071,35,3.08,36,3.054,37,0.807,39,0.59,40,0.008,41,0.527,42,0.182,43,0.479,45,0.786,46,1.213,49,0.284,50,1.36,51,1.149,53,0.27,54,0.275,55,1.127,56,0.146,57,0.015,59,1.2,60,1.014,61,1.655,62,1.113,63,2.817,78,1.512,81,2.726,85,1.925,87,0.786,88,0.607,89,2.067,92,0.826,93,1.068,94,1.047,95,0.633,96,1.568,97,0.826,98,1.91,99,0.747,100,0.647,101,0.97,102,1.113,103,0.762,104,0.826,105,0.762,106,0.732,107,0.826,108,0.762,109,0.826,110,0.717,111,0.732,112,1.08,113,0.747,114,0.717,115,0.887,116,1.426,117,0.732,118,0.103,119,1.416,120,0.988,121,0.762,122,0.762,123,0.688,124,0.826,125,0.732,126,0.826,127,0.762,128,0.826,129,0.762,130,0.826,131,0.747,132,0.826,133,0.747,134,0.826,135,0.534,136,0.826,137,0.747,138,0.356,139,0.826,140,0.762,141,0.826,142,0.762,143,1.426,144,0.762,145,0.826,146,0.762,147,1.426,148,0.762,149,0.826,150,0.778,151,0.826,152,0.732,153,0.826,154,0.762,155,0.826,156,1.047,157,0.702,158,0.826,159,0.762,160,1.159,161,1.207,162,0.762,163,0.826,164,0.732,165,0.414,166,0.826,167,0.747,168,0.762,169,0.81,170,0.762,171,0.826,172,0.747,173,0.747,174,0.732,175,0.826,176,0.747,177,0.826,178,0.702,179,0.595,180,0.732,181,0.826,182,1.068,183,1.047,184,0.747,185,0.762,186,0.534,187,0.717,188,0.582,189,0.762,190,0.762,191,0.747,192,0.826,193,0.762,194,0.688,195,0.826,196,0.762,197,0.826,198,0.717,199,0.747,200,0.762,201,0.688,202,0.826,203,0.762,204,0.511,205,0.717,206,0.747,207,0.826,208,0.732,209,0.826,210,0.732,211,0.826,212,0.717,213,0.826,214,0.717,215,0.826,216,0.717,217,0.778,218,0.826,219,0.004,220,0.004,231,1.136,232,2.503,236,3.024,239,2.964,241,2.351,242,2.487,244,1.762,246,3.162,247,3.43,249,1.527,250,1.703,251,1.382,252,1.655,254,0.938,267,2.487,277,2.62,303,3.487,304,2.726,305,2.487,308,1.026,361,3.593,365,1.183,377,2.152,383,1.61,405,4.652,406,4.361,407,1.754,422,2.152,461,1.997,512,3.275,544,0.558,553,2.777,557,1.703,558,2.243,600,1.515,609,2.173,640,1.797,718,1.867,726,2.152,751,0.794,767,2.935,776,2.123,788,1.97,789,1.682,790,1.527,812,2.031,816,1.611,829,1.61,833,2.229,836,1.204,868,1.204,906,1.09,972,4.447,986,2.855,987,2.685,993,3.792,994,3.928,1009,2.345,1010,1.527,1011,1.451,1012,1.527,1023,2.345,1028,2.243,1031,2.461,1033,2.345,1034,2.243,1035,2.071,1045,1.204,1046,2.916,1105,2.243,1192,1.929,1196,1.204,1216,1.349,1238,1.567,1276,1.349,1294,2.817,1314,2.964,1407,2.071,1442,2.964,1443,3.238,1444,3.424,1449,2.76,1474,2.76,1476,2.442,1493,2.916,1526,2.597,1555,4.479,1563,4.479,1564,4.925,1565,2.964,1568,4.329,1570,6.141,1571,6.141,1572,6.141,1573,4.73,1574,3.653,1575,3.653,1576,4.728,1577,3.653,1578,4.728,1579,3.238,1580,3.891,1581,4.03,1582,4.344,1583,4.728,1584,3.653,1585,5.113,1586,3.712,1587,3.424,1588,3.653,1589,4.728,1590,4.329,1591,2.964,1592,2.461,1593,3.119,1594,3.238,1595,3.238,1596,3.238,1597,3.238,1598,3.238,1599,4.728,1600,4.728,1601,3.238,1602,3.238,1603,4.329,1604,2.76,1605,2.597,1606,3.238,1607,3.238,1608,3.238,1609,3.238,1610,2.964,1611,3.238,1612,3.238,1613,3.238,1614,3.238,1615,3.238,1616,3.238,1617,3.238,1618,3.238,1619,1.997,1620,2.243,1621,3.238,1622,3.238,1623,3.238,1624,3.238,1625,3.238,1626,3.238,1627,3.792,1628,3.238,1629,2.345,1630,3.238,1631,2.152,1632,3.238,1633,3.238,1634,3.238,1635,3.238,1636,2.76,1637,3.238,1638,2.76,1639,3.593,1640,1.997,1641,2.726,1642,5.335,1643,5.335,1644,2.152,1645,3.238,1646,1.527,1647,1.867,1648,3.238,1649,3.653,1650,2.964,1651,3.238,1652,3.653]],["title/components/CreateProjectDialogComponent.html",[0,0.083,121,0.954]],["body/components/CreateProjectDialogComponent.html",[0,0.149,1,0.907,2,0.807,3,0.103,4,0.095,5,0.723,6,1.004,7,0.983,8,0.944,9,0.087,11,0.871,13,1.771,16,0.871,17,1.445,18,1.378,19,0.871,20,1.337,21,0.922,22,2.977,23,0.922,24,2.591,25,0.111,26,0.543,27,1.47,28,3.304,30,0.807,33,0.807,34,2.464,35,3.292,37,0.818,39,0.668,40,0.008,41,0.609,42,0.198,43,0.543,45,0.787,46,1.244,47,3.09,49,0.682,50,1.114,51,0.942,53,0.26,54,0.328,55,1.342,56,0.119,57,0.018,59,1.082,62,1.26,63,3.189,77,2.736,87,0.85,88,0.723,89,1.685,92,0.983,93,1.209,94,1.185,95,0.754,96,1.696,97,0.983,98,1.983,99,0.889,100,0.77,101,1.147,102,1.26,103,0.907,104,0.983,105,0.907,106,0.871,107,0.983,108,0.907,109,0.983,110,0.853,111,0.871,112,1.099,113,0.889,114,0.853,115,1.004,116,1.57,117,0.871,118,0.071,119,0.889,120,0.94,121,1.564,122,0.907,123,0.819,124,0.983,125,0.871,126,0.983,127,0.907,128,0.983,129,0.907,130,0.983,131,0.889,132,0.983,133,0.889,134,0.983,135,0.635,136,0.983,137,0.889,138,0.424,139,0.983,140,0.907,141,0.983,142,0.907,143,1.57,144,0.907,145,0.983,146,0.907,147,1.57,148,0.907,149,0.983,150,0.925,151,0.983,152,0.871,153,0.983,154,0.907,155,0.983,156,0.853,157,0.836,158,0.983,159,0.907,160,1.312,161,1.366,162,0.907,163,0.983,164,0.871,165,0.493,166,0.983,167,0.889,168,0.907,169,0.964,170,0.907,171,0.983,172,0.889,173,0.889,174,0.871,175,0.983,176,0.889,177,0.983,178,0.836,179,0.708,180,0.871,181,0.983,182,0.871,183,1.185,184,0.889,185,0.907,186,0.75,187,0.853,188,0.693,189,0.907,190,0.907,191,0.889,192,0.983,193,0.907,194,0.819,195,0.983,196,0.907,197,0.983,198,0.853,199,0.889,200,0.907,201,0.819,202,0.983,203,0.907,204,1.048,205,0.853,206,0.889,207,0.983,208,0.871,209,0.983,210,0.871,211,0.983,212,0.853,213,0.983,214,0.853,215,0.983,216,0.853,217,0.925,218,0.983,219,0.005,220,0.005,223,0.764,224,2.524,231,0.622,232,2.756,236,4.249,237,4.562,244,1.662,246,3.38,247,2.989,250,2.027,251,1.644,308,0.983,405,4.718,406,4.423,538,4.249,540,1.97,555,5.63,600,1.802,718,2.221,725,1.57,730,6.149,764,2.23,986,3.144,987,2.905,1010,1.817,1011,1.727,1012,1.817,1045,1.99,1046,2.376,1238,2.977,1316,2.669,1402,4.811,1407,2.464,1408,4.453,1414,4.068,1420,3.707,1422,4.292,1438,3.09,1439,3.284,1444,4.811,1449,3.284,1474,3.284,1482,3.284,1493,4.098,1555,4.932,1561,3.527,1563,4.292,1564,5.329,1565,4.9,1568,3.527,1569,3.527,1653,6.938,1654,4.347,1655,4.347,1656,3.284,1657,2.669,1658,4.347,1659,4.347,1660,4.347,1661,4.347]],["title/components/CursorPaginatorComponent.html",[0,0.083,122,0.954]],["body/components/CursorPaginatorComponent.html",[0,0.155,1,1.04,2,0.886,3,0.118,4,0.109,5,0.829,6,1.152,7,1.128,8,1.084,9,0.1,11,0.999,16,0.999,17,1.453,18,1.386,19,0.999,20,0.847,21,1.012,23,1.012,25,0.127,37,0.612,40,0.008,41,0.547,42,0.157,53,0.207,54,0.376,56,0.136,57,0.021,62,1.383,78,1.414,85,2.392,88,0.829,91,2.234,92,1.128,93,1.328,94,1.301,95,0.865,96,1.795,97,1.128,98,2.036,99,1.019,100,0.883,101,1.048,102,1.383,103,1.04,104,1.128,105,1.04,106,0.999,107,1.128,108,1.04,109,1.128,110,0.979,111,0.999,112,0.983,113,1.019,114,0.979,115,1.238,116,1.685,117,0.999,118,0.082,119,1.019,120,0.956,121,1.04,122,1.655,123,1.709,124,1.128,125,0.999,126,1.128,127,1.04,128,1.128,129,1.04,130,1.128,131,1.019,132,1.128,133,1.019,134,1.128,135,0.729,136,1.128,137,1.019,138,0.486,139,1.128,140,1.04,141,1.128,142,1.04,143,1.685,144,1.04,145,1.128,146,1.04,147,1.685,148,1.04,149,1.128,150,1.062,151,1.128,152,0.999,153,1.128,154,1.04,155,1.128,156,0.979,157,0.959,158,1.128,159,1.04,160,1.44,161,1.5,162,1.04,163,1.128,164,0.999,165,0.566,166,1.128,167,1.019,168,1.04,169,1.106,170,1.04,171,1.128,172,1.019,173,1.019,174,0.999,175,1.128,176,1.019,177,1.128,178,0.959,179,0.812,180,0.999,181,1.128,182,0.999,183,1.301,184,1.019,185,1.04,186,0.663,187,0.979,188,0.795,189,1.04,190,1.04,191,1.019,192,1.128,193,1.04,194,0.939,195,1.128,196,1.04,197,1.128,198,0.979,199,1.019,200,1.04,201,0.939,202,1.128,203,1.04,204,0.697,205,0.979,206,1.019,207,1.128,208,0.999,209,1.128,210,0.999,211,1.128,212,0.979,213,1.128,214,0.979,215,1.128,216,0.979,217,1.062,218,1.128,219,0.006,220,0.006,223,0.424,261,1.842,270,1.933,365,1.651,426,2.726,570,3.183,640,3.002,724,2.234,725,1.685,751,1.084,764,2.449,788,1.842,791,2.395,812,2.137,816,2.003,834,4.162,1067,1.879,1104,1.608,1105,4.07,1175,1.842,1192,3.501,1196,2.184,1544,3.624,1646,2.085,1662,6.6,1663,6.043,1664,4.421,1665,3.387,1666,6.63,1667,4.227,1668,5.626,1669,7.447,1670,6.63,1671,7.447,1672,4.988,1673,6.63,1674,4.988,1675,6.63,1676,3.387,1677,4.712,1678,5.876,1679,6.63,1680,6.63,1681,5.876,1682,3.282,1683,3.768,1684,3.768,1685,4.988,1686,4.988,1687,4.421,1688,3.545,1689,3.201,1690,4.421]],["title/classes/DataNode.html",[57,0.019,783,2.196]],["body/classes/DataNode.html",[3,0.082,4,0.046,9,0.042,14,0.903,15,1.227,19,0.885,25,0.053,26,0.51,27,0.87,30,0.463,37,0.697,39,0.798,40,0.008,41,0.34,42,0.187,43,0.51,45,0.946,46,0.932,50,0.815,51,0.885,53,0.177,56,0.155,57,0.027,59,1.355,60,1.227,64,1.446,70,1.892,80,2.571,84,0.833,87,0.838,88,0.734,91,1.166,93,0.693,100,0.613,106,1.136,112,0.412,118,0.034,123,1.272,165,0.886,179,1.099,186,0.769,219,0.004,220,0.003,223,0.294,224,0.877,225,3.023,228,0.662,230,1.108,231,1.35,232,2.682,244,1.862,254,0.999,286,1.137,308,1.334,310,2.232,335,1.288,365,1.704,454,0.877,481,1.346,519,2.333,533,0.547,534,2.443,541,1.947,543,1.727,544,1.291,545,2.552,553,0.925,559,1.108,563,1.147,565,1.485,568,1.8,569,2.333,570,3.101,571,1.392,593,1.511,600,1.364,606,0.898,614,1.585,615,2.898,619,2.125,620,0.74,621,3.29,635,1.48,640,2.176,658,2.46,671,1.189,674,2.906,690,2.185,704,0.833,719,0.775,723,1.585,724,0.707,725,0.999,749,1.346,750,1.828,751,1.879,755,2.46,759,2.898,760,3.389,761,1.755,765,3.338,767,2.585,770,3.965,772,1.585,774,4.351,775,1.147,776,2.76,778,3.492,780,1.413,783,3.804,785,3.012,789,0.662,794,2.331,803,1.755,811,1.108,812,2.433,816,1.045,817,1.485,818,1.892,819,2.619,820,1.038,826,0.951,833,0.877,834,2.462,841,1.846,844,2.995,865,1.038,877,3.103,887,1.768,889,2.002,906,0.707,923,1.147,941,2.002,947,3.101,955,2.333,972,1.346,977,2.847,991,1.962,998,2.331,1003,1.236,1014,2.863,1015,3.461,1032,0.877,1035,3.216,1045,1.14,1055,1.189,1067,1.984,1070,1.485,1075,1.236,1100,2.257,1124,1.346,1210,2.802,1242,2.632,1244,1.007,1246,1.147,1251,0.794,1255,2.26,1312,1.147,1369,1.614,1421,1.108,1427,2.221,1451,1.828,1467,2.906,1472,2.198,1477,0.925,1481,2.46,1485,1.072,1493,3.101,1495,2.603,1498,4.032,1499,1.491,1504,1.236,1506,3.672,1520,2.039,1535,4.145,1580,2.333,1619,2.802,1629,2.221,1639,1.413,1641,3.449,1644,1.236,1665,1.768,1676,1.072,1691,1.413,1692,2.808,1693,5.493,1694,4.955,1695,3.338,1696,2.808,1697,5.678,1698,2.808,1699,3.585,1700,3.585,1701,2.808,1702,2.808,1703,2.808,1704,2.808,1705,2.976,1706,2.808,1707,2.808,1708,3.585,1709,3.29,1710,2.808,1711,4.286,1712,4.603,1713,3.068,1714,4.955,1715,3.068,1716,3.873,1717,4.88,1718,7.208,1719,2.098,1720,2.098,1721,2.808,1722,4.88,1723,3.338,1724,2.098,1725,2.098,1726,2.098,1727,4.358,1728,3.02,1729,3.338,1730,3.585,1731,2.808,1732,2.808,1733,2.808,1734,2.808,1735,2.808,1736,2.808,1737,2.098,1738,2.808,1739,1.859,1740,2.098,1741,2.098,1742,2.808,1743,2.098,1744,2.615,1745,3.585,1746,2.808,1747,2.808,1748,2.098,1749,2.615,1750,2.808,1751,2.415,1752,2.808,1753,1.859,1754,2.098,1755,5.124,1756,5.1,1757,1.288,1758,1.962,1759,1.147,1760,1.288,1761,3.147,1762,1.585,1763,2.46,1764,1.491,1765,1.491,1766,4.88,1767,2.125,1768,2.615,1769,1.768,1770,2.615,1771,1.491,1772,3.338,1773,2.46,1774,1.702,1775,3.338,1776,2.46,1777,1.346,1778,1.585,1779,1.585,1780,2.615,1781,1.491,1782,3.14,1783,1.491,1784,1.702,1785,1.702,1786,1.702,1787,2.047,1788,2.331,1789,1.491,1790,1.585,1791,1.491,1792,1.108,1793,1.585,1794,1.702,1795,2.808,1796,2.46,1797,2.615,1798,3.585,1799,3.585,1800,1.702,1801,1.585,1802,1.962,1803,2.808,1804,1.346,1805,1.702,1806,1.702,1807,1.585,1808,2.808,1809,1.585,1810,2.46,1811,1.585,1812,1.702,1813,2.221,1814,1.702,1815,1.702,1816,1.702,1817,1.702,1818,1.702,1819,1.413,1820,0.877,1821,5.241,1822,3.658,1823,3.873,1824,4.16,1825,3.585,1826,1.585,1827,1.288,1828,2.808,1829,6.238,1830,1.702,1831,2.221,1832,1.585,1833,1.585,1834,1.702,1835,2.331,1836,1.702,1837,1.702,1838,1.702,1839,4.16,1840,1.702,1841,1.702,1842,2.808,1843,1.702,1844,1.702,1845,4.16,1846,1.702,1847,2.615,1848,2.808,1849,3.585,1850,2.808,1851,3.585,1852,1.702,1853,4.613,1854,3.338,1855,1.702,1856,1.702,1857,1.189,1858,1.702,1859,2.835,1860,1.702,1861,2.039,1862,2.221,1863,1.702,1864,2.331,1865,1.585,1866,1.413,1867,1.413,1868,1.702,1869,4.16,1870,1.413,1871,1.702,1872,2.808,1873,1.702,1874,2.808,1875,1.702,1876,1.702,1877,3.338,1878,2.46,1879,1.702,1880,1.585,1881,1.585,1882,1.491,1883,1.702,1884,1.702,1885,3.585,1886,1.491,1887,1.702,1888,1.702,1889,1.947,1890,4.603,1891,1.702,1892,1.585,1893,1.585,1894,2.504,1895,1.702,1896,1.585,1897,2.221,1898,1.585,1899,1.491,1900,1.702,1901,1.702,1902,1.702,1903,4.16,1904,3.585,1905,1.147,1906,1.585,1907,1.585,1908,2.808,1909,3.585,1910,1.702,1911,1.702,1912,4.603,1913,1.702,1914,1.702,1915,1.702,1916,1.702,1917,3.585,1918,1.585,1919,2.808,1920,1.702,1921,1.702,1922,3.585,1923,1.288,1924,1.702,1925,1.702,1926,1.702,1927,1.702,1928,1.702,1929,2.808,1930,1.702,1931,1.702,1932,2.808,1933,1.702,1934,1.346,1935,1.702,1936,1.702,1937,1.702,1938,1.702,1939,2.615,1940,2.808,1941,1.702,1942,1.288,1943,1.702,1944,1.072,1945,2.808,1946,1.702,1947,1.413,1948,1.288,1949,2.712,1950,2.039,1951,3.197,1952,1.702,1953,1.702,1954,1.702,1955,1.413,1956,1.702,1957,1.702,1958,1.702,1959,1.702,1960,1.702,1961,1.702,1962,1.702,1963,1.702,1964,1.702,1965,1.702,1966,1.702,1967,3.644,1968,1.702,1969,1.702,1970,1.702,1971,1.702,1972,1.413,1973,1.702,1974,2.808,1975,1.702,1976,2.835,1977,1.702,1978,4.603,1979,1.702,1980,2.808,1981,1.702,1982,1.702,1983,1.585,1984,2.615,1985,1.585,1986,1.236,1987,1.491,1988,1.702,1989,1.702,1990,1.702,1991,4.16,1992,3.585,1993,4.16,1994,3.585,1995,1.702,1996,1.702,1997,1.702,1998,4.603,1999,1.702,2000,1.702,2001,3.585,2002,3.585,2003,3.585,2004,3.585,2005,1.491,2006,1.702,2007,1.702,2008,1.585,2009,3.338,2010,1.702,2011,2.125,2012,1.702,2013,1.702,2014,1.702,2015,1.702,2016,2.808,2017,1.702,2018,1.702,2019,1.702,2020,1.346,2021,1.702,2022,1.702,2023,1.702,2024,1.309,2025,1.702,2026,1.702,2027,1.702,2028,3.338,2029,1.702,2030,3.585,2031,3.585,2032,1.491,2033,1.702,2034,1.702,2035,1.702,2036,1.702,2037,1.702,2038,1.702,2039,1.702,2040,1.702,2041,1.702,2042,1.702,2043,1.702,2044,1.702,2045,1.702,2046,1.702,2047,1.702,2048,1.585,2049,1.585,2050,1.585,2051,1.288,2052,2.976,2053,1.491,2054,1.702,2055,1.962,2056,1.491,2057,1.491,2058,1.585,2059,1.236,2060,1.491,2061,1.585,2062,1.702,2063,1.585,2064,1.828,2065,1.702,2066,2.615,2067,1.702,2068,1.702,2069,1.585,2070,1.702,2071,1.702,2072,1.702,2073,1.702,2074,1.702,2075,1.702,2076,1.702,2077,1.702,2078,1.702,2079,1.702,2080,1.702,2081,1.962,2082,1.702,2083,1.702,2084,1.189,2085,1.189,2086,1.702,2087,1.702,2088,1.702,2089,1.585,2090,1.702,2091,1.702]],["title/classes/DataQuery.html",[57,0.019,1693,2.935]],["body/classes/DataQuery.html",[3,0.08,4,0.044,9,0.041,14,0.689,15,0.935,19,1.116,25,0.052,26,0.501,27,0.572,30,0.45,37,0.735,39,0.809,40,0.008,41,0.333,42,0.188,43,0.501,45,0.976,46,0.917,50,0.797,51,0.869,53,0.174,56,0.152,57,0.025,59,1.348,60,0.935,64,1.408,70,1.841,80,2.277,84,0.807,87,0.848,88,0.718,91,1.455,93,0.675,100,0.764,106,1.204,112,0.401,118,0.055,123,1.255,165,0.864,179,1.084,186,0.762,219,0.004,220,0.003,223,0.286,224,0.849,225,2.975,228,0.64,230,1.072,231,1.358,232,2.746,244,1.85,254,0.992,286,0.957,308,1.337,310,2.21,335,1.247,365,1.689,454,0.849,481,1.303,519,2.653,533,0.53,534,2.408,541,1.485,543,2.025,544,1.291,545,2.594,553,0.895,559,1.779,563,1.841,565,1.445,568,1.372,569,2.943,570,3.199,571,1.368,593,1.601,600,1.445,606,0.897,614,1.534,615,3.252,619,2.65,620,0.716,621,4.085,635,1.454,640,2.145,658,2.395,671,1.151,674,3.159,690,2.162,704,0.807,719,0.75,723,1.534,724,0.684,725,0.762,749,1.303,750,1.779,751,1.869,755,3.069,759,2.847,760,3.586,761,1.338,765,3.262,767,2.22,770,4.09,772,2.545,774,4.926,775,1.11,776,2.681,778,3.549,780,1.368,783,3.589,785,3.056,789,0.64,794,2.269,803,1.338,811,1.072,812,2.409,816,1.018,817,1.445,818,1.841,819,2.847,820,1.668,826,0.92,833,0.849,834,2.676,841,1.804,844,3.173,865,1.005,877,3.315,887,1.721,889,1.956,906,0.689,923,1.11,941,1.527,947,3.285,955,2.28,972,1.303,977,2.937,991,1.91,998,2.269,1003,1.196,1014,2.848,1015,3.407,1032,1.408,1035,3.407,1045,1.11,1055,1.151,1067,2.073,1070,1.445,1075,1.196,1100,2.206,1124,1.303,1210,2.747,1242,2.566,1244,0.975,1246,1.841,1251,0.768,1255,2.215,1312,1.11,1369,3.711,1421,1.072,1427,2.162,1451,1.779,1467,1.91,1472,2.16,1477,0.895,1481,3.069,1485,1.037,1493,3.046,1495,2.544,1498,4.272,1499,1.443,1504,1.196,1506,3.756,1520,1.985,1535,4.085,1580,2.28,1619,2.747,1629,2.162,1639,1.368,1641,3.819,1644,1.196,1665,2.206,1676,1.037,1691,1.368,1692,1.648,1693,5.167,1694,4.077,1695,2.545,1696,1.648,1697,4.522,1698,1.648,1699,2.734,1700,2.734,1701,1.648,1702,1.648,1703,1.648,1704,1.648,1705,2.269,1706,1.648,1707,1.648,1708,2.734,1709,2.771,1710,1.648,1711,4.21,1712,4.522,1713,2.986,1714,5.406,1715,2.986,1716,4.21,1717,5.033,1721,2.734,1722,5.033,1723,3.262,1727,4.39,1728,3.283,1729,3.262,1730,4.077,1731,2.734,1732,2.734,1733,2.734,1734,2.734,1735,2.734,1736,2.734,1738,2.734,1739,1.8,1742,2.734,1744,2.545,1745,4.077,1746,2.734,1747,2.734,1749,2.545,1750,2.734,1751,2.747,1752,2.734,1753,1.8,1755,5.414,1756,5.384,1757,1.247,1758,1.91,1759,1.11,1760,1.247,1761,3.085,1762,1.534,1763,2.395,1764,1.443,1765,1.443,1766,4.809,1767,2.068,1768,2.545,1769,1.721,1770,2.545,1771,1.443,1772,3.262,1773,2.395,1774,1.648,1775,3.262,1776,2.395,1777,1.303,1778,1.534,1779,1.534,1780,3.262,1781,1.443,1782,3.069,1783,1.443,1784,2.734,1785,2.734,1786,2.734,1787,2.297,1788,3.385,1789,2.395,1790,2.545,1791,2.395,1792,1.779,1793,2.545,1794,2.734,1795,4.077,1796,3.572,1797,3.262,1798,3.503,1799,3.503,1800,2.734,1801,2.545,1802,2.848,1803,4.522,1804,2.162,1805,2.734,1806,2.734,1807,2.545,1808,3.503,1809,2.545,1810,3.069,1811,2.545,1812,2.734,1813,2.771,1814,2.734,1815,1.648,1816,1.648,1817,2.734,1818,2.734,1819,2.269,1820,1.408,1821,5.165,1822,3.7,1823,3.796,1824,4.077,1825,3.503,1826,1.534,1827,1.247,1828,2.734,1829,6.181,1830,1.648,1831,2.162,1832,1.534,1833,1.534,1834,1.648,1835,2.269,1836,1.648,1837,1.648,1838,1.648,1839,4.077,1840,1.648,1841,1.648,1842,2.734,1843,1.648,1844,1.648,1845,4.077,1846,1.648,1847,3.262,1848,3.503,1849,3.503,1850,2.734,1851,3.503,1852,1.648,1853,4.809,1854,3.262,1855,1.648,1856,1.648,1857,1.151,1858,1.648,1859,2.771,1860,1.648,1861,1.985,1862,2.162,1863,1.648,1864,2.269,1865,1.534,1866,1.368,1867,1.368,1868,1.648,1869,4.077,1870,1.368,1871,1.648,1872,2.734,1873,1.648,1874,2.734,1875,1.648,1876,1.648,1877,3.262,1878,2.395,1879,1.648,1880,1.534,1881,1.534,1882,1.443,1883,1.648,1884,1.648,1885,3.503,1886,1.443,1887,1.648,1888,1.648,1889,1.903,1890,4.522,1891,1.648,1892,1.534,1893,1.534,1894,2.447,1895,1.648,1896,1.534,1897,2.771,1898,1.534,1899,1.443,1900,1.648,1901,1.648,1902,1.648,1903,4.077,1904,3.503,1905,1.11,1906,1.534,1907,1.534,1908,2.734,1909,3.503,1910,1.648,1911,1.648,1912,4.522,1913,1.648,1914,1.648,1915,1.648,1916,2.734,1917,3.503,1918,1.534,1919,2.734,1920,1.648,1921,1.648,1922,3.503,1923,1.247,1924,1.648,1925,1.648,1926,1.648,1927,1.648,1928,1.648,1929,2.734,1930,1.648,1931,1.648,1932,2.734,1933,1.648,1934,1.303,1935,1.648,1936,1.648,1937,3.503,1938,1.648,1939,2.545,1940,2.734,1941,1.648,1942,1.247,1943,1.648,1944,1.037,1945,2.734,1946,1.648,1947,1.368,1948,1.247,1949,2.65,1950,1.985,1951,3.151,1952,1.648,1953,1.648,1954,1.648,1955,1.368,1956,1.648,1957,1.648,1958,1.648,1959,1.648,1960,1.648,1961,1.648,1962,1.648,1963,1.648,1964,1.648,1965,1.648,1966,1.648,1967,3.572,1968,1.648,1969,1.648,1970,1.648,1971,1.648,1972,1.368,1973,1.648,1974,2.734,1975,1.648,1976,2.771,1977,1.648,1978,4.522,1979,1.648,1980,2.734,1981,1.648,1982,1.648,1983,1.534,1984,2.545,1985,1.534,1986,1.196,1987,1.443,1988,1.648,1989,1.648,1990,1.648,1991,4.077,1992,3.503,1993,4.077,1994,3.503,1995,1.648,1996,1.648,1997,1.648,1998,4.522,1999,1.648,2000,1.648,2001,3.503,2002,3.503,2003,3.503,2004,3.503,2005,1.443,2006,1.648,2007,1.648,2008,1.534,2009,3.262,2010,1.648,2011,2.068,2012,1.648,2013,1.648,2014,1.648,2015,1.648,2016,2.734,2017,1.648,2018,1.648,2019,1.648,2020,1.303,2021,1.648,2022,1.648,2023,1.648,2024,1.274,2025,1.648,2026,1.648,2027,1.648,2028,3.262,2029,1.648,2030,3.503,2031,3.503,2032,1.443,2033,1.648,2034,1.648,2035,1.648,2036,1.648,2037,1.648,2038,1.648,2039,1.648,2040,1.648,2041,1.648,2042,1.648,2043,1.648,2044,1.648,2045,1.648,2046,1.648,2047,1.648,2048,1.534,2049,1.534,2050,1.534,2051,1.247,2052,2.908,2053,1.443,2054,1.648,2055,1.91,2056,1.443,2057,1.443,2058,1.534,2059,1.196,2060,1.443,2061,1.534,2062,1.648,2063,1.534,2064,1.779,2065,1.648,2066,2.545,2067,1.648,2068,1.648,2069,1.534,2070,1.648,2071,1.648,2072,1.648,2073,1.648,2074,1.648,2075,1.648,2076,1.648,2077,1.648,2078,1.648,2079,1.648,2080,1.648,2081,1.91,2082,1.648,2083,1.648,2084,1.151,2085,1.151,2086,1.648,2087,1.648,2088,1.648,2089,1.534,2090,1.648,2091,1.648,2092,2.031,2093,2.031,2094,2.031,2095,2.031,2096,2.031,2097,2.031,2098,2.031,2099,2.031,2100,2.031,2101,2.031,2102,2.031,2103,2.031,2104,2.031,2105,2.031,2106,2.031,2107,2.031,2108,2.031,2109,2.031,2110,2.031]],["title/injectables/DataService.html",[528,1.1,767,1.689]],["body/injectables/DataService.html",[3,0.127,4,0.117,9,0.107,17,1.152,19,1.392,25,0.137,26,0.625,30,0.929,33,0.717,37,0.781,39,0.959,40,0.008,41,0.541,42,0.214,43,0.733,45,1.001,46,0.819,50,0.989,53,0.263,54,0.404,56,0.147,57,0.022,87,1.001,106,1.074,165,0.608,179,0.873,186,0.536,219,0.006,220,0.006,223,0.455,224,3.411,228,2.193,231,1.32,254,1.075,274,1.62,286,1.189,365,1.955,528,1.672,541,3.065,544,1.365,549,2.301,551,2.43,606,0.772,621,4.462,645,2.241,690,2.056,724,1.807,751,1.916,760,3.598,767,2.568,776,2.919,783,4.061,788,1.981,834,4.061,835,4.171,841,3.622,844,3.671,877,3.442,1014,2.291,1015,3.941,1035,3.04,1100,3.552,1242,1.807,1316,4.268,1369,4.04,1466,5.253,1472,3.502,1580,3.671,1761,5.011,1762,4.051,1769,3.552,1787,1.935,1822,3.442,1939,4.051,1944,4.568,1951,2.655,1976,4.462,2064,3.671,2066,4.051,2069,5.253,2111,4.753,2112,5.642,2113,6.953,2114,6.953,2115,4.683,2116,6.953,2117,6.953,2118,6.162,2119,7.235,2120,8.163,2121,6.886,2122,6.953,2123,6.953,2124,6.953,2125,5.363,2126,5.363,2127,6.953,2128,5.363,2129,6.953,2130,3.612,2131,3.159,2132,3.159,2133,5.363,2134,6.953,2135,7.715,2136,5.363,2137,5.363,2138,5.363,2139,5.363,2140,5.363,2141,3.612,2142,5.363,2143,5.363,2144,5.363,2145,6.953,2146,5.363,2147,5.363,2148,4.051,2149,5.363,2150,5.363,2151,6.953,2152,5.363,2153,5.363,2154,5.363,2155,5.363,2156,5.363,2157,5.363,2158,5.363]],["title/interfaces/DialogData.html",[118,0.075,1573,2.935]],["body/interfaces/DialogData.html",[0,0.147,2,1.19,3,0.124,4,0.114,9,0.105,13,2.135,14,1.071,15,1.902,17,0.783,18,0.749,20,1.425,21,0.8,22,2.249,23,0.8,24,2.249,25,0.134,26,0.615,27,1.425,28,2.31,29,3.744,33,0.701,35,2.863,36,3.019,40,0.008,42,0.191,46,1.165,49,0.593,53,0.285,54,0.395,55,1.618,56,0.187,57,0.022,59,1.262,60,1.455,61,2.375,63,3.617,81,3.5,87,0.777,112,0.999,118,0.125,119,1.071,120,0.945,156,1.029,182,1.05,219,0.006,220,0.006,223,0.445,231,1.157,232,2.082,242,2.444,244,1.861,246,3.274,247,3.391,249,2.191,250,2.444,251,1.983,252,2.375,254,1.05,277,2.406,303,3.458,308,1.242,365,1.519,377,3.088,405,2.768,406,2.595,407,2.517,422,3.088,461,2.865,512,4.205,525,1.396,544,0.8,553,3.363,557,2.444,558,3.218,600,1.26,609,2.135,640,1.766,718,2.678,726,3.088,751,1.139,767,2.818,776,2.956,788,2.53,789,2.16,790,2.191,812,2.208,816,1.583,829,2.31,833,2.863,836,1.727,868,2.666,972,5.193,986,2.375,987,2.655,993,4.869,994,3.883,1009,3.364,1010,2.191,1011,2.082,1012,2.191,1023,3.364,1028,3.218,1031,3.531,1033,3.364,1034,3.218,1035,2.971,1045,1.727,1046,3.744,1105,3.218,1216,1.936,1238,2.249,1294,3.617,1314,5.558,1407,2.971,1476,2.655,1493,3.744,1526,3.726,1555,3.726,1563,5.424,1564,3.726,1570,6.072,1571,4.646,1572,4.646,1573,4.897,1576,4.646,1578,4.646,1580,4.273,1581,3.96,1582,4.864,1583,4.646,1585,5.558,1586,4.036,1587,3.364,1589,4.646,1590,5.558,1591,4.253,1592,3.531,1593,2.595,1594,4.646,1595,4.646,1596,4.646,1597,4.646,1598,4.646,1599,6.072,1600,6.072,1601,4.646,1602,4.646,1603,5.558,1604,3.96,1605,3.726,1606,4.646,1607,4.646,1608,4.646,1609,4.646,1610,4.253,1611,4.646,1612,4.646,1613,4.646,1614,4.646,1615,4.646,1616,4.646,1617,4.646,1618,4.646,1619,2.865,1620,3.218,1621,4.646,1622,4.646,1623,4.646,1624,4.646,1625,4.646,1626,4.646,1627,4.869,1628,4.646,1629,3.364,1630,4.646,1631,3.088,1632,4.646,1633,4.646,1634,4.646,1635,4.646,1636,3.96,1637,4.646,1638,5.175,1639,4.614,1640,2.865]],["title/interfaces/DialogData-1.html",[118,0.062,816,1.152,1573,2.447]],["body/interfaces/DialogData-1.html",[0,0.145,3,0.136,4,0.125,9,0.115,13,2.336,14,1.172,15,2.015,17,0.856,18,0.82,20,1.497,21,0.875,22,2.46,23,0.875,24,2.46,25,0.146,26,0.652,27,0.973,28,3.199,35,3.033,36,2.527,40,0.008,42,0.208,43,0.752,46,1.215,49,0.711,53,0.248,54,0.432,55,1.769,56,0.199,57,0.024,58,2.396,60,1.592,80,2.598,87,0.823,89,3.512,118,0.094,182,1.148,183,1.562,186,0.882,194,1.736,204,1.113,219,0.006,220,0.006,231,1.038,236,3.25,242,2.673,246,3.114,249,2.396,251,2.169,252,2.598,254,0.699,277,2.781,286,1.271,308,0.933,310,1.695,365,1.609,422,3.378,525,1.527,606,0.574,794,3.862,795,5.196,826,3.608,840,4.821,866,2.956,925,2.929,1003,4.275,1030,4.076,1032,3.033,1033,5.541,1180,3.485,1244,2.753,1310,4.076,1425,3.384,1573,5.11,1604,6.522,1605,6.367,1636,4.332,1688,4.076,1810,4.076,1889,2.527,1950,4.275,2159,4.332,2160,6.522,2161,7.057,2162,6.432,2163,5.364,2164,7.057,2165,6.432,2166,5.66,2167,6.432,2168,4.332,2169,5.082,2170,5.082,2171,4.653,2172,5.082,2173,4.076,2174,5.082,2175,5.082,2176,5.082,2177,5.082,2178,4.653,2179,5.082,2180,3.52,2181,2.929,2182,5.082,2183,5.082,2184,5.082,2185,5.082,2186,3.862]],["title/interfaces/FilterSelection.html",[118,0.075,2187,2.935]],["body/interfaces/FilterSelection.html",[0,0.148,3,0.141,4,0.13,9,0.119,14,1.216,15,2.063,17,0.889,18,0.851,21,0.908,23,0.908,25,0.152,26,0.667,27,1.01,40,0.008,41,0.394,42,0.191,49,0.659,50,1.098,51,0.928,53,0.272,54,0.449,56,0.203,57,0.025,59,1.159,60,1.652,87,0.843,94,1.168,115,1.451,118,0.122,138,0.58,152,1.192,194,1.598,219,0.006,220,0.006,228,2.343,244,1.647,254,0.725,286,1.319,308,0.969,311,2.775,365,1.319,383,2.623,426,3.253,511,1.76,525,1.585,533,1.553,535,4.009,536,2.487,540,2.697,543,2.503,552,3.923,572,3.143,606,0.595,613,3.253,615,3.041,679,4.768,683,4.377,808,3.374,812,1.918,821,4.009,903,3.374,1045,1.961,1104,1.918,1255,2.623,1405,3.506,1476,3.593,1478,3.819,1506,2.554,1512,3.739,1541,4.23,1923,3.654,2173,4.23,2181,3.041,2187,5.444,2188,4.23,2189,3.654,2190,4.23,2191,5.997,2192,6.083,2193,6.028,2194,6.028,2195,6.028,2196,6.572,2197,4.496,2198,5.004,2199,4.829,2200,4.636,2201,3.506,2202,4.009,2203,3.819,2204,5.757,2205,4.829,2206,4.829,2207,4.829,2208,4.829,2209,4.496,2210,5.613,2211,4.829,2212,3.819,2213,4.829,2214,4.829,2215,3.654,2216,4.829,2217,4.829,2218,4.496,2219,3.819,2220,5.456,2221,4.496,2222,4.829,2223,4.829,2224,4.829,2225,4.829,2226,4.829,2227,4.829,2228,4.496,2229,4.829,2230,4.829,2231,4.829,2232,4.829,2233,6.028,2234,4.829,2235,4.829,2236,4.829,2237,4.23,2238,5.004]],["title/interfaces/FilterState.html",[118,0.075,2239,3.25]],["body/interfaces/FilterState.html",[3,0.169,4,0.156,9,0.143,25,0.182,26,0.746,40,0.008,42,0.213,53,0.259,56,0.227,115,1.19,118,0.117,219,0.007,220,0.007,525,1.906,537,2.072,1216,2.643,1822,3.543,2187,5.791,2189,4.394,2239,5.901,2240,5.807,2241,7.127,2242,7.998,2243,5.807,2244,7.358,2245,7.157,2246,6.343]],["title/components/FrameComponent.html",[0,0.083,125,0.916]],["body/components/FrameComponent.html",[0,0.155,1,0.895,2,0.8,3,0.101,4,0.094,5,1.145,6,0.991,7,0.971,8,0.932,9,0.086,11,0.859,16,0.859,17,1.444,18,1.377,19,0.859,20,0.728,21,0.913,23,0.913,25,0.109,26,0.538,27,1.466,30,0.8,33,0.574,37,0.769,39,0.662,40,0.008,41,0.552,42,0.176,43,0.538,45,0.679,46,0.913,50,1.271,51,1.223,53,0.26,54,0.323,56,0.117,57,0.018,62,1.248,78,1.696,85,2.689,87,0.679,88,0.713,92,0.971,93,1.198,94,1.174,95,0.744,96,1.686,97,0.971,98,1.978,99,0.877,100,0.759,101,1.041,102,1.248,103,0.895,104,0.971,105,0.895,106,0.859,107,0.971,108,0.895,109,0.971,110,0.842,111,0.859,112,0.933,113,0.877,114,0.842,115,0.995,116,1.559,117,0.859,118,0.07,119,0.877,120,0.938,121,0.895,122,0.895,123,0.808,124,0.971,125,1.493,126,0.971,127,0.895,128,0.971,129,0.895,130,0.971,131,0.877,132,0.971,133,0.877,134,0.971,135,0.627,136,0.971,137,0.877,138,0.418,139,0.971,140,0.895,141,0.971,142,0.895,143,1.559,144,0.895,145,0.971,146,0.895,147,1.559,148,0.895,149,0.971,150,0.913,151,0.971,152,0.859,153,0.971,154,0.895,155,0.971,156,0.842,157,0.825,158,0.971,159,0.895,160,1.3,161,1.354,162,0.895,163,0.971,164,0.859,165,0.487,166,0.971,167,0.877,168,0.895,169,0.951,170,0.895,171,0.971,172,0.877,173,0.877,174,0.859,175,0.971,176,0.877,177,0.971,178,0.825,179,0.698,180,0.859,181,0.971,182,0.859,183,1.174,184,0.877,185,0.895,186,0.598,187,0.842,188,0.684,189,0.895,190,0.895,191,1.703,192,0.971,193,0.895,194,0.808,195,0.971,196,0.895,197,0.971,198,0.842,199,0.877,200,0.895,201,1.476,202,0.971,203,0.895,204,1.165,205,0.842,206,0.877,207,0.971,208,0.859,209,0.971,210,0.859,211,0.971,212,0.842,213,0.971,214,0.842,215,0.971,216,0.842,217,0.913,218,0.971,219,0.005,220,0.005,223,0.364,261,1.585,262,2.545,267,2,269,1.891,274,1.296,286,0.951,308,0.974,349,3.05,495,1.585,533,1.119,536,1.793,543,2.321,548,3.057,549,2.567,552,4.139,565,2.567,568,2.437,597,2.345,600,1.439,606,0.429,609,3.036,615,3.057,683,2.528,690,1.269,704,2.377,816,2.368,822,5.303,901,4.253,906,1.223,963,6.048,1054,4.984,1068,2.501,1089,4.253,1104,2.402,1140,5.631,1175,1.585,1196,1.414,1198,3.198,1201,3.84,1202,3.638,1247,2.79,1255,2.637,1667,3.579,1682,3.41,1819,4.03,2200,4.438,2212,5.031,2247,3.803,2248,5.983,2249,5.303,2250,5.983,2251,4.52,2252,5.983,2253,7.454,2254,3.057,2255,7.454,2256,5.983,2257,5.303,2258,5.983,2259,8.119,2260,4.52,2261,5.983,2262,5.983,2263,4.52,2264,4.855,2265,5.983,2266,6.89,2267,5.983,2268,5.59,2269,6.89,2270,6.89,2271,5.983,2272,7.454,2273,3.803,2274,6.134,2275,4.29,2276,5.983,2277,7.454,2278,4.29,2279,5.983,2280,4.29,2281,5.303,2282,5.303,2283,5.303,2284,5.303,2285,5.205,2286,4.29,2287,5.983,2288,4.29,2289,4.29,2290,4.29,2291,3.241,2292,3.241,2293,4.52,2294,5.983,2295,4.29,2296,4.29,2297,4.29,2298,4.29,2299,4.29,2300,7.454,2301,8.332,2302,5.205,2303,3.392,2304,2.753,2305,4.29,2306,3.803,2307,3.481,2308,4.29,2309,4.29,2310,5.983,2311,4.29,2312,3.481,2313,3.05]],["title/classes/GraphComponent.html",[57,0.019,1212,2.196]],["body/classes/GraphComponent.html",[0,0.156,2,1.128,3,0.099,4,0.091,9,0.083,25,0.106,26,0.527,30,0.785,37,0.717,39,0.65,40,0.008,41,0.559,42,0.206,43,0.527,45,0.836,49,0.573,53,0.183,56,0.202,57,0.031,87,0.938,118,0.127,120,0.902,135,0.992,138,0.784,186,0.587,219,0.005,220,0.005,223,0.355,228,2.82,231,1.227,254,1.11,303,2.661,305,1.947,511,2.692,525,2.413,537,1.209,544,1.342,568,1.701,571,2.177,593,1.962,606,0.887,633,1.841,690,2.662,704,2.697,719,1.542,727,3.911,750,4.457,751,1.275,808,2.367,863,4.457,865,2.067,889,2.661,956,2.067,974,1.892,1014,1.376,1067,2.282,1212,3.727,1213,3.26,1215,3.865,1216,2.867,1242,2.288,1243,1.947,1251,1.58,1262,2.205,1425,1.947,1477,3.247,1582,4.4,1587,2.68,1593,3.361,1631,2.46,1640,3.209,1769,2.134,1787,1.507,1792,3.585,1827,4.942,1889,1.841,2024,1.58,2084,2.367,2085,3.849,2115,2.813,2314,4.742,2315,2.68,2316,4.764,2317,5.204,2318,4.176,2319,4.176,2320,4.176,2321,4.173,2322,5.78,2323,4.176,2324,4.962,2325,4.871,2326,4.173,2327,4.176,2328,4.176,2329,2.134,2330,2.968,2331,4.173,2332,2.968,2333,2.968,2334,5.517,2335,2.68,2336,2.813,2337,5.228,2338,5.722,2339,4.574,2340,2.813,2341,2.68,2342,2.813,2343,4.4,2344,5.236,2345,2.813,2346,5.228,2347,5.722,2348,5.166,2349,2.564,2350,2.68,2351,5.228,2352,4.168,2353,3.604,2354,2.968,2355,2.68,2356,2.968,2357,3.955,2358,2.813,2359,2.68,2360,2.968,2361,2.968,2362,2.968,2363,2.968,2364,2.968,2365,2.68,2366,2.968,2367,2.564,2368,2.968,2369,2.968,2370,2.968,2371,2.968,2372,2.968,2373,2.968,2374,2.968,2375,5.517,2376,4.574,2377,3.768,2378,3.955,2379,2.968,2380,3.604,2381,2.968,2382,2.968,2383,2.968,2384,2.968,2385,2.968,2386,2.968,2387,2.968,2388,2.968,2389,2.968,2390,4.173,2391,4.357,2392,4.826,2393,4.826,2394,2.46,2395,2.968,2396,2.968,2397,2.367,2398,2.367,2399,2.46,2400,4.574,2401,5.447,2402,3.955,2403,4.826,2404,4.173,2405,2.968,2406,2.968,2407,2.968,2408,2.968,2409,4.173,2410,2.968,2411,2.968,2412,2.968,2413,2.968,2414,2.968,2415,2.968,2416,2.68,2417,2.968,2418,2.968,2419,2.968,2420,2.968,2421,2.968,2422,2.968,2423,2.968,2424,2.968,2425,2.968,2426,4.574,2427,2.68,2428,4.173,2429,3.955,2430,2.968,2431,2.968,2432,2.968,2433,2.968,2434,2.968,2435,2.968,2436,2.968,2437,2.968,2438,4.173,2439,2.968,2440,2.968,2441,2.813,2442,2.968,2443,2.813,2444,2.367,2445,2.813,2446,4.826,2447,2.968,2448,2.968,2449,2.968,2450,2.968,2451,2.68,2452,2.968,2453,2.968,2454,2.968,2455,2.968,2456,2.968,2457,2.968,2458,2.968,2459,2.968]],["title/interfaces/GraphData.html",[118,0.075,2343,2.5]],["body/interfaces/GraphData.html",[0,0.152,2,1.18,3,0.101,4,0.093,9,0.085,25,0.109,26,0.535,40,0.008,41,0.493,42,0.209,45,0.676,49,0.534,53,0.186,56,0.203,57,0.031,87,0.943,118,0.128,120,0.906,135,1.086,138,0.789,186,0.596,219,0.005,220,0.005,223,0.362,228,2.783,231,1.248,254,1.113,303,2.699,305,1.987,511,2.671,525,2.462,537,1.234,544,1.316,568,1.736,571,2.185,593,1.98,606,0.891,633,1.879,690,2.723,704,2.727,727,3.74,750,4.48,751,1.294,808,2.416,863,4.13,865,2.11,889,2.699,956,2.11,974,1.932,1014,1.404,1067,2.297,1212,3.296,1213,3.296,1215,2.047,1216,2.888,1242,2.313,1243,1.987,1251,1.612,1262,2.251,1425,1.987,1477,3.276,1582,4.429,1587,2.735,1593,3.398,1631,2.511,1640,3.256,1769,2.178,1787,1.538,1792,3.925,1827,4.974,1889,1.879,2024,1.612,2084,2.416,2085,3.892,2115,2.871,2314,2.511,2315,2.735,2321,3.03,2322,5.007,2324,4.625,2325,4.773,2326,3.03,2329,2.178,2330,3.03,2331,4.234,2332,3.03,2333,3.03,2334,5.911,2335,2.735,2336,2.871,2337,5.268,2338,5.759,2339,4.625,2340,2.871,2341,3.822,2342,4.012,2343,4.546,2344,5.911,2345,2.871,2346,5.715,2347,6.127,2348,5.445,2349,2.617,2350,2.735,2351,5.268,2352,4.215,2353,3.656,2354,3.03,2355,2.735,2356,3.03,2357,4.012,2358,2.871,2359,2.735,2360,3.03,2361,3.03,2362,3.03,2363,3.03,2364,3.03,2365,2.735,2366,3.03,2367,2.617,2368,3.03,2369,3.03,2370,3.03,2371,3.03,2372,3.03,2373,3.03,2374,3.03,2375,5.559,2376,4.625,2377,3.822,2378,4.012,2379,3.03,2380,3.656,2381,3.03,2382,3.03,2383,3.03,2384,3.03,2385,3.03,2386,3.03,2387,3.03,2388,3.03,2389,3.03,2390,4.234,2391,4.406,2392,4.88,2393,4.88,2394,2.511,2395,3.03,2396,3.03,2397,2.416,2398,2.416,2399,2.511,2400,4.625,2401,5.466,2402,4.012,2403,4.88,2404,4.234,2405,3.03,2406,3.03,2407,3.03,2408,3.03,2409,4.234,2410,3.03,2411,3.03,2412,3.03,2413,3.03,2414,3.03,2415,3.03,2416,2.735,2417,3.03,2418,3.03,2419,3.03,2420,3.03,2421,3.03,2422,3.03,2423,3.03,2424,3.03,2425,3.03,2426,4.625,2427,2.735,2428,4.234,2429,4.012,2430,3.03,2431,3.03,2432,3.03,2433,3.03,2434,3.03,2435,3.03,2436,3.03,2437,3.03,2438,4.234,2439,3.03,2440,3.03,2441,2.871,2442,3.03,2443,2.871,2444,2.416,2445,2.871,2446,4.88,2447,3.03,2448,3.03,2449,3.03,2450,3.03,2451,2.735,2452,3.03,2453,3.03,2454,3.03,2455,3.03,2456,3.03,2457,3.03,2458,3.03,2459,3.03]],["title/classes/GraphDataFactory.html",[57,0.019,2349,2.807]],["body/classes/GraphDataFactory.html",[0,0.154,2,1.128,3,0.098,4,0.091,9,0.083,25,0.106,30,0.784,37,0.541,39,0.649,40,0.008,41,0.533,42,0.199,43,0.527,45,0.835,49,0.527,53,0.183,56,0.201,57,0.031,87,0.937,118,0.127,120,0.91,135,1.075,138,0.805,186,0.586,219,0.005,220,0.005,223,0.354,228,2.819,231,1.268,254,1.109,303,2.656,305,1.943,511,2.661,525,2.412,537,1.206,544,1.309,568,1.697,571,2.176,593,1.96,606,0.887,633,2.584,690,2.622,704,2.694,719,1.539,727,3.909,750,4.528,751,1.273,808,2.362,863,4.095,865,2.902,889,2.656,956,2.062,974,1.888,1014,1.373,1067,2.28,1212,3.256,1213,3.256,1215,3.256,1216,3.052,1242,2.285,1243,1.943,1251,1.576,1262,2.2,1425,1.943,1477,3.244,1582,4.397,1587,2.674,1593,3.357,1631,3.453,1640,3.204,1769,2.129,1787,2.115,1792,4.095,1827,4.938,1889,1.836,2024,1.576,2084,3.323,2085,3.844,2115,3.948,2314,3.995,2315,2.674,2321,2.961,2322,4.957,2324,4.568,2325,4.739,2326,2.961,2329,2.129,2330,2.961,2331,5.231,2332,2.961,2333,2.961,2334,5.512,2335,2.674,2336,2.807,2337,5.224,2338,5.717,2339,4.568,2340,2.807,2341,2.674,2342,2.807,2343,4.848,2344,5.231,2345,2.807,2346,5.224,2347,5.717,2348,5.162,2349,3.598,2350,3.762,2351,5.683,2352,4.938,2353,4.518,2354,4.166,2355,3.762,2356,4.166,2357,4.957,2358,3.948,2359,3.762,2360,4.166,2361,2.961,2362,2.961,2363,2.961,2364,2.961,2365,3.762,2366,4.166,2367,3.598,2368,4.166,2369,2.961,2370,2.961,2371,2.961,2372,2.961,2373,2.961,2374,2.961,2375,5.512,2376,4.568,2377,3.762,2378,3.948,2379,2.961,2380,3.598,2381,2.961,2382,2.961,2383,2.961,2384,2.961,2385,2.961,2386,2.961,2387,2.961,2388,2.961,2389,2.961,2390,4.166,2391,4.352,2392,4.82,2393,4.82,2394,2.455,2395,2.961,2396,2.961,2397,2.362,2398,2.362,2399,2.455,2400,4.568,2401,5.445,2402,3.948,2403,4.82,2404,4.166,2405,2.961,2406,2.961,2407,2.961,2408,2.961,2409,4.166,2410,2.961,2411,2.961,2412,2.961,2413,2.961,2414,2.961,2415,2.961,2416,2.674,2417,2.961,2418,2.961,2419,2.961,2420,2.961,2421,2.961,2422,2.961,2423,2.961,2424,2.961,2425,2.961,2426,4.568,2427,2.674,2428,4.166,2429,3.948,2430,2.961,2431,2.961,2432,2.961,2433,2.961,2434,2.961,2435,2.961,2436,2.961,2437,2.961,2438,4.166,2439,2.961,2440,2.961,2441,2.807,2442,2.961,2443,2.807,2444,2.362,2445,2.807,2446,4.82,2447,2.961,2448,2.961,2449,2.961,2450,2.961,2451,2.674,2452,2.961,2453,2.961,2454,2.961,2455,2.961,2456,2.961,2457,2.961,2458,2.961,2459,2.961,2460,5.862,2461,5.862,2462,4.167,2463,4.167]],["title/classes/GraphInterface.html",[57,0.019,1213,2.196]],["body/classes/GraphInterface.html",[0,0.151,2,1.128,3,0.098,4,0.091,9,0.083,25,0.106,26,0.527,30,0.784,37,0.763,39,0.649,40,0.008,41,0.559,42,0.208,43,0.527,45,0.835,49,0.572,53,0.183,56,0.201,57,0.031,87,0.937,118,0.127,120,0.902,135,0.991,138,0.756,186,0.586,219,0.005,220,0.005,228,2.771,231,1.226,254,1.109,303,2.656,305,1.943,511,2.691,525,2.412,537,1.206,544,1.341,568,1.697,571,2.176,593,1.96,606,0.887,633,1.836,690,2.661,704,2.694,719,1.539,727,3.909,750,4.455,751,1.273,808,2.362,863,4.095,865,2.062,889,2.656,956,2.062,974,1.888,1014,1.373,1067,2.28,1212,3.256,1213,3.724,1215,4.051,1216,2.864,1242,2.285,1243,1.943,1251,1.576,1262,2.2,1425,1.943,1477,3.244,1582,4.397,1587,2.674,1593,3.357,1631,2.455,1640,3.204,1769,2.129,1787,1.503,1792,3.581,1827,4.938,1889,1.836,2024,1.576,2084,2.362,2085,3.844,2115,2.807,2314,4.97,2315,2.674,2316,4.756,2317,5.195,2321,2.961,2322,4.957,2324,4.568,2325,4.739,2326,2.961,2329,2.129,2330,2.961,2331,4.166,2332,2.961,2333,2.961,2334,5.512,2335,2.674,2336,2.807,2337,5.224,2338,5.717,2339,4.568,2340,2.807,2341,2.674,2342,2.807,2343,4.397,2344,5.231,2345,2.807,2346,5.224,2347,5.717,2348,5.162,2349,2.558,2350,2.674,2351,5.224,2352,4.163,2353,3.598,2354,2.961,2355,2.674,2356,2.961,2357,3.948,2358,2.807,2359,2.674,2360,2.961,2361,2.961,2362,2.961,2363,2.961,2364,2.961,2365,2.674,2366,2.961,2367,2.558,2368,2.961,2369,2.961,2370,2.961,2371,2.961,2372,2.961,2373,2.961,2374,2.961,2375,5.512,2376,4.568,2377,3.762,2378,3.948,2379,2.961,2380,3.598,2381,2.961,2382,2.961,2383,2.961,2384,2.961,2385,2.961,2386,2.961,2387,2.961,2388,2.961,2389,2.961,2390,4.166,2391,4.352,2392,4.82,2393,4.82,2394,2.455,2395,2.961,2396,2.961,2397,2.362,2398,2.362,2399,2.455,2400,5.683,2401,5.445,2402,3.948,2403,5.512,2404,5.231,2405,4.166,2406,2.961,2407,2.961,2408,2.961,2409,4.166,2410,2.961,2411,2.961,2412,2.961,2413,4.166,2414,2.961,2415,2.961,2416,2.674,2417,2.961,2418,2.961,2419,2.961,2420,2.961,2421,2.961,2422,2.961,2423,2.961,2424,2.961,2425,2.961,2426,4.568,2427,2.674,2428,4.166,2429,3.948,2430,2.961,2431,2.961,2432,2.961,2433,2.961,2434,2.961,2435,2.961,2436,2.961,2437,2.961,2438,4.166,2439,2.961,2440,2.961,2441,2.807,2442,2.961,2443,2.807,2444,2.362,2445,2.807,2446,4.82,2447,2.961,2448,2.961,2449,2.961,2450,2.961,2451,2.674,2452,2.961,2453,2.961,2454,2.961,2455,2.961,2456,2.961,2457,2.961,2458,2.961,2459,2.961,2464,4.167,2465,4.167,2466,4.167,2467,4.167,2468,4.167,2469,4.167,2470,4.167,2471,4.167]],["title/classes/GraphIssue.html",[57,0.019,2348,2.935]],["body/classes/GraphIssue.html",[0,0.15,2,1.124,3,0.097,4,0.089,9,0.082,25,0.105,26,0.521,30,0.775,37,0.739,39,0.642,40,0.008,41,0.53,42,0.207,43,0.657,45,0.829,49,0.523,53,0.181,56,0.2,57,0.031,87,0.933,118,0.126,120,0.922,135,0.983,138,0.751,186,0.58,219,0.005,220,0.005,223,0.493,228,2.849,231,1.222,254,1.107,303,3.495,305,1.914,511,2.699,525,2.407,537,1.188,544,1.35,568,1.672,571,2.171,593,1.947,606,0.885,633,1.809,690,2.615,704,3.063,719,1.516,727,3.899,750,4.575,751,1.26,808,2.327,863,4.345,865,2.032,889,2.628,956,2.032,974,1.86,1014,1.352,1067,2.269,1212,3.23,1213,3.23,1215,3.951,1216,2.957,1242,2.266,1243,1.914,1251,1.553,1262,2.167,1425,1.914,1477,3.222,1582,4.671,1587,2.634,1593,3.33,1631,2.418,1640,3.171,1769,2.097,1787,1.481,1792,3.552,1827,4.914,1889,1.809,2024,1.553,2084,2.327,2085,3.813,2115,2.765,2314,4.848,2315,2.634,2316,4.706,2321,2.918,2322,4.924,2324,5.195,2325,4.951,2326,2.918,2329,2.097,2330,2.918,2331,4.123,2332,2.918,2333,2.918,2334,5.482,2335,2.634,2336,2.765,2337,5.392,2338,5.69,2339,4.531,2340,2.765,2341,2.634,2342,2.765,2343,4.376,2344,5.196,2345,2.765,2346,5.195,2347,5.69,2348,5.485,2349,2.52,2350,2.634,2351,5.195,2352,4.129,2353,3.561,2354,2.918,2355,2.634,2356,2.918,2357,3.907,2358,2.765,2359,2.634,2360,2.918,2361,2.918,2362,2.918,2363,2.918,2364,2.918,2365,2.634,2366,2.918,2367,2.52,2368,2.918,2369,2.918,2370,2.918,2371,2.918,2372,2.918,2373,2.918,2374,2.918,2375,5.482,2376,4.531,2377,3.722,2378,3.907,2379,2.918,2380,3.561,2381,2.918,2382,2.918,2383,2.918,2384,2.918,2385,2.918,2386,2.918,2387,2.918,2388,2.918,2389,2.918,2390,4.123,2391,4.317,2392,4.781,2393,4.781,2394,2.418,2395,2.918,2396,2.918,2397,2.327,2398,2.327,2399,2.418,2400,4.531,2401,5.513,2402,3.907,2403,4.781,2404,4.123,2405,2.918,2406,2.918,2407,2.918,2408,2.918,2409,4.123,2410,2.918,2411,2.918,2412,2.918,2413,2.918,2414,2.918,2415,2.918,2416,2.634,2417,2.918,2418,2.918,2419,2.918,2420,2.918,2421,2.918,2422,2.918,2423,2.918,2424,2.918,2425,2.918,2426,5.392,2427,4.317,2428,5.196,2429,4.924,2430,4.123,2431,4.123,2432,2.918,2433,2.918,2434,2.918,2435,2.918,2436,4.123,2437,2.918,2438,4.123,2439,2.918,2440,2.918,2441,2.765,2442,2.918,2443,2.765,2444,2.327,2445,2.765,2446,4.781,2447,2.918,2448,2.918,2449,2.918,2450,2.918,2451,2.634,2452,2.918,2453,2.918,2454,2.918,2455,2.918,2456,2.918,2457,2.918,2458,2.918,2459,2.918,2472,5.801,2473,4.105,2474,4.105,2475,4.105,2476,4.105,2477,4.105,2478,4.105]],["title/modules/GraphQLModule.html",[323,3.08,332,3.08]],["body/modules/GraphQLModule.html",[3,0.128,4,0.118,9,0.108,11,1.553,27,0.92,40,0.008,53,0.286,54,0.409,56,0.224,57,0.023,87,0.794,106,1.699,112,0.645,179,0.882,201,1.021,204,0.758,219,0.006,220,0.006,228,1.709,254,1.133,294,2.683,308,1.139,325,4.297,332,4.715,338,4.094,343,5.288,375,6.204,376,3.852,396,3.072,418,6.204,419,3.852,420,6.769,438,4.238,477,7.051,481,3.478,488,4.397,489,4.976,518,3.852,523,4.397,571,2.132,593,2.065,606,0.849,624,4.44,635,1.826,640,1.826,670,4.297,671,3.968,675,4.094,688,3.65,689,4.094,751,1.78,780,3.65,809,4.803,927,4.094,1014,1.786,1045,2.7,1195,2.265,1238,2.325,1239,3.826,1411,3.852,1426,3.361,1451,2.862,1556,5.52,1769,2.769,1783,3.852,1791,3.852,1835,3.65,1867,3.65,1889,2.389,1949,3.327,2112,4.397,2444,3.968,2479,4.397,2480,7,2481,7,2482,7,2483,6.031,2484,7,2485,7,2486,7.754,2487,5.419,2488,9.055,2489,5.419,2490,5.419,2491,4.803,2492,5.419,2493,5.419,2494,4.803,2495,4.803,2496,6.885,2497,5.419,2498,4.094,2499,4.803,2500,4.803,2501,4.803,2502,4.803,2503,6.292,2504,6.65,2505,4.715,2506,4.803,2507,4.397,2508,4.803,2509,4.803,2510,4.803,2511,4.803,2512,5.68,2513,6.292,2514,4.397,2515,4.397,2516,4.397,2517,4.397,2518,4.803,2519,7.52,2520,4.803,2521,4.803,2522,3.65,2523,7.754,2524,8.69,2525,5.419,2526,7,2527,5.419,2528,4.492,2529,5.419,2530,5.419,2531,5.419,2532,5.419,2533,5.419,2534,5.419,2535,5.419,2536,4.803,2537,5.419,2538,5.419,2539,5.419,2540,5.419,2541,7.754,2542,6.204,2543,5.419,2544,4.803,2545,5.419,2546,5.419,2547,7,2548,7,2549,5.419,2550,4.803,2551,5.419,2552,5.419,2553,5.419,2554,5.419,2555,4.803,2556,7,2557,7]],["title/modules/GraphsModule.html",[323,3.08,333,3.08]],["body/modules/GraphsModule.html",[3,0.105,4,0.097,9,0.089,18,0.878,40,0.008,53,0.301,54,0.336,55,1.376,56,0.168,57,0.026,81,3.139,99,1.679,101,0.731,102,1.282,105,1.714,115,0.741,120,0.778,122,1.872,127,1.872,133,1.679,135,1.329,137,1.858,138,0.599,140,1.872,142,1.872,144,1.872,146,1.872,148,1.872,150,1.91,152,1.645,170,1.872,172,1.679,174,1.645,178,1.725,185,1.872,187,1.612,188,0.71,203,1.872,206,1.834,208,1.797,210,1.797,219,0.005,220,0.005,222,3.168,223,0.379,251,1.686,283,3.617,284,4.642,285,3.168,311,2.078,323,4.139,325,2.736,326,4.139,333,6.544,334,4.642,335,2.736,337,4.985,338,3.368,340,5.445,341,6.231,342,5.445,343,4.642,346,5.445,347,3.951,350,6.231,351,3.951,352,6.231,353,4.367,354,6.231,355,3.951,356,6.231,357,6.231,358,3.951,359,6.231,360,3.951,361,4.139,362,5.445,363,5.445,364,3.951,367,4.985,377,2.626,380,5.445,381,5.445,383,2.708,397,5.445,399,3.617,407,2.95,408,6.231,409,3.951,410,6.231,411,5.445,412,3.358,413,6.231,414,3.951,424,5.445,425,4.985,426,2.436,427,5.445,428,2.736,429,3.617,448,3.951,460,5.445,461,3.843,464,4.985,488,3.617,489,2.861,490,3.951,497,3.368,498,3.951,501,3.368,502,3.168,503,3.951,523,4.985,787,3.617,837,2.861,838,2.861,1095,1.686,1096,3.168,1217,2.14,1591,3.617,1650,3.617,1663,3.617,1819,4.139,1955,4.139,2189,2.736,2243,3.617,2558,3.951,2559,3.951,2560,3.951,2561,4.458,2562,6.144,2563,6.144,2564,6.144,2565,3.368,2566,4.458,2567,6.144,2568,4.985,2569,3.368,2570,4.367,2571,6.144,2572,4.458,2573,6.144,2574,4.458,2575,6.144,2576,3.368,2577,7.031,2578,4.458,2579,4.458,2580,4.458,2581,6.144,2582,3.772,2583,7.948,2584,3.368,2585,4.458,2586,6.144,2587,4.458,2588,3.617,2589,4.458,2590,3.617,2591,3.617,2592,4.458,2593,6.144,2594,4.458,2595,4.458,2596,4.458,2597,3.617,2598,4.458,2599,4.458,2600,6.144,2601,4.458,2602,6.144,2603,4.458,2604,4.458,2605,3.617,2606,4.458,2607,3.617,2608,4.458,2609,4.458,2610,3.951]],["title/interfaces/InterfaceNode.html",[118,0.075,1220,2.5]],["body/interfaces/InterfaceNode.html",[0,0.148,3,0.126,4,0.177,5,1.151,9,0.138,25,0.136,26,0.622,40,0.008,42,0.217,49,0.729,53,0.254,56,0.189,57,0.029,87,0.872,101,0.634,112,0.634,118,0.151,120,0.711,135,0.779,138,0.675,165,0.981,186,0.844,188,0.849,219,0.006,220,0.006,231,1.164,254,0.649,277,2.425,289,4.178,309,3.138,511,1.575,525,1.419,537,1.542,544,1.32,593,2.378,606,0.893,620,1.878,719,1.967,724,1.795,817,2.286,836,1.755,906,1.825,952,3.138,1067,1.963,1068,3.403,1071,3.708,1072,3.493,1095,2.015,1198,3.3,1207,4.531,1208,2.414,1209,3.02,1210,4.814,1211,5.188,1212,3.693,1213,3.324,1214,2.912,1215,2.558,1216,3.298,1217,3.324,1218,2.722,1219,2.813,1220,4.451,1221,4.299,1222,4.531,1223,3.27,1224,3.27,1225,3.27,1226,3.27,1227,3.27,1228,3.27,1229,3.27,1230,3.27,1231,3.228,1232,3.27,1233,3.27,1234,4.25,1235,3.693,1236,3.138,1237,3.138,1238,2.286,1239,3.784,1240,3.419,1241,3.419,1242,1.795,1243,2.484,1244,2.558,1245,3.27,1246,2.912,1247,2.484,1248,2.912,1249,3.27,1250,3.419,1251,2.015,1252,3.419,1253,2.722,1254,3.419,1255,2.348,1256,3.419,1257,2.912,1258,3.419,1259,3.27,1260,3.419,1261,4.359,1262,2.813,1263,3.02,1264,2.558,1265,4.784,1266,3.419,1267,3.419,1268,3.419,1269,4.078,1270,3.419,1271,4.443,1272,3.419,1273,3.419,1274,3.419,1275,3.27,1276,1.967,1277,3.924,1278,4.935,1279,3.419,1280,3.419,1281,4.443,1282,3.419,1283,4.443,1284,4.443,1285,3.419,1286,3.419,1287,4.204,1288,4.443,1289,3.27,1290,4.25,1291,4.443,1292,3.419,1293,4.615,1294,3.656,1295,3.419,1296,3.27,1297,3.419,1298,3.419,1299,3.419,1300,3.27,1301,4.078,1302,3.27,1303,2.912,1304,3.27,1305,2.813]],["title/injectables/InterfaceStoreService.html",[528,1.1,1553,2.935]],["body/injectables/InterfaceStoreService.html",[0,0.105,2,0.973,3,0.136,4,0.126,9,0.159,25,0.147,27,1.602,30,0.973,33,0.973,37,0.815,39,0.977,40,0.008,41,0.601,42,0.209,43,0.793,45,0.981,49,0.739,53,0.261,54,0.434,56,0.158,57,0.024,59,1.348,112,0.866,219,0.006,220,0.006,223,0.734,224,3.042,231,1.041,254,0.887,274,1.74,525,1.939,528,1.75,533,1.503,536,2.408,541,3.208,543,2.913,544,1.28,551,2.611,606,0.865,645,2.408,690,1.704,725,1.805,818,3.979,833,2.408,1032,3.042,1041,5.906,1070,3.597,1238,3.123,1247,3.394,1308,3.697,1372,6.452,1381,7.43,1386,6.452,1467,3.266,1553,4.671,1787,2.626,2052,4.903,2329,2.944,2611,7.947,2612,7.279,2613,7.279,2614,5.906,2615,4.469,2616,5.499,2617,7.279,2618,6.452,2619,7.279,2620,5.761,2621,8.384,2622,7.98,2623,8.384,2624,7.98,2625,8.384,2626,7.43,2627,8.384,2628,8.384,2629,5.761,2630,7.279,2631,6.452,2632,8.384,2633,5.761,2634,6.452,2635,5.761,2636,7.279,2637,5.106,2638,5.761,2639,7.279,2640,7.43,2641,5.761,2642,7.279,2643,7.279,2644,5.761,2645,5.761,2646,5.761,2647,5.761,2648,5.761]],["title/components/IssueCategoryComponent.html",[0,0.083,127,0.954]],["body/components/IssueCategoryComponent.html",[0,0.148,1,1.105,2,0.922,3,0.125,4,0.116,5,0.881,6,1.224,7,1.199,8,1.151,9,0.106,11,1.061,16,1.061,17,1.455,18,1.389,19,1.061,20,0.9,21,1.053,23,1.053,25,0.135,37,0.489,40,0.008,41,0.558,42,0.125,53,0.215,54,0.4,56,0.145,57,0.022,62,1.439,88,0.881,92,1.199,93,1.382,94,1.354,95,0.919,96,1.838,97,1.199,98,2.058,99,1.083,100,0.938,101,1.062,102,1.439,103,1.105,104,1.199,105,1.105,106,1.061,107,1.199,108,1.105,109,1.199,110,1.04,111,1.061,112,1.003,113,1.083,114,1.04,115,1.147,116,1.736,117,1.061,118,0.087,119,1.083,120,0.978,121,1.105,122,1.105,123,0.998,124,1.199,125,1.061,126,1.199,127,1.695,128,1.199,129,1.105,130,1.199,131,1.083,132,1.199,133,1.083,134,1.199,135,0.775,136,1.199,137,1.083,138,0.516,139,1.199,140,1.105,141,1.199,142,1.105,143,1.736,144,1.105,145,1.199,146,1.105,147,1.736,148,1.105,149,1.199,150,1.128,151,1.199,152,1.061,153,1.199,154,1.105,155,1.199,156,1.04,157,1.019,158,1.199,159,1.105,160,1.499,161,1.561,162,1.105,163,1.199,164,1.061,165,0.601,166,1.199,167,1.083,168,1.105,169,1.175,170,1.105,171,1.199,172,1.083,173,1.083,174,1.061,175,1.199,176,1.083,177,1.199,178,1.019,179,0.863,180,1.061,181,1.199,182,1.061,183,1.354,184,1.083,185,1.105,186,0.69,187,1.04,188,0.844,189,1.105,190,1.105,191,1.083,192,1.199,193,1.105,194,0.998,195,1.199,196,1.105,197,1.199,198,1.04,199,1.083,200,1.105,201,0.998,202,1.199,203,1.105,204,0.741,205,1.04,206,1.083,207,1.199,208,1.061,209,1.199,210,1.061,211,1.199,212,1.04,213,1.199,214,1.04,215,1.199,216,1.04,217,1.128,218,1.199,219,0.006,220,0.006,269,2.336,303,3.986,304,3.525,305,3.217,306,5.212,725,1.561,764,2.548,789,1.671,812,1.708,833,2.215,906,1.41,1175,1.957,1177,2.402,1178,2.623,1180,2.545,1188,3.122,1192,2.798,1194,3.041,1195,2.215,1196,1.746,1216,2.833,1276,1.957,1548,3.004,1641,3.525,2254,2.708,2607,5.598,2649,4.428,2650,4.697,2651,7.672,2652,6.9,2653,5.3,2654,3.401,2655,4.004,2656,2.798,2657,4.697]],["title/components/IssueContentsComponent.html",[0,0.083,129,0.954]],["body/components/IssueContentsComponent.html",[0,0.144,1,0.818,2,0.751,3,0.093,4,0.085,5,0.652,6,0.905,7,0.887,8,0.852,9,0.078,11,0.785,14,1.148,15,1.821,16,0.785,17,1.439,18,1.373,19,0.785,20,0.666,21,0.857,23,0.857,25,0.1,26,0.504,27,1.532,30,0.751,33,0.524,37,0.767,39,0.434,40,0.008,41,0.523,42,0.169,43,0.352,45,0.744,46,1.204,49,0.437,50,0.724,51,0.612,53,0.259,54,0.296,56,0.107,57,0.016,60,1.089,61,2.544,62,1.171,78,1.112,81,2.004,88,1.406,91,2.21,92,0.887,93,1.125,94,1.102,95,0.68,96,1.62,97,0.887,98,1.941,99,0.802,100,0.694,101,1.021,102,1.171,103,0.818,104,0.887,105,0.818,106,0.785,107,0.887,108,0.818,109,0.887,110,0.769,111,0.785,112,0.902,113,0.802,114,1.102,115,0.933,116,1.484,117,0.785,118,0.064,119,0.802,120,0.983,121,0.818,122,0.818,123,0.739,124,0.887,125,0.785,126,0.887,127,0.818,128,0.887,129,1.494,130,0.887,131,0.802,132,0.887,133,0.802,134,0.887,135,0.573,136,0.887,137,0.802,138,0.382,139,0.887,140,0.818,141,0.887,142,0.818,143,1.484,144,0.818,145,0.887,146,0.818,147,1.484,148,0.818,149,0.887,150,0.835,151,0.887,152,0.785,153,0.887,154,0.818,155,0.887,156,1.287,157,0.754,158,0.887,159,0.818,160,1.556,161,1.27,162,0.818,163,0.887,164,0.785,165,0.637,166,0.887,167,0.802,168,0.818,169,0.869,170,0.818,171,0.887,172,0.802,173,0.802,174,0.785,175,0.887,176,0.802,177,0.887,178,0.754,179,0.638,180,0.785,181,0.887,182,0.785,183,1.102,184,0.802,185,0.818,186,0.562,187,0.769,188,1.208,189,0.818,190,0.818,191,0.802,192,0.887,193,0.818,194,1.235,195,0.887,196,0.818,197,0.887,198,0.769,199,1.464,200,0.818,201,1.349,202,0.887,203,0.818,204,0.785,205,0.769,206,0.802,207,0.887,208,0.785,209,0.887,210,0.785,211,0.887,212,0.769,213,0.887,214,0.769,215,0.887,216,0.769,217,0.835,218,0.887,219,0.005,220,0.005,223,0.333,230,2.965,231,0.803,241,1.729,244,1.454,261,1.448,267,1.828,269,2.891,277,1.237,286,0.869,308,1.068,315,3.604,377,4.981,511,1.66,533,1.023,544,0.857,545,2.21,615,3.659,638,2.787,677,2.407,693,3.182,725,1.484,743,2.407,751,1.22,761,2.605,764,2.074,766,2.407,767,2.912,783,3.439,785,2.741,788,2.423,789,1.771,790,1.639,791,1.883,803,1.558,806,4.06,812,1.264,816,1.185,829,1.729,833,2.347,834,2.696,835,2.004,836,1.292,868,2.161,884,3.476,899,3.604,906,1.877,955,2.071,975,7.323,992,2.31,994,4.059,1003,3.308,1004,2.787,1006,3.604,1014,2.36,1023,2.517,1028,2.407,1071,2.672,1074,2.917,1075,3.308,1104,1.264,1175,2.912,1177,3.245,1178,2.78,1179,3.351,1180,3.639,1188,2.31,1192,3.782,1194,2.891,1195,1.639,1196,2.675,1201,2.517,1276,2.645,1487,3.604,1544,3.585,1548,2.223,1646,2.347,1647,2.004,1667,1.883,1676,2.869,1682,2.78,1689,2.517,1950,2.31,2251,4.242,2254,2.004,2307,4.556,2312,3.182,2313,2.787,2656,3.782,2657,3.476,2658,3.476,2659,4.242,2660,5.09,2661,6.559,2662,5.615,2663,6.559,2664,6.559,2665,7.162,2666,6.347,2667,7.162,2668,5.615,2669,3.922,2670,3.922,2671,3.922,2672,4.977,2673,3.922,2674,3.922,2675,5.615,2676,5.615,2677,3.922,2678,2.642,2679,2.517,2680,3.922,2681,3.922,2682,3.922,2683,6.347,2684,2.787,2685,3.922,2686,3.922,2687,3.922,2688,3.922,2689,3.922,2690,3.922,2691,3.922,2692,3.922,2693,3.922,2694,5.615,2695,3.922,2696,5.615,2697,3.922,2698,5.615,2699,5.615,2700,5.615,2701,4.977,2702,3.182,2703,4.242,2704,2.642,2705,3.476,2706,3.069,2707,2.31,2708,3.476,2709,1.941,2710,3.991,2711,2.787,2712,2.642,2713,4.556]],["title/components/IssueDetailComponent.html",[0,0.083,131,0.935]],["body/components/IssueDetailComponent.html",[0,0.129,1,0.686,2,0.659,3,0.078,4,0.072,5,0.546,6,0.759,7,0.744,8,0.714,9,0.066,11,0.658,14,1.008,15,1.644,16,0.658,17,1.428,18,1.358,19,0.658,20,0.558,21,0.753,23,0.753,25,0.084,26,0.532,27,1.573,30,0.659,33,0.439,37,0.811,39,0.546,40,0.008,41,0.509,42,0.191,43,0.443,45,0.747,46,1.077,49,0.576,50,1.301,51,1.1,53,0.26,54,0.248,56,0.09,57,0.014,59,0.924,60,0.913,62,1.029,77,2.235,78,1.999,81,2.52,84,1.959,85,1.78,87,0.96,88,0.546,89,2.295,91,2.217,92,0.744,93,1.186,94,0.968,95,0.57,96,1.489,97,0.744,98,1.862,99,0.672,100,0.582,101,0.962,102,1.029,103,0.686,104,0.744,105,0.686,106,0.658,107,0.744,108,0.686,109,0.744,110,0.645,111,0.658,112,0.839,113,0.672,114,1.291,115,0.984,116,1.34,117,0.658,118,0.054,119,0.672,120,0.984,121,0.686,122,0.686,123,0.619,124,0.744,125,0.658,126,0.744,127,0.686,128,0.744,129,0.686,130,0.744,131,1.345,132,0.744,133,0.672,134,0.744,135,0.48,136,0.744,137,0.672,138,0.32,139,0.744,140,0.686,141,0.744,142,0.686,143,1.34,144,0.686,145,0.744,146,0.686,147,1.34,148,0.686,149,0.744,150,0.7,151,0.744,152,0.658,153,0.744,154,0.686,155,1.34,156,0.645,157,0.632,158,0.744,159,0.686,160,1.072,161,1.116,162,0.686,163,0.744,164,0.658,165,0.373,166,0.744,167,0.672,168,0.686,169,0.729,170,0.686,171,0.744,172,0.672,173,0.672,174,0.658,175,0.744,176,0.672,177,0.744,178,0.632,179,0.535,180,0.658,181,0.744,182,0.658,183,0.968,184,0.672,185,0.686,186,0.493,187,0.645,188,0.524,189,0.686,190,0.686,191,0.672,192,0.744,193,0.686,194,0.929,195,0.744,196,0.686,197,0.744,198,0.645,199,0.672,200,0.686,201,0.929,202,0.744,203,0.686,204,0.69,205,0.645,206,0.672,207,0.744,208,0.658,209,0.744,210,0.658,211,0.744,212,0.645,213,0.744,214,0.645,215,0.744,216,0.645,217,0.7,218,0.744,219,0.004,220,0.004,223,0.279,224,2.062,232,1.306,241,1.449,244,1.703,246,2.541,247,2.442,250,1.532,251,1.243,254,0.401,264,2.109,267,3.068,269,2.174,270,1.912,277,2.636,286,0.729,302,2.483,303,3.837,304,2.52,305,2.3,308,1.071,311,1.532,315,3.8,316,2.667,361,3.323,377,5.208,383,2.61,412,2.696,454,2.062,461,1.797,495,1.214,512,3.635,533,0.858,537,0.952,544,0.904,545,2.438,549,3.178,557,1.532,558,2.018,565,2.824,568,1.339,571,0.807,600,1.696,606,0.329,609,2.681,635,0.858,640,1.662,647,3.727,669,4.319,725,0.744,743,4.04,761,2.352,766,2.018,767,2.735,783,2.843,785,2.475,788,2.187,789,1.556,790,1.374,791,1.578,803,1.306,806,4.244,812,2.121,816,2.386,819,1.679,829,1.449,830,4.198,831,1.936,832,2.018,836,1.083,862,2.483,868,1.951,885,4.003,887,1.679,902,3.166,906,1.514,951,6.009,974,1.489,975,4.003,992,3.877,1003,1.936,1006,3.8,1023,2.109,1028,2.018,1074,1.339,1084,4.209,1102,3.357,1104,2.546,1175,2.431,1177,2.982,1178,1.627,1179,1.679,1192,3.724,1194,2.901,1195,2.75,1196,2.712,1239,1.797,1276,2.837,1289,3.028,1450,2.336,1467,1.863,1544,4.048,1593,2.442,1610,2.667,1620,2.018,1641,2.52,1644,3.489,1645,2.913,1646,2.062,1647,2.52,1648,2.913,1650,2.667,1682,4,1777,2.109,1789,2.336,2254,2.52,2263,3.727,2313,3.506,2610,4.372,2656,2.605,2660,2.336,2683,4.372,2702,2.667,2706,2.696,2707,3.489,2709,2.442,2710,2.336,2714,2.913,2715,5.922,2716,4.933,2717,4.666,2718,5.922,2719,5.922,2720,5.922,2721,5.922,2722,5.922,2723,5.833,2724,4.372,2725,6.581,2726,6.581,2727,4.933,2728,3.287,2729,4.933,2730,4.433,2731,4.933,2732,3.287,2733,3.727,2734,4.372,2735,3.287,2736,3.287,2737,6.251,2738,3.287,2739,4.933,2740,3.287,2741,3.287,2742,3.287,2743,3.287,2744,3.287,2745,3.287,2746,3.287,2747,3.287,2748,3.287,2749,3.287,2750,4.372,2751,4.372,2752,3.287,2753,3.287,2754,2.018,2755,2.913,2756,1.736,2757,3.287,2758,3.287,2759,2.913,2760,3.287,2761,3.287,2762,3.287,2763,3.287,2764,3.287,2765,3.287,2766,3.287,2767,5.833,2768,5.922,2769,3.287,2770,3.287,2771,2.483,2772,4.933,2773,3.287,2774,3.287,2775,3.287,2776,3.287,2777,3.287,2778,2.483,2779,4.372,2780,3.287,2781,4.805,2782,4.933,2783,3.287,2784,4.933,2785,4.933,2786,3.287,2787,3.287,2788,2.483,2789,2.913,2790,2.913,2791,2.913,2792,2.913,2793,2.843,2794,3.287,2795,2.667,2796,3.287,2797,5.34,2798,2.696,2799,2.913,2800,3.287,2801,3.287,2802,3.287,2803,3.287,2804,2.667,2805,4.372,2806,2.483,2807,2.913,2808,2.913,2809,3.287]],["title/components/IssueFilterComponent.html",[0,0.083,133,0.935]],["body/components/IssueFilterComponent.html",[0,0.112,1,0.595,2,0.592,3,0.067,4,0.118,5,0.475,6,0.659,7,0.646,8,0.62,9,0.057,11,0.572,16,0.572,17,1.418,18,1.349,19,0.572,20,0.485,21,0.676,23,0.676,25,0.229,26,0.488,29,3.996,30,0.592,37,0.791,39,0.776,40,0.008,41,0.572,42,0.223,43,0.63,45,0.953,46,1.011,49,0.676,50,1.394,51,1.336,53,0.169,54,0.215,56,0.078,57,0.019,62,0.924,78,1.987,79,2.157,81,2.263,82,1.682,84,1.134,85,1.958,87,0.795,88,1.215,89,1.106,91,1.829,92,0.646,93,0.887,94,0.869,95,0.495,96,1.384,97,0.646,98,1.794,99,0.583,100,1.24,101,0.961,102,0.924,103,0.595,104,0.646,105,0.595,106,0.572,107,0.646,108,0.595,109,0.646,110,0.56,111,0.572,112,0.788,113,0.583,114,0.56,115,1.424,116,1.228,117,0.572,118,0.047,119,0.583,120,0.927,121,0.595,122,0.595,123,0.538,124,0.646,125,0.572,126,0.646,127,0.595,128,0.646,129,0.595,130,0.646,131,0.583,132,0.646,133,1.494,134,0.646,135,0.417,136,0.646,137,0.583,138,0.278,139,0.646,140,0.595,141,0.646,142,0.595,143,1.228,144,0.595,145,0.646,146,0.595,147,1.228,148,0.595,149,0.646,150,0.608,151,0.646,152,0.572,153,0.646,154,0.595,155,0.646,156,1.299,157,0.549,158,0.646,159,0.595,160,0.962,161,1.002,162,0.595,163,0.646,164,0.572,165,0.751,166,0.646,167,0.583,168,0.595,169,0.633,170,0.595,171,0.646,172,0.583,173,0.583,174,0.572,175,0.646,176,0.583,177,0.646,178,0.549,179,1.382,180,0.572,181,0.646,182,0.572,183,1.299,184,0.583,185,0.595,186,0.612,187,0.56,188,0.865,189,0.595,190,0.595,191,0.583,192,0.646,193,0.595,194,1.152,195,0.646,196,0.595,197,0.646,198,0.56,199,0.583,200,0.595,201,1.152,202,0.646,203,0.595,204,0.619,205,0.56,206,0.583,207,0.646,208,0.572,209,0.646,210,0.572,211,0.646,212,0.56,213,0.646,214,0.56,215,0.646,216,0.56,217,0.608,218,0.646,219,0.004,220,0.004,223,0.621,228,0.9,254,0.946,267,2.065,277,2.21,294,1.413,303,2.007,304,1.459,305,1.331,308,0.465,361,1.923,365,1.203,383,1.258,396,1.618,412,2.421,431,3.594,511,2.162,534,3.179,544,1.211,545,1.367,557,2.852,565,1.901,571,1.904,580,2.263,592,2.511,593,1.629,606,0.731,615,3.126,675,2.157,676,2.421,725,1.228,726,1.682,764,1.636,788,1.054,789,0.9,790,1.193,806,4.145,812,1.972,816,2,817,2.329,819,2.263,826,3.425,833,1.193,835,1.459,836,0.941,841,2.557,863,1.507,868,1.789,877,1.134,899,2.843,902,3.926,906,1.676,964,3.332,1001,3.149,1032,1.193,1035,1.618,1067,2.325,1070,2.625,1074,2.697,1102,1.618,1104,1.75,1112,1.56,1175,2.446,1177,2.772,1178,1.413,1179,2.263,1180,2.127,1192,3.7,1194,2.393,1195,1.193,1196,2.613,1216,1.054,1231,3.267,1251,1.08,1276,2.005,1305,1.507,1450,2.029,1466,3.347,1467,2.511,1472,2.371,1476,2.566,1477,3.223,1487,2.843,1492,2.157,1512,3.331,1514,2.157,1541,4.348,1543,2.843,1544,2.967,1551,1.753,1582,2.967,1593,1.413,1640,1.56,1641,1.459,1644,1.682,1646,1.193,1647,1.459,1682,3.278,1751,2.421,1787,1.598,1807,2.157,1820,1.851,1857,1.618,1934,2.843,1942,1.753,2032,3.149,2180,2.719,2215,1.753,2350,2.843,2365,1.832,2380,3.332,2394,2.61,2397,1.618,2398,1.618,2399,1.682,2427,1.832,2570,6.136,2656,2.339,2679,1.832,2706,2.421,2709,2.193,2710,3.149,2730,2.984,2789,2.53,2793,1.371,2810,2.316,2811,6.698,2812,5.428,2813,4.43,2814,8.633,2815,5.428,2816,6.82,2817,5.428,2818,3.657,2819,4.43,2820,4.43,2821,6.118,2822,4.43,2823,4.43,2824,4.43,2825,4.43,2826,4.811,2827,3.347,2828,5.428,2829,2.855,2830,2.855,2831,3.858,2832,2.855,2833,3.926,2834,4.43,2835,2.855,2836,7.84,2837,4.43,2838,2.855,2839,3.926,2840,2.855,2841,4.43,2842,2.719,2843,4.43,2844,2.855,2845,3.926,2846,4.43,2847,2.855,2848,4.43,2849,7.008,2850,2.855,2851,4.43,2852,4.43,2853,4.43,2854,4.43,2855,2.855,2856,4.43,2857,2.855,2858,2.855,2859,4.964,2860,4.43,2861,2.855,2862,2.855,2863,2.855,2864,2.855,2865,2.984,2866,2.984,2867,2.53,2868,4.405,2869,4.101,2870,4.811,2871,1.832,2872,2.53,2873,2.53,2874,1.832,2875,3.594,2876,2.316,2877,2.53,2878,6.211,2879,2.53,2880,5.869,2881,4.25,2882,4.25,2883,2.53,2884,4.25,2885,5.869,2886,2.53,2887,1.923,2888,2.984,2889,2.029,2890,2.53,2891,1.753,2892,1.923,2893,2.53,2894,2.855,2895,2.719,2896,2.855,2897,2.855,2898,2.855,2899,2.855,2900,2.855,2901,2.855,2902,2.855,2903,2.855,2904,5.428,2905,4.43,2906,4.707,2907,4.43,2908,4.43,2909,2.855,2910,4.43,2911,2.855,2912,2.855,2913,2.855,2914,2.855,2915,4.43,2916,2.855,2917,2.855,2918,2.855,2919,2.855,2920,2.855,2921,2.855,2922,4.43,2923,4.43,2924,4.43,2925,4.43,2926,4.43,2927,4.43,2928,2.855,2929,2.316,2930,2.157,2931,2.855,2932,1.753,2933,2.53,2934,2.855,2935,6.118,2936,4.43,2937,1.832,2938,4.43,2939,1.618]],["title/interfaces/IssueFolderNode.html",[118,0.075,1277,2.592]],["body/interfaces/IssueFolderNode.html",[0,0.148,3,0.125,4,0.177,5,1.147,9,0.138,25,0.135,26,0.62,40,0.008,42,0.221,49,0.729,53,0.253,56,0.189,57,0.029,87,0.87,101,0.631,112,0.631,118,0.151,120,0.708,135,0.775,138,0.672,165,0.998,186,0.843,188,0.844,219,0.006,220,0.006,231,1.162,254,0.646,277,2.419,289,4.171,309,3.122,511,1.567,525,1.412,537,1.534,544,1.319,593,2.376,606,0.892,620,1.868,719,1.957,724,1.785,817,2.274,836,1.746,906,1.823,952,3.122,1067,1.956,1068,3.396,1071,3.705,1072,3.487,1095,2.005,1198,3.291,1207,4.52,1208,2.402,1209,3.004,1210,4.808,1211,5.089,1212,3.684,1213,3.313,1214,2.897,1215,2.545,1216,3.36,1217,3.313,1218,2.708,1219,2.798,1220,4.193,1221,4.291,1222,4.52,1223,3.253,1224,3.253,1225,3.253,1226,3.253,1227,3.253,1228,3.253,1229,3.253,1230,3.253,1231,3.217,1232,3.253,1233,3.253,1234,4.236,1235,3.684,1236,3.122,1237,3.122,1238,2.274,1239,3.771,1240,3.401,1241,3.401,1242,1.785,1243,2.471,1244,2.545,1245,3.253,1246,2.897,1247,2.471,1248,2.897,1249,3.253,1250,3.401,1251,2.005,1252,3.401,1253,2.708,1254,3.401,1255,2.336,1256,3.401,1257,2.897,1258,3.401,1259,3.253,1260,3.401,1261,4.349,1262,2.798,1263,3.004,1264,2.545,1265,3.911,1266,3.401,1267,3.401,1268,3.401,1269,4.065,1270,3.401,1271,4.428,1272,3.401,1273,3.401,1274,3.401,1275,3.253,1276,1.957,1277,4.349,1278,5.543,1279,3.401,1280,3.401,1281,4.428,1282,3.401,1283,4.428,1284,4.428,1285,3.401,1286,3.401,1287,4.193,1288,4.428,1289,3.253,1290,4.236,1291,4.428,1292,3.401,1293,4.606,1294,3.643,1295,3.401,1296,3.253,1297,3.401,1298,3.401,1299,3.401,1300,3.253,1301,4.065,1302,3.253,1303,2.897,1304,3.253,1305,2.798]],["title/injectables/IssueGraphApiService.html",[528,1.1,2940,3.455]],["body/injectables/IssueGraphApiService.html",[0,0.163,3,0.114,4,0.105,9,0.097,25,0.123,30,0.868,33,0.868,37,0.755,39,0.98,40,0.008,41,0.542,42,0.193,43,0.734,45,0.889,49,0.736,53,0.268,54,0.364,56,0.178,57,0.027,59,1.222,80,2.942,118,0.138,120,0.804,138,0.879,179,1.423,183,1.274,194,1.381,204,1.096,219,0.005,220,0.005,223,0.551,228,2.654,231,1.169,254,0.955,274,1.46,294,2.393,304,3.317,311,3.027,319,4.285,365,1.737,511,2.417,525,1.729,528,1.561,533,1.261,536,2.02,537,1.4,540,2.191,543,2.47,544,1.196,551,2.191,568,2.645,569,3.428,571,2.173,606,0.842,613,3.549,620,2.289,645,2.02,690,1.429,724,2.187,725,1.469,750,3.428,841,2.713,868,2.139,906,1.498,947,2.642,1095,3.184,1216,2.708,1293,4.442,1294,4.138,1426,3.117,1451,3.428,1476,3.262,1792,4.138,1907,4.905,2064,3.428,2191,5.889,2192,5.279,2200,4.284,2204,4.615,2209,4.905,2241,5.92,2264,5.268,2314,4.959,2325,3.825,2329,4.572,2341,4.167,2343,2.642,2345,4.373,2349,2.968,2352,5.168,2357,5.507,2367,3.986,2940,5.538,2941,4.285,2942,6.493,2943,7.837,2944,5.754,2945,5.754,2946,5.754,2947,6.493,2948,4.834,2949,7.837,2950,7.331,2951,7.837,2952,7.331,2953,7.837,2954,7.331,2955,7.837,2956,4.834,2957,6.493,2958,6.493,2959,4.834,2960,6.946,2961,6.493,2962,4.834,2963,5.754,2964,6.493,2965,6.493,2966,6.493,2967,6.493,2968,6.493,2969,6.493,2970,6.493,2971,6.493,2972,6.946,2973,6.493,2974,4.834,2975,6.493,2976,4.834,2977,6.493,2978,6.493,2979,6.493,2980,5.268,2981,6.493,2982,6.493,2983,7.837,2984,4.834,2985,4.834,2986,4.834,2987,4.834,2988,4.834,2989,3.922,2990,4.834,2991,4.834,2992,4.834,2993,4.834,2994,4.834,2995,6.493,2996,4.834,2997,6.493,2998,6.493,2999,6.493,3000,4.834,3001,4.834,3002,6.493,3003,4.834,3004,4.834,3005,4.834,3006,4.834,3007,4.834]],["title/injectables/IssueGraphClassSettersService.html",[528,1.1,3008,3.455]],["body/injectables/IssueGraphClassSettersService.html",[3,0.136,4,0.125,9,0.115,25,0.146,30,0.97,37,0.529,39,0.635,40,0.008,41,0.528,42,0.136,43,0.515,45,0.65,46,0.875,49,0.564,53,0.261,54,0.432,56,0.157,57,0.04,120,0.589,135,1.061,138,0.859,165,1.057,219,0.006,220,0.006,223,0.616,244,1.609,254,0.885,274,1.732,288,4.332,289,4.59,308,1.435,528,1.745,541,3.199,551,2.598,571,1.781,606,0.907,620,2.558,635,1.894,645,2.396,719,2.68,841,3.498,865,4.143,956,4.143,1053,4.455,1103,5.371,1208,3.289,1217,3.823,1218,2.929,1219,3.028,1242,2.445,1243,3.384,1253,4.843,1301,4.275,1303,3.134,1305,3.028,1905,3.967,2180,5.138,2181,3.708,2505,5.941,3008,5.483,3009,6.432,3010,5.889,3011,5.082,3012,5.889,3013,4.889,3014,7.817,3015,5.483,3016,7.257,3017,7.257,3018,7.156,3019,5.734,3020,6.432,3021,6.432,3022,7.257,3023,3.862,3024,8.369,3025,7.963,3026,8.82,3027,5.082,3028,5.483,3029,5.734,3030,5.734,3031,5.734,3032,7.963,3033,5.082,3034,5.082,3035,7.652,3036,5.734,3037,5.734,3038,5.734]],["title/components/IssueGraphControlsComponent.html",[0,0.083,137,0.935]],["body/components/IssueGraphControlsComponent.html",[0,0.161,1,0.717,2,0.9,3,0.081,4,0.075,5,0.571,6,0.794,7,0.778,8,0.747,9,0.069,11,0.688,14,1.043,16,0.688,17,1.431,18,1.364,19,0.688,20,1.22,21,0.779,23,0.779,25,0.088,26,0.458,27,1.359,29,2.788,30,0.682,33,0.46,36,3.168,37,0.817,39,0.38,40,0.008,41,0.499,42,0.178,43,0.309,45,0.763,46,1.149,49,0.397,50,1.389,51,1.216,53,0.269,54,0.259,55,1.061,56,0.094,57,0.014,58,1.437,59,1.249,62,1.064,77,1.558,78,0.974,85,1.84,87,0.944,88,0.571,89,2.357,91,1.158,92,0.778,93,1.021,94,1.001,95,0.596,96,1.522,97,0.778,98,1.883,99,0.703,100,1.077,101,0.953,102,1.064,103,0.717,104,0.778,105,0.717,106,0.688,107,0.778,108,0.717,109,0.778,110,0.674,111,0.688,112,0.928,113,0.703,114,0.674,115,1.119,116,1.376,117,0.688,118,0.056,119,0.703,120,0.953,121,0.717,122,0.717,123,0.647,124,0.778,125,0.688,126,0.778,127,0.717,128,0.778,129,0.717,130,0.778,131,0.703,132,0.778,133,0.703,134,0.778,135,1.05,136,0.778,137,1.375,138,0.935,139,0.778,140,0.717,141,0.778,142,0.717,143,1.376,144,0.717,145,0.778,146,0.717,147,1.376,148,0.717,149,0.778,150,0.732,151,0.778,152,1.347,153,0.778,154,0.717,155,0.778,156,0.674,157,0.661,158,0.778,159,0.717,160,1.108,161,1.154,162,0.717,163,0.778,164,0.688,165,0.39,166,0.778,167,0.703,168,0.717,169,0.762,170,0.717,171,0.778,172,0.703,173,0.703,174,0.688,175,0.778,176,0.703,177,0.778,178,0.661,179,0.559,180,0.688,181,0.778,182,0.688,183,1.001,184,0.703,185,0.717,186,0.51,187,0.674,188,0.548,189,0.717,190,0.717,191,0.703,192,0.778,193,0.717,194,0.647,195,0.778,196,0.717,197,0.778,198,0.674,199,0.703,200,0.717,201,1.267,202,0.778,203,0.717,204,0.481,205,0.674,206,0.703,207,0.778,208,0.688,209,0.778,210,0.688,211,0.778,212,0.674,213,0.778,214,0.674,215,0.778,216,0.674,217,0.732,218,0.778,219,0.004,220,0.006,223,0.292,231,1.076,241,2.248,262,1.884,269,2.248,270,2.607,288,2.597,289,1.701,303,1.558,304,3.672,305,2.378,308,1.303,361,4.097,495,1.27,497,6.725,532,2.443,533,0.897,534,2.3,536,1.437,537,0.995,543,2.049,553,3.319,554,3.853,557,1.603,558,2.11,563,1.879,565,2.887,578,2.789,597,3.324,606,0.344,674,1.948,683,3.964,690,1.016,761,2.416,785,1.437,803,1.365,816,2.032,821,2.315,828,2.835,829,1.515,844,1.815,868,2.004,873,2.835,881,2.443,906,0.703,932,4.139,977,2.248,1074,2.477,1095,1.929,1096,2.443,1104,1.96,1105,4.622,1108,4.594,1177,2.311,1184,2.789,1196,2.695,1197,4.323,1198,2.188,1202,1.815,1208,4.033,1216,2.246,1255,3.436,1276,1.884,1404,4.436,1405,2.025,1409,4.097,1460,2.789,1476,1.332,1488,3.436,1495,2.025,1512,3.436,1593,3.331,1641,2.606,1682,3.858,1689,2.206,1861,3.005,1899,4.783,1923,3.131,1934,4.613,1986,3.005,2024,2.545,2187,3.273,2189,2.11,2191,2.315,2200,4.116,2239,2.443,2241,6.049,2242,4.521,2243,2.789,2254,3.982,2302,2.597,2303,1.948,2304,2.206,2343,1.879,2352,3.131,2359,5.002,2394,4.436,2397,1.948,2398,1.948,2399,2.025,2402,4.097,2706,1.879,2709,1.701,2717,3.814,2756,1.815,2793,1.65,2798,1.879,2842,3.131,2989,2.789,3039,3.047,3040,3.436,3041,5.101,3042,5.101,3043,5.101,3044,7.53,3045,3.853,3046,4.935,3047,4.935,3048,5.101,3049,6.082,3050,5.101,3051,4.935,3052,6.082,3053,5.39,3054,6.729,3055,5.964,3056,6.729,3057,6.729,3058,5.101,3059,3.437,3060,5.101,3061,6.082,3062,4.521,3063,5.101,3064,5.101,3065,5.101,3066,3.437,3067,3.437,3068,5.101,3069,2.606,3070,4.139,3071,3.437,3072,5.101,3073,5.101,3074,3.437,3075,3.437,3076,3.437,3077,3.437,3078,5.101,3079,3.437,3080,5.101,3081,3.437,3082,3.437,3083,5.101,3084,3.437,3085,3.437,3086,3.437,3087,3.047,3088,3.047,3089,3.047,3090,2.789,3091,3.437,3092,3.437,3093,3.437,3094,2.315,3095,3.437,3096,3.437,3097,3.437,3098,3.437,3099,3.437,3100,3.437,3101,5.101,3102,3.437,3103,2.789,3104,3.047,3105,3.047,3106,3.437,3107,3.437,3108,3.437,3109,3.437,3110,3.437,3111,3.437,3112,3.437,3113,3.437,3114,3.437,3115,5.101,3116,3.047,3117,3.047,3118,3.437,3119,3.437,3120,5.101,3121,3.437,3122,3.437,3123,3.437,3124,3.437,3125,2.443,3126,3.047,3127,5.101,3128,4.521,3129,4.139,3130,5.101,3131,5.101,3132,2.789,3133,2.443,3134,4.521,3135,3.437,3136,3.437,3137,4.318,3138,5.101,3139,2.789,3140,3.437,3141,3.047,3142,3.047]],["title/injectables/IssueGraphDynamicTemplateRegistryService.html",[528,1.1,3143,3.455]],["body/injectables/IssueGraphDynamicTemplateRegistryService.html",[3,0.15,4,0.138,5,1.57,9,0.127,25,0.161,30,1.032,37,0.585,39,0.701,40,0.008,41,0.42,42,0.15,43,0.569,45,0.718,46,1.271,53,0.277,54,0.478,56,0.173,57,0.027,135,1.128,138,0.881,165,0.718,219,0.006,220,0.006,223,0.656,274,1.913,438,4.22,528,1.856,541,3.403,551,2.87,571,1.554,606,0.633,620,2.721,635,2.014,645,2.647,751,1.376,841,3.623,903,4.376,906,1.294,956,3.821,969,4.502,1053,4.739,1103,4.954,1198,2.717,1208,3.498,1217,4.162,1218,3.236,1235,3.041,1253,4.888,1275,3.888,2505,6.089,3012,6.264,3013,5.2,3015,5.832,3023,4.266,3143,5.832,3144,6.842,3145,6.264,3146,6.828,3147,5.613,3148,7.683,3149,7.72,3150,7.72,3151,6.333,3152,6.333,3153,6.333,3154,6.842,3155,5.613,3156,5.139,3157,6.333,3158,6.333,3159,7.72,3160,6.333,3161,6.333,3162,6.333,3163,6.333,3164,6.333,3165,6.333,3166,6.333]],["title/injectables/IssueGraphLinkHandlesService.html",[528,1.1,3167,3.455]],["body/injectables/IssueGraphLinkHandlesService.html",[3,0.122,4,0.202,9,0.103,25,0.132,30,0.907,37,0.699,39,0.838,40,0.008,41,0.502,42,0.207,43,0.681,45,0.859,46,1.156,53,0.26,54,0.389,56,0.141,57,0.022,59,1.303,135,0.991,138,0.864,165,1.018,219,0.006,220,0.006,223,0.683,254,0.827,274,1.559,289,4.656,308,1.309,310,2.006,528,1.631,541,2.99,551,2.34,571,2.05,594,5.124,606,0.836,620,2.391,635,1.77,645,2.158,745,5.124,751,1.995,841,3.707,902,5.163,906,1.644,956,4.327,969,6.803,1053,4.164,1068,2.835,1072,2.91,1103,5.163,1208,3.645,1217,3.863,1218,2.638,1219,2.726,1253,4.792,1287,4.848,1551,4.938,2505,5.777,3012,5.504,3013,4.569,3015,5.124,3018,6.959,3020,6.012,3023,3.478,3028,3.901,3154,8.087,3155,4.576,3156,6.146,3167,5.124,3168,7.13,3169,6.527,3170,4.576,3171,7.575,3172,6.783,3173,6.783,3174,5.163,3175,8.87,3176,5.163,3177,6.78,3178,5.163,3179,8.576,3180,5.163,3181,6.783,3182,5.163,3183,6.714,3184,6.012,3185,7.575,3186,5.504,3187,5.163,3188,5.163,3189,5.163,3190,5.163,3191,5.163,3192,5.163,3193,5.163,3194,5.163,3195,5.163,3196,5.163,3197,8.045,3198,6.783,3199,6.783,3200,8.045,3201,5.163,3202,5.163,3203,6.783,3204,5.163,3205,5.163]],["title/injectables/IssueGraphStateService.html",[528,1.1,1404,2.694]],["body/injectables/IssueGraphStateService.html",[0,0.148,2,0.92,3,0.125,4,0.115,9,0.105,25,0.135,26,0.618,30,0.92,33,0.706,37,0.777,39,0.898,40,0.008,41,0.538,42,0.199,43,0.729,45,0.92,49,0.716,51,1.266,53,0.274,54,0.398,56,0.144,57,0.022,59,0.824,87,0.869,118,0.141,120,0.542,138,0.918,183,1.351,219,0.006,220,0.006,223,0.448,228,2.171,231,1.095,274,1.595,286,1.171,310,1.561,525,2.161,528,1.655,532,5.768,533,1.378,534,3.438,535,3.557,536,2.207,543,3.167,544,1.239,551,2.393,552,4.285,553,3.971,569,3.635,571,1.879,606,0.766,633,3.034,635,1.796,645,2.207,674,3.902,683,5.178,724,2.319,901,4.892,926,4.637,932,5.585,1095,3.264,1293,5.223,1294,4.557,1404,4.055,1495,5.356,1512,3.034,1861,4.055,1923,5.166,2064,3.635,2200,4.436,2201,4.055,2212,4.915,2239,4.892,2285,3.989,2292,3.989,2314,5.084,2343,2.886,2359,4.417,2394,5.084,2733,5.2,2842,4.982,2940,6.13,2944,6.101,2945,4.68,2946,6.101,2960,7.192,2989,4.284,3046,4.284,3047,4.284,3051,6.584,3087,4.68,3090,4.284,3104,6.787,3105,6.101,3125,6.335,3206,4.68,3207,5.28,3208,6.883,3209,6.883,3210,6.883,3211,5.28,3212,5.28,3213,5.28,3214,6.883,3215,7.658,3216,8.115,3217,6.883,3218,6.101,3219,8.115,3220,6.883,3221,6.883,3222,6.883,3223,6.883,3224,6.883,3225,5.28,3226,5.28,3227,3.989,3228,6.883,3229,5.28,3230,5.28,3231,5.28,3232,5.28,3233,5.28,3234,5.28,3235,5.28,3236,5.28,3237,4.68,3238,5.28,3239,5.28,3240,5.28,3241,5.28,3242,5.28,3243,5.28]],["title/classes/IssueGroupContainerBehaviour.html",[57,0.019,3244,3.455]],["body/classes/IssueGroupContainerBehaviour.html",[3,0.113,4,0.104,9,0.096,14,1.318,25,0.199,26,0.579,30,0.862,37,0.775,39,0.807,40,0.008,41,0.483,42,0.172,43,0.655,45,0.827,46,1.113,49,0.723,50,1.346,51,1.138,53,0.261,56,0.131,57,0.02,74,4.584,75,2.938,78,2.068,85,1.727,87,0.827,91,2.629,120,0.491,138,0.628,165,1.03,186,0.645,191,0.978,201,1.47,219,0.005,220,0.005,254,1.089,262,2.694,286,1.061,308,1.187,310,2.157,365,1.061,537,1.386,559,2.527,593,1.275,606,0.479,609,3.494,690,1.907,719,1.768,745,3.616,751,1.04,816,1.446,836,1.577,906,1.753,914,3.883,977,2.11,1068,3.048,1072,2.767,1074,3.179,1076,2.713,1208,3.887,1216,1.768,1217,3.748,1218,2.445,1219,2.527,1221,4.53,1235,3.502,1242,1.612,1244,3.097,1253,4.806,1269,3.799,1276,3.009,1319,3.224,1676,3.295,1677,4.584,2219,3.071,2367,2.938,2704,4.344,3023,3.224,3186,3.883,3244,3.616,3245,6.96,3246,3.883,3247,6.918,3248,6.449,3249,6.465,3250,6.465,3251,6.449,3252,6.449,3253,6.449,3254,4.786,3255,4.786,3256,4.786,3257,5.716,3258,7.603,3259,8.045,3260,7.833,3261,4.786,3262,5.716,3263,4.786,3264,4.786,3265,4.786,3266,4.242,3267,4.344,3268,4.242,3269,5.716,3270,5.716,3271,3.883,3272,4.242,3273,4.242,3274,4.242,3275,3.402,3276,3.883,3277,4.242,3278,5.716,3279,3.616,3280,4.242,3281,5.716,3282,4.242,3283,4.242,3284,4.242,3285,7.221,3286,4.242,3287,6.918,3288,7.221,3289,7.221,3290,5.716,3291,4.242,3292,4.242,3293,4.242,3294,7.221,3295,7.221,3296,8.213,3297,5.716,3298,5.716,3299,5.716,3300,6.465,3301,4.242,3302,4.242,3303,4.242,3304,4.242,3305,5.716,3306,3.883,3307,4.242,3308,4.242,3309,4.242,3310,4.242,3311,4.242,3312,4.242,3313,4.242,3314,5.716,3315,4.242,3316,4.242,3317,5.716,3318,4.242,3319,4.242,3320,4.242,3321,4.242,3322,4.242,3323,4.242,3324,4.242,3325,5.716,3326,4.242,3327,4.242]],["title/interfaces/IssueGroupContainerNode.html",[118,0.075,1221,2.415]],["body/interfaces/IssueGroupContainerNode.html",[0,0.148,3,0.125,4,0.177,5,1.147,9,0.138,25,0.135,26,0.62,40,0.008,42,0.218,49,0.729,53,0.253,56,0.189,57,0.029,87,0.87,101,0.631,112,0.631,118,0.151,120,0.708,135,0.775,138,0.672,165,0.998,186,0.88,188,0.844,219,0.006,220,0.006,231,1.162,254,0.646,277,2.419,289,4.171,309,3.122,511,1.567,525,1.412,537,1.534,544,1.319,593,2.376,606,0.892,620,1.868,719,1.957,724,1.785,817,2.274,836,1.746,906,1.823,952,3.122,1067,1.956,1068,3.396,1071,3.774,1072,3.487,1095,2.005,1198,3.291,1207,4.52,1208,2.402,1209,3.004,1210,4.808,1211,5.089,1212,3.684,1213,3.313,1214,2.897,1215,2.545,1216,3.294,1217,3.313,1218,2.708,1219,2.798,1220,4.193,1221,4.449,1222,4.52,1223,3.253,1224,3.253,1225,3.253,1226,3.253,1227,3.253,1228,3.253,1229,3.253,1230,3.253,1231,3.217,1232,3.253,1233,3.253,1234,4.236,1235,3.684,1236,3.122,1237,3.122,1238,2.274,1239,3.771,1240,3.401,1241,3.401,1242,1.785,1243,2.471,1244,2.545,1245,3.253,1246,2.897,1247,2.471,1248,2.897,1249,3.253,1250,3.401,1251,2.005,1252,3.401,1253,2.708,1254,3.401,1255,2.336,1256,3.401,1257,2.897,1258,3.401,1259,3.253,1260,3.401,1261,4.349,1262,2.798,1263,3.004,1264,2.545,1265,3.911,1266,3.401,1267,3.401,1268,3.401,1269,4.065,1270,3.401,1271,5.407,1272,3.401,1273,3.401,1274,3.401,1275,3.253,1276,1.957,1277,3.911,1278,4.923,1279,3.401,1280,3.401,1281,4.428,1282,3.401,1283,4.428,1284,4.428,1285,3.401,1286,3.401,1287,4.193,1288,4.428,1289,3.253,1290,4.236,1291,4.428,1292,3.401,1293,4.606,1294,3.643,1295,3.401,1296,3.253,1297,3.401,1298,3.401,1299,3.401,1300,3.253,1301,4.065,1302,3.253,1303,2.897,1304,3.253,1305,2.798]],["title/classes/IssueGroupContainerParentBehaviour.html",[57,0.019,3275,3.25]],["body/classes/IssueGroupContainerParentBehaviour.html",[3,0.116,4,0.107,9,0.098,14,1.343,25,0.201,26,0.59,30,0.879,33,0.658,37,0.729,39,0.727,40,0.008,41,0.436,42,0.155,43,0.59,45,0.558,46,0.752,49,0.713,50,1.213,51,1.025,53,0.264,56,0.135,57,0.021,74,4.672,75,3.022,78,2.097,85,1.776,87,0.839,91,2.66,120,0.505,138,0.721,165,1.018,186,0.657,191,1.006,201,1.487,219,0.005,220,0.005,223,0.418,254,1.094,262,2.733,286,1.091,308,1.07,310,2.188,365,1.091,537,1.425,559,3.471,593,1.311,606,0.492,609,3.519,690,1.943,719,1.818,745,3.719,751,1.069,816,1.487,836,1.622,906,1.766,914,3.995,977,2.897,1068,3.092,1072,2.82,1074,3.216,1076,2.791,1208,3.727,1216,1.818,1217,3.791,1218,2.515,1219,2.6,1221,3.907,1235,2.364,1242,1.659,1244,3.156,1253,4.686,1269,3.872,1276,3.038,1319,4.427,1676,3.358,1677,4.672,2219,3.16,2367,3.022,2704,4.427,3023,3.316,3186,3.995,3245,6.674,3246,3.995,3247,7.291,3249,6.557,3250,6.557,3257,4.364,3258,7.291,3259,7.78,3260,7.657,3262,4.364,3266,4.364,3267,5.318,3268,4.364,3269,5.825,3270,5.825,3271,5.333,3272,5.825,3273,5.825,3274,5.825,3275,4.672,3276,5.333,3277,5.825,3278,6.997,3279,3.719,3280,4.364,3281,5.825,3282,4.364,3283,4.364,3284,4.364,3285,7.291,3286,4.364,3287,6.997,3288,7.291,3289,7.291,3290,5.825,3291,4.364,3292,4.364,3293,4.364,3294,7.291,3295,7.291,3296,8.241,3297,5.825,3298,5.825,3299,5.825,3300,6.557,3301,4.364,3302,4.364,3303,4.364,3304,4.364,3305,5.825,3306,3.995,3307,4.364,3308,4.364,3309,4.364,3310,4.364,3311,4.364,3312,4.364,3313,4.364,3314,5.825,3315,4.364,3316,4.364,3317,5.825,3318,4.364,3319,4.364,3320,4.364,3321,4.364,3322,4.364,3323,4.364,3324,4.364,3325,5.825,3326,4.364,3327,4.364,3328,6.573,3329,4.923,3330,6.573,3331,4.923,3332,4.923]],["title/components/IssueIconComponent.html",[0,0.083,140,0.954]],["body/components/IssueIconComponent.html",[0,0.154,1,1.016,2,0.872,3,0.115,4,0.106,5,0.81,6,1.124,7,1.102,8,1.058,9,0.097,11,0.975,16,0.975,17,1.451,18,1.384,19,0.975,20,0.827,21,0.996,23,0.996,25,0.124,30,0.872,37,0.679,40,0.008,41,0.543,42,0.115,45,0.74,49,0.379,53,0.203,54,0.367,56,0.133,57,0.02,62,1.361,88,0.81,92,1.102,93,1.307,94,1.28,95,0.844,96,1.778,97,1.102,98,2.027,99,0.995,100,0.862,101,1.042,102,1.361,103,1.016,104,1.102,105,1.016,106,0.975,107,1.102,108,1.016,109,1.102,110,0.956,111,0.975,112,0.976,113,0.995,114,0.956,115,1.085,116,1.665,117,0.975,118,0.08,119,0.995,120,0.984,121,1.016,122,1.016,123,0.917,124,1.102,125,0.975,126,1.102,127,1.016,128,1.102,129,1.016,130,1.102,131,0.995,132,1.102,133,0.995,134,1.102,135,0.712,136,1.102,137,0.995,138,0.475,139,1.102,140,1.64,141,1.102,142,1.016,143,1.665,144,1.016,145,1.102,146,1.016,147,1.665,148,1.016,149,1.102,150,1.037,151,1.102,152,0.975,153,1.102,154,1.016,155,1.102,156,0.956,157,0.936,158,1.102,159,1.016,160,1.417,161,1.476,162,1.016,163,1.102,164,0.975,165,0.552,166,1.102,167,0.995,168,1.016,169,1.08,170,1.016,171,1.102,172,0.995,173,0.995,174,0.975,175,1.102,176,0.995,177,1.102,178,0.936,179,0.793,180,0.975,181,1.102,182,0.975,183,1.28,184,0.995,185,1.016,186,0.653,187,0.956,188,0.776,189,1.016,190,1.016,191,0.995,192,1.102,193,1.016,194,0.917,195,1.102,196,1.016,197,1.102,198,0.956,199,0.995,200,1.016,201,0.917,202,1.102,203,1.016,204,0.681,205,0.956,206,0.995,207,1.102,208,0.975,209,1.102,210,0.975,211,1.102,212,0.956,213,1.102,214,0.956,215,1.102,216,0.956,217,1.037,218,1.102,219,0.005,220,0.005,223,0.414,254,0.999,262,1.799,267,3.042,303,3.968,304,3.334,305,3.042,306,3.679,309,3.844,310,1.44,311,2.271,315,5.044,537,1.41,606,0.653,621,4.187,725,1.476,735,4.638,764,2.41,789,1.536,795,2.869,841,2.727,974,2.957,1102,2.761,1104,2.103,1216,1.799,1276,1.799,2163,3.281,2254,4.016,2397,3.699,2398,3.699,2591,6.378,2649,5.044,2793,3.133,2798,2.662,3333,4.316,3334,7.358,3335,6.525,3336,7.86,3337,7.86,3338,4.87,3339,4.87,3340,4.87,3341,7.86,3342,6.525,3343,6.525,3344,4.87,3345,6.525,3346,4.87,3347,4.87,3348,4.87,3349,4.006,3350,4.316,3351,4.316]],["title/components/IssueItemComponent.html",[0,0.083,142,0.954]],["body/components/IssueItemComponent.html",[0,0.158,1,0.974,2,0.848,3,0.17,4,0.102,5,0.776,6,1.078,7,1.056,8,1.014,9,0.093,11,0.935,16,0.935,17,1.449,18,1.382,19,0.935,20,0.793,21,0.968,23,0.968,25,0.119,30,0.848,33,0.624,37,0.769,39,0.517,40,0.008,41,0.552,42,0.191,43,0.419,45,0.817,49,0.493,50,1.17,51,0.989,53,0.224,54,0.352,56,0.128,57,0.02,62,1.323,88,1.284,91,1.573,92,1.056,93,1.27,94,1.244,95,0.809,96,1.748,97,1.056,98,2.011,99,0.954,100,0.826,101,1.058,102,1.323,103,0.974,104,1.056,105,0.974,106,0.935,107,1.056,108,0.974,109,1.056,110,0.916,111,0.935,112,0.962,113,0.954,114,0.916,115,1.054,116,1.629,117,0.935,118,0.076,119,0.954,120,0.985,121,0.974,122,0.974,123,0.879,124,1.056,125,0.935,126,1.056,127,0.974,128,1.056,129,0.974,130,1.056,131,0.954,132,1.056,133,0.954,134,1.056,135,0.682,136,1.056,137,0.954,138,0.455,139,1.056,140,0.974,141,1.056,142,1.611,143,1.629,144,0.974,145,1.056,146,0.974,147,1.629,148,0.974,149,1.056,150,0.994,151,1.056,152,0.935,153,1.056,154,0.974,155,1.056,156,1.244,157,0.897,158,1.056,159,0.974,160,1.378,161,1.435,162,0.974,163,1.056,164,0.935,165,0.53,166,1.056,167,0.954,168,0.974,169,1.035,170,0.974,171,1.056,172,0.954,173,0.954,174,0.935,175,1.056,176,0.954,177,1.056,178,0.897,179,0.76,180,0.935,181,1.056,182,0.935,183,1.244,184,0.954,185,0.974,186,0.634,187,0.916,188,0.744,189,0.974,190,0.974,191,0.954,192,1.056,193,0.974,194,0.879,195,1.056,196,0.974,197,1.056,198,0.916,199,0.954,200,0.974,201,0.879,202,1.056,203,0.974,204,0.653,205,0.916,206,0.954,207,1.056,208,0.935,209,1.056,210,0.935,211,1.056,212,0.916,213,1.056,214,0.916,215,1.056,216,0.916,217,0.994,218,1.056,219,0.005,220,0.005,223,0.396,244,1.713,262,2.342,269,2.058,286,1.035,301,3.788,308,1.032,365,1.406,495,1.724,511,1.38,531,3.775,537,1.351,544,0.968,548,3.24,565,2.721,600,1.525,606,0.467,623,3.318,724,2.136,725,1.828,751,1.378,764,2.342,789,1.472,795,3.736,868,2.373,877,2.519,906,1.296,974,2.873,993,4.507,1104,2.321,1175,1.724,1177,2.115,1178,2.311,1194,2.058,1196,1.538,1263,3.595,1487,4.069,1582,3.936,1646,2.65,1647,2.385,1667,2.241,1711,5.44,1787,2.288,1859,2.996,2059,3.736,2254,2.385,2588,6.916,2649,5.47,2654,2.996,2655,3.527,2656,2.465,2706,2.552,2707,4.243,2756,2.465,2779,6.847,2793,2.241,2798,2.552,3069,3.24,3349,2.866,3352,2.866,3353,5.843,3354,4.069,3355,7.726,3356,8.078,3357,6.341,3358,4.668,3359,6.341,3360,4.668,3361,3.595,3362,4.138,3363,3.788,3364,4.138,3365,4.668,3366,4.668,3367,4.138,3368,4.668,3369,3.788]],["title/components/IssueLabelComponent.html",[0,0.083,144,0.954]],["body/components/IssueLabelComponent.html",[0,0.139,1,0.94,2,0.828,3,0.107,4,0.098,5,0.749,6,1.041,7,1.02,8,0.979,9,0.09,11,0.903,16,0.903,17,1.447,18,1.38,19,0.903,20,0.765,21,0.945,23,0.945,25,0.115,26,0.556,27,1.201,30,0.828,37,0.572,39,0.499,40,0.008,41,0.57,42,0.146,43,0.405,45,0.511,49,0.669,51,0.703,53,0.193,54,0.34,56,0.123,57,0.019,62,1.291,88,0.749,92,1.02,93,1.24,94,1.215,95,0.781,96,1.722,97,1.02,98,1.998,99,0.921,100,0.798,101,1.024,102,1.291,103,0.94,104,1.02,105,0.94,106,0.903,107,1.02,108,0.94,109,1.02,110,0.884,111,0.903,112,0.95,113,0.921,114,0.884,115,1.535,116,1.6,117,0.903,118,0.074,119,0.921,120,0.968,121,0.94,122,0.94,123,0.849,124,1.02,125,0.903,126,1.02,127,0.94,128,1.02,129,0.94,130,1.02,131,0.921,132,1.02,133,0.921,134,1.02,135,0.659,136,1.02,137,0.921,138,0.439,139,1.02,140,0.94,141,1.02,142,0.94,143,1.6,144,1.588,145,1.02,146,0.94,147,1.6,148,0.94,149,1.02,150,0.96,151,1.02,152,0.903,153,1.02,154,0.94,155,1.02,156,0.884,157,0.867,158,1.02,159,0.94,160,1.345,161,1.401,162,0.94,163,1.02,164,0.903,165,0.511,166,1.02,167,0.921,168,0.94,169,0.999,170,0.94,171,1.02,172,0.921,173,0.921,174,0.903,175,1.02,176,0.921,177,1.02,178,0.867,179,0.734,180,0.903,181,1.02,182,0.903,183,1.215,184,0.921,185,0.94,186,0.619,187,0.884,188,0.718,189,0.94,190,0.94,191,0.921,192,1.02,193,0.94,194,1.166,195,1.02,196,0.94,197,1.02,198,0.884,199,0.921,200,0.94,201,0.849,202,1.02,203,0.94,204,0.63,205,0.884,206,0.921,207,1.02,208,0.903,209,1.02,210,0.903,211,1.02,212,0.884,213,1.02,214,0.884,215,1.02,216,0.884,217,0.96,218,1.02,219,0.005,220,0.005,223,0.526,244,0.999,254,0.973,270,3.604,537,1.305,546,4.171,565,3.034,571,1.519,593,1.201,600,1.084,606,0.825,725,1.401,743,2.767,764,2.287,789,1.421,816,2.41,906,1.556,947,2.464,953,4.538,1067,2.005,1104,2.454,1175,1.665,1177,3.205,1178,2.231,1179,2.303,1196,1.485,1447,2.767,1467,2.555,1535,4.538,1539,5.343,1665,2.303,1809,3.405,1832,3.405,1833,3.405,1859,2.893,1866,3.036,2009,4.677,2061,3.405,2584,5.343,2649,4.538,2656,2.38,2659,4.677,2706,4.161,2707,2.656,2709,3.065,2793,2.973,2798,3.384,2804,3.658,2805,6.268,3267,3.036,3349,2.767,3370,3.658,3371,7.072,3372,6.192,3373,6.192,3374,4.508,3375,6.192,3376,4.508,3377,6.268,3378,6.178,3379,6.748,3380,3.658,3381,3.995,3382,4.508,3383,4.508,3384,3.658,3385,3.995,3386,4.508,3387,6.192,3388,6.192,3389,4.508,3390,4.508,3391,6.192,3392,3.995,3393,4.508,3394,4.508,3395,4.508,3396,4.508,3397,4.508,3398,4.508,3399,4.508,3400,4.508,3401,4.508,3402,4.508,3403,4.508,3404,4.508,3405,4.508,3406,4.508,3407,6.268,3408,7.613,3409,4.508,3410,4.508,3411,4.508,3412,4.508,3413,4.508,3414,4.508,3415,4.508,3416,4.508,3417,4.508,3418,4.508,3419,4.508,3420,4.508,3421,4.508,3422,6.192,3423,6.192,3424,3.658]],["title/components/IssueListComponent.html",[0,0.083,146,0.954]],["body/components/IssueListComponent.html",[0,0.163,1,0.575,2,0.999,3,0.065,4,0.06,5,0.458,6,0.637,7,0.624,8,0.599,9,0.055,11,0.552,14,0.881,15,1.474,16,0.552,17,1.414,18,1.343,19,0.552,20,1.268,21,0.658,23,0.658,25,0.07,26,0.387,27,1.494,30,0.576,33,0.576,36,2.647,37,0.836,39,0.721,40,0.008,41,0.52,42,0.212,43,0.757,45,0.871,46,0.995,49,0.667,50,1.108,51,0.936,53,0.26,54,0.208,55,0.851,56,0.075,57,0.012,59,1.327,60,0.766,62,0.899,78,1.222,87,0.784,88,0.458,92,0.624,93,0.864,94,0.846,95,0.478,96,1.358,97,0.624,98,1.777,99,0.564,100,0.488,101,0.889,102,0.899,103,0.575,104,0.624,105,0.575,106,0.552,107,0.624,108,0.575,109,0.624,110,0.541,111,0.552,112,0.993,113,0.564,114,0.541,115,0.883,116,1.201,117,0.552,118,0.138,119,0.881,120,0.978,121,0.575,122,0.575,123,0.812,124,0.624,125,0.552,126,0.624,127,0.575,128,0.624,129,0.575,130,0.624,131,0.564,132,0.624,133,0.564,134,0.624,135,0.403,136,0.624,137,0.564,138,0.269,139,0.624,140,0.575,141,0.624,142,0.575,143,1.201,144,0.575,145,0.624,146,1.252,147,1.201,148,0.575,149,0.624,150,0.587,151,0.624,152,0.552,153,0.624,154,0.575,155,0.624,156,0.541,157,0.53,158,0.624,159,0.575,160,0.937,161,0.975,162,0.575,163,0.624,164,0.552,165,0.739,166,0.624,167,0.564,168,0.575,169,0.611,170,0.575,171,0.624,172,0.564,173,0.564,174,0.552,175,0.624,176,0.564,177,0.624,178,1.154,179,1.216,180,0.552,181,0.624,182,0.552,183,1.042,184,0.564,185,0.575,186,0.691,187,0.541,188,0.439,189,0.575,190,0.575,191,0.564,192,0.624,193,0.575,194,0.519,195,0.624,196,0.575,197,0.624,198,0.541,199,0.564,200,0.575,201,0.519,202,0.624,203,0.575,204,0.911,205,0.541,206,0.564,207,0.624,208,0.552,209,0.624,210,0.552,211,0.624,212,0.541,213,0.624,214,0.541,215,0.624,216,0.541,217,0.587,218,0.624,219,0.004,220,0.005,223,0.652,225,2.134,231,0.759,241,2.34,244,0.956,246,2.278,251,1.043,254,0.732,264,2.767,267,1.286,277,1.893,303,3.685,304,2.713,305,2.476,306,3.258,308,0.702,315,3.408,365,1.702,406,1.365,407,1.324,432,2.238,495,1.018,511,2.516,519,2.277,525,0.734,531,3.271,533,0.72,534,3.245,544,0.917,546,4.389,565,1.183,571,1.833,593,1.149,606,0.747,609,1.756,640,2.195,651,2.54,725,1.201,760,1.215,761,2.109,764,1.593,767,2.666,776,1.789,783,3.129,785,2.723,788,1.961,789,1.36,790,1.152,791,1.324,803,1.095,806,4.331,811,1.456,816,1.604,820,1.365,826,1.954,828,2.476,829,1.215,833,1.152,834,2.549,835,1.409,836,0.909,837,1.77,838,1.77,840,3.776,841,3.636,861,1.96,865,2.134,868,2.147,871,2.647,873,1.286,877,2.109,881,4.268,887,3.329,894,3.822,899,3.408,902,5.04,906,0.881,1112,1.507,1180,1.324,1181,1.96,1198,1.183,1201,1.77,1202,1.456,1216,2.218,1220,1.507,1251,1.631,1264,2.883,1424,1.858,1472,2.895,1476,2.895,1512,3.384,1582,3.562,1586,4.253,1592,2.905,1593,1.365,1641,1.409,1657,3.686,1668,4.011,1677,1.96,1789,3.065,1972,1.858,2024,1.631,2181,2.203,2254,3.068,2303,2.444,2304,2.767,2329,3.068,2358,2.905,2397,2.444,2398,2.444,2399,2.54,2451,1.77,2565,2.083,2569,2.083,2570,6.411,2576,2.083,2717,3.916,2756,2.804,2811,5.322,2826,4.706,2876,5.605,2895,2.647,3021,3.822,3028,3.258,3361,2.444,3425,2.083,3426,4.631,3427,3.822,3428,4.011,3429,4.308,3430,3.499,3431,5.31,3432,4.308,3433,5.31,3434,5.31,3435,5.31,3436,4.308,3437,5.31,3438,5.31,3439,4.308,3440,3.822,3441,3.822,3442,4.312,3443,4.312,3444,6.004,3445,4.872,3446,6.004,3447,2.758,3448,4.312,3449,2.758,3450,2.758,3451,4.312,3452,2.758,3453,4.312,3454,2.758,3455,3.822,3456,4.312,3457,2.758,3458,4.312,3459,4.312,3460,2.444,3461,2.758,3462,3.822,3463,2.758,3464,4.312,3465,4.312,3466,3.822,3467,6.004,3468,4.312,3469,6.908,3470,3.822,3471,2.758,3472,6.398,3473,4.312,3474,3.822,3475,4.312,3476,2.758,3477,2.758,3478,2.444,3479,2.758,3480,2.758,3481,2.758,3482,2.758,3483,2.758,3484,4.308,3485,2.758,3486,2.758,3487,4.308,3488,3.499,3489,2.758,3490,2.758,3491,2.758,3492,4.308,3493,3.499,3494,2.758,3495,2.758,3496,3.499,3497,2.758,3498,5.31,3499,2.758,3500,2.444,3501,5.31,3502,4.312,3503,2.758,3504,3.822,3505,6.516,3506,4.312,3507,2.444,3508,5.31,3509,2.758,3510,2.758,3511,4.308,3512,2.758,3513,2.758,3514,2.758,3515,2.758,3516,4.312,3517,4.312,3518,2.758,3519,2.083,3520,2.758,3521,2.758,3522,2.758,3523,2.758,3524,2.758,3525,2.238,3526,2.758,3527,2.758,3528,2.238,3529,2.238,3530,2.238,3531,2.238,3532,2.758,3533,2.758,3534,2.238,3535,2.238,3536,2.238,3537,2.758,3538,2.758,3539,2.758,3540,2.758,3541,2.758,3542,6.004,3543,2.758,3544,5.31,3545,2.758,3546,2.758,3547,2.444,3548,2.758,3549,2.758,3550,4.312,3551,2.758,3552,6.516,3553,4.312,3554,4.312,3555,2.758,3556,2.758,3557,4.312,3558,2.758,3559,4.312,3560,2.758,3561,2.758,3562,2.083,3563,2.444,3564,4.312,3565,2.758,3566,2.758,3567,4.312,3568,4.312,3569,4.312,3570,4.312,3571,2.444,3572,2.444,3573,2.444,3574,2.083,3575,2.444,3576,2.444,3577,2.444]],["title/components/IssueLocationComponent.html",[0,0.083,148,0.954]],["body/components/IssueLocationComponent.html",[0,0.162,1,0.969,2,0.845,3,0.11,4,0.101,5,0.773,6,1.073,7,1.051,8,1.01,9,0.093,11,0.931,16,0.931,17,1.449,18,1.382,19,0.931,20,0.789,21,0.965,23,0.965,25,0.118,30,0.845,33,0.621,37,0.745,39,0.514,40,0.008,41,0.551,42,0.17,43,0.418,45,0.875,46,0.965,49,0.491,53,0.224,54,0.35,56,0.127,57,0.019,62,1.319,78,1.792,88,0.773,92,1.051,93,1.266,94,1.24,95,0.806,96,1.744,97,1.051,98,2.009,99,0.95,100,0.823,101,1.057,102,1.319,103,0.969,104,1.051,105,0.969,106,0.931,107,1.051,108,0.969,109,1.051,110,0.912,111,0.931,112,0.96,113,0.95,114,0.912,115,1.051,116,1.625,117,0.931,118,0.118,119,0.95,120,0.971,121,0.969,122,0.969,123,0.875,124,1.051,125,0.931,126,1.051,127,0.969,128,1.051,129,0.969,130,1.051,131,0.95,132,1.051,133,0.95,134,1.051,135,0.679,136,1.051,137,0.95,138,0.453,139,1.051,140,0.969,141,1.051,142,0.969,143,1.625,144,0.969,145,1.051,146,0.969,147,1.625,148,1.608,149,1.051,150,0.989,151,1.051,152,0.931,153,1.051,154,0.969,155,1.625,156,0.912,157,0.893,158,1.051,159,0.969,160,1.373,161,1.43,162,0.969,163,1.051,164,0.931,165,0.527,166,1.051,167,0.95,168,0.969,169,1.03,170,0.969,171,1.051,172,0.95,173,0.95,174,0.931,175,1.051,176,0.95,177,1.051,178,0.893,179,0.756,180,0.931,181,1.051,182,0.931,183,1.24,184,0.95,185,0.969,186,0.632,187,0.912,188,0.74,189,0.969,190,0.969,191,0.95,192,1.051,193,0.969,194,1.452,195,1.051,196,0.969,197,1.051,198,0.912,199,0.95,200,0.969,201,0.875,202,1.051,203,0.969,204,0.65,205,0.912,206,0.95,207,1.051,208,0.931,209,1.051,210,0.931,211,1.051,212,0.912,213,1.051,214,0.912,215,1.051,216,0.912,217,0.989,218,1.051,219,0.005,220,0.005,223,0.395,262,1.716,269,3.167,270,3.126,286,1.03,308,1.029,495,1.716,531,3.77,544,0.965,600,1.52,606,0.465,623,3.303,640,2.13,725,1.625,764,2.335,789,1.465,833,1.942,868,2.367,906,1.292,911,4.119,974,2.865,1104,1.498,1175,1.716,1177,3.77,1178,3.556,1179,3.23,1180,3.035,1185,4.119,1194,2.786,1195,2.642,1196,2.083,1487,4.057,1548,4.572,1640,4.9,1646,2.642,1667,2.231,1787,2.281,2605,6.751,2649,5.34,2707,4.752,2709,2.3,2710,3.303,2712,3.13,2756,3.338,2792,4.119,2793,2.231,2798,2.54,3137,4.057,3361,3.584,3424,5.83,3455,5.603,3578,4.119,3579,7.185,3580,6.322,3581,7.711,3582,7.711,3583,6.322,3584,7.185,3585,4.647,3586,4.647,3587,6.322,3588,4.647,3589,6.322,3590,4.647,3591,4.647,3592,6.322,3593,6.322,3594,7.711,3595,3.771,3596,3.303,3597,4.647,3598,4.647,3599,4.647,3600,3.303,3601,4.647,3602,4.647,3603,6.322,3604,4.647,3605,4.647]],["title/interfaces/IssueNode.html",[118,0.075,1211,2.694]],["body/interfaces/IssueNode.html",[0,0.152,3,0.12,4,0.174,5,1.117,9,0.15,25,0.13,26,0.604,40,0.008,42,0.22,43,0.604,49,0.73,53,0.249,56,0.184,57,0.034,87,0.853,101,0.8,112,0.8,118,0.151,120,0.69,135,0.982,138,0.733,165,1.015,186,0.832,188,1.071,219,0.006,220,0.006,223,0.432,231,1.189,254,0.62,277,2.694,289,4.229,309,2.999,511,1.505,525,1.356,537,1.474,544,1.366,593,2.355,606,0.884,620,2.369,719,2.482,724,2.264,817,2.883,836,1.677,906,1.807,952,3.959,1067,1.905,1068,3.343,1071,3.679,1072,3.432,1095,1.925,1198,3.227,1207,4.432,1208,2.307,1209,2.885,1210,4.762,1211,5.132,1212,3.612,1213,3.226,1214,2.782,1215,2.444,1216,3.266,1217,3.226,1218,2.601,1219,2.688,1220,4.112,1221,4.511,1222,4.432,1223,3.125,1224,3.125,1225,3.125,1226,3.125,1227,3.125,1228,3.125,1229,3.125,1230,3.125,1231,3.133,1232,3.125,1233,3.125,1234,5.106,1235,3.612,1236,3.959,1237,3.959,1238,2.883,1239,4.373,1240,4.312,1241,4.312,1242,2.264,1243,3.133,1244,3.226,1245,4.125,1246,3.673,1247,3.133,1248,3.673,1249,4.125,1250,4.312,1251,2.542,1252,4.312,1253,3.433,1254,4.312,1255,2.962,1256,4.312,1257,3.673,1258,4.312,1259,4.125,1260,3.267,1261,4.264,1262,2.688,1263,2.885,1264,2.444,1265,3.809,1266,3.267,1267,3.267,1268,3.267,1269,3.959,1270,3.267,1271,4.312,1272,3.267,1273,3.267,1274,3.267,1275,3.125,1276,1.88,1277,3.809,1278,4.827,1279,3.267,1280,3.267,1281,4.312,1282,3.267,1283,4.312,1284,4.312,1285,3.267,1286,3.267,1287,4.112,1288,4.312,1289,3.125,1290,4.125,1291,4.312,1292,3.267,1293,4.535,1294,3.548,1295,3.267,1296,3.125,1297,3.267,1298,3.267,1299,3.267,1300,3.125,1301,3.959,1302,3.125,1303,2.782,1304,3.125,1305,2.688]],["title/injectables/IssueStoreService.html",[528,1.1,3606,3.711]],["body/injectables/IssueStoreService.html",[3,0.113,4,0.104,9,0.146,25,0.122,30,0.863,33,0.863,37,0.852,39,1.021,40,0.008,41,0.612,42,0.218,43,0.829,45,1.042,49,0.653,53,0.243,54,0.361,56,0.131,57,0.02,59,1.433,61,2.924,112,0.768,219,0.005,220,0.005,223,0.407,224,2.696,231,0.922,274,1.447,511,1.908,528,1.551,533,1.25,536,2.002,537,1.386,541,2.844,543,2.746,544,0.985,551,2.17,606,0.919,645,2.002,690,1.416,725,1.651,751,1.402,818,3.527,982,5.718,1237,3.801,1247,3.008,1308,3.073,1319,4.346,1344,4.245,1357,4.245,1426,3.098,1427,4.141,1590,6.335,2121,4.874,2614,5.235,2615,4.793,2616,4.874,2666,5.718,2701,5.718,3606,5.235,3607,8.213,3608,6.452,3609,3.961,3610,6.452,3611,6.452,3612,6.452,3613,6.452,3614,6.452,3615,6.452,3616,6.452,3617,6.452,3618,6.452,3619,6.452,3620,6.452,3621,4.789,3622,7.807,3623,7.296,3624,7.807,3625,7.296,3626,7.807,3627,7.296,3628,7.807,3629,7.296,3630,7.807,3631,7.296,3632,7.807,3633,7.296,3634,7.807,3635,7.296,3636,7.807,3637,7.296,3638,7.807,3639,7.296,3640,7.807,3641,7.296,3642,7.807,3643,7.296,3644,7.807,3645,7.296,3646,7.807,3647,7.807,3648,7.807,3649,4.789,3650,6.452,3651,6.452,3652,7.807,3653,4.789,3654,6.452,3655,6.452,3656,8.395,3657,4.789,3658,6.452,3659,7.807,3660,4.789,3661,6.452,3662,6.452,3663,7.807,3664,4.789,3665,6.452,3666,6.452,3667,4.789,3668,6.452,3669,6.452,3670,8.395,3671,4.789,3672,6.452,3673,4.789,3674,6.452,3675,4.789,3676,6.452,3677,8.395,3678,6.452,3679,7.807,3680,4.789,3681,6.452,3682,6.452,3683,7.807,3684,4.789,3685,6.452,3686,6.452,3687,7.807,3688,4.789,3689,6.452,3690,6.452,3691,8.395,3692,6.452,3693,8.395,3694,4.789,3695,4.789,3696,4.789,3697,4.789,3698,4.789,3699,4.789,3700,4.789,3701,4.789,3702,4.789,3703,4.789,3704,4.789,3705,4.789,3706,4.789,3707,4.789,3708,4.789,3709,4.789,3710,4.789]],["title/directives/ItemDirective.html",[95,0.793,206,0.935]],["body/directives/ItemDirective.html",[2,1.118,3,0.171,4,0.158,9,0.145,16,1.451,17,1.249,40,0.008,53,0.226,54,0.546,56,0.198,57,0.03,88,1.39,95,1.57,205,1.421,206,1.709,219,0.007,220,0.007,223,0.615,396,4.739,635,2.181,1411,5.942,3711,6.42,3712,7.409,3713,8.36,3714,8.36,3715,7.409]],["title/components/LabelSearchComponent.html",[0,0.083,152,0.916]],["body/components/LabelSearchComponent.html",[0,0.147,1,0.883,2,0.792,3,0.1,4,0.092,5,0.704,6,0.977,7,0.957,8,0.919,9,0.085,11,0.848,14,1.211,15,1.899,16,0.848,17,1.444,18,1.376,19,0.848,20,0.719,21,0.905,23,0.905,25,0.108,26,0.532,27,1.161,30,0.792,33,0.566,37,0.795,39,0.656,40,0.008,41,0.561,42,0.184,43,0.532,45,0.776,46,0.905,49,0.461,50,1.439,51,1.295,53,0.243,54,0.319,56,0.162,57,0.018,59,1.156,60,1.175,62,1.236,82,2.493,87,0.841,88,0.985,92,0.957,93,1.187,94,1.454,95,0.734,96,1.676,97,0.957,98,1.972,99,0.865,100,0.749,101,1.008,102,1.236,103,0.883,104,0.957,105,0.883,106,0.848,107,0.957,108,0.883,109,0.957,110,0.83,111,0.848,112,0.929,113,0.865,114,0.83,115,1.478,116,1.547,117,0.848,118,0.112,119,0.865,120,0.936,121,0.883,122,0.883,123,0.797,124,0.957,125,0.848,126,0.957,127,0.883,128,0.957,129,0.883,130,0.957,131,0.865,132,0.957,133,0.865,134,0.957,135,0.619,136,0.957,137,0.865,138,0.666,139,0.957,140,0.883,141,0.957,142,0.883,143,1.547,144,0.883,145,0.957,146,0.883,147,1.547,148,0.883,149,0.957,150,0.901,151,0.957,152,1.484,153,0.957,154,0.883,155,0.957,156,0.83,157,0.814,158,0.957,159,0.883,160,1.287,161,1.341,162,0.883,163,0.957,164,0.848,165,0.48,166,0.957,167,0.865,168,0.883,169,0.938,170,0.883,171,0.957,172,0.865,173,0.865,174,0.848,175,0.957,176,0.865,177,0.957,178,0.814,179,0.689,180,0.848,181,0.957,182,0.848,183,1.163,184,0.865,185,0.883,186,0.593,187,0.83,188,0.674,189,0.883,190,0.883,191,0.865,192,0.957,193,0.883,194,1.563,195,0.957,196,0.883,197,0.957,198,0.83,199,0.865,200,0.883,201,1.116,202,0.957,203,0.883,204,0.592,205,0.83,206,0.865,207,0.957,208,0.848,209,0.957,210,0.848,211,0.957,212,0.83,213,0.957,214,0.83,215,0.957,216,0.83,217,0.901,218,0.957,219,0.005,220,0.005,223,0.359,228,2.157,244,1.516,254,0.516,262,1.563,286,0.938,308,0.689,311,1.973,365,0.938,383,3.733,426,4.264,511,1.752,533,1.104,535,2.851,536,1.769,540,1.918,543,2.304,552,3.913,572,3.13,606,0.423,613,3.24,615,3.028,679,4.389,683,4.029,808,2.399,812,1.364,821,3.992,903,2.399,906,0.865,1045,1.395,1104,1.91,1177,1.918,1184,3.434,1198,2.543,1255,2.612,1405,2.493,1476,3.446,1478,2.716,1506,2.543,1512,3.658,1541,3.008,1644,3.492,1923,3.638,2173,4.213,2181,3.028,2187,5.006,2188,6.197,2189,5.353,2190,3.008,2191,4.991,2192,5.591,2193,4.809,2194,4.809,2195,4.809,2196,5.55,2197,3.197,2198,4.991,2199,3.434,2200,4.419,2201,3.492,2202,3.992,2203,3.804,2204,5.544,2205,4.809,2206,5.55,2207,5.55,2208,5.55,2209,5.167,2210,5.167,2211,4.809,2212,4.389,2213,3.434,2214,4.809,2215,2.598,2216,4.809,2217,6.012,2218,3.197,2219,2.716,2220,4.607,2221,3.197,2222,3.434,2223,3.434,2224,3.434,2225,3.434,2226,3.434,2227,3.434,2228,3.197,2229,3.434,2230,6.012,2231,3.434,2232,3.434,2233,4.809,2234,3.434,2235,3.434,2236,3.434,2237,3.008,2238,3.992,2709,2.095,3716,5.927,3717,4.233,3718,5.927,3719,4.233,3720,4.233,3721,4.233,3722,4.233,3723,4.233,3724,4.233,3725,4.233,3726,5.927,3727,3.751]],["title/injectables/LabelStoreService.html",[528,1.1,2198,3.08]],["body/injectables/LabelStoreService.html",[3,0.144,4,0.133,9,0.122,25,0.156,30,1.009,33,0.816,37,0.756,39,0.907,40,0.008,41,0.602,42,0.202,43,0.736,45,0.929,49,0.719,50,1.126,51,0.952,53,0.267,54,0.46,56,0.224,57,0.026,59,1.278,101,1.019,115,1.423,138,0.735,219,0.006,220,0.007,223,0.641,228,2.699,270,2.365,274,1.843,286,1.353,310,2.231,528,1.814,533,1.592,536,2.55,543,3.059,544,1.342,545,2.641,551,2.765,567,6.944,571,2.01,593,1.626,606,0.856,645,2.55,690,1.805,816,1.843,833,2.55,868,2.82,1308,3.916,1312,4.125,1476,3.471,1512,3.326,2024,3.098,2056,5.364,2192,4.111,2198,5.083,2200,4.125,2201,4.446,2228,4.61,2237,5.364,2378,5.518,2401,3.746,3125,5.364,3728,6.944,3729,7.546,3730,7.546,3731,6.103,3732,8.958,3733,6.103,3734,7.546,3735,6.103,3736,7.546,3737,9.307,3738,6.103,3739,7.546,3740,6.103,3741,6.103,3742,6.103,3743,6.103,3744,6.103,3745,6.103,3746,6.103]],["title/classes/LayoutNode.html",[57,0.019,3747,3.25]],["body/classes/LayoutNode.html",[0,0.128,3,0.105,4,0.183,9,0.089,25,0.113,26,0.55,27,1.522,30,0.819,33,0.819,37,0.839,39,0.776,40,0.008,41,0.465,42,0.213,43,0.63,45,0.858,46,1.071,49,0.588,50,1.624,51,1.357,53,0.138,57,0.029,59,0.955,75,2.725,76,3.353,87,0.972,100,0.786,112,0.9,118,0.073,138,0.683,165,1.076,186,0.794,219,0.005,220,0.005,223,0.596,244,0.984,254,1.025,289,4.062,308,0.997,544,1.211,549,1.904,559,3.704,564,3.353,569,2.344,571,2.064,606,0.702,653,4.867,704,3.34,719,1.639,727,3.952,740,2.615,775,2.426,817,2.628,826,3.179,836,2.823,863,2.344,872,4.986,887,2.268,906,1.719,915,3.601,923,2.426,927,3.353,941,2.776,1034,2.725,1055,3.472,1067,2.654,1068,3.317,1071,3.232,1072,3.245,1073,3.155,1094,3.155,1095,1.679,1175,3.106,1186,3.353,1242,3.061,1243,2.856,1247,2.856,1264,2.131,1287,3.834,1537,4.628,1619,2.426,1631,2.615,1802,3.472,1826,3.353,1864,2.99,1867,2.99,1882,4.354,1886,4.354,1986,4.456,2005,3.155,2057,3.155,2712,4.126,2929,6.439,2930,5.714,3045,4.628,3267,5.527,3279,4.628,3519,3.353,3562,5.714,3596,3.155,3747,5.376,3748,7.413,3749,3.601,3750,6.126,3751,6.126,3752,6.126,3753,6.126,3754,6.126,3755,6.126,3756,6.126,3757,6.126,3758,6.126,3759,6.126,3760,6.217,3761,6.704,3762,6.126,3763,4.438,3764,6.658,3765,4.438,3766,3.934,3767,4.438,3768,4.438,3769,6.126,3770,4.438,3771,4.438,3772,4.438,3773,6.704,3774,4.438,3775,4.438,3776,4.438,3777,3.155,3778,4.438,3779,6.902,3780,4.438,3781,5.429,3782,4.438,3783,5.429,3784,6.217,3785,4.97,3786,5.429,3787,5.429,3788,4.438,3789,3.934,3790,3.934,3791,3.934,3792,3.934,3793,3.934,3794,3.934,3795,6.217,3796,5.692,3797,3.934,3798,3.934,3799,5.429,3800,3.934,3801,3.934,3802,3.934,3803,3.934,3804,3.934,3805,3.934,3806,3.934,3807,3.934,3808,3.934,3809,3.934,3810,3.934,3811,3.601,3812,3.155,3813,3.934,3814,3.934,3815,3.934,3816,3.934,3817,6.217,3818,5.429,3819,3.934,3820,3.934,3821,3.934,3822,5.429,3823,3.934,3824,5.692,3825,3.934,3826,3.934,3827,3.934,3828,3.934,3829,3.934,3830,3.601,3831,3.934,3832,3.934,3833,3.934,3834,3.934,3835,3.934,3836,3.353,3837,3.934,3838,3.934,3839,3.934,3840,3.934,3841,3.934,3842,3.934,3843,3.934,3844,3.934,3845,3.934,3846,5.429]],["title/components/LinkedIssueItemComponent.html",[0,0.083,154,0.954]],["body/components/LinkedIssueItemComponent.html",[0,0.144,1,0.916,2,0.932,3,0.104,4,0.096,5,0.73,6,1.013,7,0.993,8,0.954,9,0.088,11,0.879,14,1.242,15,1.936,16,0.879,17,1.446,18,1.378,19,0.879,20,0.745,21,0.928,23,0.928,25,0.112,26,0.546,27,1.278,30,0.813,33,0.587,37,0.73,39,0.486,40,0.008,41,0.542,42,0.187,43,0.394,45,0.498,46,0.67,49,0.585,50,1.122,53,0.261,54,0.331,56,0.12,57,0.018,59,0.948,60,1.219,62,1.268,82,2.586,86,5.687,88,1.159,91,2.048,92,0.993,93,1.217,94,1.193,95,0.761,96,1.703,97,0.993,98,1.987,99,0.897,100,0.777,101,1.046,102,1.268,103,0.916,104,0.993,105,0.916,106,0.879,107,0.993,108,0.916,109,0.993,110,0.861,111,0.879,112,0.941,113,0.897,114,0.861,115,1.011,116,1.578,117,0.879,118,0.072,119,0.897,120,0.988,121,0.916,122,0.916,123,0.827,124,0.993,125,0.879,126,0.993,127,0.916,128,0.993,129,0.916,130,0.993,131,0.897,132,0.993,133,0.897,134,0.993,135,0.642,136,0.993,137,0.897,138,0.428,139,0.993,140,0.916,141,0.993,142,0.916,143,1.578,144,0.916,145,0.993,146,0.916,147,1.578,148,0.916,149,0.993,150,0.934,151,0.993,152,0.879,153,0.993,154,1.57,155,1.578,156,1.78,157,0.844,158,0.993,159,0.916,160,1.321,161,1.375,162,0.916,163,0.993,164,0.879,165,0.498,166,0.993,167,0.897,168,0.916,169,0.973,170,0.916,171,0.993,172,0.897,173,0.897,174,0.879,175,0.993,176,0.897,177,0.993,178,0.844,179,0.714,180,0.879,181,0.993,182,0.879,183,1.193,184,0.897,185,0.916,186,0.608,187,0.861,188,0.699,189,0.916,190,0.916,191,0.897,192,0.993,193,0.916,194,1.418,195,0.993,196,0.916,197,0.993,198,0.861,199,0.897,200,0.916,201,1.145,202,0.993,203,0.916,204,0.975,205,0.861,206,0.897,207,0.993,208,0.879,209,0.993,210,0.879,211,0.993,212,0.861,213,0.993,214,0.861,215,0.993,216,0.861,217,0.934,218,0.993,219,0.005,220,0.005,223,0.373,225,3.009,232,2.77,261,2.245,262,2.245,286,0.973,311,2.047,365,1.348,463,6.635,495,1.621,511,1.298,531,3.799,533,1.145,544,1.065,568,3.066,580,3.106,640,2.048,725,1.578,751,1.515,759,3.106,761,2.77,764,2.245,766,2.695,767,3.02,778,3.318,783,2.919,785,2.541,788,2.576,789,1.917,790,1.835,791,2.108,803,1.744,806,3.926,833,1.835,836,1.446,868,2.298,974,2.755,993,4.321,994,4.267,1014,2.003,1192,2.318,1194,2.68,1195,1.835,1196,2.003,1201,3.901,1263,3.446,1487,3.901,1620,2.695,1681,5.388,1831,2.817,2084,2.488,2312,3.562,2711,3.12,2713,3.562,2756,2.318,2781,4.933,2806,3.316,2939,2.488,3352,2.695,3353,5.659,3354,3.901,3361,3.446,3363,3.562,3364,3.891,3426,3.12,3847,7.905,3848,6.079,3849,7.528,3850,6.079,3851,4.321,3852,6.974,3853,7.528,3854,4.39,3855,6.079,3856,4.39,3857,4.39,3858,5.388,3859,5.388,3860,4.39,3861,4.39,3862,4.39,3863,4.39,3864,6.079,3865,6.079,3866,3.891,3867,4.39,3868,4.39,3869,4.39,3870,6.079,3871,4.39,3872,4.39,3873,4.39,3874,4.39,3875,3.891,3876,4.39,3877,4.39]],["title/interfaces/ListId.html",[118,0.075,1472,1.772]],["body/interfaces/ListId.html",[0,0.149,2,0.641,3,0.113,4,0.105,9,0.096,25,0.122,26,0.58,40,0.008,42,0.224,45,0.544,49,0.667,51,1.139,56,0.251,80,2.926,84,1.905,87,0.733,101,0.869,115,0.797,118,0.12,120,0.749,123,1.471,156,1.267,165,1.08,204,0.903,219,0.005,220,0.005,223,0.407,228,2.648,231,0.923,254,0.952,274,1.951,310,1.418,365,2.062,454,2.004,508,2.303,511,2.538,525,1.277,534,2.762,544,1.453,545,1.48,562,3.23,565,2.058,571,2.001,572,2.532,588,4.795,593,2.172,600,1.153,606,0.815,635,1.685,690,1.418,751,1.896,760,3.702,776,2.94,812,2.353,818,2.621,827,3.409,835,3.991,836,2.406,841,3.265,864,3.409,889,2.173,941,2.173,964,2.944,977,3.218,1008,3.409,1067,1.831,1076,4.428,1231,3.011,1248,2.621,1251,1.814,1264,3.101,1312,2.621,1369,2.236,1426,3.101,1472,3.027,1476,1.858,1477,2.114,1485,3.299,1506,2.058,1586,2.825,1620,3.964,1758,2.718,1759,3.991,1787,1.73,1820,2.699,1870,3.23,1889,2.846,1942,3.964,1944,3.991,1949,3.964,1951,2.374,2020,3.078,2055,3.661,2064,2.532,2131,2.825,2132,4.301,2180,2.944,2181,2.45,2329,2.45,2444,4.761,2678,3.23,2679,3.078,2684,4.59,2866,4.918,2871,4.144,2887,3.23,2888,3.23,3878,3.078,3879,5.924,3880,5.924,3881,5.24,3882,4.879,3883,5.901,3884,3.623,3885,3.409,3886,3.409,3887,3.891,3888,3.891,3889,3.891,3890,3.891,3891,3.623,3892,5.24,3893,3.078,3894,5.24,3895,5.24,3896,5.24,3897,5.24,3898,3.891,3899,3.891,3900,5.24,3901,3.891,3902,3.623,3903,3.891,3904,3.891,3905,3.891,3906,3.891,3907,3.891,3908,3.891,3909,3.891,3910,3.891,3911,3.891,3912,3.623,3913,3.409,3914,3.623,3915,3.623,3916,3.623,3917,3.623,3918,3.623,3919,3.409,3920,3.891,3921,3.891,3922,3.891,3923,3.891,3924,3.891,3925,3.891,3926,3.891,3927,3.891]],["title/interfaces/ListParams.html",[118,0.075,1758,2.592]],["body/interfaces/ListParams.html",[0,0.134,2,0.651,3,0.115,4,0.106,9,0.097,25,0.124,26,0.586,40,0.008,42,0.222,43,0.706,45,0.552,49,0.67,51,1.148,56,0.252,80,2.207,84,2.592,87,0.74,101,0.777,115,0.81,118,0.12,120,0.67,123,1.688,156,0.956,165,1.069,204,0.912,219,0.005,220,0.005,223,0.414,228,2.584,231,0.933,254,0.958,274,1.971,310,1.44,365,2.03,454,2.035,508,2.338,511,2.324,525,1.297,534,3.312,544,1.451,545,1.503,562,4.395,565,2.8,571,2.011,572,2.572,588,4.006,593,2.183,600,1.769,606,0.82,635,1.703,690,1.44,751,1.902,760,3.612,776,2.95,812,2.372,818,2.662,827,3.462,835,3.334,836,2.424,841,3.285,864,3.462,889,3.562,941,2.207,964,2.99,977,3.243,1008,3.462,1067,2.323,1076,3.699,1231,3.042,1248,2.662,1251,1.842,1264,2.338,1312,2.662,1369,2.271,1426,3.133,1472,2.851,1476,1.887,1477,2.147,1485,3.334,1506,2.8,1586,2.869,1620,2.99,1758,3.699,1759,4.022,1787,1.757,1820,2.727,1870,3.281,1889,2.876,1942,4.006,1944,3.334,1949,5.179,1951,3.642,2020,3.125,2055,2.761,2064,2.572,2131,2.869,2132,4.335,2180,2.99,2181,2.488,2329,2.488,2444,4.171,2678,3.281,2679,3.125,2684,3.462,2866,4.395,2871,3.125,2887,3.281,2888,3.281,3878,3.125,3879,5.294,3880,5.294,3881,3.952,3882,4.929,3883,5.938,3884,3.679,3885,3.462,3886,3.462,3887,3.952,3888,3.952,3889,3.952,3890,3.952,3891,3.679,3892,5.294,3893,3.125,3894,5.294,3895,5.294,3896,5.294,3897,5.294,3898,3.952,3899,3.952,3900,5.294,3901,3.952,3902,3.679,3903,3.952,3904,3.952,3905,3.952,3906,3.952,3907,3.952,3908,3.952,3909,3.952,3910,3.952,3911,3.952,3912,3.679,3913,3.462,3914,3.679,3915,3.679,3916,3.679,3917,3.679,3918,3.679,3919,3.462,3920,5.294,3921,3.952,3922,3.952,3923,3.952,3924,3.952,3925,3.952,3926,3.952,3927,3.952]],["title/components/LoginComponent.html",[0,0.083,157,0.879]],["body/components/LoginComponent.html",[0,0.15,1,0.929,2,0.821,3,0.105,4,0.097,5,0.74,6,1.028,7,1.007,8,0.967,9,0.089,11,0.892,14,1.255,15,1.951,16,0.892,17,1.446,18,1.379,19,1.407,20,0.756,21,0.937,23,0.937,25,0.113,26,0.552,30,0.821,33,0.595,37,0.777,39,0.493,40,0.008,41,0.544,42,0.166,43,0.4,45,0.505,46,1.072,49,0.477,50,1.296,51,1.096,53,0.256,54,0.336,56,0.122,57,0.019,59,1.096,60,1.236,62,1.28,78,1.74,81,4.196,84,1.768,85,1.606,88,0.74,89,1.725,90,2.524,91,1.5,92,1.007,93,1.229,94,1.205,95,0.772,96,1.713,97,1.007,98,1.993,99,0.91,100,0.788,101,1.021,102,1.28,103,0.929,104,1.007,105,0.929,106,0.892,107,1.007,108,0.929,109,1.007,110,0.874,111,0.892,112,0.946,113,0.91,114,0.874,115,1.021,116,1.589,117,0.892,118,0.073,119,0.91,120,0.943,121,0.929,122,0.929,123,0.838,124,1.007,125,0.892,126,1.007,127,0.929,128,1.007,129,0.929,130,1.007,131,0.91,132,1.007,133,0.91,134,1.007,135,0.651,136,1.007,137,0.91,138,0.434,139,1.007,140,0.929,141,1.007,142,0.929,143,1.589,144,0.929,145,1.007,146,0.929,147,1.589,148,0.929,149,1.007,150,0.948,151,1.007,152,0.892,153,1.007,154,0.929,155,1.007,156,0.874,157,1.456,158,1.007,159,0.929,160,1.334,161,1.389,162,0.929,163,1.007,164,0.892,165,0.505,166,1.007,167,0.91,168,0.929,169,0.987,170,0.929,171,1.007,172,0.91,173,0.91,174,0.892,175,1.007,176,0.91,177,1.007,178,0.856,179,0.725,180,0.892,181,1.007,182,0.892,183,1.205,184,0.91,185,0.929,186,0.757,187,0.874,188,0.709,189,0.929,190,0.929,191,0.91,192,1.007,193,0.929,194,0.838,195,1.007,196,0.929,197,1.007,198,0.874,199,0.91,200,0.929,201,0.838,202,1.007,203,0.929,204,1.111,205,0.874,206,0.91,207,1.007,208,0.892,209,1.007,210,0.892,211,1.007,212,0.874,213,1.007,214,0.874,215,1.007,216,0.874,217,0.948,218,1.007,219,0.005,220,0.005,223,0.378,231,0.636,244,1.901,247,3.039,250,2.076,251,1.684,274,1.854,286,0.987,308,0.725,310,1.815,376,3.164,495,1.644,517,6.186,518,4.994,520,4.981,531,3.814,536,1.861,548,3.136,597,3.355,613,3.355,624,4.381,643,6.227,666,5.352,673,4.981,676,4.343,751,0.967,770,2.733,840,3.355,906,0.91,955,2.351,1045,2.495,1176,3.946,1196,2.495,1202,2.351,1255,3.338,1276,2.267,1402,4.86,1408,4.509,1544,2.433,1556,4.733,1646,1.861,1667,2.138,2494,3.946,2528,2.857,2536,3.946,2717,4.293,2788,3.363,3392,5.441,3928,3.946,3929,5.441,3930,7.574,3931,6.139,3932,7.026,3933,6.139,3934,7.026,3935,4.733,3936,7.026,3937,6.227,3938,6.712,3939,3.612,3940,4.452,3941,4.452,3942,5.441,3943,6.139,3944,6.139,3945,6.139,3946,7.026,3947,5.441,3948,4.452,3949,4.452,3950,4.452,3951,4.452,3952,6.227,3953,4.452,3954,6.139,3955,4.452,3956,4.452,3957,4.452,3958,7.026,3959,4.452,3960,4.452,3961,3.946,3962,4.452,3963,6.139,3964,4.452,3965,6.139,3966,4.452,3967,3.946,3968,3.946,3969,4.452,3970,4.452,3971,4.981,3972,4.452,3973,4.452]],["title/components/MarkdownEditorComponent.html",[0,0.083,159,0.954]],["body/components/MarkdownEditorComponent.html",[0,0.16,1,1.013,2,0.871,3,0.115,4,0.106,5,0.807,6,1.121,7,1.099,8,1.055,9,0.097,11,0.973,16,0.973,17,1.451,18,1.384,19,0.973,20,0.825,21,0.994,23,0.994,25,0.124,26,0.585,30,0.871,37,0.725,40,0.008,41,0.543,42,0.174,45,0.551,46,0.741,49,0.506,50,0.896,51,0.758,53,0.151,54,0.366,56,0.133,57,0.02,62,1.359,78,1.377,87,0.551,88,0.807,92,1.099,93,1.304,94,1.278,95,0.842,96,1.776,97,1.099,98,2.026,99,0.993,100,0.86,101,1.042,102,1.359,103,1.013,104,1.099,105,1.013,106,0.973,107,1.099,108,1.013,109,1.099,110,0.953,111,0.973,112,0.975,113,0.993,114,0.953,115,1.083,116,1.662,117,0.973,118,0.08,119,0.993,120,0.953,121,1.013,122,1.013,123,0.915,124,1.099,125,0.973,126,1.099,127,1.013,128,1.099,129,1.013,130,1.099,131,0.993,132,1.099,133,0.993,134,1.099,135,0.71,136,1.099,137,0.993,138,0.473,139,1.099,140,1.013,141,1.099,142,1.013,143,1.662,144,1.013,145,1.099,146,1.013,147,1.662,148,1.013,149,1.099,150,1.034,151,1.099,152,0.973,153,1.099,154,1.013,155,1.099,156,0.953,157,0.934,158,1.099,159,1.638,160,1.989,161,1.473,162,1.013,163,1.099,164,0.973,165,0.551,166,1.099,167,0.993,168,1.013,169,1.077,170,1.013,171,1.099,172,0.993,173,0.993,174,0.973,175,1.099,176,0.993,177,1.099,178,0.934,179,0.791,180,0.973,181,1.099,182,0.973,183,1.278,184,0.993,185,1.013,186,0.651,187,0.953,188,1.459,189,1.013,190,1.013,191,0.993,192,1.099,193,1.013,194,0.915,195,1.099,196,1.013,197,1.099,198,0.953,199,0.993,200,1.013,201,0.915,202,1.099,203,1.013,204,0.679,205,0.953,206,0.993,207,1.099,208,0.973,209,1.099,210,0.973,211,1.099,212,0.953,213,1.099,214,0.953,215,1.099,216,0.953,217,1.034,218,1.099,219,0.005,220,0.005,223,0.412,270,1.882,419,4.629,445,6.371,447,6.644,549,3.617,725,1.473,743,2.982,764,2.406,1076,4.451,1177,3.558,1178,2.404,1196,1.6,1197,3.452,1249,3.998,1276,1.794,1545,3.669,1787,1.752,1854,4.92,1862,5.039,2024,2.464,2163,3.272,2615,5.286,2706,2.655,2709,2.404,2827,4.92,2831,5.82,2865,4.387,2875,5.285,2980,5.285,3306,3.941,3361,3.692,3600,3.452,3812,4.629,3974,6.644,3975,3.669,3976,6.513,3977,6.513,3978,6.513,3979,5.773,3980,7.348,3981,7.852,3982,7.348,3983,4.857,3984,6.513,3985,4.857,3986,5.773,3987,3.692,3988,4.857,3989,6.513,3990,4.857,3991,6.513,3992,4.857,3993,4.857,3994,4.857,3995,3.272,3996,4.857]],["title/components/MarkdownPreviewComponent.html",[0,0.083,162,0.954]],["body/components/MarkdownPreviewComponent.html",[0,0.157,1,1.097,2,0.918,3,0.124,4,0.115,5,0.875,6,1.215,7,1.19,8,1.143,9,0.105,11,1.054,14,1.403,15,2.122,16,1.054,17,1.455,18,1.389,19,1.054,20,0.893,21,1.048,23,1.048,25,0.134,33,0.703,37,0.486,40,0.008,41,0.557,42,0.124,46,0.803,49,0.63,53,0.164,54,0.397,56,0.144,57,0.022,60,1.461,62,1.432,88,0.875,92,1.19,93,1.375,94,1.347,95,0.912,96,1.833,97,1.19,98,2.055,99,1.075,100,0.931,101,1.06,102,1.432,103,1.097,104,1.19,105,1.097,106,1.054,107,1.19,108,1.097,109,1.19,110,1.032,111,1.054,112,1.001,113,1.075,114,1.032,115,1.142,116,1.729,117,1.054,118,0.086,119,1.075,120,0.962,121,1.097,122,1.097,123,0.991,124,1.19,125,1.054,126,1.19,127,1.097,128,1.19,129,1.097,130,1.19,131,1.075,132,1.19,133,1.075,134,1.19,135,0.769,136,1.19,137,1.075,138,0.513,139,1.19,140,1.097,141,1.19,142,1.097,143,1.729,144,1.097,145,1.19,146,1.097,147,1.729,148,1.097,149,1.19,150,1.12,151,1.19,152,1.054,153,1.19,154,1.097,155,1.19,156,1.032,157,1.011,158,1.19,159,1.097,160,2.011,161,1.553,162,1.69,163,1.19,164,1.054,165,0.597,166,1.19,167,1.075,168,1.097,169,1.166,170,1.097,171,1.19,172,1.075,173,1.075,174,1.054,175,1.19,176,1.075,177,1.19,178,1.011,179,0.856,180,1.054,181,1.19,182,1.054,183,1.347,184,1.075,185,1.097,186,0.687,187,1.032,188,0.838,189,1.097,190,1.097,191,1.075,192,1.19,193,1.097,194,0.991,195,1.19,196,1.097,197,1.19,198,1.032,199,1.075,200,1.097,201,0.991,202,1.19,203,1.097,204,0.736,205,1.032,206,1.075,207,1.19,208,1.054,209,1.19,210,1.054,211,1.19,212,1.032,213,1.19,214,1.032,215,1.19,216,1.032,217,1.12,218,1.19,219,0.006,220,0.006,223,0.447,308,1.118,450,5.572,725,1.553,764,2.536,974,3.112,1014,1.733,1104,1.696,1948,3.23,2251,5.188,2615,4.215,2616,3.975,2659,5.188,2793,2.526,3349,3.23,3462,4.663,3974,5.572,3995,4.625,3997,4.663,3998,6.867,3999,7.645,4000,6.867,4001,7.645,4002,5.261,4003,4.269]],["title/classes/MultiSourceList.html",[57,0.019,4004,3.08]],["body/classes/MultiSourceList.html",[0,0.129,2,0.442,3,0.078,4,0.185,9,0.066,13,1.346,14,0.675,15,1.375,17,0.493,18,0.472,20,0.561,21,0.504,22,1.417,23,0.504,24,1.417,25,0.084,26,0.445,27,1.58,28,1.456,30,0.662,33,0.662,35,2.069,37,0.817,39,0.782,40,0.008,41,0.437,42,0.208,43,0.74,45,0.873,46,1.174,49,0.683,50,1.217,51,1.157,53,0.247,54,0.249,55,1.019,56,0.181,57,0.021,58,1.381,59,1.262,60,0.917,64,1.381,84,1.967,87,0.949,88,1.233,100,0.585,112,0.589,114,1.165,118,0.097,123,1.243,165,0.375,179,1.288,186,0.857,187,0.648,188,1.449,219,0.007,220,0.004,223,0.281,231,1.1,232,1.967,242,1.54,244,1.706,249,1.381,252,1.497,254,1.096,277,1.042,294,1.635,308,1.341,365,1.918,533,0.862,534,2.807,544,1.174,545,2.036,549,1.417,557,2.309,563,3.247,570,1.586,600,1.191,606,0.848,619,4.05,635,2.065,651,2.917,690,2.194,719,1.22,724,1.113,727,2.908,740,2.917,751,0.718,759,3.371,761,1.967,762,2.225,767,3.246,776,2.939,778,3.115,781,2.53,785,2.757,788,2.194,789,1.042,790,1.381,791,1.586,803,1.312,812,2.656,826,2.244,834,3.563,844,1.744,877,1.967,889,1.497,906,0.675,923,1.806,926,3.336,941,2.244,944,2.707,977,2.183,987,1.919,991,2.807,1010,1.381,1011,1.312,1012,1.381,1014,1.631,1015,4.006,1032,1.381,1039,2.225,1045,1.088,1067,1.684,1070,2.831,1242,2.381,1425,2.309,1438,2.348,1451,2.615,1472,3.243,1476,1.28,1485,1.688,1504,1.946,1506,2.125,1512,2.183,1515,2.12,1516,2.12,1520,1.946,1543,3.178,1579,2.928,1580,3.484,1676,3.035,1709,4.234,1727,2.807,1751,1.806,1757,2.028,1759,3.247,1760,2.028,1787,2.143,1820,1.381,1822,3.917,1861,1.946,1894,1.873,1897,2.12,1944,3.931,1951,3.499,2055,1.873,2130,2.225,2131,1.946,2132,1.946,2141,2.225,2203,3.812,2215,2.028,2582,5.463,2818,2.225,2842,3.04,2881,5.289,2882,3.812,2884,2.12,2892,4.001,2906,3.52,2939,1.873,3609,2.028,3851,3.52,3893,2.12,3935,4.444,3987,1.873,3995,3.336,4004,4.998,4005,5.711,4006,6.113,4007,3.741,4008,3.741,4009,5.078,4010,4.487,4011,5.339,4012,4.984,4013,4.984,4014,4.487,4015,4.952,4016,4.222,4017,4.984,4018,4.984,4019,3.304,4020,4.952,4021,3.304,4022,3.741,4023,3.741,4024,3.741,4025,3.52,4026,3.304,4027,4.952,4028,5.812,4029,2.928,4030,3.336,4031,2.928,4032,3.741,4033,3.304,4034,3.304,4035,3.178,4036,3.741,4037,3.741,4038,3.304,4039,3.741,4040,3.741,4041,3.741,4042,3.304,4043,3.304,4044,3.741,4045,3.741,4046,3.304,4047,3.304,4048,2.496,4049,2.028,4050,3.04,4051,4.487,4052,3.741,4053,2.496,4054,2.225,4055,2.496,4056,2.496,4057,2.496,4058,3.741,4059,3.741,4060,2.496,4061,2.496,4062,2.496,4063,2.496,4064,2.496,4065,3.741,4066,2.496,4067,3.741,4068,2.496,4069,2.496,4070,2.496,4071,2.496,4072,2.496,4073,2.496,4074,2.496,4075,2.496,4076,2.496,4077,2.496,4078,2.496,4079,2.496,4080,2.496,4081,2.496,4082,3.741,4083,4.487,4084,2.496,4085,2.496,4086,2.348,4087,2.496,4088,2.496,4089,2.496,4090,2.348,4091,2.496,4092,2.496,4093,2.496,4094,4.487,4095,2.496,4096,2.496,4097,2.496,4098,2.496,4099,2.496,4100,2.496,4101,2.496,4102,2.496,4103,2.496,4104,2.496,4105,2.496,4106,2.496,4107,2.496,4108,2.496,4109,2.225,4110,3.178,4111,4.222,4112,2.348,4113,2.348,4114,2.348,4115,3.52,4116,2.348,4117,2.348,4118,2.348,4119,2.496,4120,2.348,4121,2.496,4122,2.496,4123,3.52,4124,2.496,4125,2.496,4126,4.222,4127,2.496,4128,2.348,4129,2.496,4130,2.496,4131,3.741,4132,3.741,4133,2.496,4134,2.348,4135,2.496,4136,2.496,4137,2.496,4138,2.496,4139,2.496,4140,2.496,4141,2.496,4142,2.496,4143,3.741,4144,2.496,4145,2.496,4146,2.496,4147,2.496,4148,2.496,4149,2.496,4150,3.741,4151,2.496,4152,2.496,4153,2.496,4154,2.496,4155,2.496,4156,2.496,4157,2.496,4158,2.496,4159,2.496,4160,2.496,4161,2.496,4162,2.496,4163,3.741,4164,2.12,4165,2.496,4166,2.496,4167,2.496,4168,2.496,4169,2.496,4170,2.348,4171,2.496]],["title/classes/NodeCache.html",[57,0.019,1976,2.935]],["body/classes/NodeCache.html",[3,0.085,4,0.048,9,0.044,14,0.734,15,0.997,19,0.913,25,0.056,26,0.522,27,0.61,30,0.48,33,0.293,37,0.576,39,0.83,40,0.008,41,0.349,42,0.199,43,0.56,45,0.92,46,0.335,50,0.405,51,0.711,53,0.181,56,0.159,57,0.026,59,1.375,60,0.997,64,1.501,70,2.491,80,2.065,84,0.871,87,0.883,88,0.758,91,1.21,93,0.719,100,0.636,106,1.319,112,0.261,118,0.036,123,1.294,165,0.909,179,1.119,186,0.779,219,0.004,220,0.003,223,0.186,224,0.917,225,3.088,228,0.692,230,1.158,231,1.34,232,2.308,244,1.85,254,0.999,286,1.01,308,1.334,310,2.262,335,1.347,365,1.726,454,0.917,481,1.408,519,1.896,533,0.572,534,2.491,541,1.583,543,1.775,544,1.309,545,2.553,553,0.967,559,1.158,563,1.199,565,1.54,568,1.462,569,2.407,570,2.79,571,1.426,593,1.548,600,1.397,606,0.901,614,1.657,615,2.968,619,2.204,620,0.773,621,3.38,635,1.516,640,2.219,671,2.035,674,2.986,690,2.369,704,0.871,719,0.81,723,1.657,724,0.739,725,0.812,749,1.408,750,1.896,751,1.892,755,2.552,759,2.329,760,3.371,761,1.426,765,3.443,767,2.304,770,3.234,772,1.657,774,4.202,775,1.199,776,2.872,778,3.431,780,1.478,783,3.795,785,2.752,789,0.692,794,2.419,803,1.426,811,1.896,812,2.465,816,1.084,817,1.54,818,2.491,819,2.329,820,1.086,826,0.994,833,0.917,834,2.529,841,2.201,844,3.068,865,1.086,877,3.139,887,1.834,889,2.065,906,0.734,923,1.199,941,1.627,947,3.176,955,2.407,972,1.408,977,2.75,991,2.035,998,1.478,1003,1.292,1014,2.882,1015,3.733,1032,0.917,1035,2.986,1045,1.183,1055,1.243,1067,2.016,1070,1.54,1075,1.292,1100,2.691,1124,1.408,1210,2.491,1242,2.787,1244,1.724,1246,1.199,1251,1.358,1255,2.322,1312,1.199,1369,2.909,1421,1.158,1427,2.925,1451,2.407,1467,2.035,1472,2.251,1477,0.967,1481,2.552,1485,1.121,1493,3.176,1495,2.115,1498,2.552,1499,1.559,1504,1.292,1506,3.608,1520,2.115,1535,4.226,1580,2.407,1619,2.879,1629,1.408,1639,1.478,1641,3.365,1644,1.292,1665,1.834,1676,1.121,1691,1.478,1692,1.78,1693,4.909,1694,4.274,1695,2.712,1696,1.78,1697,4.714,1698,1.78,1699,2.913,1700,2.913,1701,1.78,1702,1.78,1703,1.78,1704,1.78,1705,2.419,1706,1.78,1707,1.78,1708,2.913,1709,2.925,1710,1.78,1711,2.712,1712,2.913,1714,3.698,1716,2.712,1717,4.389,1721,1.78,1722,4.389,1723,2.712,1727,4.032,1728,3.103,1729,2.712,1730,2.913,1731,1.78,1732,1.78,1733,1.78,1734,1.78,1735,1.78,1736,1.78,1738,1.78,1742,1.78,1744,1.657,1745,2.913,1746,1.78,1747,1.78,1749,1.657,1750,1.78,1751,1.963,1752,1.78,1755,5.056,1756,5.192,1757,1.347,1758,2.035,1759,1.199,1760,1.347,1761,3.83,1762,1.657,1763,2.552,1764,1.559,1765,1.559,1766,4.975,1767,2.204,1768,2.712,1769,1.834,1770,2.712,1771,1.559,1772,3.443,1773,2.552,1774,1.78,1775,3.443,1776,2.552,1777,1.408,1778,1.657,1779,1.657,1780,2.712,1781,1.559,1782,3.24,1783,1.559,1784,1.78,1785,1.78,1786,1.78,1787,2.096,1788,2.419,1789,1.559,1790,1.657,1791,1.559,1792,1.158,1793,1.657,1794,1.78,1795,2.913,1796,2.552,1797,2.712,1798,3.698,1799,3.698,1800,1.78,1801,1.657,1802,2.035,1803,2.913,1804,1.408,1805,1.78,1806,1.78,1807,1.657,1808,2.913,1809,1.657,1810,2.552,1811,1.657,1812,1.78,1813,2.304,1814,1.78,1815,1.78,1816,1.78,1817,1.78,1818,1.78,1819,1.478,1820,0.917,1821,5.343,1822,3.965,1823,3.979,1824,4.274,1825,4.274,1826,1.657,1827,1.347,1828,2.913,1829,6.316,1830,1.78,1831,2.304,1832,1.657,1833,1.657,1834,1.78,1835,2.419,1836,1.78,1837,1.78,1838,1.78,1839,4.274,1840,1.78,1841,1.78,1842,2.913,1843,1.78,1844,1.78,1845,4.274,1846,1.78,1847,2.712,1848,2.913,1849,3.698,1850,2.913,1851,3.698,1852,1.78,1853,4.713,1854,3.443,1855,1.78,1856,1.78,1857,1.243,1858,1.78,1859,2.925,1860,1.78,1861,2.115,1862,2.304,1863,1.78,1864,2.419,1865,1.657,1866,1.478,1867,1.478,1868,1.78,1869,4.274,1870,1.478,1871,1.78,1872,2.913,1873,1.78,1874,2.913,1875,1.78,1876,1.78,1877,3.443,1878,2.552,1879,1.78,1880,1.657,1881,1.657,1882,1.559,1883,1.78,1884,1.78,1885,3.698,1886,1.559,1887,1.78,1888,1.78,1889,2.009,1890,4.714,1891,1.78,1892,1.657,1893,1.657,1894,2.584,1895,1.78,1896,1.657,1897,2.304,1898,1.657,1899,1.559,1900,1.78,1901,1.78,1902,1.78,1903,4.274,1904,3.698,1905,1.199,1906,1.657,1907,1.657,1908,2.913,1909,3.698,1910,1.78,1911,1.78,1912,4.714,1913,1.78,1914,1.78,1915,1.78,1916,1.78,1917,3.698,1918,1.657,1919,2.913,1920,1.78,1921,1.78,1922,3.698,1923,1.347,1924,1.78,1925,1.78,1926,1.78,1927,1.78,1928,1.78,1929,2.913,1930,1.78,1931,1.78,1932,2.913,1933,1.78,1934,1.408,1935,1.78,1936,1.78,1937,1.78,1938,1.78,1939,3.443,1940,2.913,1941,1.78,1942,1.347,1943,1.78,1944,1.121,1945,2.913,1946,1.78,1947,1.478,1948,1.347,1949,2.798,1950,2.115,1951,3.26,1952,1.78,1953,1.78,1954,1.78,1955,1.478,1956,1.78,1957,1.78,1958,1.78,1959,1.78,1960,1.78,1961,1.78,1962,1.78,1963,1.78,1964,1.78,1965,1.78,1966,1.78,1967,3.744,1968,1.78,1969,1.78,1970,1.78,1971,1.78,1972,1.478,1973,1.78,1974,2.913,1975,1.78,1976,3.38,1977,1.78,1978,4.714,1979,1.78,1980,2.913,1981,1.78,1982,1.78,1983,1.657,1984,2.712,1985,1.657,1986,1.292,1987,1.559,1988,1.78,1989,1.78,1990,1.78,1991,4.274,1992,3.698,1993,4.274,1994,3.698,1995,1.78,1996,1.78,1997,1.78,1998,4.714,1999,1.78,2000,1.78,2001,3.698,2002,3.698,2003,3.698,2004,3.698,2005,1.559,2006,1.78,2007,1.78,2008,1.657,2009,3.443,2010,1.78,2011,2.204,2012,1.78,2013,1.78,2014,1.78,2015,1.78,2016,2.913,2017,1.78,2018,1.78,2019,1.78,2020,1.408,2021,1.78,2022,1.78,2023,1.78,2024,1.358,2025,1.78,2026,1.78,2027,1.78,2028,3.443,2029,1.78,2030,3.698,2031,3.698,2032,1.559,2033,1.78,2034,1.78,2035,1.78,2036,1.78,2037,1.78,2038,1.78,2039,1.78,2040,1.78,2041,1.78,2042,1.78,2043,1.78,2044,1.78,2045,1.78,2046,1.78,2047,1.78,2048,1.657,2049,1.657,2050,1.657,2051,1.347,2052,3.548,2053,1.559,2054,1.78,2055,2.035,2056,1.559,2057,2.552,2058,2.712,2059,2.115,2060,2.552,2061,1.657,2062,1.78,2063,1.657,2064,2.407,2065,2.913,2066,2.712,2067,1.78,2068,1.78,2069,2.712,2070,1.78,2071,1.78,2072,1.78,2073,2.913,2074,2.913,2075,2.913,2076,2.913,2077,1.78,2078,1.78,2079,1.78,2080,1.78,2081,2.035,2082,1.78,2083,1.78,2084,1.243,2085,1.243,2086,1.78,2087,1.78,2088,1.78,2089,1.657,2090,1.78,2091,1.78,2119,3.182,4172,3.59,4173,3.59,4174,3.59,4175,2.194,4176,2.194,4177,2.194]],["title/components/NodeDetailsComponent.html",[0,0.083,164,0.916]],["body/components/NodeDetailsComponent.html",[0,0.163,1,0.582,2,0.928,3,0.066,4,0.061,5,0.464,6,0.644,7,0.631,8,0.606,9,0.056,11,0.559,14,0.889,15,1.485,16,0.559,17,1.415,18,1.345,19,1.071,20,1.178,21,0.664,23,0.664,25,0.071,26,0.391,27,1.497,30,0.582,33,0.582,36,2.663,37,0.837,39,0.482,40,0.008,41,0.578,42,0.212,43,0.391,45,0.925,46,1.29,49,0.668,50,1.384,51,1.17,53,0.254,54,0.21,55,0.861,56,0.146,57,0.012,59,1.341,60,0.774,62,0.908,64,1.166,77,1.972,78,0.791,82,1.643,85,1.93,87,0.925,88,0.464,91,1.466,92,0.631,93,0.871,94,0.854,95,0.484,96,1.367,97,0.631,98,1.783,99,0.57,100,0.494,101,0.938,102,0.908,103,0.582,104,0.631,105,0.582,106,0.559,107,0.631,108,0.582,109,0.631,110,0.547,111,0.559,112,0.78,113,0.57,114,1.285,115,0.723,116,1.21,117,0.559,118,0.142,119,0.57,120,0.875,121,0.582,122,0.582,123,0.525,124,0.631,125,0.559,126,0.631,127,0.582,128,0.631,129,0.582,130,0.631,131,0.57,132,0.631,133,0.57,134,0.631,135,0.408,136,0.631,137,0.57,138,0.272,139,0.631,140,0.582,141,0.631,142,0.582,143,1.21,144,0.582,145,0.631,146,0.582,147,1.21,148,0.582,149,0.631,150,0.594,151,0.631,152,0.559,153,0.631,154,0.582,155,0.631,156,0.547,157,0.536,158,0.631,159,0.582,160,0.945,161,0.984,162,0.582,163,0.631,164,1.21,165,1.025,166,0.631,167,0.57,168,0.582,169,0.618,170,0.582,171,0.631,172,0.57,173,0.57,174,0.559,175,0.631,176,0.57,177,0.631,178,1.259,179,0.454,180,0.559,181,0.631,182,0.871,183,0.854,184,0.57,185,0.582,186,0.435,187,0.547,188,0.444,189,0.582,190,0.582,191,0.57,192,0.631,193,0.582,194,0.525,195,0.631,196,0.582,197,0.631,198,0.547,199,0.57,200,0.582,201,0.525,202,0.631,203,0.582,204,0.39,205,0.547,206,0.57,207,0.631,208,0.559,209,0.631,210,0.559,211,0.631,212,0.547,213,0.631,214,0.547,215,0.631,216,0.547,217,0.594,218,0.631,219,0.004,220,0.004,223,0.637,231,0.622,244,1.539,246,3.547,247,3.712,250,2.029,251,1.055,254,0.914,262,1.976,267,2.029,277,1.372,308,0.454,383,1.918,407,1.339,412,1.525,422,1.643,426,2.378,442,5.151,454,2.738,495,1.03,525,1.609,531,3.145,540,1.972,544,0.922,548,4.166,549,2.592,593,1.159,600,1.286,606,0.694,623,1.983,669,3.303,677,1.712,718,1.425,725,1.57,764,1.607,776,1.802,788,1.03,790,1.166,816,1.314,828,2.494,829,1.23,833,1.166,835,1.425,836,1.991,837,1.79,838,1.79,840,2.378,866,1.136,868,1.762,873,1.301,887,2.223,903,2.466,906,0.889,925,3.347,986,2.424,987,2.341,994,2.466,1009,1.79,1010,1.166,1011,1.108,1012,1.166,1014,1.991,1029,3.53,1030,3.093,1031,2.931,1032,3.22,1033,2.792,1034,2.671,1035,2.466,1036,3.093,1037,3.53,1044,3.53,1097,3.877,1098,3.802,1104,0.899,1156,2.107,1179,1.425,1196,1.434,1200,2.263,1231,1.301,1263,1.581,1264,1.339,1306,4.45,1310,1.983,1317,5.355,1337,4.741,1356,3.856,1360,4.741,1406,2.107,1407,1.581,1413,3.802,1414,2.931,1415,4.34,1416,5.632,1417,4.34,1418,4.34,1419,3.802,1420,2.671,1421,2.825,1423,4.295,1424,4.676,1444,2.792,1445,3.287,1446,5.33,1447,4.604,1448,3.856,1450,1.983,1472,2.073,1553,4.652,1554,2.107,1603,3.53,1644,2.563,1682,2.991,1790,2.107,1831,1.79,1905,2.378,1947,2.931,1986,1.643,2011,1.712,2024,1.646,2118,4.741,2160,3.287,2186,4.07,2303,3.425,2329,1.425,2626,5.806,2640,3.856,2704,1.879,2859,2.263,2871,1.79,3069,1.425,3134,3.856,3349,2.671,3507,3.856,3511,2.263,4178,6.458,4179,2.107,4180,5.349,4181,4.351,4182,4.741,4183,4.741,4184,6.152,4185,5.349,4186,5.349,4187,6.042,4188,6.042,4189,6.042,4190,6.042,4191,6.042,4192,6.042,4193,4.351,4194,6.042,4195,4.351,4196,2.79,4197,4.351,4198,2.79,4199,2.79,4200,2.79,4201,2.79,4202,3.856,4203,2.79,4204,3.093,4205,2.79,4206,2.79,4207,2.79,4208,2.79,4209,2.79,4210,2.79,4211,4.351,4212,2.79,4213,2.79,4214,2.79,4215,2.79,4216,2.79,4217,2.79,4218,2.79,4219,2.79,4220,2.79,4221,2.79,4222,2.79,4223,2.79,4224,2.79,4225,2.79,4226,2.79,4227,2.79,4228,2.79,4229,2.79,4230,2.79,4231,2.79,4232,5.806,4233,7.413,4234,5.882,4235,3.856,4236,3.856,4237,2.472,4238,2.79,4239,2.79,4240,2.79,4241,2.79,4242,2.79,4243,2.79,4244,4.351,4245,5.882,4246,2.79,4247,4.351,4248,2.79,4249,4.351,4250,2.79,4251,2.79,4252,2.79,4253,2.79,4254,2.79,4255,2.79,4256,2.79,4257,4.351,4258,2.79,4259,2.79,4260,4.351,4261,4.351,4262,2.79,4263,2.79,4264,5.349,4265,4.351,4266,2.79,4267,2.79,4268,2.79,4269,2.79,4270,2.79,4271,6.941,4272,4.351,4273,4.351,4274,4.351,4275,2.79,4276,6.042,4277,4.351,4278,6.941,4279,2.79,4280,4.351,4281,2.79,4282,2.79,4283,4.351,4284,4.351,4285,2.79,4286,4.351,4287,2.79,4288,2.79,4289,2.79,4290,2.79,4291,2.79,4292,2.79,4293,2.79,4294,2.79,4295,2.79,4296,2.79,4297,4.351,4298,2.79,4299,2.79,4300,2.79,4301,6.042,4302,5.349,4303,2.79]],["title/components/NodeDetailsPageComponent.html",[0,0.083,167,0.935]],["body/components/NodeDetailsPageComponent.html",[0,0.143,1,1.012,2,0.87,3,0.115,4,0.106,5,0.807,6,1.121,7,1.098,8,1.054,9,0.097,11,0.972,14,1.331,15,2.039,16,0.972,17,1.45,18,1.383,19,0.972,20,0.824,21,0.994,23,0.994,25,0.124,26,0.585,30,0.87,33,0.649,37,0.756,39,0.721,40,0.008,41,0.57,42,0.194,43,0.585,45,0.551,46,0.994,49,0.61,50,1.355,51,1.146,53,0.229,54,0.366,56,0.133,57,0.02,59,1.015,60,1.348,62,1.358,88,0.807,92,1.098,93,1.304,94,1.277,95,0.841,96,1.776,97,1.098,98,2.026,99,0.992,100,0.859,101,1.042,102,1.358,103,1.012,104,1.098,105,1.012,106,0.972,107,1.098,108,1.012,109,1.098,110,0.952,111,0.972,112,0.974,113,0.992,114,0.952,115,1.082,116,1.662,117,0.972,118,0.079,119,0.992,120,0.953,121,1.012,122,1.012,123,0.914,124,1.098,125,0.972,126,1.098,127,1.012,128,1.098,129,1.012,130,1.098,131,0.992,132,1.098,133,0.992,134,1.098,135,0.709,136,1.098,137,0.992,138,0.634,139,1.098,140,1.012,141,1.098,142,1.012,143,1.662,144,1.012,145,1.098,146,1.012,147,1.662,148,1.012,149,1.098,150,1.033,151,1.098,152,0.972,153,1.098,154,1.012,155,1.098,156,0.952,157,0.933,158,1.098,159,1.012,160,1.414,161,1.473,162,1.012,163,1.098,164,0.972,165,0.956,166,1.098,167,1.604,168,1.012,169,1.076,170,1.012,171,1.098,172,0.992,173,0.992,174,0.972,175,1.098,176,0.992,177,1.098,178,0.933,179,0.79,180,0.972,181,1.098,182,0.972,183,1.277,184,0.992,185,1.012,186,0.651,187,0.952,188,0.773,189,1.012,190,1.012,191,0.992,192,1.098,193,1.012,194,0.914,195,1.098,196,1.012,197,1.098,198,0.952,199,0.992,200,1.012,201,0.914,202,1.098,203,1.012,204,0.679,205,0.952,206,0.992,207,1.098,208,0.972,209,1.098,210,0.972,211,1.098,212,0.952,213,1.098,214,0.952,215,1.098,216,0.952,217,1.033,218,1.098,219,0.005,220,0.005,254,0.794,286,1.076,310,2.587,441,3.115,442,2.751,443,3.269,454,3.893,455,6.367,495,1.793,531,3.901,597,3.558,600,1.766,776,2.475,836,2.42,868,2.42,925,3.326,1062,3.879,1063,4.145,1097,4.714,1152,2.653,1293,4.164,1294,3.879,2717,4.45,2756,3.438,3094,3.269,3547,4.302,3939,3.938,4178,5.99,4233,5.77,4234,3.938,4236,5.77,4245,3.938,4304,4.302,4305,7.346,4306,6.51,4307,6.51,4308,6.51,4309,6.51,4310,4.854,4311,4.854,4312,4.854,4313,4.854,4314,4.854]],["title/interfaces/NodeId.html",[118,0.075,776,1.541]],["body/interfaces/NodeId.html",[0,0.135,2,0.655,3,0.116,4,0.107,9,0.098,25,0.125,26,0.589,40,0.008,42,0.223,45,0.556,49,0.69,51,1.152,56,0.252,80,2.222,84,1.948,87,0.744,101,0.78,115,0.815,118,0.121,120,0.673,123,1.484,156,0.962,165,1.077,204,0.917,219,0.005,220,0.005,223,0.416,228,2.722,231,0.937,254,0.961,274,1.98,310,1.45,365,2.02,454,2.049,508,2.354,511,2.331,525,1.306,534,2.793,544,1.465,545,1.513,562,3.303,565,2.104,571,2.016,572,2.589,588,4.024,593,2.188,600,1.179,606,0.822,635,1.927,690,1.45,751,1.905,760,3.804,776,2.908,812,2.113,818,3.583,827,3.485,835,3.349,836,2.706,841,3.294,864,3.485,889,2.222,941,2.222,964,3.01,977,3.254,1008,3.485,1067,1.858,1076,3.715,1231,3.056,1248,2.68,1251,1.855,1264,2.354,1312,2.68,1369,2.286,1426,3.147,1472,2.861,1476,1.9,1477,2.889,1485,3.349,1506,2.104,1586,2.889,1620,3.01,1758,2.779,1759,4.036,1787,1.769,1820,2.739,1870,3.303,1889,2.889,1942,4.024,1944,3.349,1949,4.024,1951,2.427,2020,3.147,2055,2.779,2064,2.589,2131,2.889,2132,4.35,2180,3.01,2181,2.505,2329,2.505,2444,4.185,2678,3.303,2679,3.147,2684,3.485,2866,4.415,2871,3.147,2887,3.303,2888,3.303,3878,3.147,3879,5.991,3880,5.991,3881,3.979,3882,4.952,3883,5.954,3884,3.704,3885,3.485,3886,3.485,3887,3.979,3888,3.979,3889,3.979,3890,5.318,3891,4.952,3892,5.318,3893,3.147,3894,5.318,3895,5.318,3896,5.318,3897,5.318,3898,3.979,3899,3.979,3900,5.318,3901,3.979,3902,3.704,3903,3.979,3904,3.979,3905,3.979,3906,3.979,3907,3.979,3908,3.979,3909,3.979,3910,3.979,3911,3.979,3912,3.704,3913,3.485,3914,3.704,3915,3.704,3916,3.704,3917,3.704,3918,3.704,3919,3.485,3920,3.979,3921,3.979,3922,3.979,3923,3.979,3924,3.979,3925,3.979,3926,3.979,3927,3.979]],["title/interfaces/Position.html",[118,0.075,1071,1.863]],["body/interfaces/Position.html",[0,0.148,3,0.125,4,0.177,5,1.148,9,0.138,25,0.135,26,0.62,40,0.008,42,0.218,49,0.724,53,0.253,56,0.189,57,0.029,87,0.871,101,0.632,112,0.632,118,0.151,120,0.709,135,0.776,138,0.673,165,0.98,186,0.843,188,0.846,219,0.006,220,0.006,231,1.162,254,0.647,277,2.421,289,4.173,309,3.127,511,1.569,525,1.414,537,1.537,544,1.319,593,2.376,606,0.892,620,1.871,719,1.96,724,1.788,817,2.277,836,1.749,906,1.823,952,3.127,1067,2.45,1068,3.677,1071,3.733,1072,3.775,1095,2.008,1198,3.294,1207,4.523,1208,2.405,1209,3.009,1210,4.723,1211,5.091,1212,3.686,1213,3.316,1214,2.901,1215,2.548,1216,3.295,1217,3.316,1218,2.712,1219,2.803,1220,4.196,1221,4.293,1222,4.523,1223,3.258,1224,3.258,1225,3.258,1226,3.258,1227,3.258,1228,3.258,1229,3.258,1230,3.258,1231,3.22,1232,3.258,1233,3.258,1234,4.24,1235,3.686,1236,3.127,1237,3.127,1238,2.277,1239,3.775,1240,3.406,1241,3.406,1242,1.788,1243,2.475,1244,2.548,1245,3.258,1246,2.901,1247,2.475,1248,2.901,1249,3.258,1250,3.406,1251,2.008,1252,3.406,1253,2.712,1254,3.406,1255,2.339,1256,3.406,1257,2.901,1258,3.406,1259,3.258,1260,3.406,1261,4.352,1262,2.803,1263,3.009,1264,2.548,1265,3.915,1266,3.406,1267,3.406,1268,3.406,1269,4.069,1270,3.406,1271,4.432,1272,3.406,1273,3.406,1274,3.406,1275,3.258,1276,1.96,1277,3.915,1278,4.927,1279,3.406,1280,3.406,1281,4.432,1282,3.406,1283,4.432,1284,4.432,1285,3.406,1286,3.406,1287,4.196,1288,4.432,1289,3.258,1290,4.24,1291,4.432,1292,3.406,1293,4.609,1294,3.647,1295,3.406,1296,3.258,1297,3.406,1298,3.406,1299,3.406,1300,3.258,1301,4.069,1302,3.258,1303,2.901,1304,3.258,1305,2.803]],["title/interfaces/Positions.html",[118,0.075,4315,3.711]],["body/interfaces/Positions.html",[0,0.161,2,0.736,3,0.036,4,0.12,5,1.015,9,0.03,14,0.308,15,0.725,17,0.225,18,0.215,20,1.037,21,0.23,23,0.23,25,0.038,26,0.42,27,0.701,30,0.201,33,0.201,36,1.151,40,0.008,42,0.196,45,0.469,46,0.714,49,0.55,50,0.278,51,0.235,53,0.255,54,0.113,55,0.464,56,0.041,57,0.02,59,1.387,60,0.418,61,2.119,64,0.629,72,1.856,74,1.069,75,1.603,77,0.682,78,1.453,85,0.543,87,0.72,93,0.301,94,0.295,100,0.266,101,0.412,110,0.295,111,0.301,112,0.557,117,0.301,118,0.145,120,0.907,135,0.22,138,0.884,165,1.044,183,0.295,186,0.413,188,0.24,194,0.283,204,0.815,219,0.002,220,0.003,223,0.128,225,3.142,231,0.989,244,1.455,254,1.125,261,0.965,262,1.893,265,1.973,274,1.844,288,1.137,289,4.527,294,1.713,303,2.494,304,0.769,308,1.099,310,2.232,315,2.221,334,4.158,335,0.924,349,1.069,365,0.579,406,1.713,407,1.661,423,1.334,432,2.119,437,1.334,438,4.007,439,0.966,440,1.334,441,0.966,442,0.853,443,1.014,454,2.435,483,2.651,489,0.966,495,0.556,508,0.722,511,2.26,519,1.379,525,1.626,531,1.568,532,1.069,533,0.393,536,0.629,537,0.436,540,1.183,544,0.84,545,1.068,546,2.331,549,0.646,552,1.379,553,1.525,554,1.137,557,2.847,558,2.124,559,0.794,563,0.822,565,0.646,568,1.064,569,1.827,570,0.722,571,2.092,572,1.827,580,4.28,592,1.48,600,0.993,606,0.829,609,2.242,613,1.891,615,0.769,620,2.493,635,0.681,640,2.428,647,1.137,649,1.221,653,0.794,670,3.379,671,3.12,679,2.651,683,1.539,690,0.445,702,1.221,704,1.857,719,1.278,722,1.137,725,0.591,727,1.151,740,0.886,749,0.966,751,0.897,759,1.334,760,2.568,761,1.037,775,1.428,785,0.629,803,0.598,811,2.707,816,1.548,817,2.362,818,1.428,821,2.331,824,2.808,828,1.218,829,0.663,841,2.142,861,4.918,863,0.794,865,2.045,868,0.86,873,1.218,876,1.221,881,5.292,887,0.769,889,1.872,899,3.532,902,5.6,903,0.853,906,1.562,923,1.428,924,2.87,941,0.682,944,1.428,955,2.469,956,4.147,969,4.918,972,3.001,991,1.48,1006,3.918,1014,0.496,1032,1.091,1034,0.924,1041,2.119,1053,3.379,1054,4.341,1067,0.981,1068,2.892,1070,0.646,1071,2.75,1072,2.969,1074,0.613,1089,1.069,1095,0.988,1097,2.221,1099,1.973,1101,1.014,1102,2.65,1103,3.532,1104,1.115,1112,0.822,1175,2.152,1180,3.624,1189,2.119,1208,0.682,1210,0.822,1215,0.722,1216,1.727,1217,1.984,1218,0.769,1219,0.794,1220,0.822,1221,2.182,1235,1.661,1238,2.006,1242,2.47,1243,2.717,1244,0.722,1245,0.924,1246,1.428,1247,1.613,1251,1.309,1253,4.13,1255,1.151,1259,2.124,1261,0.853,1265,1.48,1277,1.48,1287,3.009,1290,2.124,1296,2.124,1306,2.124,1309,1.334,1312,0.822,1319,4.547,1404,1.539,1405,0.886,1406,1.137,1409,1.014,1424,3.15,1447,0.924,1451,2.182,1469,3.794,1477,0.663,1478,2.221,1488,1.014,1495,2.755,1543,0.966,1550,1.856,1551,2.536,1553,2.221,1554,1.137,1580,3.224,1592,4.763,1593,0.745,1639,2.783,1651,1.334,1657,4.028,1667,1.984,1684,2.614,1723,1.137,1751,0.822,1787,0.543,1792,1.379,1797,1.973,1802,0.853,1820,0.629,1831,2.221,1862,1.676,1878,1.069,1889,0.663,1905,0.822,1906,1.137,1950,0.886,1985,1.137,2024,1.939,2028,1.137,2032,2.46,2084,0.853,2148,1.137,2166,1.069,2191,1.014,2201,0.886,2212,0.966,2218,1.137,2220,2.331,2251,1.137,2260,1.137,2268,1.221,2274,2.614,2291,1.137,2292,1.137,2293,1.137,2304,2.221,2342,2.331,2343,1.891,2346,1.759,2350,0.966,2351,1.759,2352,1.603,2355,0.966,2376,1.014,2377,0.966,2380,2.536,2416,0.966,2441,4.42,2443,1.014,2444,1.961,2451,0.966,2498,1.137,2505,4.113,2507,1.221,2659,3.532,2672,1.334,2717,1.961,2730,3.15,2734,1.334,2737,3.067,2755,1.334,2756,1.379,2759,1.334,2895,0.924,2939,2.342,2963,1.334,3008,2.614,3010,1.221,3014,2.315,3015,1.137,3018,6.273,3023,1.014,3027,6.69,3028,5.227,3033,4.879,3034,4.543,3035,4.543,3040,1.014,3047,1.221,3051,1.221,3053,2.315,3055,3.067,3069,1.768,3070,4.159,3089,2.315,3090,1.221,3103,1.221,3117,3.662,3125,1.856,3126,1.334,3129,1.221,3143,2.614,3145,1.221,3146,3.121,3148,2.315,3156,2.119,3167,2.614,3169,1.221,3177,3.352,3183,1.334,3184,3.662,3218,2.315,3244,2.614,3267,3.453,3271,2.119,3275,1.856,3276,1.221,3350,1.334,3379,2.315,3466,1.334,3474,2.315,3500,2.315,3562,1.137,3712,1.334,3747,1.856,3764,1.221,3777,1.856,3796,1.221,3811,1.221,3812,1.856,3830,4.159,3885,1.069,3891,1.137,3929,1.334,4234,1.221,4245,1.221,4315,6.338,4316,1.334,4317,5.126,4318,2.612,4319,2.612,4320,2.612,4321,2.612,4322,4.676,4323,2.612,4324,6.919,4325,1.505,4326,1.505,4327,1.505,4328,1.505,4329,1.334,4330,1.505,4331,1.505,4332,1.505,4333,1.505,4334,1.505,4335,1.505,4336,2.612,4337,1.505,4338,1.505,4339,1.334,4340,2.612,4341,4.132,4342,1.505,4343,1.505,4344,1.505,4345,3.46,4346,1.505,4347,1.505,4348,2.612,4349,1.505,4350,1.505,4351,1.505,4352,1.505,4353,1.505,4354,1.505,4355,2.612,4356,1.505,4357,1.505,4358,1.505,4359,1.505,4360,1.505,4361,1.505,4362,2.614,4363,1.334,4364,1.505,4365,1.505,4366,1.505,4367,1.505,4368,1.505,4369,1.505,4370,1.505,4371,1.505,4372,7.445,4373,1.505,4374,3.46,4375,1.505,4376,5.126,4377,1.505,4378,2.612,4379,1.505,4380,1.505,4381,2.612,4382,1.505,4383,1.505,4384,2.612,4385,1.505,4386,1.505,4387,1.505,4388,1.505,4389,4.132,4390,5.126,4391,3.46,4392,1.856,4393,2.612,4394,2.612,4395,1.505,4396,2.614,4397,1.505,4398,1.505,4399,1.505,4400,1.505,4401,1.505,4402,1.505,4403,1.505,4404,1.334,4405,1.505,4406,1.505,4407,1.505,4408,1.505,4409,1.505,4410,1.505,4411,1.505,4412,2.612,4413,1.505,4414,1.505,4415,1.505,4416,1.505,4417,1.505,4418,3.46,4419,1.505,4420,1.505,4421,2.612,4422,1.505,4423,2.612,4424,1.505,4425,3.46,4426,1.505,4427,1.505,4428,4.158,4429,4.676,4430,1.505,4431,2.612,4432,1.505,4433,2.612,4434,1.505,4435,1.505,4436,2.612,4437,1.505,4438,2.612,4439,2.612,4440,5.827,4441,6.562,4442,3.46,4443,3.46,4444,3.46,4445,4.132,4446,2.612,4447,1.505,4448,1.505,4449,1.505,4450,1.505,4451,1.505,4452,1.505,4453,1.505,4454,4.132,4455,1.505,4456,6.919,4457,3.46,4458,3.46,4459,3.46,4460,1.505,4461,1.505,4462,1.505,4463,2.612,4464,4.676,4465,1.505,4466,1.505,4467,1.505,4468,1.505,4469,1.505,4470,1.505,4471,1.505,4472,1.505,4473,1.505,4474,1.505,4475,1.505,4476,1.505,4477,1.505,4478,3.46,4479,1.505,4480,1.505,4481,1.505,4482,1.505,4483,1.505,4484,1.505,4485,1.505,4486,1.973,4487,1.505,4488,3.46,4489,1.505,4490,1.505,4491,1.505,4492,4.132,4493,4.132,4494,1.505,4495,1.505,4496,1.505,4497,1.505,4498,3.46,4499,4.676,4500,4.132,4501,2.612,4502,1.505,4503,2.612,4504,1.505,4505,1.505,4506,1.505,4507,1.505,4508,1.505,4509,1.505,4510,1.505,4511,1.221,4512,1.505,4513,1.505,4514,1.505,4515,1.505,4516,1.505,4517,4.676,4518,1.505,4519,2.612,4520,1.505,4521,1.505,4522,1.505,4523,1.505,4524,3.46,4525,1.505,4526,1.505,4527,1.221,4528,1.505,4529,2.612,4530,5.126,4531,5.126,4532,2.612,4533,5.126,4534,1.505,4535,1.505,4536,1.505,4537,1.505,4538,1.505,4539,2.612,4540,1.137,4541,2.612,4542,1.137,4543,1.505,4544,1.505,4545,1.505,4546,4.144,4547,1.505,4548,1.505,4549,1.505,4550,1.505,4551,4.132,4552,1.505,4553,1.505,4554,1.334,4555,1.505,4556,1.334,4557,2.612,4558,2.612,4559,2.612,4560,2.612,4561,3.46,4562,2.612,4563,1.505,4564,3.46,4565,1.505,4566,1.505,4567,1.505,4568,1.505,4569,1.505,4570,1.505,4571,2.612,4572,1.505,4573,4.676,4574,1.505,4575,1.505,4576,1.505,4577,3.662,4578,1.505,4579,1.505,4580,4.132,4581,1.505,4582,4.132,4583,1.505,4584,2.119,4585,1.505,4586,1.505,4587,1.505,4588,2.612,4589,1.505,4590,1.505,4591,1.505,4592,2.612,4593,1.505,4594,1.505,4595,1.505,4596,1.505,4597,1.505,4598,1.505,4599,4.132,4600,1.505,4601,1.505,4602,2.612,4603,1.505,4604,1.505,4605,1.973,4606,2.612,4607,1.221,4608,1.505,4609,1.505,4610,4.676,4611,2.612,4612,1.505,4613,1.505,4614,1.505,4615,1.505,4616,1.505,4617,3.46,4618,1.505,4619,1.505,4620,1.505,4621,2.612,4622,1.505,4623,1.505,4624,1.505,4625,2.612,4626,1.505,4627,4.676,4628,1.505,4629,1.505,4630,1.505,4631,1.505,4632,1.221,4633,1.505,4634,1.505,4635,1.505,4636,1.505,4637,1.505,4638,1.505,4639,1.505,4640,1.505,4641,1.505,4642,1.334,4643,1.505,4644,1.334,4645,1.505,4646,1.505,4647,1.505,4648,1.505,4649,1.505,4650,2.612,4651,3.46,4652,1.505,4653,1.505,4654,1.505,4655,1.505,4656,2.612,4657,1.505,4658,1.505,4659,1.505,4660,1.505,4661,1.505,4662,1.505,4663,1.505,4664,2.612,4665,1.505,4666,1.334,4667,1.505,4668,1.505,4669,1.505,4670,1.505,4671,1.505,4672,1.505,4673,1.505,4674,1.505,4675,1.505,4676,1.505,4677,1.505,4678,1.505,4679,1.505,4680,1.505,4681,1.221,4682,2.612,4683,2.612,4684,2.315,4685,2.612,4686,1.505,4687,1.505,4688,1.505,4689,1.505,4690,1.505,4691,1.505,4692,1.505,4693,1.505,4694,1.505,4695,1.505,4696,1.505,4697,1.505,4698,1.505,4699,1.505,4700,1.505,4701,1.505,4702,1.505,4703,1.505,4704,1.505,4705,1.505,4706,1.505,4707,1.505,4708,1.505,4709,1.505,4710,1.505,4711,1.505,4712,1.505,4713,1.505,4714,1.505,4715,1.505,4716,1.505,4717,1.505,4718,2.612,4719,1.505,4720,1.505,4721,1.505,4722,1.505,4723,1.505,4724,2.612,4725,1.505,4726,1.505,4727,1.505,4728,1.505,4729,4.132,4730,4.132,4731,2.612,4732,1.505,4733,2.612,4734,1.505,4735,1.505,4736,1.505,4737,1.505,4738,1.505,4739,3.46,4740,1.505,4741,1.505,4742,2.612,4743,1.505,4744,2.612,4745,1.505,4746,2.612,4747,1.505,4748,1.505,4749,1.505,4750,1.505,4751,1.505,4752,2.612,4753,2.612,4754,2.612,4755,2.315,4756,2.612,4757,2.612,4758,2.612,4759,2.612,4760,1.505,4761,2.612,4762,2.612,4763,2.612,4764,1.505,4765,2.612,4766,2.612,4767,1.505,4768,1.505,4769,1.505,4770,1.505,4771,2.612,4772,1.505,4773,1.505,4774,2.612,4775,2.612,4776,2.612,4777,1.334,4778,1.505,4779,1.505,4780,3.46,4781,3.46,4782,3.46,4783,3.46,4784,1.505,4785,1.505,4786,1.505,4787,1.505,4788,4.132,4789,1.505,4790,4.132,4791,1.505,4792,3.46,4793,1.505,4794,3.46,4795,1.505,4796,1.505,4797,1.505,4798,1.505,4799,1.505,4800,1.505,4801,1.505,4802,1.505,4803,2.612,4804,1.505,4805,1.505,4806,1.505,4807,1.505,4808,1.505,4809,1.505,4810,1.221,4811,1.069,4812,1.505,4813,1.505,4814,1.505,4815,1.505,4816,1.505,4817,1.505,4818,1.505,4819,1.505,4820,1.505,4821,1.505]],["title/components/ProfileSettingsDialogComponent.html",[0,0.083,168,0.954]],["body/components/ProfileSettingsDialogComponent.htmltitle/components/ProjectHeaderComponent.html",[0,0.083,170,0.954]],["body/components/ProjectHeaderComponent.html",[0,0.155,1,1.054,2,0.894,3,0.119,4,0.11,5,0.84,6,1.167,7,1.143,8,1.098,9,0.101,11,1.012,16,1.012,17,1.453,18,1.386,19,1.012,20,0.858,21,1.021,23,1.021,25,0.129,37,0.618,40,0.008,41,0.576,42,0.158,49,0.62,53,0.157,54,0.381,56,0.138,57,0.021,62,1.395,78,1.896,84,2.657,88,0.84,90,3.791,91,1.703,92,1.143,93,1.339,94,1.312,95,0.876,96,1.805,97,1.143,98,2.041,99,1.033,100,0.895,101,1.123,102,1.395,103,1.054,104,1.143,105,1.054,106,1.012,107,1.143,108,1.054,109,1.143,110,0.992,111,1.012,112,0.988,113,1.033,114,0.992,115,1.112,116,1.696,117,1.012,118,0.083,119,1.033,120,0.957,121,1.054,122,1.054,123,0.952,124,1.143,125,1.012,126,1.143,127,1.054,128,1.143,129,1.054,130,1.143,131,1.033,132,1.143,133,1.033,134,1.143,135,0.739,136,1.143,137,1.033,138,0.492,139,1.143,140,1.054,141,1.143,142,1.054,143,1.696,144,1.054,145,1.143,146,1.054,147,1.696,148,1.054,149,1.143,150,1.076,151,1.143,152,1.012,153,1.143,154,1.054,155,1.143,156,0.992,157,0.972,158,1.143,159,1.054,160,1.453,161,1.513,162,1.054,163,1.143,164,1.012,165,0.573,166,1.143,167,1.033,168,1.054,169,1.12,170,1.664,171,1.143,172,1.033,173,1.033,174,1.012,175,1.143,176,1.033,177,1.143,178,0.972,179,0.823,180,1.012,181,1.143,182,1.012,183,1.312,184,1.033,185,1.054,186,0.669,187,0.992,188,0.805,189,1.054,190,1.054,191,1.033,192,1.143,193,1.054,194,0.952,195,1.143,196,1.054,197,1.143,198,0.992,199,1.033,200,1.054,201,1.26,202,1.143,203,1.054,204,0.707,205,0.992,206,1.033,207,1.143,208,1.012,209,1.143,210,1.012,211,1.143,212,0.992,213,1.143,214,0.992,215,1.143,216,0.992,217,1.076,218,1.143,219,0.006,220,0.006,223,0.429,261,2.47,262,1.867,270,1.959,277,2.617,544,1.218,725,1.696,764,2.47,812,1.629,868,2.734,906,1.367,974,3.031,1074,2.724,1175,1.867,1188,3.94,1194,2.948,1195,2.112,1196,2.204,1548,2.865,1646,3.133,1647,3.417,1667,2.427,1690,5.928,1894,3.791,2254,2.582,2303,2.865,2313,4.754,2597,6.082,2654,3.244,2937,4.292,3137,3.244,3574,3.818,4540,3.818,4835,4.811,4836,4.48,4837,7.496,4838,6.688,4839,7.354,4840,5.055,4841,5.055,4842,4.101]],["title/components/ProjectIssueListComponent.html",[0,0.083,172,0.935]],["body/components/ProjectIssueListComponent.html",[0,0.15,1,0.939,2,0.827,3,0.106,4,0.098,5,0.748,6,1.039,7,1.018,8,0.978,9,0.09,11,0.902,14,1.264,15,1.962,16,0.902,17,1.447,18,1.38,19,0.902,20,0.764,21,0.944,23,0.944,25,0.115,26,0.556,27,1.481,33,0.602,37,0.703,39,0.498,40,0.008,41,0.546,42,0.195,43,0.404,46,0.687,49,0.481,53,0.257,54,0.339,56,0.123,57,0.019,59,0.702,60,1.25,62,1.29,78,2.261,85,2.745,88,0.748,90,3.507,91,1.517,92,1.018,93,1.239,94,1.214,95,0.78,96,1.721,97,1.018,98,1.997,99,0.92,100,0.797,101,1.116,102,1.29,103,0.939,104,1.018,105,0.939,106,0.902,107,1.018,108,0.939,109,1.018,110,0.883,111,0.902,112,0.949,113,0.92,114,0.883,115,1.028,116,1.599,117,0.902,118,0.074,119,0.92,120,0.979,121,0.939,122,0.939,123,0.848,124,1.018,125,0.902,126,1.018,127,0.939,128,1.018,129,0.939,130,1.018,131,0.92,132,1.018,133,0.92,134,1.018,135,0.658,136,1.018,137,0.92,138,0.439,139,1.018,140,0.939,141,1.018,142,0.939,143,1.599,144,0.939,145,1.018,146,1.664,147,1.599,148,0.939,149,1.018,150,0.958,151,1.018,152,0.902,153,1.018,154,0.939,155,1.018,156,0.883,157,0.865,158,1.018,159,0.939,160,1.344,161,1.399,162,0.939,163,1.018,164,0.902,165,0.802,166,1.018,167,0.92,168,0.939,169,0.998,170,0.939,171,1.018,172,1.555,173,0.92,174,0.902,175,1.018,176,0.92,177,1.018,178,0.865,179,0.733,180,0.902,181,1.018,182,0.902,183,1.214,184,0.92,185,0.939,186,0.619,187,0.883,188,0.717,189,0.939,190,0.939,191,0.92,192,1.018,193,0.939,194,1.165,195,1.018,196,0.939,197,1.018,198,0.883,199,0.92,200,0.939,201,1.502,202,1.018,203,0.939,204,0.63,205,0.883,206,0.92,207,1.018,208,0.902,209,1.018,210,0.902,211,1.018,212,0.883,213,1.018,214,0.883,215,1.018,216,0.883,217,0.958,218,1.018,219,0.005,220,0.005,223,0.525,254,0.549,261,1.663,262,2.61,270,1.745,277,2.515,286,0.998,365,1.687,495,1.663,501,6.026,511,1.829,544,1.218,548,3.161,571,1.518,597,3.863,651,3.644,760,2.727,767,3.176,783,3.393,788,2.61,789,1.951,790,1.882,791,2.162,812,1.451,833,1.882,835,2.3,836,1.483,866,2.52,868,2.329,872,4.397,906,1.264,1074,3.099,1104,1.994,1175,1.663,1180,2.162,1183,3.2,1188,4.483,1194,3.115,1195,2.954,1196,2.781,1202,2.377,1276,1.663,1311,5.483,1472,2.739,1548,2.552,1646,2.954,1647,3.161,1667,2.162,1689,2.889,1894,3.507,2024,2.34,2263,4.673,2303,2.552,2654,2.889,2717,4.313,2756,3.267,2788,3.401,2793,2.97,2798,3.381,2869,3.401,2871,2.889,2937,3.97,3094,3.033,3137,2.889,3361,3.507,3425,3.401,3429,5.735,3430,5.019,3574,3.401,3939,3.653,4183,6.264,4235,3.99,4511,5.019,4835,5.119,4842,3.653,4843,6.186,4844,6.186,4845,3.99,4846,3.99,4847,3.401,4848,4.502,4849,3.99,4850,5.483,4851,3.99,4852,3.99]],["title/components/ProjectListComponent.html",[0,0.083,173,0.935]],["body/components/ProjectListComponent.html",[0,0.144,1,0.821,2,0.752,3,0.093,4,0.086,5,0.654,6,0.908,7,0.89,8,0.855,9,0.079,11,0.788,14,1.15,15,1.824,16,0.788,17,1.439,18,1.371,19,1.316,20,1.218,21,0.859,23,0.859,25,0.1,26,0.506,27,1.437,30,0.752,33,0.526,36,3.161,37,0.793,39,0.623,40,0.008,41,0.539,42,0.187,43,0.506,45,0.814,46,1.292,49,0.511,50,1.323,51,1.025,53,0.264,54,0.297,55,1.214,56,0.108,57,0.016,59,1.184,60,1.092,62,1.174,78,2.151,84,3.014,85,2.031,88,0.654,89,2.546,90,3.19,91,2.214,92,0.89,93,1.127,94,1.104,95,0.682,96,1.623,97,0.89,98,1.942,99,0.804,100,0.696,101,1.116,102,1.174,103,0.821,104,0.89,105,0.821,106,0.788,107,0.89,108,0.821,109,0.89,110,0.772,111,0.788,112,1.022,113,0.804,114,0.772,115,0.936,116,1.487,117,0.788,118,0.064,119,0.804,120,0.927,121,1.174,122,0.821,123,0.741,124,0.89,125,0.788,126,0.89,127,0.821,128,0.89,129,0.821,130,0.89,131,0.804,132,0.89,133,0.804,134,0.89,135,0.575,136,0.89,137,0.804,138,0.64,139,0.89,140,0.821,141,0.89,142,0.821,143,1.487,144,0.821,145,0.89,146,0.821,147,1.487,148,0.821,149,0.89,150,0.838,151,0.89,152,0.788,153,0.89,154,0.821,155,0.89,156,0.772,157,0.756,158,0.89,159,0.821,160,1.223,161,1.273,162,0.821,163,0.89,164,0.788,165,0.446,166,0.89,167,0.804,168,0.821,169,0.872,170,0.821,171,0.89,172,0.804,173,1.466,174,0.788,175,0.89,176,0.804,177,0.89,178,0.756,179,0.64,180,0.788,181,0.89,182,0.788,183,1.289,184,0.804,185,0.821,186,0.563,187,0.772,188,0.627,189,0.821,190,0.821,191,0.804,192,0.89,193,0.821,194,0.741,195,0.89,196,0.821,197,0.89,198,0.772,199,0.804,200,0.821,201,1.238,202,0.89,203,0.821,204,1.104,205,0.772,206,0.804,207,0.89,208,0.788,209,0.89,210,0.788,211,0.89,212,0.772,213,0.89,214,0.772,215,0.89,216,0.772,217,0.838,218,0.89,219,0.005,220,0.005,223,0.334,225,2.786,229,2.797,232,2.61,244,1.59,254,0.686,262,1.453,267,1.834,269,1.734,270,2.181,286,0.872,308,0.64,365,2.044,366,6.564,405,2.078,406,1.948,407,1.889,508,4.172,537,1.139,538,4.066,539,3.192,540,1.783,580,3.877,600,1.353,606,0.394,620,1.387,640,1.896,725,1.273,840,3.076,906,1.699,924,2.415,953,2.525,986,2.978,987,2.779,1010,1.644,1011,1.563,1012,1.644,1036,2.797,1045,1.854,1046,2.151,1074,2.921,1175,2.427,1180,3.155,1181,4.671,1183,2.797,1188,3.871,1196,2.829,1202,4.007,1235,2.702,1276,2.079,1493,3.592,1506,1.688,1544,2.151,1545,4.964,1548,3.725,1657,3.455,2254,3.357,2303,2.23,2313,2.797,2380,2.415,2401,3.455,2656,3.47,2702,3.192,2703,2.972,2707,3.871,3132,3.192,3133,2.797,3424,3.192,3425,2.972,3429,5.332,3430,4.567,3460,3.487,3478,3.487,3596,4.671,4486,2.972,4835,5.576,4839,5.824,4845,3.487,4846,3.487,4853,5.628,4854,5.628,4855,4.252,4856,6.571,4857,6.571,4858,7.172,4859,5.628,4860,7.172,4861,7.172,4862,3.935,4863,5.628,4864,4.252,4865,3.935,4866,5.628,4867,3.935,4868,3.935,4869,3.935,4870,5.628,4871,6.571,4872,6.571,4873,3.935,4874,3.935,4875,3.935,4876,3.935,4877,3.935,4878,3.935,4879,3.935,4880,3.935,4881,3.935,4882,3.935,4883,3.935,4884,5.628,4885,3.935,4886,3.935,4887,2.525,4888,3.935,4889,3.935,4890,3.935,4891,3.487,4892,3.935,4893,5.628,4894,5.628,4895,4.988,4896,3.935,4897,4.988,4898,3.935,4899,3.487,4900,5.824,4901,6.571,4902,3.935,4903,3.935,4904,3.935,4905,3.487,4906,3.935,4907,3.935,4908,3.487,4909,3.935,4910,3.935]],["title/components/ProjectMembersComponent.html",[0,0.083,174,0.916]],["body/components/ProjectMembersComponent.html",[0,0.135,1,0.683,2,0.658,3,0.077,4,0.071,5,0.545,6,0.756,7,0.741,8,0.712,9,0.065,11,0.656,14,1.006,15,1.641,16,0.656,17,1.427,18,1.358,19,0.656,20,1.003,21,0.751,23,0.751,25,0.084,26,0.442,27,1.371,29,1.791,30,0.658,33,0.438,36,2.896,37,0.816,39,0.727,40,0.008,41,0.572,42,0.202,43,0.59,45,0.799,46,1.129,49,0.628,50,1.212,51,1.025,53,0.264,54,0.247,55,1.011,56,0.135,57,0.014,59,0.768,60,0.91,62,1.027,64,1.369,72,3.498,78,1.997,79,2.475,80,2.23,84,1.301,85,2.371,87,0.745,88,0.545,89,1.907,90,3.725,91,1.104,92,0.741,93,0.986,94,0.966,95,0.568,96,1.486,97,0.741,98,1.861,99,1.006,100,1.163,101,1.102,102,1.543,103,0.683,104,0.741,105,0.683,106,0.656,107,0.741,108,0.683,109,0.741,110,0.643,111,0.656,112,0.838,113,0.67,114,0.643,115,0.818,116,1.337,117,0.656,118,0.108,119,0.67,120,0.901,121,0.683,122,0.683,123,0.927,124,0.741,125,0.656,126,0.741,127,0.683,128,0.741,129,0.683,130,0.741,131,0.67,132,0.741,133,0.67,134,0.741,135,0.479,136,0.741,137,0.67,138,0.319,139,0.741,140,0.683,141,0.741,142,0.683,143,1.337,144,0.683,145,0.741,146,0.683,147,1.337,148,0.683,149,0.741,150,0.697,151,0.741,152,0.656,153,0.741,154,0.683,155,0.741,156,0.643,157,0.63,158,0.741,159,0.683,160,1.069,161,1.113,162,0.683,163,0.741,164,0.656,165,0.372,166,0.741,167,0.67,168,0.683,169,0.726,170,0.683,171,0.741,172,0.67,173,0.67,174,1.316,175,0.741,176,0.67,177,0.741,178,0.63,179,0.533,180,0.656,181,0.741,182,0.656,183,1.451,184,1.006,185,0.683,186,0.492,187,0.643,188,0.522,189,0.683,190,0.683,191,0.67,192,0.741,193,0.683,194,1.237,195,0.741,196,0.683,197,0.741,198,0.643,199,0.67,200,0.683,201,1.326,202,0.741,203,0.683,204,1.129,205,0.643,206,0.67,207,0.741,208,0.656,209,0.741,210,0.656,211,0.741,212,0.643,213,0.741,214,0.643,215,0.741,216,0.643,217,0.697,218,0.741,219,0.004,220,0.004,222,2.329,223,0.278,225,2.436,228,1.552,231,1.058,241,2.605,246,2.536,251,1.239,254,0.801,259,5.332,260,4.362,261,1.21,262,2.427,267,1.528,270,1.27,277,2.221,286,0.726,294,1.622,365,1.823,407,1.573,412,1.791,433,2.329,434,2.659,483,3.158,495,1.21,502,6.317,513,5.066,533,0.855,534,2.236,537,0.949,538,3.725,540,1.485,543,1.991,544,1.364,568,1.335,580,1.674,592,2.79,597,3.231,609,2.005,620,2.084,640,1.104,676,1.791,742,2.659,760,1.444,812,1.056,816,1.785,817,1.406,826,2.977,829,1.444,866,1.335,868,2.32,887,1.674,899,2.103,906,1.439,998,2.207,1009,2.103,1074,3.215,1104,1.586,1112,1.791,1175,1.21,1180,2.363,1181,2.329,1183,3.498,1188,3.871,1194,2.896,1195,2.47,1196,2.66,1198,1.406,1201,2.103,1202,2.599,1276,1.21,1460,2.659,1548,3.35,1638,2.475,1646,2.47,1647,2.514,1656,2.475,1667,1.573,1668,4.964,1684,3.718,1689,2.103,1728,2.899,1894,2.79,1972,2.207,2051,2.011,2186,4.426,2303,1.857,2304,3.158,2353,3.021,2522,3.315,2565,2.475,2568,4.796,2569,2.475,2576,2.475,2615,2.011,2654,2.103,2717,3.725,2756,3.121,2788,2.475,2793,2.363,2798,2.69,2889,6.351,2891,4.71,2937,3.158,3094,2.207,3137,4.747,3361,2.79,3426,4.67,3428,4.964,3432,4.796,3436,4.796,3439,4.796,3440,4.362,3441,4.362,3445,5.332,3484,5.332,3487,4.796,3488,3.993,3492,4.796,3493,3.993,3496,3.993,3525,3.993,3528,2.659,3529,2.659,3530,2.659,3531,2.659,3534,2.659,3535,2.659,3536,2.659,3571,2.904,3572,2.904,3573,2.904,3574,3.718,3575,2.904,3576,2.904,3577,2.904,3777,3.498,4362,3.718,4392,3.498,4428,2.475,4527,2.659,4835,5.704,4842,2.659,4847,3.718,4849,2.904,4850,4.362,4851,2.904,4852,2.904,4864,4.465,4911,2.659,4912,3.315,4913,4.362,4914,4.796,4915,3.498,4916,6.242,4917,5.238,4918,4.362,4919,5.238,4920,4.362,4921,5.238,4922,5.238,4923,4.921,4924,3.276,4925,4.362,4926,3.276,4927,5.824,4928,4.362,4929,3.276,4930,3.276,4931,3.276,4932,3.276,4933,4.362,4934,5.824,4935,3.276,4936,4.362,4937,6.864,4938,4.362,4939,4.362,4940,4.362,4941,3.993,4942,4.362,4943,4.362,4944,3.276,4945,3.276,4946,3.276,4947,4.362,4948,4.362,4949,4.362,4950,4.362,4951,4.362,4952,4.362,4953,4.362,4954,4.362,4955,4.362,4956,4.362,4957,4.362,4958,4.362,4959,3.276,4960,3.276,4961,4.362,4962,3.276,4963,4.796,4964,3.276,4965,3.276,4966,3.276,4967,3.276,4968,3.276,4969,2.904,4970,2.904,4971,2.904,4972,2.329,4973,2.904,4974,2.904,4975,4.362,4976,4.362,4977,4.362,4978,2.904,4979,2.904,4980,2.904,4981,2.904,4982,2.904,4983,2.904,4984,2.904,4985,2.904,4986,2.904,4987,2.904,4988,2.904,4989,2.904,4990,4.362,4991,2.904,4992,2.904,4993,2.659,4994,2.904,4995,2.904,4996,2.904,4997,2.904,4998,2.904,4999,2.659,5000,2.904,5001,2.475,5002,4.921,5003,4.921]],["title/components/ProjectOverviewComponent.html",[0,0.083,176,0.935]],["body/components/ProjectOverviewComponent.html",[0,0.149,1,0.907,2,0.807,3,0.103,4,0.095,5,0.723,6,1.004,7,0.983,8,0.944,9,0.087,11,0.871,14,1.234,15,1.926,16,0.871,17,1.445,18,1.378,19,0.871,20,1.273,21,0.922,23,0.922,25,0.111,26,0.543,27,1.384,30,0.807,33,0.807,36,3.304,37,0.772,39,0.668,40,0.008,41,0.574,42,0.198,43,0.543,45,0.685,46,1.202,49,0.539,50,0.802,51,0.678,53,0.276,54,0.328,55,1.342,56,0.119,57,0.018,59,1.304,60,1.207,62,1.26,78,1.232,85,1.568,88,0.723,89,2.34,92,0.983,93,1.209,94,1.185,95,0.754,96,1.696,97,0.983,98,1.983,99,0.889,100,0.77,101,1.123,102,1.26,103,0.907,104,0.983,105,0.907,106,0.871,107,0.983,108,0.907,109,0.983,110,0.853,111,0.871,112,0.938,113,0.889,114,0.853,115,1.004,116,1.57,117,0.871,118,0.071,119,0.889,120,0.94,121,0.907,122,0.907,123,0.819,124,0.983,125,0.871,126,0.983,127,0.907,128,0.983,129,0.907,130,0.983,131,0.889,132,0.983,133,0.889,134,0.983,135,0.635,136,0.983,137,0.889,138,0.424,139,0.983,140,0.907,141,0.983,142,0.907,143,1.57,144,0.907,145,0.983,146,0.907,147,1.57,148,0.907,149,0.983,150,0.925,151,0.983,152,0.871,153,0.983,154,0.907,155,0.983,156,0.853,157,0.836,158,0.983,159,0.907,160,1.312,161,1.366,162,0.907,163,0.983,164,0.871,165,0.493,166,0.983,167,0.889,168,0.907,169,0.964,170,0.907,171,0.983,172,0.889,173,0.889,174,0.871,175,0.983,176,1.532,177,0.983,178,1.608,179,0.708,180,0.871,181,0.983,182,1.209,183,1.185,184,0.889,185,0.907,186,0.604,187,0.853,188,0.693,189,0.907,190,0.907,191,0.889,192,0.983,193,0.907,194,0.819,195,0.983,196,0.907,197,0.983,198,0.853,199,0.889,200,0.907,201,0.819,202,0.983,203,0.907,204,0.608,205,0.853,206,0.889,207,0.983,208,0.871,209,0.983,210,0.871,211,0.983,212,0.853,213,0.983,214,0.853,215,0.983,216,0.853,217,0.925,218,0.983,219,0.005,220,0.005,223,0.692,225,2.989,231,0.622,241,1.916,254,0.53,277,1.371,368,6.441,407,2.087,422,2.561,495,1.606,531,3.789,538,4.249,540,1.97,544,1.059,597,3.792,600,1.668,606,0.435,669,2.376,766,2.669,767,3.011,783,3.331,788,2.562,789,1.904,790,1.817,791,2.087,812,1.401,828,3.235,829,1.916,833,1.817,836,1.432,837,2.79,838,2.79,868,2.286,871,3.707,873,2.027,925,2.221,986,3.144,987,2.905,1006,3.875,1009,2.79,1010,1.817,1011,1.727,1012,1.817,1029,3.527,1030,3.09,1031,2.928,1032,3.407,1033,2.79,1034,2.669,1035,2.464,1036,3.09,1037,3.527,1039,2.928,1044,3.527,1045,1.99,1046,2.376,1062,3.664,1063,3.958,1104,1.401,1179,2.221,1194,1.916,1195,1.817,1196,1.99,1198,2.591,1548,2.464,1656,3.284,1682,2.152,2160,3.284,2717,4.249,2756,3.189,2869,3.284,2932,3.707,3094,2.928,3866,3.853,4584,3.527,4826,5.352,4828,5.352,4831,3.853,4835,5.472,4847,3.284,4864,5.242,4887,4.453,4915,4.292,5004,3.853,5005,6.039,5006,6.938,5007,6.039,5008,6.644,5009,6.039,5010,4.347,5011,4.347,5012,4.347,5013,4.347,5014,4.347,5015,4.347,5016,4.347,5017,4.347,5018,7.497,5019,4.347,5020,4.347]],["title/injectables/ProjectStoreService.html",[528,1.1,538,2.592]],["body/injectables/ProjectStoreService.html",[3,0.133,4,0.122,9,0.112,25,0.143,30,0.957,33,0.957,37,0.81,39,0.971,40,0.008,41,0.619,42,0.207,43,0.788,45,0.973,49,0.737,53,0.267,54,0.423,56,0.154,57,0.024,59,1.368,101,1.044,112,0.988,219,0.006,220,0.006,223,0.728,224,3.47,229,5.089,231,1.187,254,0.961,274,1.695,365,1.587,508,4.211,527,6.738,528,1.722,533,1.465,534,2.123,536,2.346,537,1.625,538,4.059,541,3.156,543,3.003,544,1.402,551,2.544,568,2.916,606,0.858,620,3.092,624,4.243,635,1.868,645,2.346,690,1.66,725,1.62,811,3.781,1032,3.47,1308,3.602,1425,3.338,1552,3.99,1556,4.823,2631,6.346,2634,6.346,2637,4.975,2932,4.395,3609,4.395,4202,6.346,4963,4.555,5008,6.988,5021,7.901,5022,7.16,5023,7.36,5024,8.304,5025,7.16,5026,7.16,5027,7.16,5028,7.16,5029,5.613,5030,7.884,5031,8.304,5032,8.304,5033,7.884,5034,8.304,5035,7.884,5036,8.304,5037,8.304,5038,5.613,5039,5.613,5040,7.16,5041,5.613,5042,7.16,5043,7.16,5044,5.613,5045,7.16,5046,5.613,5047,7.16,5048,7.16,5049,6.346,5050,5.613,5051,5.613,5052,5.613,5053,5.613,5054,5.613,5055,5.613,5056,5.613]],["title/injectables/ProjectsService.html",[528,1.1,5057,3.455]],["body/injectables/ProjectsService.html",[3,0.161,4,0.149,9,0.136,25,0.174,30,1.08,33,0.913,37,0.794,39,0.952,40,0.008,41,0.57,42,0.203,43,0.773,45,0.916,49,0.669,53,0.268,54,0.515,56,0.187,57,0.029,59,1.065,219,0.007,220,0.007,274,2.063,286,1.514,365,1.514,528,1.942,537,1.978,544,1.043,551,3.096,606,0.808,645,2.855,788,2.523,789,2.154,1369,4.145,1389,5.989,1395,5.161,1396,5.543,5049,6.055,5057,6.103,5058,6.055,5059,8.079,5060,8.079,5061,6.832,5062,8.89,5063,8.602,5064,8.89,5065,6.832,5066,8.079,5067,8.079,5068,6.832,5069,8.079,5070,6.832,5071,6.832,5072,6.832]],["title/injectables/QueriesService.html",[528,1.1,1761,2.807]],["body/injectables/QueriesService.html",[2,1.184,3,0.16,4,0.147,9,0.135,25,0.172,26,0.721,27,1.615,33,1.072,37,0.835,39,0.747,40,0.008,41,0.447,42,0.214,43,0.606,53,0.282,54,0.509,56,0.185,57,0.028,219,0.007,220,0.007,274,2.038,508,4.342,511,2.674,528,1.928,551,3.058,645,2.82,1368,6.832,1369,4.277,1761,4.924,2891,5.551,5057,6.832,5073,5.981,5074,6.748,5075,8.015,5076,6.832,5077,6.748,5078,6.748,5079,6.748,5080,6.748,5081,6.748,5082,6.748,5083,6.748,5084,6.748,5085,6.748]],["title/directives/QueryBodyDirective.html",[95,0.793,208,0.916]],["body/directives/QueryBodyDirective.html",[0,0.157,3,0.106,4,0.098,5,1.513,9,0.09,14,0.918,16,0.9,17,1.136,18,0.642,21,0.686,23,0.686,25,0.115,26,0.555,27,1.353,33,0.601,37,0.571,39,0.497,40,0.008,41,0.298,42,0.146,43,0.404,46,1.217,51,0.964,53,0.237,54,0.339,56,0.208,57,0.03,58,2.582,59,1.101,70,2.456,80,3.445,89,3.453,93,1.237,94,0.882,95,1.463,178,1.462,179,1.529,204,0.628,205,0.882,208,1.523,210,1.414,219,0.005,220,0.005,223,0.382,231,0.642,232,3.02,261,2.608,268,4.531,286,0.996,308,0.731,353,3.194,383,3.844,519,2.373,533,1.173,543,2.843,545,1.907,553,3.63,557,2.095,571,1.733,593,1.881,600,1.485,606,0.706,609,1.83,633,1.981,635,2.08,640,1.514,653,2.373,674,2.547,677,4.334,724,2.081,725,1.398,735,4.391,751,1.652,761,2.454,770,3.793,778,1.981,781,4.072,785,3.442,786,2.647,803,1.785,816,1.357,820,3.058,828,2.881,866,3.437,871,3.793,873,3.292,877,1.785,947,2.456,986,2.036,987,2.394,994,4.002,1010,1.878,1011,1.785,1012,1.878,1014,1.481,1045,2.96,1062,2.373,1063,3.262,1100,2.296,1152,4.156,1231,2.095,1257,2.456,1421,4.209,1447,2.759,1619,4.357,1627,4.391,1657,2.759,1665,3.607,1705,4.162,1767,2.759,1788,3.027,1802,2.547,1804,2.884,1813,2.884,1822,3.058,1889,2.723,1905,3.859,2528,3.965,2660,4.391,2730,3.027,2754,4.893,2778,5.744,2932,2.759,3069,2.296,3227,4.667,3987,2.547,4035,2.884,4049,2.759,4164,3.965,4396,3.395,4542,3.395,4605,3.395,4912,3.027,5086,5.019,5087,3.194,5088,6.169,5089,5.013,5090,3.395,5091,4.494,5092,4.494,5093,5.729,5094,5.334,5095,5.334,5096,3.646,5097,3.646,5098,3.646,5099,3.646,5100,3.646,5101,3.646,5102,3.646,5103,3.646,5104,4.667,5105,5.013,5106,3.646,5107,5.013,5108,5.013,5109,4.667,5110,3.646,5111,5.013,5112,4.667,5113,3.646,5114,3.646,5115,3.646,5116,3.646,5117,3.646,5118,5.013,5119,3.646,5120,3.194,5121,3.646,5122,3.646,5123,5.729,5124,3.646,5125,5.729,5126,3.646,5127,3.646,5128,6.846,5129,6.169,5130,5.013,5131,3.395,5132,3.646,5133,3.646,5134,3.646,5135,5.729,5136,3.646,5137,3.646,5138,3.646,5139,5.013,5140,5.013,5141,3.646,5142,3.646,5143,3.646,5144,3.395,5145,3.646,5146,3.646,5147,3.646]],["title/directives/QueryButtonDirective.html",[95,0.793,210,0.916]],["body/directives/QueryButtonDirective.html",[0,0.157,3,0.106,4,0.098,5,1.468,9,0.09,14,0.92,16,0.902,17,1.137,18,0.644,21,0.687,23,0.687,25,0.115,26,0.556,27,1.354,33,0.602,37,0.571,39,0.498,40,0.008,41,0.298,42,0.146,43,0.404,46,1.218,51,0.965,53,0.237,54,0.339,56,0.208,57,0.03,58,2.585,59,1.102,70,2.461,80,3.448,89,3.507,93,1.239,94,1.493,95,1.463,178,1.533,179,1.526,204,0.63,205,0.883,208,1.415,210,1.524,219,0.005,220,0.005,223,0.382,231,0.644,232,3.022,261,2.61,268,4.535,286,0.998,308,0.733,353,3.2,383,3.79,519,2.377,533,1.175,543,2.844,545,1.909,553,3.721,557,2.099,571,1.734,593,1.882,600,1.487,606,0.707,609,1.834,633,1.984,635,2.081,640,1.517,653,2.377,674,2.552,677,4.339,724,2.084,725,1.399,735,4.397,751,1.653,761,2.457,770,3.798,778,1.984,781,3.161,785,3.444,786,2.652,803,1.788,816,1.36,820,3.062,828,2.884,866,3.357,871,3.798,873,3.295,877,1.788,947,2.461,986,2.04,987,2.397,994,4.006,1010,1.882,1011,1.788,1012,1.882,1014,1.483,1045,2.961,1062,2.377,1063,3.267,1100,2.3,1152,4.159,1231,2.099,1257,2.461,1421,4.212,1447,2.764,1619,4.36,1627,4.397,1657,2.764,1665,3.611,1705,3.033,1767,2.764,1788,3.033,1802,2.552,1804,2.889,1813,2.889,1822,3.062,1889,2.727,1905,3.863,2528,3.97,2660,3.2,2730,3.033,2754,4.671,2778,5.339,2932,2.764,3069,2.3,3227,4.673,3987,2.552,4035,2.889,4049,2.764,4164,3.97,4396,3.401,4542,3.401,4605,3.401,4912,4.167,5086,5.023,5087,3.2,5088,5.735,5089,3.653,5093,6.687,5094,5.339,5095,5.339,5096,5.019,5097,5.019,5098,3.653,5099,3.653,5100,3.653,5101,3.653,5102,3.653,5103,3.653,5104,4.673,5105,5.019,5106,3.653,5107,5.019,5108,5.019,5109,4.673,5110,3.653,5111,5.019,5112,4.673,5113,3.653,5114,3.653,5115,3.653,5116,3.653,5117,3.653,5118,5.019,5119,3.653,5120,3.2,5121,3.653,5122,3.653,5123,5.735,5124,3.653,5125,5.735,5126,3.653,5127,3.653,5128,6.85,5129,6.174,5130,5.019,5131,3.401,5132,3.653,5133,3.653,5134,3.653,5135,5.735,5136,3.653,5137,3.653,5138,3.653,5139,5.019,5140,5.019,5141,3.653,5142,3.653,5143,3.653,5144,3.401,5145,3.653,5146,3.653,5147,3.653,5148,4.502,5149,4.502,5150,4.502]],["title/components/QueryComponent.html",[0,0.083,178,0.879]],["body/components/QueryComponent.html",[0,0.158,1,0.636,2,0.623,3,0.072,4,0.066,5,1.47,6,0.704,7,0.69,8,0.662,9,0.061,11,0.61,14,0.952,16,0.61,17,1.424,18,1.352,19,0.61,20,0.517,21,0.711,23,0.711,25,0.078,26,0.419,27,1.343,30,0.623,33,0.407,37,0.758,39,0.626,40,0.008,41,0.496,42,0.187,43,0.569,45,0.718,46,1.232,49,0.237,50,0.86,51,1.064,53,0.197,54,0.23,56,0.173,57,0.024,58,1.947,59,1.167,62,0.972,70,2.547,78,1.603,80,3.498,85,1.681,88,0.507,89,3.46,92,0.69,93,1.268,94,1.11,95,1.338,96,1.433,97,0.69,98,1.826,99,0.623,100,0.54,101,0.919,102,0.972,103,0.636,104,0.69,105,0.636,106,0.61,107,0.69,108,0.636,109,0.69,110,0.598,111,0.61,112,0.812,113,0.623,114,0.598,115,0.775,116,1.279,117,0.61,118,0.05,119,0.623,120,0.89,121,0.636,122,0.636,123,0.574,124,0.69,125,0.61,126,0.69,127,0.636,128,0.69,129,0.636,130,0.69,131,0.623,132,0.69,133,0.623,134,0.69,135,0.445,136,0.69,137,0.623,138,0.297,139,0.69,140,0.636,141,0.69,142,0.636,143,1.279,144,0.636,145,0.69,146,0.636,147,1.279,148,0.636,149,0.69,150,0.649,151,0.69,152,0.61,153,0.69,154,0.636,155,0.69,156,0.598,157,0.586,158,0.69,159,0.636,160,1.012,161,1.054,162,0.636,163,0.69,164,0.61,165,0.346,166,0.69,167,0.623,168,0.636,169,0.676,170,0.636,171,0.69,172,0.623,173,0.623,174,0.61,175,0.69,176,0.623,177,0.69,178,1.521,179,1.521,180,0.61,181,0.69,182,0.61,183,0.914,184,0.623,185,0.636,186,0.466,187,0.598,188,0.486,189,0.636,190,0.636,191,0.623,192,0.69,193,0.636,194,0.877,195,0.69,196,0.636,197,0.69,198,0.598,199,0.623,200,0.636,201,0.574,202,0.69,203,0.636,204,0.791,205,0.598,206,0.623,207,0.69,208,1.441,209,0.69,210,1.441,211,0.69,212,0.598,213,0.69,214,0.598,215,0.69,216,0.598,217,0.649,218,0.69,219,0.004,220,0.004,223,0.396,231,0.666,232,3.142,241,2.054,261,3.032,262,1.721,268,4.379,269,2.054,270,2.454,286,0.676,308,0.758,353,2.166,383,3.79,519,2.46,533,0.795,543,2.87,545,1.745,553,3.402,557,2.172,571,1.388,593,2.056,600,1.523,606,0.566,609,1.898,633,2.054,635,1.877,640,1.57,653,1.609,674,1.728,677,4.416,724,1.905,725,1.054,735,4.501,751,1.376,761,2.246,764,1.721,770,3.888,778,2.054,781,2.38,785,3.48,786,1.796,803,1.211,812,1.502,816,1.407,820,3.135,828,2.637,866,3.344,871,3.888,873,3.181,877,1.851,906,1.294,947,2.547,986,2.111,987,2.454,994,4.243,1010,1.274,1011,1.211,1012,1.274,1014,1.004,1045,2.967,1062,2.986,1063,3.344,1100,2.38,1104,1.502,1152,3.461,1175,1.721,1177,2.87,1178,2.306,1194,2.054,1195,2.647,1196,1.004,1198,1.999,1231,1.421,1257,2.547,1421,4.178,1447,2.86,1467,2.641,1506,1.308,1544,2.547,1619,4.413,1627,3.312,1646,1.274,1647,1.557,1657,2.86,1665,3.676,1682,3.135,1683,3.52,1705,2.053,1767,2.86,1777,1.956,1788,2.053,1802,1.728,1804,2.99,1813,2.99,1822,3.135,1889,2.054,1905,3.932,1986,2.745,2302,2.303,2303,1.728,2528,4.064,2656,1.609,2660,2.166,2706,2.547,2709,2.306,2710,3.312,2730,2.053,2754,4.595,2778,4.784,2799,2.701,2804,2.473,2932,2.86,3069,2.38,3137,4.064,3139,3.78,3227,4.272,3987,2.641,4035,2.99,4049,2.86,4164,4.064,4396,3.52,4540,4.272,4542,3.52,4605,3.52,4900,2.701,4912,2.053,5086,5.919,5087,2.166,5088,5.138,5089,2.473,5093,5.138,5094,4.784,5095,5.655,5096,2.473,5097,2.473,5098,3.78,5099,3.78,5100,3.78,5101,3.78,5102,3.78,5103,3.78,5104,4.784,5105,5.138,5106,3.78,5107,5.536,5108,5.138,5109,4.784,5110,3.78,5111,5.138,5112,4.784,5113,3.78,5114,3.78,5115,3.78,5116,3.78,5117,4.589,5118,5.138,5119,5.536,5120,3.312,5121,3.78,5122,3.78,5123,5.138,5124,4.589,5125,4.589,5126,2.473,5127,2.473,5128,6.073,5129,5.536,5130,3.78,5131,3.52,5132,3.78,5133,3.78,5134,3.78,5135,4.589,5136,2.473,5137,2.473,5138,2.473,5139,5.536,5140,3.78,5141,2.473,5142,2.473,5143,2.473,5144,3.52,5145,3.78,5146,5.138,5147,2.473,5151,4.659,5152,3.048,5153,4.659,5154,3.048,5155,3.048,5156,3.048,5157,3.048,5158,3.048,5159,3.048,5160,3.048,5161,3.048,5162,3.048,5163,3.048,5164,3.048]],["title/interfaces/QueryListParams.html",[118,0.075,1389,3.08]],["body/interfaces/QueryListParams.html",[3,0.152,4,0.14,9,0.129,25,0.164,26,0.701,39,0.863,40,0.008,42,0.211,43,0.843,45,0.731,49,0.705,53,0.201,56,0.213,87,0.731,118,0.137,219,0.006,220,0.006,223,0.547,228,2.459,231,1.199,365,1.729,525,1.716,533,1.681,543,3.008,571,1.581,593,1.716,606,0.78,620,2.271,751,1.399,773,5.226,811,3.401,863,4.118,952,4.595,955,4.604,977,3.697,1045,2.122,1067,2.573,1070,3.346,1369,3.003,1389,5.253,1426,3.093,1641,3.985,1727,4.755,1758,4.421,1831,5.595,1892,4.866,1893,4.866,1896,4.866,1898,4.866,1899,5.543,1934,4.133,1950,5.136,1951,4.316,1955,4.339,1987,4.578,2324,4.339,2325,4.595,2833,5.709,4681,6.328,5109,4.866,5165,5.709,5166,7.799,5167,7.799,5168,7.799,5169,8.718,5170,6.441,5171,5.226,5172,5.226,5173,6.441,5174,6.441,5175,6.441]],["title/components/RegisterComponent.html",[0,0.083,180,0.916]],["body/components/RegisterComponent.html",[0,0.126,1,0.753,2,0.707,3,0.085,4,0.079,5,0.6,6,0.833,7,0.817,8,0.784,9,0.072,11,0.723,16,0.723,17,1.434,18,1.365,19,0.723,20,0.613,21,0.807,23,0.807,25,0.092,26,0.475,30,0.707,33,0.707,37,0.778,39,0.848,40,0.008,41,0.572,42,0.187,43,0.619,45,0.869,46,1.239,49,0.596,50,1.271,51,1.266,53,0.253,54,0.272,56,0.099,57,0.015,59,1.195,62,1.103,78,1.023,81,4.36,84,1.434,87,0.409,88,0.6,89,1.399,92,0.817,93,1.059,94,1.038,95,0.626,96,1.559,97,0.817,98,1.905,99,0.738,100,0.639,101,0.966,102,1.103,103,0.753,104,0.817,105,0.753,106,0.723,107,0.817,108,0.753,109,0.817,110,0.708,111,0.723,112,0.873,113,0.738,114,0.708,115,0.879,116,1.416,117,0.723,118,0.059,119,0.738,120,0.915,121,0.753,122,0.753,123,0.68,124,0.817,125,0.723,126,0.817,127,0.753,128,0.817,129,0.753,130,0.817,131,0.738,132,0.817,133,0.738,134,0.817,135,0.527,136,0.817,137,0.738,138,0.352,139,0.817,140,0.753,141,0.817,142,0.753,143,1.416,144,0.753,145,0.817,146,0.753,147,1.416,148,0.753,149,0.817,150,0.768,151,0.817,152,0.723,153,0.817,154,0.753,155,0.817,156,0.708,157,0.694,158,0.817,159,0.753,160,1.149,161,1.196,162,0.753,163,0.817,164,0.723,165,0.409,166,0.817,167,0.738,168,0.753,169,0.8,170,0.753,171,0.817,172,0.738,173,0.738,174,0.723,175,0.817,176,0.738,177,0.817,178,0.694,179,0.587,180,1.38,181,0.817,182,0.723,183,1.038,184,0.738,185,0.753,186,0.529,187,0.708,188,0.575,189,0.753,190,0.753,191,0.738,192,0.817,193,0.753,194,0.68,195,0.817,196,0.753,197,0.817,198,0.708,199,0.738,200,0.753,201,0.68,202,0.817,203,0.753,204,1.158,205,0.708,206,0.738,207,0.817,208,0.723,209,0.817,210,0.723,211,0.817,212,0.708,213,0.817,214,0.708,215,0.817,216,0.708,217,0.768,218,0.817,219,0.004,220,0.004,223,0.651,228,2.173,231,1.096,234,4.687,244,1.172,246,2.685,247,3.098,250,1.683,251,1.365,254,0.763,264,2.316,282,3.393,294,2.617,308,1.289,310,1.564,311,2.465,335,4.704,396,2.046,412,4.189,495,1.333,517,4.641,518,6.196,531,3.588,533,0.942,543,1.781,549,2.269,571,1.8,572,2.792,580,3.915,600,0.868,606,0.626,633,1.591,640,2.321,666,6.225,676,4.97,688,2.431,689,2.727,716,4.29,725,0.817,726,3.115,752,3.199,759,2.702,775,1.973,841,2.615,902,4.016,956,3.793,963,5.59,986,2.836,987,2.67,1010,1.508,1011,1.434,1012,1.508,1045,2.774,1046,2.89,1074,1.47,1105,3.246,1167,5.789,1192,1.906,1196,1.189,1238,2.956,1316,3.246,1402,4.421,1408,3.393,1426,1.733,1444,3.393,1446,5.771,1447,4.984,1551,3.246,1605,5.627,1688,5.771,1792,2.792,1918,2.727,1934,3.393,2024,2,2168,3.995,2178,4.29,2181,3.197,2394,2.126,2483,5.771,2750,3.199,2767,5.546,2797,4.29,2845,6.5,2889,2.566,2972,5.546,3046,4.29,3062,3.199,3125,2.566,3935,4.215,3937,5.546,3938,4.687,3942,4.687,3952,5.546,3961,3.199,3967,3.199,3968,3.199,4362,3.995,4428,3.995,4486,5.205,4642,4.687,4891,4.687,4897,3.199,4937,6.258,4999,4.29,5176,3.199,5177,5.59,5178,6.258,5179,5.288,5180,6.258,5181,5.546,5182,6.258,5183,5.288,5184,5.288,5185,6.89,5186,3.61,5187,6.258,5188,6.89,5189,6.258,5190,6.89,5191,5.288,5192,5.288,5193,3.61,5194,6.89,5195,5.288,5196,3.61,5197,5.288,5198,5.288,5199,3.61,5200,5.288,5201,5.288,5202,5.288,5203,3.61,5204,5.288,5205,3.61,5206,3.61,5207,5.288,5208,3.61,5209,5.288,5210,5.288,5211,4.29,5212,3.61,5213,3.61,5214,5.288,5215,5.288,5216,3.61,5217,3.61,5218,5.288,5219,3.61,5220,3.61,5221,3.61,5222,3.61,5223,3.61,5224,3.61,5225,3.61,5226,3.61,5227,3.61,5228,3.61,5229,3.61,5230,3.61,5231,2.929,5232,3.61,5233,5.288,5234,3.61,5235,5.288,5236,5.288,5237,3.61,5238,3.61,5239,3.61,5240,3.61,5241,3.61,5242,8.119,5243,5.288]],["title/interfaces/RelationEdge.html",[118,0.075,1222,2.694]],["body/interfaces/RelationEdge.html",[0,0.148,3,0.126,4,0.177,5,1.151,9,0.138,25,0.136,26,0.622,40,0.008,42,0.217,49,0.724,53,0.254,56,0.189,57,0.029,87,0.872,101,0.634,112,0.634,118,0.151,120,0.711,135,0.779,138,0.675,165,0.981,186,0.881,188,0.849,219,0.006,220,0.006,231,1.164,254,0.649,277,2.425,289,4.282,309,3.138,511,1.575,525,1.419,537,1.542,544,1.32,593,2.378,606,0.893,620,1.878,719,1.967,724,1.795,817,2.286,836,1.755,906,1.825,952,3.138,1067,1.963,1068,3.403,1071,3.708,1072,3.493,1095,2.015,1198,3.3,1207,4.531,1208,2.414,1209,3.02,1210,4.814,1211,5.096,1212,3.693,1213,3.324,1214,2.912,1215,2.558,1216,3.298,1217,3.324,1218,2.722,1219,2.813,1220,4.204,1221,4.299,1222,4.797,1223,3.27,1224,3.27,1225,3.27,1226,3.27,1227,3.27,1228,3.27,1229,3.27,1230,3.27,1231,3.228,1232,3.27,1233,3.27,1234,4.25,1235,3.693,1236,3.138,1237,3.138,1238,2.286,1239,3.784,1240,3.419,1241,3.419,1242,1.795,1243,2.484,1244,2.558,1245,3.27,1246,2.912,1247,2.484,1248,2.912,1249,3.27,1250,3.419,1251,2.015,1252,3.419,1253,2.722,1254,3.419,1255,2.348,1256,3.419,1257,2.912,1258,3.419,1259,3.27,1260,3.419,1261,4.359,1262,2.813,1263,3.02,1264,2.558,1265,3.924,1266,3.419,1267,3.419,1268,3.419,1269,4.078,1270,3.419,1271,4.443,1272,3.419,1273,3.419,1274,3.419,1275,3.27,1276,1.967,1277,3.924,1278,4.935,1279,3.419,1280,3.419,1281,5.416,1282,3.419,1283,4.443,1284,4.443,1285,3.419,1286,3.419,1287,4.204,1288,4.443,1289,3.27,1290,4.25,1291,4.443,1292,3.419,1293,4.615,1294,3.656,1295,3.419,1296,3.27,1297,3.419,1298,3.419,1299,3.419,1300,3.27,1301,4.078,1302,3.27,1303,2.912,1304,3.27,1305,2.813]],["title/components/RemoveDialogComponent.html",[0,0.083,182,0.916]],["body/components/RemoveDialogComponent.html",[0,0.144,1,0.826,2,0.756,3,0.094,4,0.086,5,0.658,6,0.914,7,0.895,8,0.86,9,0.079,11,0.793,13,1.612,14,1.155,15,1.83,16,0.793,17,1.44,18,1.372,19,0.793,20,1.477,21,0.863,22,2.829,23,0.863,24,2.425,25,0.101,26,0.508,27,1.291,28,3.486,30,0.756,33,0.529,34,2.244,35,3.179,36,2.491,37,0.752,39,0.438,40,0.008,41,0.552,42,0.192,43,0.356,45,0.641,46,1.161,49,0.513,50,1.043,51,0.882,53,0.205,54,0.298,55,1.221,56,0.155,57,0.017,58,1.654,60,1.099,62,1.179,77,2.561,78,1.122,80,2.561,85,1.428,87,0.816,88,0.658,89,3.155,92,0.895,93,1.132,94,1.109,95,0.686,96,1.627,97,0.895,98,1.945,99,0.809,100,0.701,101,0.991,102,1.179,103,0.826,104,0.895,105,0.826,106,0.793,107,0.895,108,0.826,109,0.895,110,0.777,111,0.793,112,0.905,113,0.809,114,0.777,115,0.94,116,1.492,117,0.793,118,0.093,119,0.809,120,0.928,121,0.826,122,0.826,123,0.745,124,0.895,125,0.793,126,0.895,127,0.826,128,0.895,129,0.826,130,0.895,131,0.809,132,0.895,133,0.809,134,0.895,135,0.578,136,0.895,137,0.809,138,0.386,139,0.895,140,0.826,141,0.895,142,0.826,143,1.492,144,0.826,145,0.895,146,0.826,147,1.492,148,0.826,149,0.895,150,0.843,151,0.895,152,0.793,153,0.895,154,0.826,155,0.895,156,0.777,157,0.761,158,0.895,159,0.826,160,1.228,161,1.279,162,0.826,163,0.895,164,0.793,165,0.449,166,0.895,167,0.809,168,0.826,169,0.877,170,0.826,171,0.895,172,0.809,173,0.809,174,0.793,175,0.895,176,0.809,177,0.895,178,0.761,179,0.644,180,0.793,181,0.895,182,1.44,183,1.663,184,0.809,185,0.826,186,0.761,187,0.777,188,0.631,189,0.826,190,0.826,191,0.809,192,0.895,193,0.826,194,1.596,195,0.895,196,0.826,197,0.895,198,0.777,199,0.809,200,0.826,201,1.242,202,0.895,203,0.826,204,1.006,205,0.777,206,0.809,207,0.895,208,0.793,209,0.895,210,0.793,211,0.895,212,0.777,213,0.895,214,0.777,215,0.895,216,0.777,217,0.843,218,0.895,219,0.005,220,0.005,223,0.336,231,1.164,236,4.077,241,1.745,242,2.635,246,2.829,249,1.654,251,1.497,252,1.794,254,0.689,261,2.088,267,2.635,268,2.54,269,1.745,270,2.19,271,2.99,272,2.813,277,2.494,286,1.253,308,0.644,310,1.17,365,0.877,422,4.905,606,0.396,743,2.43,794,3.808,795,4.66,812,1.276,816,1.707,826,1.794,840,3.604,866,1.612,906,1.348,925,2.888,964,3.47,1003,2.332,1030,4.018,1032,3.306,1033,4.231,1104,2.125,1175,1.462,1177,3.259,1180,1.901,1192,2.09,1194,2.906,1195,2.755,1196,1.304,1201,2.54,1202,3.482,1244,2.714,1276,2.088,1310,4.018,1425,1.845,1461,3.508,1566,3.508,1573,4.881,1604,4.981,1605,6.246,1636,2.99,1646,2.362,1647,2.022,1667,1.901,1682,3.915,1688,2.813,1810,4.018,1889,1.745,1950,2.332,1986,3.33,2159,6.289,2160,4.981,2161,5.844,2162,3.508,2163,4.844,2164,5.844,2165,3.508,2166,4.687,2167,5.844,2168,4.27,2169,5.01,2170,5.01,2171,4.587,2172,5.01,2173,4.018,2174,5.01,2175,5.01,2176,5.01,2177,5.844,2178,3.212,2179,3.508,2180,4.048,2181,3.369,2182,5.844,2183,5.01,2184,3.508,2185,3.508,2186,4.844,2254,2.022,2302,2.99,2303,2.244,2528,3.628,2654,2.54,2655,2.99,2709,2.798,2793,1.901,2798,2.164,2937,2.54,3600,4.018,3836,2.99,4029,5.01,4031,5.01,5244,3.958,5245,5.01,5246,3.958,5247,5.653,5248,5.653,5249,5.653,5250,5.653,5251,7.192,5252,5.653,5253,3.958,5254,3.958,5255,3.958]],["title/components/RemoveProjectMemberComponentComponent.html",[0,0.083,184,0.935]],["body/components/RemoveProjectMemberComponentComponent.htmltitle/components/SetEditorComponent.html",[0,0.083,185,0.954]],["body/components/SetEditorComponent.html",[0,0.117,1,0.649,2,0.766,3,0.074,4,0.068,5,0.518,6,0.719,7,0.704,8,0.676,9,0.062,11,0.624,14,0.968,15,1.591,16,0.624,17,1.424,18,1.355,19,0.624,20,1.401,21,0.723,23,0.723,25,0.079,27,0.804,29,3.965,30,0.633,33,0.416,36,2.822,37,0.803,39,0.345,40,0.008,41,0.481,42,0.204,43,0.28,45,0.823,46,0.475,49,0.604,50,1.181,51,0.999,53,0.242,54,0.235,55,0.961,56,0.085,57,0.013,59,1.176,60,0.864,62,1.336,78,0.883,82,1.834,87,0.726,88,1.323,92,0.704,93,0.948,94,1.124,95,0.821,96,1.449,97,0.704,98,1.837,99,0.636,100,0.551,101,0.925,102,0.988,103,0.649,104,0.704,105,0.649,106,0.624,107,0.704,108,0.649,109,0.704,110,0.611,111,0.624,112,0.948,113,0.636,114,1.593,115,0.787,116,1.296,117,0.624,118,0.051,119,0.636,120,0.905,121,0.649,122,0.649,123,0.586,124,0.704,125,0.624,126,0.704,127,0.649,128,0.704,129,0.649,130,0.704,131,0.636,132,0.704,133,0.636,134,0.704,135,0.455,136,0.704,137,0.636,138,0.303,139,0.704,140,0.649,141,0.704,142,0.649,143,1.296,144,0.649,145,0.704,146,0.649,147,1.296,148,0.649,149,0.704,150,0.663,151,0.704,152,0.624,153,0.704,154,0.649,155,1.296,156,0.611,157,0.599,158,0.704,159,0.649,160,1.029,161,1.071,162,0.649,163,0.704,164,0.624,165,0.726,166,0.704,167,0.636,168,0.649,169,0.69,170,0.649,171,0.704,172,0.636,173,0.636,174,0.624,175,0.704,176,0.636,177,0.704,178,0.599,179,1.227,180,0.624,181,0.704,182,0.624,183,0.929,184,0.636,185,1.336,186,0.922,187,0.929,188,1.349,189,0.649,190,0.649,191,0.636,192,0.704,193,0.649,194,1.42,195,0.704,196,0.649,197,0.704,198,0.611,199,0.636,200,0.649,201,0.586,202,0.704,203,0.649,204,1.014,205,0.611,206,0.968,207,0.704,208,0.624,209,0.704,210,0.624,211,0.704,212,0.611,213,0.704,214,0.611,215,0.704,216,0.611,217,0.663,218,0.704,219,0.006,220,0.004,223,0.264,230,2.501,231,0.819,244,1.419,254,0.38,261,1.15,262,1.749,263,2.526,277,2.378,286,0.69,308,1.042,310,2.037,318,3.842,365,1.914,396,1.765,407,1.495,519,2.501,533,0.812,534,1.791,544,0.723,553,2.087,570,3.074,592,1.765,593,1.835,600,0.749,606,0.64,635,1.893,658,3.366,670,3.931,704,1.237,724,1.595,725,1.893,726,2.79,751,1.576,759,1.591,761,2.276,762,3.19,764,1.749,766,1.911,767,2.679,776,2.541,778,2.087,779,2.76,780,3.86,781,2.419,785,2.676,786,1.834,787,2.526,788,2.116,789,0.982,790,1.301,791,1.495,795,1.834,803,1.237,812,2.91,817,2.032,820,2.344,826,2.597,829,1.372,834,2.274,841,1.979,870,3.842,903,1.765,955,1.644,974,2.146,992,2.79,1001,3.366,1003,2.79,1014,2.675,1015,2.684,1032,2.395,1067,1.815,1084,3.366,1100,2.419,1102,1.765,1104,2.064,1180,2.274,1194,1.372,1195,1.301,1198,1.336,1242,1.595,1421,4.418,1472,2.922,1477,2.526,1478,3.039,1506,2.032,1512,3.578,1515,4.109,1516,4.42,1592,3.19,1619,2.588,1641,2.419,1646,1.301,1647,1.591,1665,3.271,1682,1.541,1683,2.352,1727,4.275,1728,2.79,1751,2.588,1771,3.366,1787,2.31,1796,3.366,1804,1.998,1857,2.684,1949,1.911,1951,1.541,1967,4.073,1972,3.19,2020,3.039,2024,2.167,2053,4.073,2141,2.097,2163,2.097,2221,3.577,2263,3.577,2582,5.379,2703,2.352,2711,2.213,2712,2.097,2723,5.675,2751,6.105,2790,2.76,2793,1.495,2818,2.097,2827,3.577,2831,4.896,2839,5.675,2865,3.86,2874,3.039,2881,4.656,2882,4.656,2884,4.987,2937,1.998,2939,3.248,3116,5.079,3349,1.911,3407,5.079,3609,2.907,3715,2.76,3859,4.197,3975,2.352,3978,5.079,3979,4.197,4005,5.623,4009,3.677,4086,2.213,4109,5.235,4110,3.039,4111,6.228,4112,5.156,4113,4.551,4114,4.551,4115,4.551,4116,4.551,4117,4.551,4118,2.213,4120,2.213,4123,4.551,4126,5.156,4128,2.213,4134,2.213,4170,3.366,4363,4.197,4810,2.526,5023,2.76,5104,3.577,5265,6.403,5266,5.73,5267,5.73,5268,5.73,5269,3.114,5270,3.114,5271,4.736,5272,3.114,5273,3.114,5274,3.114,5275,6.403,5276,6.403,5277,4.736,5278,3.114,5279,3.114,5280,3.114,5281,3.114,5282,4.736,5283,4.736,5284,3.114,5285,4.736,5286,3.114,5287,4.197,5288,3.114,5289,4.736,5290,3.114,5291,3.114,5292,3.114,5293,3.114,5294,3.114,5295,4.736,5296,3.114,5297,3.114,5298,3.114,5299,3.114,5300,3.114,5301,3.114,5302,3.114,5303,3.114,5304,3.114,5305,3.114,5306,3.114,5307,4.736,5308,3.114,5309,3.114,5310,3.114,5311,3.114,5312,4.736,5313,3.114,5314,3.114,5315,3.114,5316,3.114,5317,3.114,5318,3.114,5319,3.114,5320,3.114,5321,3.114,5322,3.114,5323,3.114,5324,3.114,5325,3.114,5326,3.114,5327,3.114,5328,3.114,5329,3.114,5330,3.114,5331,3.114,5332,3.114,5333,3.114,5334,3.114,5335,3.114,5336,3.114,5337,3.114,5338,3.114,5339,3.114]],["title/components/SetEditorDialogComponent.html",[0,0.083,187,0.897]],["body/components/SetEditorDialogComponent.html",[0,0.132,1,0.579,2,0.713,3,0.066,4,0.175,5,0.461,6,0.641,7,0.628,8,0.603,9,0.055,11,0.556,13,1.131,14,0.886,15,1.48,16,0.556,17,1.415,18,1.344,19,0.556,20,1.176,21,0.662,22,2.288,23,0.662,24,1.86,25,0.071,26,0.389,27,1.527,28,2.35,30,0.579,33,0.579,35,2.518,37,0.793,39,0.723,40,0.008,41,0.521,42,0.193,43,0.587,45,0.821,46,1.105,49,0.598,50,1.206,51,1.08,53,0.233,54,0.209,55,0.857,56,0.165,57,0.018,58,1.16,59,1.317,60,0.771,62,0.904,64,1.16,77,1.964,78,1.229,84,1.102,85,1.001,87,0.937,88,1.308,92,0.628,93,0.868,94,0.85,95,0.481,96,1.363,97,0.628,98,1.78,99,0.567,100,1.067,101,0.891,102,0.904,103,0.579,104,0.628,105,0.579,106,0.556,107,0.628,108,0.579,109,0.628,110,0.545,111,0.556,112,0.937,113,0.567,114,1.359,115,0.72,116,1.206,117,0.556,118,0.099,119,0.567,120,0.874,121,0.579,122,0.579,123,1.231,124,0.628,125,0.556,126,0.628,127,0.579,128,0.628,129,0.579,130,0.628,131,0.567,132,0.628,133,0.567,134,0.628,135,0.406,136,0.628,137,0.567,138,0.27,139,0.628,140,0.579,141,0.628,142,0.579,143,1.206,144,0.579,145,0.628,146,0.579,147,1.206,148,0.579,149,0.628,150,0.591,151,0.628,152,0.556,153,0.628,154,0.579,155,0.628,156,0.545,157,0.534,158,0.628,159,0.579,160,0.941,161,0.98,162,0.579,163,0.628,164,0.556,165,0.492,166,0.628,167,0.567,168,0.579,169,0.615,170,0.579,171,0.628,172,0.567,173,0.567,174,0.556,175,0.628,176,0.567,177,0.628,178,0.534,179,1.064,180,0.556,181,0.628,182,0.556,183,0.85,184,0.567,185,0.579,186,0.893,187,1.182,188,1.451,189,0.579,190,0.579,191,0.567,192,0.628,193,0.579,194,1.135,195,0.628,196,0.579,197,0.628,198,0.545,199,0.567,200,0.579,201,1.135,202,0.628,203,0.579,204,0.388,205,0.545,206,0.567,207,0.628,208,0.556,209,0.628,210,0.556,211,0.628,212,0.545,213,0.628,214,0.545,215,0.628,216,0.545,217,0.591,218,0.628,219,0.007,220,0.004,223,0.236,231,1.07,232,1.102,241,1.223,242,2.021,244,1.604,249,1.16,252,1.258,254,1.068,262,1.025,269,1.223,277,0.875,294,1.374,308,1.219,365,1.744,412,1.517,533,0.724,534,2.017,544,1.105,545,1.337,549,1.191,557,1.294,563,2.369,570,1.333,600,1.042,606,0.815,619,2.661,635,1.807,651,1.635,690,1.782,724,0.935,727,1.91,740,1.635,751,0.603,759,2.214,761,2.118,762,1.87,766,1.704,767,2.961,776,2.815,778,2.656,781,2.214,785,2.731,788,1.969,789,0.875,790,1.16,791,1.333,803,1.102,812,2.693,816,0.838,826,1.258,834,3.138,844,1.466,877,2.118,889,1.258,903,1.573,906,1.232,923,1.517,926,1.87,941,2.962,944,1.517,955,1.466,977,1.223,987,2.335,991,1.573,1010,1.16,1011,1.102,1012,1.16,1014,1.428,1015,3.705,1032,2.228,1039,1.87,1045,0.915,1067,0.787,1070,1.191,1104,1.942,1175,1.025,1177,2.416,1178,1.374,1179,2.724,1188,1.635,1192,2.289,1194,2.35,1195,2.228,1196,2.153,1202,2.289,1242,2.03,1276,1.969,1425,1.294,1451,1.466,1472,2.901,1476,1.076,1485,1.418,1504,1.635,1506,1.191,1512,3.391,1515,3.422,1516,3.422,1520,1.635,1543,4.644,1544,2.914,1580,2.289,1646,1.16,1667,1.333,1676,2.214,1682,2.145,1709,1.781,1727,2.457,1751,1.517,1757,1.704,1759,3.572,1760,1.704,1787,1.564,1820,1.16,1822,2.983,1859,1.781,1861,1.635,1894,1.573,1897,1.781,1944,3.339,1951,2.145,2055,1.573,2130,1.87,2131,1.635,2132,1.635,2141,1.87,2203,2.781,2215,1.704,2219,2.781,2582,5.311,2656,1.466,2704,1.87,2706,1.517,2707,1.635,2709,1.374,2711,4.646,2712,1.87,2793,2.56,2806,2.097,2818,3.592,2842,1.704,2881,3.867,2882,4.194,2884,1.781,2892,3.592,2906,3.081,2939,2.457,3369,2.252,3595,2.252,3609,1.704,3851,1.973,3893,1.781,3935,1.87,3987,1.573,3995,2.919,4004,4.059,4005,5.553,4006,4.938,4007,2.097,4008,2.097,4009,3.867,4010,2.097,4011,3.274,4012,3.274,4013,2.097,4014,2.097,4016,1.973,4017,2.097,4018,2.097,4022,2.097,4023,2.097,4024,2.097,4025,1.973,4028,4.938,4030,1.87,4032,2.097,4035,1.781,4036,2.097,4037,2.097,4039,2.097,4040,2.097,4041,2.097,4044,2.097,4045,2.097,4048,2.097,4049,1.704,4050,2.661,4051,4.028,4052,3.274,4053,2.097,4054,1.87,4055,2.097,4056,2.097,4057,2.097,4058,3.274,4059,3.274,4060,2.097,4061,2.097,4062,2.097,4063,2.097,4064,2.097,4065,3.274,4066,2.097,4067,3.274,4068,2.097,4069,2.097,4070,2.097,4071,2.097,4072,2.097,4073,2.097,4074,2.097,4075,2.097,4076,2.097,4077,2.097,4078,2.097,4079,2.097,4080,2.097,4081,2.097,4082,3.274,4083,4.028,4084,2.097,4085,2.097,4086,1.973,4087,2.097,4088,2.097,4089,2.097,4090,1.973,4091,2.097,4092,2.097,4093,2.097,4094,4.028,4095,2.097,4096,2.097,4097,2.097,4098,2.097,4099,2.097,4100,2.097,4101,2.097,4102,2.097,4103,2.097,4104,2.097,4105,2.097,4106,2.097,4107,2.097,4108,2.097,4109,1.87,4110,4.194,4111,4.646,4112,1.973,4113,1.973,4114,1.973,4115,4.646,4116,1.973,4117,1.973,4118,3.79,4119,4.028,4120,3.79,4121,4.028,4122,2.097,4123,3.081,4124,2.097,4125,2.097,4126,3.79,4127,2.097,4128,1.973,4129,2.097,4130,2.097,4131,3.274,4132,3.274,4133,2.097,4134,1.973,4135,2.097,4136,2.097,4137,2.097,4138,2.097,4139,2.097,4140,2.097,4141,4.552,4142,2.097,4143,3.274,4144,2.097,4145,3.274,4146,2.097,4147,3.274,4148,2.097,4149,3.274,4150,3.274,4151,2.097,4152,2.097,4153,2.097,4154,2.097,4155,3.274,4156,2.097,4157,2.097,4158,2.097,4159,2.097,4160,2.097,4161,2.097,4162,2.097,4163,3.274,4164,1.781,4165,2.097,4166,2.097,4167,2.097,4168,2.097,4169,2.097,4170,1.973,4171,2.097,5245,3.841,5340,4.334,5341,4.334,5342,4.334,5343,4.334,5344,4.334,5345,2.776,5346,2.776,5347,2.776,5348,2.776,5349,2.776,5350,2.776,5351,2.776,5352,2.776,5353,2.776,5354,2.776,5355,2.776,5356,2.776,5357,2.776,5358,2.776,5359,2.776,5360,4.334,5361,4.334,5362,4.334,5363,2.776,5364,2.776,5365,2.776,5366,2.776,5367,2.776,5368,5.332,5369,2.776,5370,2.46,5371,2.776,5372,2.776,5373,2.776,5374,2.776]],["title/interfaces/SetEditorDialogData.html",[118,0.075,4110,2.935]],["body/interfaces/SetEditorDialogData.html",[0,0.128,2,0.502,3,0.089,4,0.188,9,0.075,13,1.528,14,0.767,15,1.51,17,0.56,18,0.536,20,0.637,21,0.573,22,1.61,23,0.573,24,1.61,25,0.096,26,0.489,27,1.503,28,1.654,33,0.502,35,2.273,40,0.008,42,0.211,43,0.698,46,0.977,49,0.697,51,0.585,53,0.256,54,0.283,55,1.158,56,0.192,57,0.023,58,1.568,59,1.305,60,1.042,64,1.568,84,1.49,87,0.949,88,1.166,100,0.664,112,0.647,114,1.255,118,0.105,123,1.322,165,0.426,179,1.142,186,0.87,187,0.736,188,1.238,219,0.007,220,0.005,231,1.003,232,1.49,242,1.749,244,1.722,249,1.568,252,1.7,254,1.114,277,2.213,294,1.857,308,1.336,365,1.883,525,0.999,533,0.979,534,2.42,544,1.223,545,1.679,549,1.61,557,1.749,563,2.973,570,1.802,593,2.263,600,0.902,606,0.87,619,3.339,635,1.944,651,2.211,690,2.075,724,1.264,727,2.397,740,2.211,751,0.815,759,2.779,761,2.16,762,4.727,767,3.031,776,3.003,778,3.093,781,3.585,785,2.932,788,2.363,789,1.183,790,1.568,791,1.802,803,1.49,812,2.645,826,1.7,834,3.369,844,1.981,877,1.49,889,1.7,906,0.767,923,2.051,926,2.528,941,1.7,944,2.051,977,1.654,987,2.108,991,2.127,1010,1.568,1011,1.49,1012,1.568,1014,1.792,1015,3.977,1032,1.568,1039,2.528,1045,1.236,1067,1.064,1070,1.61,1242,2.364,1425,1.749,1451,1.981,1472,3.371,1476,1.454,1485,1.917,1504,2.211,1506,1.61,1512,1.654,1515,2.408,1516,2.408,1520,2.211,1543,3.491,1580,2.872,1676,2.779,1709,2.408,1727,3.083,1751,2.051,1757,2.303,1759,3.497,1760,2.303,1787,1.962,1820,1.568,1822,3.473,1861,2.211,1894,2.127,1897,2.408,1944,3.806,1951,2.692,2055,2.127,2130,2.528,2131,2.211,2132,2.211,2141,2.528,2203,3.491,2215,2.303,2582,2.303,2818,2.528,2842,2.303,2881,5.142,2882,4.985,2884,4.503,2892,4.31,2906,3.866,2939,2.127,3609,2.303,3851,2.667,3893,2.408,3935,2.528,3987,2.127,3995,3.664,4004,4.31,4005,2.408,4006,5.627,4007,2.835,4008,2.835,4009,4.985,4010,2.835,4011,4.109,4012,4.109,4013,2.835,4014,2.835,4016,2.667,4017,2.835,4018,2.835,4022,2.835,4023,2.835,4024,2.835,4025,2.667,4028,5.627,4030,2.528,4032,2.835,4035,2.408,4036,2.835,4037,2.835,4039,2.835,4040,2.835,4041,2.835,4044,2.835,4045,2.835,4048,2.835,4049,2.303,4050,3.339,4051,4.834,4052,4.109,4053,2.835,4054,2.528,4055,2.835,4056,2.835,4057,2.835,4058,4.109,4059,4.109,4060,2.835,4061,2.835,4062,2.835,4063,2.835,4064,2.835,4065,4.109,4066,2.835,4067,4.109,4068,2.835,4069,2.835,4070,2.835,4071,2.835,4072,2.835,4073,2.835,4074,2.835,4075,2.835,4076,2.835,4077,2.835,4078,2.835,4079,2.835,4080,2.835,4081,2.835,4082,4.109,4083,4.834,4084,2.835,4085,2.835,4086,2.667,4087,2.835,4088,2.835,4089,2.835,4090,2.667,4091,2.835,4092,2.835,4093,2.835,4094,4.834,4095,2.835,4096,2.835,4097,2.835,4098,2.835,4099,2.835,4100,2.835,4101,2.835,4102,2.835,4103,2.835,4104,2.835,4105,2.835,4106,2.835,4107,2.835,4108,2.835,4109,2.528,4110,4.106,4111,5.521,4112,4.988,4113,4.988,4114,4.988,4115,5.295,4116,4.988,4117,4.988,4118,2.667,4119,2.835,4120,2.667,4121,2.835,4122,2.835,4123,3.866,4124,2.835,4125,2.835,4126,4.548,4127,2.835,4128,2.667,4129,2.835,4130,2.835,4131,4.109,4132,4.109,4133,2.835,4134,2.667,4135,2.835,4136,2.835,4137,2.835,4138,2.835,4139,2.835,4140,2.835,4141,2.835,4142,2.835,4143,4.109,4144,2.835,4145,2.835,4146,2.835,4147,2.835,4148,2.835,4149,2.835,4150,4.109,4151,2.835,4152,2.835,4153,2.835,4154,2.835,4155,2.835,4156,2.835,4157,2.835,4158,2.835,4159,2.835,4160,2.835,4161,2.835,4162,2.835,4163,4.109,4164,2.408,4165,2.835,4166,2.835,4167,2.835,4168,2.835,4169,2.835,4170,2.667,4171,2.835]],["title/interfaces/SetMultiSource.html",[118,0.075,4009,2.935]],["body/interfaces/SetMultiSource.html",[0,0.129,2,0.734,3,0.09,4,0.192,9,0.076,13,1.548,14,0.777,15,1.524,17,0.568,18,0.543,20,0.645,21,0.58,22,1.631,23,0.58,24,1.631,25,0.097,26,0.493,27,1.506,28,1.676,33,0.508,35,2.295,40,0.008,42,0.184,43,0.634,46,0.984,49,0.64,51,0.593,53,0.257,54,0.287,55,1.173,56,0.193,57,0.023,58,1.589,59,1.309,60,1.055,64,1.589,84,1.51,87,0.952,88,1.174,100,0.673,112,0.654,114,1.265,118,0.116,123,1.33,165,0.431,179,1.149,186,0.88,187,0.746,188,1.282,219,0.007,220,0.005,223,0.323,231,1.009,232,1.51,242,1.772,244,1.73,249,1.589,252,1.723,254,1.115,277,1.199,294,1.882,308,1.341,365,1.966,525,1.013,533,0.992,534,2.438,544,1.228,545,1.695,549,1.631,557,1.772,563,3.001,570,1.825,593,1.463,600,0.914,606,0.872,619,3.371,635,2.036,651,2.24,690,2.087,724,1.85,727,2.841,740,2.24,751,0.826,759,2.805,761,2.181,762,2.561,767,3.042,776,3.009,778,3.546,781,2.805,785,2.95,788,2.381,789,1.199,790,1.589,791,1.825,803,1.51,812,2.811,826,1.723,834,3.39,844,2.007,877,1.51,889,1.723,906,0.777,923,2.078,926,2.561,941,1.723,944,2.078,977,1.676,987,2.128,991,2.155,1010,1.589,1011,1.51,1012,1.589,1014,1.809,1015,4.002,1032,1.589,1039,2.561,1045,1.253,1067,1.078,1070,1.631,1242,2.71,1425,1.772,1451,2.007,1472,3.379,1476,2.128,1485,1.942,1504,2.24,1506,1.631,1512,1.676,1515,2.44,1516,2.44,1520,2.24,1543,3.524,1580,2.9,1676,2.805,1709,2.44,1727,3.113,1751,3.001,1757,2.334,1759,3.523,1760,2.334,1787,1.981,1820,1.589,1822,3.495,1861,3.235,1894,3.113,1897,2.44,1944,4.208,1951,2.718,2055,3.113,2130,2.561,2131,2.24,2132,2.24,2141,2.561,2203,4.137,2215,2.334,2582,2.334,2818,2.561,2842,2.334,2881,4.531,2882,4.137,2884,2.44,2892,5.419,2906,3.903,2939,2.155,3609,2.334,3851,2.702,3893,2.44,3935,2.561,3987,2.155,3995,3.699,4004,4.342,4005,2.44,4006,5.895,4007,2.872,4008,2.872,4009,4.805,4010,2.872,4011,4.148,4012,4.148,4013,2.872,4014,2.872,4016,2.702,4017,2.872,4018,2.872,4022,2.872,4023,2.872,4024,2.872,4025,2.702,4028,6.437,4030,2.561,4032,2.872,4035,2.44,4036,2.872,4037,2.872,4039,2.872,4040,2.872,4041,2.872,4044,2.872,4045,2.872,4048,2.872,4049,2.334,4050,4.334,4051,5.895,4052,5.895,4053,4.148,4054,2.561,4055,2.872,4056,2.872,4057,2.872,4058,4.148,4059,4.148,4060,2.872,4061,2.872,4062,2.872,4063,2.872,4064,2.872,4065,4.148,4066,2.872,4067,4.148,4068,2.872,4069,2.872,4070,2.872,4071,2.872,4072,2.872,4073,2.872,4074,2.872,4075,2.872,4076,2.872,4077,2.872,4078,2.872,4079,2.872,4080,2.872,4081,2.872,4082,4.148,4083,4.87,4084,2.872,4085,2.872,4086,2.702,4087,2.872,4088,2.872,4089,2.872,4090,2.702,4091,2.872,4092,2.872,4093,2.872,4094,4.87,4095,2.872,4096,2.872,4097,2.872,4098,2.872,4099,2.872,4100,2.872,4101,2.872,4102,2.872,4103,2.872,4104,2.872,4105,2.872,4106,2.872,4107,2.872,4108,2.872,4109,2.561,4110,3.524,4111,4.582,4112,2.702,4113,2.702,4114,2.702,4115,3.903,4116,2.702,4117,2.702,4118,2.702,4119,2.872,4120,2.702,4121,2.872,4122,2.872,4123,3.903,4124,2.872,4125,2.872,4126,4.582,4127,2.872,4128,2.702,4129,2.872,4130,2.872,4131,4.148,4132,4.148,4133,2.872,4134,2.702,4135,2.872,4136,2.872,4137,2.872,4138,2.872,4139,2.872,4140,2.872,4141,2.872,4142,2.872,4143,4.148,4144,2.872,4145,2.872,4146,2.872,4147,2.872,4148,2.872,4149,2.872,4150,4.148,4151,2.872,4152,2.872,4153,2.872,4154,2.872,4155,2.872,4156,2.872,4157,2.872,4158,2.872,4159,2.872,4160,2.872,4161,2.872,4162,2.872,4163,4.148,4164,2.44,4165,2.872,4166,2.872,4167,2.872,4168,2.872,4169,2.872,4170,2.702,4171,2.872]],["title/components/SettingsDialogComponent.html",[0,0.083,189,0.954]],["body/components/SettingsDialogComponent.html",[0,0.14,1,1.312,2,0.841,3,0.109,4,0.101,5,0.767,6,1.065,7,1.044,8,1.002,9,0.092,11,1.732,12,3.486,13,1.88,14,1.286,15,1.987,16,0.924,17,1.448,18,1.381,19,1.611,20,1.468,21,0.96,22,3.071,23,0.96,24,2.699,25,0.118,26,0.565,27,1.52,28,3.389,30,0.841,33,0.617,34,2.616,35,3.362,36,3.389,37,0.785,39,0.511,40,0.008,41,0.55,42,0.182,43,0.415,45,0.812,46,1.174,47,4.472,49,0.489,50,1.161,51,0.981,53,0.281,54,0.54,55,1.941,56,0.126,57,0.019,58,1.928,59,0.72,60,1.281,62,1.932,63,3.322,64,1.928,88,0.767,92,1.044,93,1.26,94,1.234,95,0.8,96,1.739,97,1.044,98,2.007,99,0.943,100,0.817,101,1.03,102,1.312,103,0.963,104,1.044,105,0.963,106,0.924,107,1.044,108,0.963,109,1.044,110,0.905,111,0.924,112,0.958,113,0.943,114,0.905,115,1.046,116,1.619,117,0.924,118,0.076,119,0.943,120,0.947,121,0.963,122,0.963,123,0.869,124,1.044,125,0.924,126,1.044,127,0.963,128,1.044,129,0.963,130,1.044,131,0.943,132,1.044,133,0.943,134,1.044,135,0.674,136,1.044,137,0.943,138,0.45,139,1.044,140,0.963,141,1.044,142,0.963,143,1.619,144,0.963,145,1.044,146,0.963,147,1.619,148,0.963,149,1.044,150,0.982,151,1.044,152,0.924,153,1.044,154,0.963,155,1.044,156,0.905,157,0.887,158,1.044,159,0.963,160,1.367,161,1.423,162,0.963,163,1.044,164,0.924,165,0.523,166,1.044,167,0.943,168,1.312,169,1.784,170,0.963,171,1.044,172,0.943,173,0.943,174,0.924,175,1.044,176,0.943,177,1.044,178,0.887,179,0.751,180,0.924,181,1.044,182,0.924,183,1.234,184,0.943,185,0.963,186,0.629,187,0.905,188,0.735,189,1.604,190,0.963,191,0.943,192,1.044,193,0.963,194,0.869,195,1.044,196,0.963,197,1.044,198,0.905,199,0.943,200,0.963,201,0.869,202,1.044,203,0.963,204,0.645,205,0.905,206,0.943,207,1.044,208,0.924,209,1.044,210,0.924,211,1.044,212,0.905,213,1.044,214,0.905,215,1.044,216,0.905,217,0.982,218,1.044,219,0.005,220,0.005,246,1.98,249,1.928,250,2.151,251,1.745,252,2.091,349,3.28,407,3.021,466,6.534,468,3.486,533,1.204,536,1.928,543,1.555,624,2.358,690,1.364,725,1.044,1102,3.566,1438,3.28,1439,3.486,1442,3.744,1482,3.486,1552,3.28,2274,3.486,2285,3.486,2291,3.486,2831,3.28,2865,3.108,2895,2.833,3377,6.814,3378,6.238,5375,7.665,5376,8.099,5377,8.046,5378,7.689,5379,7.689,5380,7.689,5381,4.615,5382,7.159,5383,4.615,5384,4.615,5385,7.159,5386,7.159,5387,6.292,5388,4.615,5389,5.576]],["title/components/SideNavComponent.html",[0,0.083,190,0.954]],["body/components/SideNavComponent.html",[0,0.15,1,0.927,2,0.82,3,0.166,4,0.097,5,0.739,6,1.026,7,1.005,8,0.965,9,0.089,11,0.89,16,0.89,17,1.446,18,1.379,19,0.89,20,0.754,21,0.936,23,0.936,25,0.113,26,0.551,27,1.51,33,0.594,37,0.813,39,0.492,40,0.008,41,0.568,42,0.206,43,0.399,49,0.345,50,1.514,51,1.28,53,0.256,54,0.335,56,0.122,57,0.019,58,1.857,62,1.279,88,1.019,91,1.497,92,1.005,93,1.228,94,1.203,95,0.77,96,1.712,97,1.005,98,1.992,99,0.908,100,0.787,101,1.059,102,1.279,103,0.927,104,1.005,105,0.927,106,0.89,107,1.005,108,0.927,109,1.005,110,0.872,111,0.89,112,0.945,113,0.908,114,0.872,115,1.019,116,1.588,117,0.89,118,0.073,119,0.908,120,0.942,121,0.927,122,0.927,123,0.837,124,1.005,125,0.89,126,1.005,127,0.927,128,1.005,129,0.927,130,1.005,131,0.908,132,1.005,133,0.908,134,1.005,135,0.649,136,1.005,137,0.908,138,0.8,139,1.005,140,0.927,141,1.005,142,0.927,143,1.588,144,0.927,145,1.005,146,0.927,147,1.588,148,0.927,149,1.005,150,0.946,151,1.005,152,0.89,153,1.005,154,0.927,155,1.005,156,0.872,157,0.854,158,1.005,159,0.927,160,1.332,161,1.387,162,0.927,163,1.005,164,0.89,165,0.504,166,1.005,167,0.908,168,0.927,169,0.985,170,0.927,171,1.005,172,0.908,173,0.908,174,0.89,175,1.005,176,0.908,177,1.005,178,0.854,179,0.723,180,0.89,181,1.005,182,0.89,183,1.203,184,0.908,185,0.927,186,0.613,187,0.872,188,0.708,189,0.927,190,1.578,191,1.752,192,1.005,193,0.927,194,0.837,195,1.005,196,0.927,197,1.005,198,0.872,199,0.908,200,0.927,201,1.425,202,1.005,203,0.927,204,0.621,205,0.872,206,0.908,207,1.005,208,0.89,209,1.005,210,0.89,211,1.005,212,0.872,213,1.005,214,0.872,215,1.005,216,0.872,217,0.946,218,1.005,219,0.005,220,0.005,223,0.377,267,3.273,269,1.959,270,2.376,365,1.359,372,7.216,495,1.641,508,3.634,511,2.075,513,4.505,531,3.99,545,1.892,552,4.192,606,0.444,653,3.706,724,2.065,906,1.435,974,2.778,986,3.598,987,3.077,1010,1.857,1011,1.765,1012,1.857,1053,3.764,1054,3.764,1074,1.81,1175,2.264,1179,2.27,1196,1.464,1197,3.159,1235,2.944,1425,2.072,1646,1.857,1647,2.27,1687,3.939,2056,3.159,2212,4.856,2254,2.27,2257,5.434,2292,3.357,2656,2.347,2859,3.606,2932,3.764,2937,2.852,3128,5.434,3132,3.606,3133,3.159,3237,6.707,3361,3.475,4584,3.606,4887,3.935,4895,5.434,4905,6.221,5390,7.882,5391,3.939,5392,6.131,5393,6.131,5394,5.434,5395,7.019,5396,6.131,5397,7.019,5398,7.019,5399,7.019,5400,7.019,5401,7.94,5402,7.019,5403,4.444,5404,6.131,5405,4.444,5406,4.444,5407,4.444,5408,6.131,5409,4.444,5410,7.019,5411,4.444,5412,4.444,5413,4.444,5414,4.444,5415,4.444,5416,4.444,5417,4.444,5418,4.444,5419,4.444,5420,4.444,5421,4.444,5422,4.444,5423,4.444,5424,3.939]],["title/injectables/StateService.html",[528,1.1,552,2.415]],["body/injectables/StateService.html",[3,0.129,4,0.119,8,1.189,9,0.109,25,0.14,26,0.633,30,0.942,33,0.732,37,0.786,39,0.862,40,0.008,41,0.564,42,0.194,43,0.7,45,0.884,46,0.835,49,0.606,50,1.3,51,1.099,53,0.271,54,0.413,56,0.193,57,0.023,59,1.283,81,3.599,87,0.884,101,1.112,118,0.09,186,0.547,219,0.006,220,0.006,223,0.598,228,2.221,244,1.213,254,0.95,274,1.653,286,1.213,308,1.147,310,2.083,495,2.021,508,2.628,510,5.716,524,5.885,526,4.441,527,5.716,528,1.694,529,7.291,530,4.851,531,4.173,532,3.89,533,1.428,534,2.947,535,3.686,536,2.287,537,1.584,538,5.024,539,4.441,540,2.48,541,3.105,542,6.244,543,2.771,544,1.075,545,2.538,546,4.745,547,6.244,548,4.705,549,3.022,550,6.244,551,2.48,552,3.72,553,3.957,554,5.322,555,7.285,556,4.851,557,3.284,558,4.325,559,3.72,560,6.244,561,6.244,562,4.745,563,3.851,564,5.322,565,3.022,566,6.244,567,5.716,568,2.869,569,3.72,570,3.382,571,1.912,572,3.72,573,6.244,574,6.214,575,5.322,576,6.244,577,4.851,578,4.441,579,4.851,580,3.599,581,6.244,582,4.851,583,4.851,584,4.851,585,4.851,586,6.244,587,6.244,588,3.36,589,4.851,590,4.851,591,6.244,592,4.663,593,1.876,594,5.322,595,6.244,596,5.716,597,3.851,598,6.244,599,6.244,600,1.694,601,4.851,602,5.716,603,4.851,604,4.851,605,4.851,606,0.705,607,4.851,608,4.851,609,2.229,623,3.89,645,2.287,5425,7.045,5426,7.045,5427,7.045,5428,5.473,5429,5.473,5430,5.473]],["title/components/TextDisplayComponent.html",[0,0.083,193,0.954]],["body/components/TextDisplayComponent.html",[0,0.145,1,0.838,2,0.764,3,0.095,4,0.088,5,0.668,6,0.928,7,0.909,8,0.873,9,0.08,11,0.805,16,0.805,17,1.441,18,1.373,19,0.805,20,0.682,21,0.872,23,0.872,25,0.102,26,0.513,30,0.764,37,0.821,39,0.632,40,0.008,41,0.542,42,0.201,43,0.513,45,0.754,46,1.168,49,0.65,50,1.336,51,1.345,53,0.178,54,0.303,56,0.156,57,0.017,59,1.037,62,1.192,77,2.589,78,1.885,82,2.367,85,2.612,88,0.668,89,2.214,92,0.909,93,1.144,94,1.121,95,0.697,96,1.638,97,0.909,98,1.951,99,0.821,100,0.711,101,0.995,102,1.192,103,0.838,104,0.909,105,0.838,106,0.805,107,0.909,108,0.838,109,0.909,110,0.788,111,0.805,112,0.911,113,0.821,114,1.64,115,1.204,116,1.504,117,0.805,118,0.066,119,0.821,120,0.93,121,0.838,122,0.838,123,0.757,124,0.909,125,0.805,126,0.909,127,0.838,128,0.909,129,0.838,130,0.909,131,0.821,132,0.909,133,0.821,134,0.909,135,0.587,136,0.909,137,0.821,138,0.391,139,0.909,140,0.838,141,0.909,142,0.838,143,1.504,144,0.838,145,0.909,146,0.838,147,1.504,148,0.838,149,0.909,150,0.855,151,0.909,152,0.805,153,0.909,154,0.838,155,0.909,156,0.788,157,0.772,158,0.909,159,0.838,160,1.241,161,1.292,162,0.838,163,0.909,164,0.805,165,0.456,166,0.909,167,0.821,168,0.838,169,0.891,170,0.838,171,0.909,172,0.821,173,0.821,174,0.805,175,0.909,176,0.821,177,0.909,178,0.772,179,0.654,180,0.805,181,0.909,182,0.805,183,1.121,184,0.821,185,0.838,186,0.665,187,0.788,188,0.64,189,0.838,190,0.838,191,0.821,192,0.909,193,1.51,194,1.787,195,0.909,196,0.838,197,0.909,198,0.788,199,0.821,200,0.838,201,1.441,202,0.909,203,0.838,204,1.111,205,0.788,206,0.821,207,0.909,208,0.805,209,0.909,210,0.805,211,0.909,212,0.788,213,0.909,214,0.788,215,0.909,216,0.788,217,0.855,218,0.909,219,0.005,220,0.005,223,0.341,244,1.762,261,3.087,262,2.825,269,2.518,270,2.806,277,1.802,308,1.178,458,6.761,557,3.1,571,0.986,572,3.017,593,1.771,600,1.911,606,0.402,653,3.51,658,4.061,669,4.181,725,1.798,764,2.11,795,2.367,840,4.181,866,2.949,887,2.053,903,4.336,906,1.708,992,3.366,1006,4.647,1071,1.637,1074,1.637,1075,2.367,1104,2.812,1174,3.561,1175,2.674,1177,2.589,1178,1.989,1179,2.053,1180,2.743,1192,3.823,1194,2.518,1195,1.679,1196,1.324,1198,3.282,1421,3.51,1544,2.196,1646,2.388,1657,2.466,1667,1.929,1905,2.196,2085,3.238,2654,2.578,2655,3.035,2656,3.017,2706,3.123,2707,3.366,2709,1.989,2724,5.064,2733,3.035,2754,2.466,2793,1.929,2795,3.26,2798,2.196,3137,2.578,3367,5.892,3369,3.26,3600,2.856,4090,4.061,4182,5.892,4184,7.537,4232,5.064,4540,3.035,4908,3.561,4914,3.26,5370,3.561,5431,7.262,5432,3.26,5433,5.713,5434,6.648,5435,5.713,5436,6.648,5437,6.648,5438,7.241,5439,8.178,5440,6.648,5441,4.018,5442,5.892,5443,4.018,5444,4.018,5445,4.018,5446,5.713,5447,5.713,5448,4.018,5449,4.018,5450,4.018,5451,4.018,5452,4.018,5453,4.018,5454,4.018,5455,4.018,5456,4.018,5457,4.018,5458,4.018,5459,5.713,5460,4.018,5461,4.018,5462,5.713,5463,5.713,5464,4.018,5465,4.018,5466,5.713,5467,3.561,5468,3.561,5469,4.018,5470,4.018]],["title/interfaces/TextFragment.html",[118,0.075,2238,3.08]],["body/interfaces/TextFragment.html",[0,0.148,3,0.142,4,0.13,9,0.12,14,1.224,15,2.07,17,0.894,18,0.856,21,0.914,23,0.914,25,0.153,26,0.67,27,1.016,40,0.008,41,0.563,42,0.176,49,0.661,50,1.104,51,0.934,53,0.272,54,0.451,56,0.204,57,0.025,59,1.163,60,1.662,87,0.846,94,1.175,115,1.454,118,0.122,138,0.583,152,1.199,194,1.601,219,0.006,220,0.006,228,2.351,244,1.653,254,0.73,286,1.327,308,0.974,311,2.791,365,1.327,383,2.639,426,3.272,511,1.77,525,1.594,533,1.562,535,4.032,536,2.502,540,2.713,543,2.512,552,3.937,572,3.161,606,0.599,613,3.272,615,3.058,679,4.785,683,4.393,808,3.393,812,1.929,821,4.032,903,3.393,1045,1.972,1104,1.929,1255,2.639,1405,3.527,1476,3.504,1478,3.842,1506,2.568,1512,3.746,1541,4.255,1923,3.675,2173,4.255,2181,3.058,2187,5.212,2188,4.255,2189,3.675,2190,4.255,2191,5.47,2192,5.89,2193,6.05,2194,6.05,2195,6.05,2196,6.589,2197,4.522,2198,5.023,2199,4.857,2200,4.646,2201,3.527,2202,4.032,2203,3.842,2204,5.772,2205,4.857,2206,4.857,2207,4.857,2208,4.857,2209,4.522,2210,5.633,2211,4.857,2212,3.842,2213,4.857,2214,4.857,2215,3.675,2216,4.857,2217,4.857,2218,4.522,2219,3.842,2220,5.47,2221,4.522,2222,4.857,2223,4.857,2224,4.857,2225,4.857,2226,4.857,2227,4.857,2228,4.522,2229,4.857,2230,4.857,2231,4.857,2232,4.857,2233,6.05,2234,4.857,2235,4.857,2236,4.857,2237,4.255,2238,5.47]],["title/classes/TimeFormatter.html",[57,0.019,830,2.592]],["body/classes/TimeFormatter.html",[3,0.133,4,0.123,9,0.112,25,0.143,30,0.959,37,0.729,39,0.874,40,0.008,41,0.523,42,0.187,43,0.709,45,0.895,49,0.739,56,0.154,57,0.03,73,7.366,75,4.845,81,4.484,87,0.895,219,0.006,220,0.006,223,0.706,254,1.07,571,2.039,592,4.065,606,0.903,719,2.078,724,2.8,749,3.611,755,5.097,806,3.991,816,2.166,819,4.246,830,4.065,831,4.896,861,3.999,862,4.251,863,2.971,1067,2.433,1193,6.404,1676,3.664,1792,2.971,1862,4.602,2024,2.128,2365,5.334,2522,4.83,4054,5.782,4404,7.366,5231,4.565,5468,7.366,5471,4.987,5472,7.171,5473,7.171,5474,7.171,5475,7.171,5476,5.627,5477,7.121,5478,7.171,5479,7.171,5480,7.171,5481,7.171,5482,7.171,5483,7.171,5484,7.171,5485,7.171,5486,8.584,5487,7.171,5488,5.627,5489,6.355,5490,7.171,5491,8.919,5492,7.171,5493,7.171,5494,9.188,5495,5.627,5496,7.171,5497,5.818,5498,5.627,5499,7.171,5500,5.627,5501,7.171,5502,5.627,5503,5.627,5504,5.627,5505,5.627,5506,7.893,5507,5.627,5508,5.627,5509,7.171,5510,5.627,5511,5.627,5512,7.171,5513,7.171,5514,5.627,5515,5.627,5516,5.627,5517,5.627,5518,5.627,5519,5.627,5520,5.627,5521,5.627,5522,5.627]],["title/directives/TimelineCoalescedItemsDirective.html",[95,0.793,212,0.897]],["body/directives/TimelineCoalescedItemsDirective.html",[0,0.145,3,0.136,4,0.125,5,1.568,9,0.115,14,1.175,16,1.151,17,1.291,18,0.822,21,0.877,23,0.877,25,0.147,26,0.653,27,1.234,33,0.768,37,0.671,39,0.636,40,0.008,41,0.381,42,0.172,43,0.516,53,0.248,54,0.433,56,0.229,57,0.035,58,3.331,87,0.652,88,1.533,95,1.587,186,0.727,198,1.426,199,1.896,205,1.128,212,1.564,214,1.426,216,1.426,217,1.223,219,0.006,220,0.006,223,0.488,224,2.402,231,0.822,244,1.274,261,3.444,286,1.274,308,1.183,310,1.699,383,3.997,428,3.528,452,4.085,461,3.973,470,5.369,620,2.026,635,2.186,704,2.283,725,1.803,751,1.249,781,4.633,786,3.386,805,4.664,806,3.827,813,6.273,819,2.937,828,3.389,830,4.748,831,3.386,832,3.528,843,4.085,866,3.519,873,2.68,908,4.085,925,3.713,944,3.142,1062,3.035,1063,3.838,1152,3.142,1820,2.402,1857,3.258,2024,2.174,2059,3.386,2081,3.258,2895,3.528,3040,3.872,3069,2.937,3352,3.528,3354,3.689,3363,4.664,4050,5.142,4204,4.085,4811,4.085,5090,4.342,5523,6.328,5524,5.491,5525,5.748,5526,5.491,5527,5.491,5528,4.085,5529,4.342,5530,4.342,5531,4.342,5532,4.342,5533,4.342,5534,4.342,5535,4.342,5536,4.342,5537,6.022,5538,4.342,5539,5.491,5540,4.342,5541,4.342,5542,4.342]],["title/components/TimelineItemComponent.html",[0,0.083,198,0.897]],["body/components/TimelineItemComponent.html",[0,0.14,1,0.754,2,0.708,3,0.085,4,0.079,5,1.436,6,0.835,7,0.818,8,0.785,9,0.072,11,0.724,14,1.082,16,0.724,17,1.436,18,1.366,19,0.724,20,0.614,21,0.808,23,0.808,25,0.16,26,0.476,33,0.483,37,0.75,39,0.4,40,0.008,41,0.508,42,0.192,43,0.325,50,1.156,51,0.977,53,0.195,54,0.273,56,0.189,57,0.029,58,2.617,62,1.104,78,2.174,85,1.91,87,0.6,88,1.482,91,2.669,92,0.818,93,1.06,94,1.039,95,1.46,96,1.56,97,0.818,98,1.905,99,0.739,100,0.64,101,0.967,102,1.104,103,0.754,104,0.818,105,0.754,106,0.724,107,0.818,108,0.754,109,0.818,110,0.709,111,0.724,112,0.874,113,0.739,114,0.709,115,0.88,116,1.417,117,0.724,118,0.059,119,0.739,120,0.915,121,0.754,122,0.754,123,0.681,124,0.818,125,0.724,126,0.818,127,0.754,128,0.818,129,0.754,130,0.818,131,0.739,132,0.818,133,0.739,134,0.818,135,0.528,136,0.818,137,0.739,138,0.352,139,0.818,140,0.754,141,0.818,142,0.754,143,1.417,144,0.754,145,0.818,146,0.754,147,1.417,148,0.754,149,0.818,150,0.769,151,0.818,152,0.724,153,0.818,154,0.754,155,0.818,156,0.709,157,0.695,158,0.818,159,0.754,160,1.15,161,1.198,162,0.754,163,0.818,164,0.724,165,0.41,166,0.818,167,0.739,168,0.754,169,0.801,170,0.754,171,0.818,172,0.739,173,0.739,174,0.724,175,0.818,176,0.739,177,0.818,178,0.695,179,0.588,180,0.724,181,0.818,182,0.724,183,1.039,184,0.739,185,0.754,186,0.734,187,0.709,188,0.576,189,0.754,190,0.754,191,0.739,192,0.818,193,0.754,194,0.997,195,0.818,196,0.754,197,0.818,198,1.44,199,1.906,200,0.754,201,1.561,202,0.818,203,0.754,204,0.505,205,0.709,206,0.739,207,0.818,208,0.724,209,0.818,210,0.724,211,0.818,212,1.353,213,0.818,214,1.353,215,0.818,216,1.353,217,1.127,218,0.818,219,0.004,220,0.004,223,0.307,224,2.212,231,0.757,241,2.761,244,1.173,261,3.312,262,1.955,269,3.234,270,2.971,272,2.569,277,1.14,286,0.801,308,1.019,310,1.565,365,0.801,383,3.491,428,3.25,452,2.569,461,2.893,470,5.582,600,0.869,609,1.472,620,1.866,635,1.634,704,2.103,725,1.417,751,0.785,764,1.955,781,3.917,786,2.13,795,3.119,805,4.019,806,3.979,812,1.165,813,5.773,816,1.599,819,2.705,828,2.92,830,4.604,831,2.13,832,2.219,843,4.452,866,3.431,873,1.685,906,1.842,908,4.452,925,3.522,944,2.893,994,3.55,1062,2.795,1063,3.64,1071,3.226,1074,3.375,1075,4.062,1104,2.222,1112,1.976,1152,1.976,1175,1.955,1177,4.014,1178,2.62,1180,2.542,1181,3.763,1183,5.216,1194,2.333,1195,1.511,1196,2.61,1197,4.9,1200,4.295,1202,2.795,1276,2.71,1305,1.909,1544,1.976,1545,3.999,1548,2.049,1644,2.13,1646,1.511,1667,3.523,1682,3.413,1689,2.32,1755,4.452,1820,2.212,1857,3.001,1950,3.119,2024,2.002,2059,3.119,2081,3.001,2307,2.933,2656,3.307,2703,2.731,2705,5.551,2706,3.423,2707,3.119,2708,3.204,2709,4.102,2793,2.542,2798,2.893,2807,3.204,2808,3.204,2895,3.25,2939,3.001,3040,3.566,3069,2.705,3352,2.219,3354,3.397,3596,2.569,3600,2.569,3727,6.111,4050,3.845,4204,3.763,4811,2.569,4823,2.933,4899,3.204,5424,5.551,5467,4.692,5523,4.731,5524,2.731,5526,5.208,5527,4.731,5528,3.763,5529,3.999,5530,4.731,5531,3.999,5532,4.731,5533,3.999,5534,4.731,5535,4.731,5536,2.731,5537,4.731,5538,2.731,5539,3.999,5540,2.731,5541,2.731,5542,2.731,5543,3.615,5544,5.294,5545,3.615,5546,3.615,5547,3.615,5548,3.615,5549,3.615,5550,3.615,5551,5.294,5552,3.615,5553,3.615,5554,3.615,5555,3.615,5556,3.615,5557,3.615,5558,4.692,5559,3.615,5560,3.615,5561,5.294,5562,3.615,5563,5.294,5564,3.615,5565,7.338,5566,3.615,5567,3.615,5568,3.615,5569,3.615,5570,3.615,5571,3.615,5572,3.615]],["title/directives/TimelineItemDeletedDirective.html",[95,0.793,214,0.897]],["body/directives/TimelineItemDeletedDirective.html",[0,0.145,3,0.135,4,0.125,5,1.567,9,0.114,14,1.171,16,1.147,17,1.289,18,0.819,21,0.875,23,0.875,25,0.146,26,0.652,27,1.231,33,0.766,37,0.67,39,0.634,40,0.008,41,0.38,42,0.171,43,0.515,53,0.248,54,0.432,56,0.229,57,0.035,58,3.326,87,0.65,88,1.532,95,1.586,186,0.796,198,1.562,199,1.895,205,1.124,212,1.423,214,1.562,216,1.423,217,1.22,219,0.006,220,0.006,223,0.487,224,2.394,231,0.819,244,1.27,261,3.442,286,1.27,308,1.296,310,1.694,383,3.994,428,3.517,452,4.072,461,3.965,470,5.362,620,2.02,635,2.183,704,2.276,725,1.801,751,1.245,781,4.63,786,3.375,805,4.655,806,3.822,813,6.135,819,2.927,828,3.382,830,4.743,831,3.375,832,3.517,843,4.072,866,3.516,873,2.671,908,4.072,925,3.706,944,3.132,1062,3.025,1063,3.83,1152,3.132,1820,2.394,1857,3.248,2024,2.167,2059,3.375,2081,3.248,2895,3.517,3040,3.859,3069,2.927,3352,3.517,3354,3.677,4050,5.136,4204,4.072,4811,5.156,5090,4.328,5523,6.321,5524,4.328,5526,6.013,5527,6.013,5528,4.072,5529,4.328,5530,4.328,5531,4.328,5532,4.328,5533,4.328,5534,4.328,5535,4.328,5536,4.328,5537,6.013,5538,4.328,5539,5.48,5540,4.328,5541,4.328,5542,4.328,5573,5.729,5574,5.729]],["title/directives/TimelineSingleItemDirective.html",[95,0.793,216,0.897]],["body/directives/TimelineSingleItemDirective.html",[0,0.145,3,0.136,4,0.125,5,1.568,9,0.115,14,1.175,16,1.151,17,1.291,18,0.822,21,0.877,23,0.877,25,0.147,26,0.653,27,1.234,33,0.768,37,0.671,39,0.636,40,0.008,41,0.381,42,0.172,43,0.516,53,0.248,54,0.433,56,0.229,57,0.035,58,3.331,87,0.652,88,1.533,95,1.587,186,0.727,198,1.426,199,1.896,205,1.128,212,1.426,214,1.426,216,1.564,217,1.547,219,0.006,220,0.006,223,0.488,224,2.402,231,0.822,244,1.274,261,3.444,286,1.274,308,1.183,310,1.699,383,3.997,428,3.528,452,4.085,461,3.973,470,5.369,620,2.026,635,2.186,704,2.283,725,1.803,751,1.249,781,4.633,786,3.386,805,4.664,806,3.827,813,6.273,819,2.937,828,3.389,830,4.748,831,3.386,832,3.528,843,4.085,866,3.519,873,2.68,908,4.085,925,3.713,944,3.142,1062,3.035,1063,3.838,1152,3.142,1820,2.402,1857,3.258,2024,2.174,2059,3.386,2081,3.258,2895,3.528,3040,3.872,3069,2.937,3352,3.528,3354,3.689,3362,5.094,4050,5.142,4204,4.085,4811,4.085,5090,4.342,5523,6.328,5524,4.342,5526,5.491,5527,5.491,5528,4.085,5529,4.342,5530,4.342,5531,4.342,5532,4.342,5533,4.342,5534,4.342,5535,4.342,5536,4.342,5537,6.022,5538,4.342,5539,5.491,5540,4.342,5541,4.342,5542,4.342,5575,5.094]],["title/components/TopToolbarComponent.html",[0,0.083,200,0.954]],["body/components/TopToolbarComponent.html",[0,0.15,1,0.93,2,0.822,3,0.105,4,0.097,5,0.741,6,1.03,7,1.009,8,0.969,9,0.089,11,0.893,16,0.893,17,1.446,18,1.379,19,0.893,20,1.287,21,0.938,23,0.938,25,0.157,26,0.552,27,1.496,30,0.822,33,0.596,36,3.341,37,0.778,39,0.494,40,0.008,41,0.545,42,0.188,43,0.401,45,0.697,46,0.938,50,1.134,51,0.959,53,0.262,54,0.336,55,1.376,56,0.122,57,0.019,59,0.696,62,1.714,87,0.506,88,0.741,89,2.382,91,2.071,92,1.009,93,1.231,94,1.206,95,0.773,96,1.715,97,1.009,98,1.993,99,0.912,100,0.79,101,1.036,102,1.282,103,0.93,104,1.009,105,0.93,106,0.893,107,1.009,108,0.93,109,1.009,110,0.875,111,0.893,112,0.946,113,0.912,114,0.875,115,1.022,116,1.591,117,0.893,118,0.073,119,0.912,120,0.943,121,0.93,122,0.93,123,0.84,124,1.009,125,1.408,126,1.009,127,0.93,128,1.009,129,0.93,130,1.009,131,0.912,132,1.009,133,0.912,134,1.009,135,0.652,136,1.009,137,0.912,138,0.435,139,1.009,140,0.93,141,1.009,142,0.93,143,1.591,144,0.93,145,1.009,146,0.93,147,1.591,148,0.93,149,1.009,150,0.949,151,1.009,152,0.893,153,1.009,154,0.93,155,1.009,156,0.875,157,0.857,158,1.009,159,0.93,160,1.335,161,1.391,162,0.93,163,1.009,164,0.893,165,0.506,166,1.009,167,0.912,168,0.93,169,0.989,170,0.93,171,1.009,172,0.912,173,0.912,174,0.893,175,1.009,176,0.912,177,1.009,178,0.857,179,0.726,180,0.893,181,1.009,182,0.893,183,1.206,184,0.912,185,0.93,186,0.615,187,0.875,188,0.711,189,1.282,190,0.93,191,1.625,192,1.009,193,0.93,194,0.84,195,1.009,196,0.93,197,1.009,198,0.875,199,0.912,200,1.581,201,1.676,202,1.009,203,0.93,204,0.983,205,0.875,206,0.912,207,1.009,208,0.893,209,1.009,210,0.893,211,1.009,212,0.875,213,1.009,214,0.875,215,1.009,216,0.875,217,0.949,218,1.009,219,0.005,220,0.005,223,0.379,244,1.363,261,1.647,267,2.866,286,0.989,311,2.866,349,3.17,370,6.961,407,2.142,465,3.953,466,3.37,521,6.718,533,1.164,536,1.864,543,2.369,545,1.376,565,2.637,568,2.504,600,1.072,613,3.36,624,4.062,656,4.987,690,1.319,704,1.772,725,1.391,743,2.738,764,2.27,816,2.401,881,4.369,901,4.369,906,1.437,1054,4.653,1055,3.484,1071,1.817,1074,2.504,1175,1.647,1177,2.785,1178,2.208,1179,3.14,1188,2.628,1196,1.47,1202,3.714,1552,3.17,1556,5.355,1646,1.864,1667,2.142,1682,3.043,1683,3.37,1689,2.862,1751,3.36,1866,4.14,2163,3.004,2200,3.36,2254,4.199,2260,4.644,2268,5.707,2273,3.953,2274,6.208,2281,5.448,2282,5.448,2283,5.448,2284,5.448,2285,5.313,2291,3.37,2306,7.284,2709,2.208,2795,3.619,2827,4.644,2831,4.999,2865,4.14,2932,3.773,3069,3.14,3142,5.448,3971,4.987,4972,4.369,5389,5.448,5558,3.953,5576,7.604,5577,3.953,5578,7.579,5579,5.448,5580,7.033,5581,6.147,5582,7.579,5583,7.579,5584,7.033,5585,7.033,5586,4.46,5587,4.46,5588,4.46,5589,4.46,5590,4.46,5591,4.46,5592,4.46,5593,4.46,5594,4.46,5595,4.46]],["title/interfaces/User.html",[118,0.075,204,0.639]],["body/interfaces/User.html",[3,0.144,4,0.133,9,0.122,11,1.639,25,0.155,26,0.677,27,1.28,40,0.008,41,0.613,42,0.178,45,0.691,46,0.93,49,0.713,53,0.279,54,0.459,56,0.167,57,0.026,59,1.176,87,0.691,118,0.1,157,1.449,183,1.195,186,0.609,204,1.33,219,0.006,220,0.006,230,3.98,254,0.919,274,1.84,286,1.351,310,1.801,376,4.331,454,2.546,495,2.25,517,5.514,525,1.623,528,1.465,531,3.709,533,1.59,536,2.546,543,2.881,544,1.411,545,1.88,571,1.85,606,0.855,613,3.33,616,5.358,624,3.113,637,3.91,638,5.358,640,2.053,646,4.943,647,4.603,648,7.255,649,4.943,650,5.4,651,4.441,652,7.255,653,3.217,654,5.4,655,5.4,656,4.943,659,5.4,661,6.681,663,5.4,665,5.4,666,5.078,668,5.4,669,3.33,670,5.025,671,4.64,672,5.4,673,4.943,674,3.454,675,5.695,676,4.12,677,3.74,679,3.91,680,5.4,681,5.4,683,4.441,688,4.104,689,4.603,690,1.801,691,5.4,692,5.4,693,4.943,694,5.4,695,5.4,696,5.4,697,5.4,698,5.4,699,5.4,700,5.4,701,5.4,702,4.943,703,5.4,704,2.42,705,5.4,706,5.4,707,5.4,708,5.4,709,5.4,710,5.4,711,5.4,712,5.4,713,5.4,714,5.4,715,5.4,716,4.943,717,5.4]],["title/components/UserItemComponent.html",[0,0.083,203,0.954]],["body/components/UserItemComponent.html",[0,0.155,1,1.053,2,0.893,3,0.119,4,0.11,5,0.839,6,1.165,7,1.142,8,1.096,9,0.101,11,1.011,16,1.011,17,1.453,18,1.386,19,1.011,20,0.857,21,1.02,23,1.02,25,0.129,37,0.692,40,0.008,41,0.606,42,0.177,50,1.233,51,1.042,53,0.208,54,0.381,56,0.138,57,0.021,62,1.394,88,1.245,92,1.142,93,1.338,94,1.311,95,0.875,96,1.804,97,1.142,98,2.04,99,1.032,100,0.893,101,1.051,102,1.394,103,1.053,104,1.142,105,1.053,106,1.011,107,1.142,108,1.053,109,1.142,110,0.99,111,1.011,112,0.987,113,1.032,114,0.99,115,1.111,116,1.695,117,1.011,118,0.083,119,1.032,120,0.957,121,1.053,122,1.053,123,0.951,124,1.142,125,1.011,126,1.142,127,1.053,128,1.142,129,1.053,130,1.142,131,1.032,132,1.142,133,1.032,134,1.142,135,0.738,136,1.142,137,1.032,138,0.492,139,1.142,140,1.053,141,1.142,142,1.053,143,1.695,144,1.053,145,1.142,146,1.053,147,1.695,148,1.053,149,1.142,150,1.074,151,1.142,152,1.011,153,1.142,154,1.053,155,1.142,156,0.99,157,0.97,158,1.142,159,1.053,160,1.452,161,1.512,162,1.053,163,1.142,164,1.011,165,0.573,166,1.142,167,1.032,168,1.053,169,1.119,170,1.053,171,1.142,172,1.032,173,1.032,174,1.011,175,1.142,176,1.032,177,1.142,178,0.97,179,0.822,180,1.011,181,1.142,182,1.011,183,1.311,184,1.032,185,1.053,186,0.668,187,0.99,188,0.804,189,1.053,190,1.053,191,1.032,192,1.142,193,1.053,194,0.951,195,1.142,196,1.053,197,1.142,198,0.99,199,1.032,200,1.053,201,0.951,202,1.142,203,1.663,204,1.312,205,0.99,206,1.032,207,1.142,208,1.011,209,1.142,210,1.011,211,1.142,212,0.99,213,1.142,214,0.99,215,1.142,216,0.99,217,1.074,218,1.142,219,0.006,220,0.006,223,0.429,231,0.955,244,1.768,258,5.422,537,1.461,600,1.607,676,4.095,725,1.804,764,2.468,789,1.592,974,3.028,1104,2.802,1646,2.793,1647,3.414,1744,5.659,1777,4.288,2590,6.47,2711,3.588,2806,3.813,3069,3.414,3352,3.099,3353,6.078,3354,4.288,5575,4.474,5596,7.067,5597,7.491,5598,5.047,5599,5.922,5600,5.047,5601,6.682,5602,5.047]],["title/injectables/UserNotifyService.html",[528,1.1,987,1.772]],["body/injectables/UserNotifyService.html",[3,0.18,4,0.135,9,0.124,25,0.158,30,1.019,33,0.83,37,0.816,39,0.914,40,0.008,41,0.547,42,0.195,43,0.742,45,0.865,46,1.164,49,0.699,53,0.238,54,0.468,56,0.17,57,0.026,59,1.189,201,1.436,204,1.258,219,0.006,220,0.006,223,0.701,224,3.187,274,1.875,286,1.376,308,1.401,419,4.413,420,6.236,477,6.985,481,4.894,528,1.493,541,3.361,571,2.025,616,5.42,637,3.984,645,2.594,866,3.507,947,3.393,986,3.901,987,2.955,1011,3.419,1014,2.513,1045,3.124,1195,3.187,1239,4.168,1467,3.519,1835,5.137,2495,5.502,2512,6.188,2514,6.188,2515,6.188,2516,6.188,2528,5.905,3141,6.759,5112,4.69,5603,7.63,5604,5.502,5605,7.626,5606,7.626,5607,6.208,5608,6.208,5609,7.626,5610,6.208,5611,7.626,5612,6.759,5613,7.626,5614,7.626,5615,6.208,5616,6.208,5617,6.208,5618,6.208,5619,6.208,5620,6.208,5621,6.208,5622,6.208,5623,6.208]],["title/injectables/UsersService.html",[528,1.1,5076,3.455]],["body/injectables/UsersService.html",[3,0.155,4,0.143,9,0.131,25,0.167,30,1.052,33,0.874,37,0.78,39,0.871,40,0.008,41,0.56,42,0.207,43,0.707,45,0.893,49,0.612,53,0.263,54,0.493,56,0.179,57,0.027,59,1.02,120,0.671,179,1.426,219,0.007,220,0.007,274,1.975,286,1.45,412,3.575,528,1.893,534,3.194,537,1.893,551,2.964,593,1.742,606,0.845,638,6.229,645,2.733,676,4.303,724,2.203,760,2.883,788,2.416,789,2.062,877,2.598,1104,2.108,1369,4.086,1395,4.941,1396,5.307,1512,3.722,1551,4.832,1586,3.853,1728,3.853,1787,2.36,1987,4.649,3913,4.649,3919,6.002,5076,5.947,5171,5.307,5172,5.307,5624,5.797,5625,6.54,5626,8.763,5627,8.444,5628,8.763,5629,6.54,5630,7.872,5631,6.54,5632,7.872,5633,6.54,5634,7.872,5635,6.54,5636,6.54,5637,6.976,5638,6.54,5639,6.54,5640,6.54,5641,6.54,5642,6.54,5643,6.54,5644,6.54,5645,6.54,5646,6.54]],["title/classes/Vector.html",[57,0.019,3779,3.455]],["body/classes/Vector.html",[0,0.134,2,0.56,3,0.099,4,0.196,9,0.084,25,0.107,26,0.529,27,1.605,30,0.787,33,0.909,37,0.845,39,0.935,40,0.008,41,0.56,42,0.206,43,0.759,45,1.028,46,0.898,49,0.326,50,1.361,51,0.918,53,0.131,57,0.029,70,2.291,76,5.574,87,1.022,100,1.376,112,0.701,138,0.573,165,1.007,186,0.589,219,0.005,220,0.005,223,0.729,254,1.009,289,2.074,308,0.958,544,0.64,549,1.798,559,2.213,564,3.166,569,2.213,571,2.031,593,1.568,600,1.415,606,0.68,635,1.093,653,2.213,704,2.338,719,1.548,727,2.594,736,6.888,740,3.467,775,2.291,795,4.876,817,1.798,824,3.4,826,1.899,836,2.431,872,4.183,887,2.141,906,1.755,915,3.4,923,2.291,927,3.166,941,3.083,1034,2.573,1055,2.375,1067,2.615,1068,3.636,1071,2.397,1072,3.625,1073,2.979,1094,2.979,1095,1.585,1175,2.174,1242,2.893,1243,1.954,1247,1.954,1264,2.012,1287,4.618,1537,4.446,1619,2.291,1631,2.469,1767,3.613,1802,4.405,1864,3.965,1865,3.166,1866,2.823,1867,3.965,1882,2.979,1886,4.183,1986,4.346,2005,2.979,2057,2.979,2063,4.446,2085,2.375,2712,3.965,2929,3.4,2930,3.166,3045,5.574,3177,3.4,3267,6.165,3279,5.139,3519,3.166,3562,4.446,3595,5.52,3747,2.979,3748,7.392,3749,3.4,3760,3.714,3761,5.216,3764,4.776,3773,3.714,3779,7.335,3781,3.714,3783,3.714,3784,5.216,3785,3.4,3786,3.714,3787,3.714,3789,5.216,3790,5.216,3791,5.216,3792,5.216,3793,3.714,3794,3.714,3795,7.142,3796,5.986,3797,6.539,3798,5.216,3799,5.216,3800,3.714,3801,3.714,3802,3.714,3803,3.714,3804,3.714,3805,3.714,3806,3.714,3807,3.714,3808,3.714,3809,3.714,3810,3.714,3811,3.4,3812,2.979,3813,3.714,3814,3.714,3815,3.714,3816,3.714,3817,6.029,3818,5.216,3819,3.714,3820,3.714,3821,3.714,3822,5.216,3823,3.714,3824,6.539,3825,3.714,3826,3.714,3827,3.714,3828,3.714,3829,3.714,3830,5.986,3831,3.714,3832,3.714,3833,3.714,3834,3.714,3835,3.714,3836,3.166,3837,3.714,3838,3.714,3839,3.714,3840,3.714,3841,3.714,3842,3.714,3843,3.714,3844,3.714,3845,3.714,3846,5.216,4755,3.714,5394,3.714,5647,5.886,5648,5.886,5649,6.803,5650,6.803,5651,7.378,5652,6.803,5653,6.803,5654,6.803,5655,5.886,5656,4.191,5657,4.191,5658,4.191,5659,4.191,5660,4.191,5661,4.191,5662,4.191,5663,5.886,5664,4.191,5665,4.191,5666,5.886,5667,4.191,5668,4.191,5669,4.191,5670,4.191,5671,4.191,5672,4.191,5673,4.191,5674,4.191,5675,4.191,5676,4.191,5677,4.191,5678,4.191,5679,4.191,5680,4.191,5681,5.886,5682,5.886,5683,5.886,5684,4.191,5685,4.191,5686,4.191,5687,4.191,5688,4.191,5689,4.191,5690,4.191,5691,4.191]],["title/coverage.html",[5692,5.542]],["body/coverage.html",[0,0.173,1,0.636,5,0.775,9,0.061,10,2.701,11,0.933,12,2.303,13,3.601,40,0.008,42,0.072,57,0.037,62,0.972,72,2.166,74,2.166,75,1.871,76,3.52,85,3.403,87,0.346,95,1.247,99,0.623,101,0.856,102,1.321,103,0.636,105,0.636,108,0.636,110,0.598,111,0.61,113,0.623,114,0.914,115,1.053,117,0.61,118,0.151,119,0.623,120,0.768,121,0.636,122,0.636,125,0.61,127,0.636,129,0.636,131,0.623,133,0.623,135,0.445,137,0.623,138,0.877,140,0.636,142,0.636,144,0.636,146,0.636,148,0.636,150,0.649,152,0.61,154,0.636,157,0.586,159,0.636,162,0.636,164,0.61,167,0.623,168,0.636,170,0.636,172,0.623,173,0.623,174,0.61,176,0.623,178,0.586,180,0.61,182,0.61,184,0.623,185,0.636,187,0.598,188,1.009,189,0.636,190,0.636,193,0.636,196,0.636,198,0.598,200,0.636,203,0.636,204,0.426,206,0.623,208,0.61,210,0.61,212,0.598,214,0.598,216,0.598,219,0.004,220,0.004,221,2.701,222,2.166,273,2.701,300,2.303,336,4.589,365,0.676,366,2.303,368,2.303,370,2.473,372,2.473,377,3.332,405,4.178,406,3.916,422,2.745,433,2.166,438,4.325,439,4.064,442,1.728,447,2.473,450,2.473,454,1.947,455,2.303,458,2.303,463,2.473,466,2.303,468,2.303,470,4.266,472,2.473,480,2.473,497,2.303,499,2.166,501,2.303,502,3.312,524,2.303,526,3.78,528,2.137,538,1.728,552,1.609,593,2.437,609,1.241,610,2.303,612,2.701,624,1.557,646,3.78,688,3.138,718,1.557,720,2.701,751,0.662,757,2.701,758,2.701,767,1.126,776,1.027,783,1.463,805,1.956,806,4.22,807,3.78,830,1.728,831,1.796,834,1.463,906,1.946,973,2.701,987,1.181,1011,1.211,1051,4.501,1052,4.501,1061,2.166,1071,1.241,1095,3.361,1101,2.053,1106,2.166,1186,2.303,1189,4.589,1193,4.589,1207,1.796,1208,4.11,1209,4.914,1211,1.796,1212,1.463,1213,1.463,1215,3.706,1220,1.666,1221,1.609,1222,1.796,1223,1.871,1224,1.871,1225,1.871,1226,1.871,1227,1.871,1228,1.871,1229,1.871,1230,1.871,1261,1.728,1277,1.728,1306,1.871,1307,2.701,1308,4.617,1368,2.303,1369,4.297,1370,2.701,1389,2.053,1395,2.303,1401,2.303,1404,1.796,1452,2.303,1472,1.181,1485,1.557,1547,2.701,1550,2.166,1553,1.956,1573,2.99,1662,2.701,1663,2.473,1664,2.701,1676,1.557,1677,4.85,1691,5.042,1693,1.956,1757,1.871,1758,2.641,1760,1.871,1761,1.871,1764,2.166,1765,2.166,1773,2.166,1776,2.166,1782,2.166,1881,2.303,1948,1.871,1976,1.956,2111,2.701,2121,2.303,2130,2.053,2131,1.796,2159,4.272,2187,1.956,2188,4.02,2189,3.472,2190,4.02,2197,2.303,2198,2.053,2238,2.053,2239,2.166,2240,2.473,2247,2.701,2293,2.303,2314,4.756,2315,4.954,2343,1.666,2348,1.956,2349,1.871,2416,1.956,2445,2.053,2479,5.837,2496,2.473,2503,2.473,2504,2.473,2513,2.473,2517,2.473,2522,2.053,2570,5.114,2582,4.188,2584,4.784,2588,2.473,2590,2.473,2591,2.473,2597,2.473,2605,2.473,2607,2.473,2611,2.701,2649,4.954,2650,2.701,2658,2.701,2678,2.053,2714,2.701,2810,5.536,2816,2.473,2866,2.053,2868,2.473,2940,2.303,2941,2.701,3008,2.303,3009,2.701,3010,2.473,3011,2.701,3039,2.701,3143,2.303,3144,2.701,3145,2.473,3146,2.303,3147,2.701,3167,2.303,3168,2.701,3169,2.473,3170,2.701,3206,2.701,3244,2.303,3245,4.589,3246,4.589,3275,2.166,3333,2.701,3349,2.86,3352,4.595,3370,5.138,3380,2.473,3384,2.473,3425,4.272,3428,2.303,3578,2.701,3596,4.501,3606,2.473,3607,2.701,3711,2.701,3728,3.78,3747,2.166,3748,4.589,3749,4.589,3777,3.312,3779,2.303,3824,2.473,3878,5.181,3928,2.701,3974,3.78,3975,3.52,3997,2.701,4004,2.053,4005,4.379,4009,1.956,4110,1.956,4178,3.312,4179,2.303,4304,2.701,4315,2.473,4316,4.129,4329,2.701,4392,2.166,4556,2.701,4777,2.701,4810,7.425,4822,2.701,4835,4.617,4836,2.701,4911,3.78,4941,3.78,5001,2.303,5004,2.701,5021,2.701,5057,2.303,5058,2.701,5073,2.701,5075,2.701,5076,2.303,5086,4.02,5087,4.02,5165,4.129,5176,2.701,5256,2.701,5375,2.701,5390,2.701,5391,2.701,5431,2.473,5432,2.473,5471,2.701,5489,2.701,5576,2.701,5577,2.701,5596,2.701,5603,2.701,5604,2.701,5624,2.701,5692,2.701,5693,3.048,5694,7.719,5695,9.15,5696,6.333,5697,5.656,5698,7.485,5699,3.048,5700,3.048,5701,3.048,5702,6.823,5703,7.485,5704,5.656,5705,3.048,5706,3.048,5707,9.174,5708,7.485,5709,6.823,5710,4.659,5711,3.048,5712,3.048,5713,6.823,5714,4.659,5715,3.048,5716,5.656,5717,5.536,5718,2.473,5719,2.473,5720,3.048,5721,3.048,5722,6.333,5723,2.701,5724,3.048,5725,4.659,5726,5.613,5727,6.333,5728,2.701,5729,3.048,5730,3.048,5731,3.048,5732,3.048,5733,3.048,5734,4.659,5735,4.659,5736,2.701,5737,3.048,5738,3.048,5739,4.659,5740,3.048,5741,3.048,5742,3.048,5743,3.048,5744,3.048,5745,3.048,5746,3.048,5747,3.048,5748,3.048,5749,5.656,5750,3.048,5751,4.659,5752,4.659,5753,3.048,5754,3.048,5755,3.048,5756,3.048,5757,4.659,5758,3.048,5759,3.048,5760,3.048,5761,3.048,5762,5.656,5763,3.048,5764,3.048,5765,3.048,5766,3.048,5767,3.048,5768,4.659,5769,3.048,5770,3.048,5771,3.048,5772,2.701,5773,3.048,5774,3.048,5775,7.194,5776,3.048,5777,3.048,5778,3.048,5779,3.048,5780,3.048,5781,3.048,5782,3.048,5783,3.048,5784,3.048,5785,4.659,5786,3.048,5787,3.048,5788,3.048,5789,4.129,5790,4.129,5791,3.048,5792,3.048,5793,3.048,5794,3.048,5795,4.129,5796,4.129,5797,4.129,5798,2.701,5799,3.048]],["title/dependencies.html",[326,3.707,5800,3.813]],["body/dependencies.html",[40,0.008,54,0.507,160,1.46,188,1.275,219,0.007,220,0.007,251,2.543,270,2.605,284,6.046,285,5.688,326,4.529,383,3.766,384,5.959,390,5.959,396,3.811,399,5.455,419,6.286,420,5.079,425,6.493,426,3.675,428,4.127,429,5.455,431,5.455,438,3.675,445,6.493,495,2.483,533,1.754,1217,3.228,1426,3.228,2220,4.529,2335,4.315,2336,4.529,2483,4.779,2491,5.959,3146,5.079,4016,4.779,4049,4.127,5801,6.723,5802,9.335,5803,6.723,5804,8.003,5805,6.723,5806,6.723,5807,6.723,5808,6.723,5809,6.723,5810,6.723,5811,6.723,5812,6.723,5813,6.723,5814,6.723,5815,6.723,5816,6.723,5817,6.723,5818,6.723,5819,6.723,5820,6.723,5821,6.723,5822,6.723,5823,6.723,5824,6.723,5825,6.723,5826,6.723,5827,6.723,5828,6.723,5829,6.723,5830,6.723,5831,6.723,5832,6.723,5833,6.723,5834,6.723,5835,6.723]],["title/miscellaneous/enumerations.html",[5836,2.569,5837,4.878]],["body/miscellaneous/enumerations.html",[0,0.167,2,0.891,25,0.17,40,0.008,51,1.454,101,0.794,115,1.108,118,0.148,120,0.817,138,0.83,165,0.966,179,1.085,204,0.932,219,0.007,220,0.007,228,2.511,231,0.953,232,2.648,274,2.014,365,1.765,442,3.779,454,2.786,508,3.201,511,1.971,545,2.057,553,2.939,760,3.51,827,4.739,835,4.068,836,2.906,841,2.786,864,4.739,866,2.716,1008,4.739,1045,2.197,1095,2.522,1097,5.11,1198,2.861,1208,3.021,1209,4.826,1232,4.093,1233,4.093,1234,4.093,1235,3.201,1248,3.644,1300,4.888,1301,4.691,1302,4.093,1303,3.644,1304,4.093,1305,3.521,1369,3.109,1426,3.201,1476,2.584,1586,3.928,1820,3.328,2064,3.521,2180,4.093,2181,3.406,2329,3.406,2679,4.279,2887,4.491,2888,4.491,3878,4.279,3882,6.016,3883,5.037,3884,5.037,3915,5.037,3916,5.037,3917,5.037,3918,5.037,3919,4.739,4178,4.739,4179,6.016,5086,4.739,5087,4.739,5094,6.016,5095,5.037,5836,4.491,5837,5.909,5838,6.461,5839,6.461,5840,5.909,5841,6.667]],["title/index.html",[25,0.097,2771,2.881,5842,3.094]],["body/index.html",[0,0.17,2,1.211,30,0.881,40,0.008,42,0.117,62,1.031,68,4.011,80,2.24,87,0.561,89,1.916,91,1.665,101,0.883,112,0.588,115,0.822,118,0.108,120,0.87,138,0.722,156,0.97,194,0.931,201,0.931,204,1.037,219,0.006,220,0.005,226,3.735,228,2.494,274,1.493,282,5.709,292,3.33,304,2.526,305,2.305,318,4.011,326,3.33,483,4.229,511,2.698,513,4.229,519,2.61,525,1.755,545,2.034,568,3.02,569,2.61,588,3.035,594,3.735,609,2.684,613,2.702,635,1.72,640,2.22,651,2.912,704,2.945,722,5.974,724,2.22,751,1.074,775,2.702,811,3.915,816,2.239,840,3.602,841,2.066,844,3.48,861,3.514,863,3.48,869,4.382,876,4.011,941,2.986,951,4.011,953,3.173,955,2.61,956,2.447,964,3.035,969,3.514,992,2.912,1112,2.702,1235,3.164,1236,3.883,1247,3.457,1257,2.702,1303,2.702,1319,3.33,1423,4.684,1425,2.305,1426,2.374,1445,4.979,1488,3.33,1512,2.179,1535,4.229,1629,3.173,1665,3.367,1729,3.735,1749,3.735,1755,5.27,1769,2.526,1802,2.802,1878,3.514,1948,5.309,1955,4.994,2011,3.035,2051,3.035,2052,4.439,2081,4.669,2148,3.735,2166,5.27,2200,2.702,2201,2.912,2202,3.33,2219,3.173,2246,7.009,2304,4.229,2325,5.241,2391,3.173,2429,4.439,2615,3.035,2713,4.011,2771,3.735,2791,5.841,2797,4.011,2874,4.758,2980,4.011,3013,4.994,3045,3.735,3129,4.011,3139,4.011,3351,4.382,3470,4.382,3563,4.382,3766,4.382,3785,4.011,3812,3.514,3836,3.735,3886,6.022,4003,5.348,4054,3.33,4546,4.382,4577,6.571,4607,4.011,4632,4.011,4855,6.637,4912,3.33,4993,4.011,5120,5.621,5171,4.011,5172,4.011,5211,5.348,5231,7.017,5287,4.382,5477,6.016,5599,4.382,5728,4.382,5842,4.011,5843,4.944,5844,4.944,5845,6.571,5846,7.414,5847,4.944,5848,6.571,5849,5.841,5850,6.591,5851,6.591,5852,7.908,5853,4.944,5854,6.591,5855,4.944,5856,4.944,5857,6.591,5858,4.944,5859,6.591,5860,6.591,5861,4.944,5862,4.944,5863,4.944,5864,4.944,5865,4.944,5866,4.944,5867,4.944,5868,5.348,5869,6.416,5870,5.841,5871,4.944,5872,6.591,5873,4.944,5874,7.509,5875,4.944,5876,4.944,5877,4.944,5878,4.944,5879,4.944,5880,4.944,5881,4.944,5882,4.944,5883,6.591,5884,4.944,5885,4.944,5886,4.382,5887,4.944,5888,4.944,5889,4.944,5890,4.944,5891,4.382,5892,4.944,5893,4.944,5894,6.591,5895,4.382,5896,4.382,5897,4.944,5898,4.944,5899,4.944,5900,4.944,5901,4.944,5902,4.382,5903,7.414,5904,6.571,5905,7.414,5906,4.944,5907,4.944,5908,4.944,5909,7.009,5910,4.944,5911,4.382,5912,4.944,5913,4.944,5914,4.944,5915,4.382,5916,4.944,5917,4.382,5918,4.382,5919,4.382,5920,4.944,5921,4.944,5922,4.944,5923,4.944,5924,4.944,5925,4.944,5926,4.011,5927,4.382,5928,4.944,5929,7.414,5930,7.414,5931,7.414,5932,4.944,5933,4.944,5934,4.944,5935,4.944,5936,4.944,5937,4.944,5938,4.944,5939,4.944,5940,4.944,5941,6.591,5942,4.944,5943,4.944,5944,4.944,5945,4.944,5946,4.944,5947,5.841,5948,6.591,5949,4.944,5950,6.591,5951,4.944,5952,4.944,5953,6.591,5954,4.944,5955,4.944,5956,4.944,5957,4.944,5958,4.944,5959,4.944,5960,6.591,5961,4.944,5962,4.944,5963,6.591,5964,4.944,5965,4.944,5966,4.944,5967,4.944,5968,4.944,5969,4.944,5970,4.944,5971,4.944,5972,4.944,5973,4.382,5974,4.944,5975,4.944,5976,4.944,5977,4.944,5978,4.944,5979,4.944,5980,4.944,5981,4.944,5982,4.944,5983,4.944,5984,5.348,5985,4.944,5986,4.944,5987,4.382]],["title/license.html",[2771,2.881,5842,3.094,5984,3.094]],["body/license.html",[0,0.147,40,0.007,120,0.702,219,0.007,220,0.007,230,3.611,282,4.388,311,3.188,519,3.611,565,2.934,580,3.494,679,4.388,872,4.86,877,3.211,1036,4.86,1247,3.188,1581,6.107,1728,5.07,1811,5.166,1947,4.606,1948,4.198,2011,4.198,2060,4.86,2089,5.166,2201,4.028,2498,5.166,3902,5.166,4030,4.606,4855,5.166,5477,5.548,5845,8.346,5848,6.061,5869,5.548,5874,6.061,5984,5.548,5987,6.061,5988,8.606,5989,8.083,5990,6.838,5991,6.838,5992,6.838,5993,6.838,5994,6.838,5995,6.838,5996,8.083,5997,6.061,5998,6.838,5999,6.838,6000,6.838,6001,6.838,6002,6.838,6003,6.838,6004,6.838,6005,6.838,6006,8.083,6007,6.838,6008,6.838,6009,6.838,6010,6.838,6011,8.083,6012,8.083,6013,6.838,6014,6.838,6015,6.838,6016,6.838,6017,6.838,6018,6.838,6019,6.838,6020,6.838,6021,6.838,6022,6.838,6023,6.838,6024,6.838,6025,6.838,6026,6.838,6027,6.838,6028,6.838,6029,6.838,6030,6.838,6031,6.838,6032,6.838,6033,6.838,6034,6.838]],["title/modules.html",[325,3.839]],["body/modules.html",[40,0.007,138,0.825,219,0.007,220,0.007,285,6.019,316,6.871,324,5.596,325,4.547,331,5.265,332,4.989,333,4.989,570,4.066,5973,7.505,6035,9.121]],["title/overview.html",[4887,4.013]],["body/overview.html",[1,1.549,2,0.663,40,0.008,99,1.517,103,1.805,105,1.549,108,1.549,110,1.457,111,1.487,113,1.517,117,1.487,119,1.517,121,1.549,122,1.805,125,1.487,127,1.805,129,1.549,131,1.517,133,1.517,135,1.265,137,1.769,140,1.805,142,1.805,144,1.805,146,1.805,148,1.805,150,1.842,152,1.487,154,1.549,157,1.427,159,1.549,162,1.549,164,1.487,167,1.517,168,1.549,170,1.805,172,1.517,173,1.517,174,1.487,176,1.517,178,1.664,180,1.487,182,1.487,184,1.517,185,1.805,187,1.457,189,1.549,190,1.549,193,1.549,196,1.549,198,1.457,200,1.549,203,1.805,205,0.973,206,1.769,208,1.733,210,1.733,212,1.457,214,1.457,216,1.457,219,0.005,220,0.005,311,2.311,324,7.369,325,3.043,326,4.448,327,4.394,328,4.394,329,4.394,330,4.394,331,5.277,332,5.001,333,6.561,334,4.988,335,3.043,483,3.181,493,3.745,525,1.32,610,3.745,645,2.072,719,1.831,816,1.497,1186,3.745,2558,4.394,2559,4.394,2560,4.394,4392,3.524,4887,3.181,5726,4.394,5736,4.394,6036,4.957,6037,4.957]],["title/routes.html",[493,4.724]],["body/routes.html",[40,0.007,219,0.007,220,0.007,493,5.701]],["title/miscellaneous/typealiases.html",[5836,2.569,6038,5.503]],["body/miscellaneous/typealiases.html",[13,3.09,25,0.157,40,0.008,42,0.217,49,0.59,88,1.023,112,1.022,114,1.761,188,1.209,194,1.429,204,0.861,219,0.006,220,0.006,365,1.364,377,3.626,442,3.489,458,4.65,570,2.955,593,2.286,806,3.642,807,4.994,808,3.489,839,6.723,992,3.626,1032,3.17,1098,5.392,1212,2.955,1213,2.955,1215,2.955,1216,2.273,1308,4.868,1312,3.364,1369,4.002,1389,4.146,1421,3.25,1472,2.385,1476,2.385,1551,5.584,1585,6.155,1691,4.146,1759,4.146,1763,5.392,1787,2.221,1813,3.95,1820,2.572,1822,3.047,1862,3.95,1877,4.65,1905,3.364,2048,4.65,2049,4.65,2050,4.65,2051,3.778,2052,4.146,2053,5.392,2132,4.469,2188,4.375,2189,3.778,2190,5.392,2192,5.539,2200,3.364,2204,4.375,2210,5.731,2220,5.11,2237,4.375,2238,4.146,2240,4.994,2241,5.731,2244,7.288,2314,3.626,2315,5.837,2322,5.11,2337,5.539,2339,5.11,2340,5.11,2400,5.11,2401,3.778,2426,5.11,2582,4.657,2733,4.65,2754,3.778,2939,4.3,3609,3.778,3728,4.994,3878,3.95,3975,5.731,3987,3.489,4005,4.868,4109,5.782,4178,4.375,4179,5.731,5431,4.994,5432,6.155,5442,6.723,5717,4.994,5718,6.155,5719,6.155,5723,5.455,5772,7.288,5836,4.146,5838,6.155,5839,6.155,5840,5.455,6039,6.155,6040,7.586,6041,7.586,6042,8.977,6043,5.455,6044,7.586,6045,6.155,6046,6.155,6047,7.586,6048,7.813,6049,7.586,6050,7.586,6051,7.586,6052,6.155]],["title/interfaces/userMock.html",[118,0.075,5001,3.455]],["body/interfaces/userMock.html",[0,0.137,3,0.12,4,0.111,9,0.101,14,1.038,15,1.863,17,0.759,18,0.726,20,0.862,21,0.775,23,0.775,25,0.129,26,0.603,27,1.276,29,2.776,36,2.958,40,0.008,41,0.445,42,0.189,43,0.767,46,0.775,49,0.72,53,0.285,54,0.383,55,1.567,56,0.184,57,0.021,59,1.047,60,1.41,64,2.123,72,3.61,80,2.302,87,0.852,99,1.038,101,1.097,102,1.667,118,0.11,174,1.017,183,0.997,184,1.038,204,1.236,219,0.006,220,0.006,222,3.61,225,2.514,228,1.602,231,1.221,246,2.879,251,1.921,254,0.974,259,4.121,286,1.126,294,2.514,365,1.93,407,2.439,412,2.776,433,3.61,434,4.121,483,3.26,495,1.876,502,3.61,513,5.334,525,1.353,533,1.325,534,1.921,537,1.47,538,3.804,540,2.302,543,2.261,544,1.406,568,2.069,592,3.804,597,2.776,609,2.069,620,2.649,640,1.711,676,4.369,742,4.121,760,2.239,816,1.534,817,2.179,826,3.041,829,2.239,866,2.069,868,2.476,887,2.595,899,3.26,906,1.038,998,3.422,1009,3.26,1112,2.776,1638,3.837,1656,3.837,1668,5.069,1684,5.069,1728,3.953,2051,3.118,2186,3.422,2304,3.26,2353,3.118,2522,3.422,2565,3.837,2568,5.445,2569,3.837,2576,3.837,2615,3.118,2717,3.804,2756,3.968,2889,6.548,2891,5.102,3094,3.422,3361,2.879,3426,4.77,3428,5.677,3432,4.121,3436,4.121,3439,4.121,3445,4.121,3484,6.097,3487,5.445,3488,4.121,3492,5.445,3493,4.121,3496,5.445,3525,5.445,3528,4.121,3529,4.121,3530,4.121,3531,4.121,3534,4.121,3535,4.121,3536,4.121,3777,3.61,4362,5.069,4392,3.61,4428,3.837,4527,4.121,4835,3.26,4847,5.069,4864,3.837,4911,4.121,4912,3.422,4913,4.502,4914,5.445,4915,3.61,4916,5.947,4917,5.947,4918,4.502,4919,4.502,4920,4.502,4921,4.502,4922,4.502,4925,4.502,4927,6.66,4928,4.502,4933,4.502,4934,5.947,4936,4.502,4937,6.994,4938,4.502,4939,4.502,4940,4.502,4941,4.121,4942,4.502,4943,4.502,4947,4.502,4948,4.502,4949,4.502,4950,4.502,4951,4.502,4952,4.502,4953,4.502,4954,4.502,4955,4.502,4956,4.502,4957,4.502,4958,4.502,4961,4.502,4963,5.445,4969,4.502,4970,4.502,4971,4.502,4972,3.61,4973,4.502,4974,4.502,4975,5.947,4976,5.947,4977,5.947,4978,4.502,4979,4.502,4980,4.502,4981,4.502,4982,4.502,4983,4.502,4984,4.502,4985,4.502,4986,4.502,4987,4.502,4988,4.502,4989,4.502,4990,5.947,4991,4.502,4992,4.502,4993,4.121,4994,4.502,4995,4.502,4996,4.502,4997,4.502,4998,4.502,4999,4.121,5000,4.502,5001,5.069]],["title/miscellaneous/variables.html",[3133,3.912,5836,2.569]],["body/miscellaneous/variables.html",[0,0.064,25,0.089,27,0.593,29,3.955,40,0.008,41,0.449,42,0.224,45,0.396,49,0.625,50,1.708,51,1.444,87,0.769,91,1.177,101,0.416,106,0.7,115,1.426,120,0.63,133,1.255,138,0.503,156,1.331,165,0.932,179,1.379,186,0.349,201,0.658,204,0.722,219,0.004,220,0.004,228,1.102,231,0.5,244,1.361,254,0.827,274,1.055,277,2.282,294,2.556,300,3.9,303,2.339,304,1.785,305,1.629,308,1.178,310,1.527,325,2.145,336,2.835,365,2.015,391,3.097,395,4.576,438,4.14,439,2.242,472,4.189,473,3.097,474,3.097,480,4.189,481,3.313,482,3.097,483,2.242,484,3.097,489,2.242,511,2.317,518,2.484,534,1.322,544,1.354,545,1.078,548,1.785,570,1.678,606,0.516,635,1.347,640,1.177,676,3.356,688,4.569,759,1.785,760,1.54,774,2.354,776,2.069,778,2.276,806,1.678,812,2.892,817,1.499,886,3.097,906,1.055,947,1.91,964,4.164,991,1.981,1045,1.151,1051,2.484,1052,3.67,1067,1.923,1068,1.46,1072,1.499,1095,1.322,1100,2.638,1102,1.981,1106,3.67,1107,2.64,1124,2.242,1195,1.46,1208,1.583,1209,2.927,1231,1.629,1238,1.499,1239,2.822,1242,1.177,1251,1.322,1261,2.927,1264,3.257,1305,1.845,1369,2.863,1411,2.484,1426,1.678,1472,2.628,1476,2.379,1477,3.19,1492,3.9,1514,3.9,1526,3.67,1551,2.145,1582,3.356,1593,1.73,1620,4.938,1640,1.91,1641,2.638,1691,2.354,1693,3.313,1717,6.841,1722,3.9,1727,2.927,1756,2.64,1758,1.981,1761,3.169,1763,2.484,1764,3.67,1765,3.67,1766,6.778,1767,3.169,1768,3.9,1769,2.638,1770,2.64,1771,2.484,1772,4.639,1773,3.67,1775,2.64,1776,3.67,1777,2.242,1778,2.64,1779,2.64,1780,2.64,1781,2.484,1782,3.67,1783,3.67,1787,2.611,1791,2.484,1820,1.46,1822,1.73,1835,2.354,1857,1.981,1942,3.169,1967,6.377,1976,2.242,1983,2.64,1984,2.64,2011,3.169,2064,1.845,2112,2.835,2171,2.835,2293,3.9,2341,2.242,2377,2.242,2397,1.981,2398,1.981,2399,2.058,2427,2.242,2479,2.835,2483,2.484,2496,4.982,2498,2.64,2499,3.097,2500,3.097,2501,3.097,2502,3.097,2503,4.189,2504,2.835,2505,2.354,2506,3.097,2507,2.835,2508,3.097,2509,3.097,2510,3.097,2511,3.097,2512,4.189,2513,4.189,2514,2.835,2515,2.835,2516,2.835,2517,4.189,2518,3.097,2519,3.097,2520,3.097,2521,3.097,2522,2.354,2555,4.576,2570,2.484,2584,2.64,2649,2.242,2678,3.478,2679,2.242,2684,2.484,2810,4.982,2816,4.982,2836,3.097,2866,4.136,2867,3.097,2868,5.503,2869,6.077,2870,5.442,2871,3.313,2872,3.097,2873,3.097,2874,2.242,2875,4.189,2876,2.835,2877,3.097,2878,6.011,2879,3.097,2880,6.414,2881,4.644,2882,4.644,2883,3.097,2884,4.644,2885,6.414,2886,3.097,2887,2.354,2888,3.478,2889,2.484,2890,4.576,2891,2.145,2892,2.354,2893,4.576,3133,2.484,3349,4.164,3370,4.982,3380,4.189,3381,3.097,3384,4.189,3385,3.097,3504,3.097,3511,4.189,3875,3.097,3878,2.242,3912,4.639,3913,2.484,3914,3.9,4237,3.097,5181,4.576,5717,2.835,5718,4.982,5719,4.982,5789,3.097,5790,4.576,5795,3.097,5796,3.097,5797,3.097,5798,4.576,5836,3.478,5838,5.872,5839,4.189,6043,5.442,6048,6.011,6053,6.14,6054,6.14,6055,3.494,6056,5.163,6057,5.163,6058,5.163,6059,3.494,6060,3.494,6061,3.494,6062,5.163,6063,5.163,6064,5.163,6065,5.163,6066,5.163,6067,5.163,6068,5.163,6069,5.163,6070,3.494,6071,3.494,6072,3.494,6073,3.494,6074,3.494,6075,3.494,6076,3.494,6077,8.87,6078,6.14,6079,6.14,6080,6.14,6081,3.494,6082,5.163,6083,3.494,6084,3.494,6085,3.494,6086,3.494,6087,3.494,6088,3.494,6089,5.163,6090,5.163,6091,5.163,6092,3.494,6093,3.494,6094,5.163,6095,5.163,6096,5.163,6097,3.494,6098,3.494,6099,3.494,6100,3.494,6101,3.494,6102,3.494,6103,3.494,6104,3.494,6105,3.494,6106,3.494,6107,3.494,6108,6.14,6109,6.14,6110,6.14,6111,3.494,6112,3.494,6113,3.494,6114,3.494,6115,3.494,6116,3.494,6117,3.494,6118,3.494,6119,3.494,6120,3.494,6121,3.494,6122,3.494,6123,3.494,6124,3.494,6125,3.494,6126,3.494,6127,3.494,6128,3.494,6129,3.494,6130,3.494,6131,3.494,6132,3.494,6133,3.494,6134,3.494,6135,3.494,6136,3.494,6137,7.237,6138,3.494,6139,3.494,6140,3.494,6141,3.494,6142,3.494,6143,3.494,6144,3.494,6145,3.494,6146,3.494,6147,3.494,6148,6.783,6149,3.494,6150,3.494,6151,3.494,6152,3.494,6153,3.494,6154,3.494,6155,3.494,6156,3.494,6157,3.494,6158,3.494,6159,3.494,6160,3.494,6161,3.494,6162,3.494]],["title/additional-documentation/using-gropius.html",[282,2.099,640,1.102,1665,1.671,2874,2.099]],["body/additional-documentation/using-gropius.html",[0,0.165,2,1.169,11,1.035,18,0.739,19,1.36,20,0.878,29,3.711,40,0.007,41,0.554,42,0.179,43,0.681,62,1.679,81,2.642,87,0.973,88,0.86,89,3.239,91,2.287,100,0.915,101,1.12,112,1.041,118,0.147,120,0.97,138,0.661,156,1.332,169,1.146,191,1.057,199,1.709,204,1.223,219,0.006,220,0.006,223,0.71,224,2.161,225,3.752,226,6.081,230,2.73,277,2.39,282,3.318,292,4.573,302,5.129,303,2.343,304,3.469,305,3.753,315,4.357,365,1.967,412,2.826,428,4.168,454,3.708,489,4.357,508,3.64,511,2.789,513,4.357,525,2.019,534,1.956,544,0.789,545,2.095,548,3.469,549,3.252,558,5.132,559,3.585,572,2.73,588,3.174,615,2.642,616,3.675,633,2.279,635,1.771,640,3.023,666,4.573,676,3.711,704,2.054,726,3.046,751,1.123,840,2.826,865,3.361,866,2.106,877,2.697,878,4.583,924,5.368,925,2.642,941,3.647,953,3.318,955,2.73,956,2.559,974,3.076,1004,5.721,1028,3.174,1032,2.837,1047,6.017,1054,5.132,1055,2.931,1070,2.218,1074,2.106,1104,1.666,1236,4,1251,3.044,1310,3.675,1423,4.826,1424,3.483,1445,3.906,1446,3.675,1476,3.119,1488,3.483,1512,2.992,1539,3.906,1581,3.906,1586,4,1592,3.483,1593,3.984,1640,2.826,1641,3.469,1665,2.642,1769,3.469,1819,3.483,1820,2.161,1944,2.642,1951,2.559,2011,3.174,2024,2.867,2060,5.721,2081,2.931,2166,3.675,2168,3.906,2201,3.046,2202,3.483,2249,4.583,2353,4.168,2355,3.318,2391,4.357,2544,4.583,2754,4.168,2781,4.195,2842,3.174,2891,4.653,3070,4.195,3361,4.297,3378,4.195,3427,4.583,3472,4.583,3886,3.675,3971,4.195,3987,2.931,4339,4.583,4486,3.906,4511,6.151,4607,4.195,4632,4.195,4666,4.583,4681,4.195,4684,6.017,4823,4.195,4855,3.906,4887,4.865,4915,4.826,4937,5.129,4972,4.826,5131,3.906,5177,6.151,5376,4.583,5497,4.195,5579,4.583,5612,4.583,5849,4.583,5868,5.509,5870,4.583,5886,4.583,5891,4.583,5896,6.017,5902,6.718,5947,4.583,6163,5.171,6164,5.171,6165,7.58,6166,5.171,6167,5.171,6168,5.171,6169,6.789,6170,7.58,6171,5.171,6172,5.171,6173,4.583,6174,4.583,6175,5.171,6176,5.171,6177,5.171,6178,5.171,6179,6.789,6180,5.171,6181,5.171,6182,4.583,6183,6.017,6184,6.789,6185,5.171,6186,5.171]],["title/additional-documentation/managing-gropius.html",[282,2.099,640,1.102,2874,2.099,3013,2.203]],["body/additional-documentation/managing-gropius.html",[0,0.12,2,0.992,4,0.162,9,0.099,18,1.132,19,1.322,20,0.842,30,0.663,37,0.458,40,0.007,41,0.328,42,0.195,50,0.915,57,0.028,68,4.022,87,0.749,88,0.824,100,0.877,101,1.03,112,0.59,118,0.081,125,0.993,138,0.483,157,0.953,165,0.982,180,0.993,186,0.496,191,1.013,219,0.005,220,0.005,224,3.103,225,3.675,226,4.988,228,2.807,230,2.618,231,1.352,308,0.807,311,2.311,323,3.339,332,3.339,333,3.339,337,4.022,365,1.973,383,2.185,396,4.208,438,2.71,475,6.58,478,4.394,489,3.181,499,3.524,511,1.952,513,4.237,528,1.192,541,2.185,544,1.133,549,2.833,552,2.618,559,2.618,562,4.448,568,2.689,569,3.486,574,3.745,588,3.043,592,4.208,602,4.022,615,2.533,621,4.764,624,2.533,635,1.293,640,2.224,719,1.831,722,3.745,724,2.501,727,2.185,740,2.92,750,2.618,760,3.875,767,1.831,773,5.357,774,4.448,775,2.71,776,2.224,778,3.489,783,3.565,789,2.082,792,5.852,810,4.394,811,3.486,812,1.598,819,3.373,832,3.043,834,3.801,840,2.71,844,2.618,862,5.981,865,2.454,870,6.423,877,3.144,901,3.524,924,3.043,941,2.992,944,2.71,956,2.454,977,2.91,1031,3.339,1070,2.127,1076,2.81,1100,2.533,1112,2.71,1237,2.92,1242,2.224,1251,2.497,1255,2.185,1303,3.609,1306,3.043,1312,3.609,1426,4.274,1427,3.181,1472,1.921,1477,2.185,1495,3.89,1506,2.127,1580,3.486,1629,3.181,1665,3.793,1678,4.394,1688,3.524,1693,3.181,1695,4.988,1716,3.745,1728,2.92,1781,3.524,1793,3.745,1796,3.524,1801,3.745,1823,3.745,1847,3.745,1853,3.745,1859,3.181,1864,3.339,1880,3.745,1944,3.373,1947,4.448,1948,5.397,2008,4.988,2024,1.875,2051,3.043,2058,3.745,2059,2.92,2064,4.7,2081,2.81,2121,5.609,2148,3.745,2181,2.533,2202,3.339,2260,3.745,2264,4.022,2335,4.237,2483,3.524,2542,4.394,2550,4.394,2614,6.024,2615,5.78,2616,6.405,2618,4.394,2704,3.339,2754,3.043,2865,3.339,2891,4.558,2930,3.745,2933,4.394,3013,3.339,3088,4.394,3103,4.022,3426,3.524,3519,3.745,3858,4.394,3885,4.693,3947,6.58,3986,4.394,4003,4.022,4025,3.524,4030,4.448,4554,4.394,4644,4.394,4887,3.181,4915,4.693,4972,3.524,5120,6.027,5144,3.745,5177,4.022,5211,4.022,5497,4.022,5528,3.524,5637,4.394,5868,4.022,5869,4.022,5895,4.394,5904,4.394,5909,6.58,5911,4.394,5915,4.394,5917,5.852,5918,4.394,5919,5.852,5927,4.394,5997,7.968,6173,5.852,6174,5.852,6182,5.852,6183,4.394,6187,4.957,6188,4.957,6189,4.957,6190,4.957,6191,4.957,6192,4.957,6193,4.957,6194,6.603,6195,6.603,6196,7.917,6197,4.957,6198,4.957,6199,4.957,6200,6.603,6201,4.957,6202,4.957,6203,4.957,6204,4.957,6205,4.957,6206,4.957,6207,4.957,6208,4.957,6209,4.957,6210,4.957,6211,4.957,6212,6.603,6213,4.957,6214,4.957,6215,4.957,6216,4.957,6217,4.957,6218,4.957,6219,4.957,6220,6.603,6221,4.957,6222,4.957,6223,4.957,6224,4.957,6225,4.957,6226,4.957,6227,4.957,6228,4.957,6229,4.957,6230,4.957,6231,4.957,6232,4.957,6233,4.957,6234,4.957,6235,4.957,6236,4.957,6237,4.957,6238,4.957,6239,4.957,6240,4.957,6241,4.957,6242,4.957,6243,4.957,6244,4.957,6245,4.957,6246,4.957,6247,4.957,6248,4.957,6249,4.957,6250,4.957,6251,4.957,6252,4.957,6253,4.957,6254,4.957,6255,4.957]],["title/additional-documentation/contributors.html",[640,1.285,2874,2.447,5926,3.094]],["body/additional-documentation/contributors.html",[40,0.007,219,0.007,220,0.007,2325,4.328,5926,5.961,6256,7.347,6257,7.347,6258,7.347,6259,7.347,6260,8.428,6261,8.428,6262,7.347,6263,7.347,6264,7.347,6265,7.347,6266,7.347,6267,7.347,6268,7.347,6269,7.347,6270,7.347,6271,7.347,6272,7.347,6273,7.347,6274,7.347,6275,7.347,6276,7.347,6277,7.347]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{},"additional-documentation/contributors.html":{}}}],["0",{"_index":906,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{},"coverage.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["0)\">cancel",{"_index":1643,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["0).attr('r",{"_index":3162,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["0).attr('y",{"_index":3161,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["0..255",{"_index":3389,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0.0.12",{"_index":5829,"title":{},"body":{"dependencies.html":{}}}],["0.0.5",{"_index":5815,"title":{},"body":{"dependencies.html":{}}}],["0.06",{"_index":2657,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{}}}],["0.08",{"_index":5374,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["0.1",{"_index":2710,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueLocationComponent.html":{},"components/QueryComponent.html":{}}}],["0.10.2",{"_index":5835,"title":{},"body":{"dependencies.html":{}}}],["0.114",{"_index":3417,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0.12",{"_index":2708,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["0.15",{"_index":2787,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["0.175",{"_index":5561,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["0.2",{"_index":3369,"title":{},"body":{"components/IssueItemComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{}}}],["0.27",{"_index":5372,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["0.27.0",{"_index":5823,"title":{},"body":{"dependencies.html":{}}}],["0.3",{"_index":3423,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0.3em",{"_index":3872,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["0.5",{"_index":2712,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueLocationComponent.html":{},"classes/LayoutNode.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"classes/Vector.html":{}}}],["0.54",{"_index":1687,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/SideNavComponent.html":{}}}],["0.587",{"_index":3416,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0.5em",{"_index":2795,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/TextDisplayComponent.html":{},"components/TopToolbarComponent.html":{}}}],["0.6",{"_index":5370,"title":{},"body":{"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{}}}],["0.6.2",{"_index":5820,"title":{},"body":{"dependencies.html":{}}}],["0.7",{"_index":2806,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/UserItemComponent.html":{}}}],["0.75",{"_index":4901,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["0.8em",{"_index":3367,"title":{},"body":{"components/IssueItemComponent.html":{},"components/TextDisplayComponent.html":{}}}],["0.9",{"_index":4753,"title":{},"body":{"interfaces/Positions.html":{}}}],["0/1",{"_index":5695,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":5748,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":5744,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":5712,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":5743,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":5703,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":5694,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":5725,"title":{},"body":{"coverage.html":{}}}],["0/43",{"_index":5724,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":5786,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":5722,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":5751,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":5735,"title":{},"body":{"coverage.html":{}}}],["00",{"_index":1536,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["000000",{"_index":1473,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["005eff",{"_index":3140,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["00ba39",{"_index":2807,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/TimelineItemComponent.html":{}}}],["01",{"_index":5481,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["01t19:44:04.813z",{"_index":5478,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["02t12:27:58.192z",{"_index":5490,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["0xff).tostring(16)).slice",{"_index":1538,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["1",{"_index":816,"title":{"interfaces/DialogData-1.html":{}},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"injectables/LabelStoreService.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"classes/TimeFormatter.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"index.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["1).style('opacity",{"_index":3163,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["1)[0",{"_index":2908,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["1.14.1",{"_index":5832,"title":{},"body":{"dependencies.html":{}}}],["1.1em",{"_index":5253,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["1.2em",{"_index":3368,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["1.3.3",{"_index":5833,"title":{},"body":{"dependencies.html":{}}}],["1.4em",{"_index":3366,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["1.5",{"_index":5339,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["1/1",{"_index":5707,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":5742,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":5785,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":5747,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":5745,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":5740,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":5710,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":5775,"title":{},"body":{"coverage.html":{}}}],["1/39",{"_index":5773,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":5704,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":5763,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":5727,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":5734,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":5749,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":5733,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1676,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/TimeFormatter.html":{},"coverage.html":{}}}],["10.1.0",{"_index":5825,"title":{},"body":{"dependencies.html":{}}}],["10/11",{"_index":5732,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":5746,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":85,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"coverage.html":{}}}],["1000",{"_index":5508,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["10000",{"_index":5617,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["100px",{"_index":2799,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/QueryComponent.html":{}}}],["109",{"_index":3598,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["10px",{"_index":3137,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{}}}],["11",{"_index":5489,"title":{},"body":{"classes/TimeFormatter.html":{},"coverage.html":{}}}],["11pt",{"_index":3601,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["11px",{"_index":1182,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["11th",{"_index":5961,"title":{},"body":{"index.html":{}}}],["12",{"_index":1193,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"classes/TimeFormatter.html":{},"coverage.html":{}}}],["1269",{"_index":5955,"title":{},"body":{"index.html":{}}}],["12px",{"_index":1689,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["13.2.1",{"_index":5828,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1189,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["14/15",{"_index":5754,"title":{},"body":{"coverage.html":{}}}],["14/16",{"_index":5756,"title":{},"body":{"coverage.html":{}}}],["14px",{"_index":5565,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["15.2.0",{"_index":5818,"title":{},"body":{"dependencies.html":{}}}],["15.7.2",{"_index":5822,"title":{},"body":{"dependencies.html":{}}}],["15/16",{"_index":5715,"title":{},"body":{"coverage.html":{}}}],["15/17",{"_index":5777,"title":{},"body":{"coverage.html":{}}}],["15/18",{"_index":5711,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":83,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["15px",{"_index":1183,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/TimelineItemComponent.html":{}}}],["15th",{"_index":5977,"title":{},"body":{"index.html":{}}}],["16",{"_index":5726,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["16/17",{"_index":5729,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":1544,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LoginComponent.html":{},"components/ProjectListComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["17",{"_index":5770,"title":{},"body":{"coverage.html":{}}}],["17.2",{"_index":4764,"title":{},"body":{"interfaces/Positions.html":{}}}],["17/17",{"_index":5776,"title":{},"body":{"coverage.html":{}}}],["17px",{"_index":3574,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["18px",{"_index":4900,"title":{},"body":{"components/ProjectListComponent.html":{},"components/QueryComponent.html":{}}}],["195",{"_index":3576,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["1]?.id",{"_index":6134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1fr",{"_index":2310,"title":{},"body":{"components/FrameComponent.html":{}}}],["1px",{"_index":2706,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["2",{"_index":609,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"injectables/StateService.html":{},"components/TimelineItemComponent.html":{},"coverage.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["2.0.0",{"_index":5809,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":5555,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["2.6.0",{"_index":5821,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":5762,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":5697,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":5741,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":5784,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":5737,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":5752,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1186,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"classes/LayoutNode.html":{},"coverage.html":{},"overview.html":{}}}],["200",{"_index":1124,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["200px",{"_index":2305,"title":{},"body":{"components/FrameComponent.html":{}}}],["201",{"_index":3577,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["2020",{"_index":5932,"title":{},"body":{"index.html":{}}}],["2021",{"_index":5477,"title":{},"body":{"classes/TimeFormatter.html":{},"index.html":{},"license.html":{}}}],["20px",{"_index":1197,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/SideNavComponent.html":{},"components/TimelineItemComponent.html":{}}}],["21",{"_index":6037,"title":{},"body":{"overview.html":{}}}],["217",{"_index":3599,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["21:44:04",{"_index":5482,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["23",{"_index":5760,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":5512,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["24px",{"_index":1176,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/LoginComponent.html":{}}}],["25",{"_index":1677,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"coverage.html":{}}}],["255",{"_index":2805,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueLabelComponent.html":{}}}],["26px",{"_index":5562,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["27",{"_index":5782,"title":{},"body":{"coverage.html":{}}}],["27px",{"_index":5564,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["28",{"_index":5736,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["29",{"_index":5780,"title":{},"body":{"coverage.html":{}}}],["2978/tool",{"_index":5982,"title":{},"body":{"index.html":{}}}],["2d",{"_index":3789,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["2px",{"_index":2707,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectListComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["3",{"_index":2304,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["3.1.2",{"_index":5814,"title":{},"body":{"dependencies.html":{}}}],["3.5.5",{"_index":5808,"title":{},"body":{"dependencies.html":{}}}],["3/10",{"_index":5766,"title":{},"body":{"coverage.html":{}}}],["3/17",{"_index":5771,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":5702,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":5793,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":5750,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":5739,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":5701,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":5699,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":74,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["300",{"_index":5423,"title":{},"body":{"components/SideNavComponent.html":{}}}],["300px",{"_index":2788,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/LoginComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["304–311",{"_index":5968,"title":{},"body":{"index.html":{}}}],["31",{"_index":5515,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["33",{"_index":5698,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":3299,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["35px",{"_index":5552,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["36px",{"_index":2703,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/ProjectListComponent.html":{},"components/SetEditorComponent.html":{},"components/TimelineItemComponent.html":{}}}],["37/59",{"_index":5765,"title":{},"body":{"coverage.html":{}}}],["38px",{"_index":1187,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["3f3f3f",{"_index":4842,"title":{},"body":{"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["3px",{"_index":1188,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["4",{"_index":483,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"index.html":{},"overview.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["4.0.16",{"_index":5812,"title":{},"body":{"dependencies.html":{}}}],["4.0.4",{"_index":5816,"title":{},"body":{"dependencies.html":{}}}],["4/17",{"_index":5761,"title":{},"body":{"coverage.html":{}}}],["4/27",{"_index":5721,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":5713,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":4777,"title":{},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["400",{"_index":1122,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["4000",{"_index":5619,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["400px",{"_index":263,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{}}}],["401",{"_index":2536,"title":{},"body":{"modules/GraphQLModule.html":{},"components/LoginComponent.html":{}}}],["42",{"_index":5700,"title":{},"body":{"coverage.html":{}}}],["43px",{"_index":3573,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["44px",{"_index":3135,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["45",{"_index":3298,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["46px",{"_index":1191,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["48px",{"_index":2936,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["4px",{"_index":1179,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TopToolbarComponent.html":{}}}],["5",{"_index":3777,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["5/5",{"_index":5716,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":5709,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":3596,"title":{},"body":{"components/IssueLocationComponent.html":{},"classes/LayoutNode.html":{},"components/ProjectListComponent.html":{},"components/TimelineItemComponent.html":{},"coverage.html":{}}}],["500",{"_index":1777,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"classes/NodeCache.html":{},"components/QueryComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/variables.html":{}}}],["5000",{"_index":1783,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["500px",{"_index":79,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/IssueFilterComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["50px",{"_index":1200,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/NodeDetailsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["51",{"_index":6036,"title":{},"body":{"overview.html":{}}}],["56px",{"_index":3874,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["57.75",{"_index":4760,"title":{},"body":{"interfaces/Positions.html":{}}}],["58",{"_index":1547,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"coverage.html":{}}}],["5px",{"_index":1548,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TimelineItemComponent.html":{}}}],["6",{"_index":4392,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["6.5.4",{"_index":5830,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":5792,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":5705,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":5758,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":5774,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":75,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/TimeFormatter.html":{},"coverage.html":{}}}],["600",{"_index":1648,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"components/IssueDetailComponent.html":{}}}],["60000",{"_index":962,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["600px",{"_index":264,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["60px",{"_index":5469,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["62",{"_index":5764,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":5787,"title":{},"body":{"coverage.html":{}}}],["64px",{"_index":1690,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/ProjectHeaderComponent.html":{}}}],["66",{"_index":5696,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":1545,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ProjectListComponent.html":{},"components/TimelineItemComponent.html":{}}}],["7",{"_index":72,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["7/11",{"_index":5788,"title":{},"body":{"coverage.html":{}}}],["7/12",{"_index":5794,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":5759,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":1133,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["75",{"_index":5757,"title":{},"body":{"coverage.html":{}}}],["7px",{"_index":1184,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{}}}],["8",{"_index":2522,"title":{},"body":{"modules/GraphQLModule.html":{},"components/ProjectMembersComponent.html":{},"classes/TimeFormatter.html":{},"coverage.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["8.2.2",{"_index":5826,"title":{},"body":{"dependencies.html":{}}}],["8/27",{"_index":5781,"title":{},"body":{"coverage.html":{}}}],["8/29",{"_index":5783,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":5769,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":3769,"title":{},"body":{"classes/LayoutNode.html":{}}}],["81",{"_index":5730,"title":{},"body":{"coverage.html":{}}}],["82",{"_index":5956,"title":{},"body":{"index.html":{}}}],["83",{"_index":5708,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":4556,"title":{},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["85px",{"_index":4850,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["87",{"_index":5755,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":5768,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":1192,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{}}}],["9",{"_index":4941,"title":{},"body":{"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["9.0.0",{"_index":5827,"title":{},"body":{"dependencies.html":{}}}],["9.1.12",{"_index":6189,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["9.1.13",{"_index":5802,"title":{},"body":{"dependencies.html":{}}}],["9.2.4",{"_index":5804,"title":{},"body":{"dependencies.html":{}}}],["9.3.0",{"_index":5824,"title":{},"body":{"dependencies.html":{}}}],["9/10",{"_index":5767,"title":{},"body":{"coverage.html":{}}}],["9/11",{"_index":5731,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":76,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["93",{"_index":5714,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":5728,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["99999",{"_index":891,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["999999",{"_index":5557,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["9px",{"_index":1190,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["_",{"_index":3233,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["__typename",{"_index":3883,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["ababab",{"_index":5163,"title":{},"body":{"components/QueryComponent.html":{}}}],["abcdef",{"_index":6236,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["aborting",{"_index":1628,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["above",{"_index":2201,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"index.html":{},"license.html":{},"additional-documentation/using-gropius.html":{}}}],["absolute",{"_index":2705,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["absoluterotation",{"_index":4446,"title":{},"body":{"interfaces/Positions.html":{}}}],["abstract",{"_index":1826,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{}}}],["abstractions",{"_index":6243,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["accept",{"_index":2520,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["access",{"_index":19,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["accessed",{"_index":1793,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["accessible",{"_index":1823,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["accessing",{"_index":6221,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["accessors",{"_index":658,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{}}}],["accesstokendialogcomponent",{"_index":1,"title":{"components/AccessTokenDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["according",{"_index":617,"title":{},"body":{"guards/AuthGuard.html":{}}}],["accordion",{"_index":3849,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["account",{"_index":5177,"title":{},"body":{"components/RegisterComponent.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["account_circle",{"_index":5389,"title":{},"body":{"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["account_tree",{"_index":4895,"title":{},"body":{"components/ProjectListComponent.html":{},"components/SideNavComponent.html":{}}}],["acting",{"_index":3807,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["action",{"_index":1036,"title":{},"body":{"components/CommentComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"license.html":{}}}],["actions",{"_index":265,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/Positions.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["activated",{"_index":2358,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueListComponent.html":{}}}],["activatedroute",{"_index":2717,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["activatedroutesnapshot",{"_index":627,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":2859,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/NodeDetailsComponent.html":{},"components/SideNavComponent.html":{}}}],["activecategories",{"_index":2357,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{}}}],["activecategories.includes(category",{"_index":2364,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["activecategories.push(key",{"_index":2993,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["activeitemcontent",{"_index":5535,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["activepredicates",{"_index":2814,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["actual",{"_index":1899,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{}}}],["actual_component",{"_index":218,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["actually",{"_index":991,"title":{},"body":{"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":100,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["add(other",{"_index":5657,"title":{},"body":{"classes/Vector.html":{}}}],["addablemembers",{"_index":4980,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addableuser.id",{"_index":4985,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addableusers",{"_index":4921,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addcoalesceitems(coalescelist",{"_index":935,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["addconsumedinterface",{"_index":2944,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{}}}],["addconsumedinterface(component",{"_index":2958,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["addconsumedinterface(componentid",{"_index":3210,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["addconsumedinterfacegql",{"_index":2951,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["addconsumedinterfacemutation",{"_index":2950,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["added",{"_index":817,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["addedtocomponentevent",{"_index":850,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["addedtolocationevent",{"_index":853,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["addeduser1",{"_index":4936,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser1.de",{"_index":4938,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser2",{"_index":4939,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser2.de",{"_index":4940,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser3",{"_index":4942,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser3.de",{"_index":4943,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["adding",{"_index":1797,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["addinterfacetocomponent(offeredbyid",{"_index":4470,"title":{},"body":{"interfaces/Positions.html":{}}}],["addissuecomment(math.random().tostring",{"_index":2695,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["addissuecommentinput",{"_index":3663,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addissuefoldernodes(node",{"_index":4703,"title":{},"body":{"interfaces/Positions.html":{}}}],["addissuefolders(node",{"_index":4677,"title":{},"body":{"interfaces/Positions.html":{}}}],["addissuegroupcontainer(node",{"_index":4686,"title":{},"body":{"interfaces/Positions.html":{}}}],["addissuetolocationgql",{"_index":3642,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addissuetolocationinput",{"_index":3652,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addissuetolocationmutation",{"_index":3641,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addition",{"_index":6163,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["additional",{"_index":2874,"title":{"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{},"additional-documentation/contributors.html":{}},"body":{"components/IssueFilterComponent.html":{},"components/SetEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["additionally",{"_index":3040,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["additionalsearchstring",{"_index":3552,"title":{},"body":{"components/IssueListComponent.html":{}}}],["additions",{"_index":1515,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["addlocationinput",{"_index":3654,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addmemberdialogref",{"_index":4978,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addmemberdialogref.afterclosed().subscribe((data",{"_index":4982,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addpredicateafter",{"_index":2819,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["addpredicateafter(index",{"_index":2834,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["addprojectmemberdialogcomponent",{"_index":99,"title":{"components/AddProjectMemberDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["adds",{"_index":899,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addself",{"_index":5647,"title":{},"body":{"classes/Vector.html":{}}}],["addself(other",{"_index":5660,"title":{},"body":{"classes/Vector.html":{}}}],["addsinglecoalesceitem",{"_index":946,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["addsubscriber(subscriber",{"_index":1920,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["addtolocation",{"_index":3613,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addtolocation(addlocationinput",{"_index":3651,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["adjusted",{"_index":3419,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["administrator",{"_index":260,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["affect",{"_index":4260,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affected",{"_index":2118,"title":{},"body":{"injectables/DataService.html":{},"components/NodeDetailsComponent.html":{}}}],["affected.push",{"_index":4264,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affected.push('deleting",{"_index":4267,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affected.push(affectedinterface",{"_index":4262,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affectedinterface",{"_index":4257,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affecting",{"_index":5194,"title":{},"body":{"components/RegisterComponent.html":{}}}],["afteralertclose",{"_index":1564,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["afterclosed",{"_index":1606,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["afternodejoinedgroup",{"_index":3251,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["afternodejoinedgroup(group",{"_index":3257,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["afternodeleftgroup",{"_index":3252,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["afternodeleftgroup(group",{"_index":3262,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["afterviewinit",{"_index":828,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["afterwards",{"_index":4045,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["again",{"_index":4542,"title":{},"body":{"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["against",{"_index":1833,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{}}}],["agnostic",{"_index":6230,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["ago",{"_index":5491,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["aka",{"_index":876,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/Positions.html":{},"index.html":{}}}],["alert('todo",{"_index":4831,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["aliases",{"_index":6039,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1194,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["allcomponentslist",{"_index":1453,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["allicons",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["alllabelslist",{"_index":2826,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{}}}],["allnodes",{"_index":3784,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["allow",{"_index":2355,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["allowed",{"_index":745,"title":{},"body":{"classes/CCIMSValidators.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors",{"_index":3317,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add('bottom",{"_index":3323,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add('left",{"_index":3322,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add('right",{"_index":3319,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add('top",{"_index":3320,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add(groupnode.position",{"_index":3318,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allows",{"_index":572,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"additional-documentation/using-gropius.html":{}}}],["alo",{"_index":2379,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["along",{"_index":5872,"title":{},"body":{"index.html":{}}}],["already",{"_index":775,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"classes/Vector.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["always",{"_index":2055,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["amend",{"_index":1988,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["amount",{"_index":2012,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["amounts",{"_index":2082,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["analysing",{"_index":5889,"title":{},"body":{"index.html":{}}}],["analysis",{"_index":6199,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["anchors",{"_index":3186,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["and/or",{"_index":6004,"title":{},"body":{"license.html":{}}}],["angular",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CacheNodeComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueFilterComponent.html":{},"directives/ItemDirective.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"dependencies.html":{},"additional-documentation/managing-gropius.html":{}}}],["angular/animations",{"_index":5801,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":5803,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["angular/cdk/overlay",{"_index":1091,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["angular/cdk/portal",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["angular/cdk/table",{"_index":2572,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/cdk/tree",{"_index":2574,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/common",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["angular/common/locales/en",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":5805,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":54,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"interfaces/userMock.html":{}}}],["angular/forms",{"_index":251,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"modules/AppModule.html":{},"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"dependencies.html":{},"interfaces/userMock.html":{}}}],["angular/http",{"_index":2489,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["angular/icons",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material",{"_index":5806,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["angular/material/checkbox",{"_index":2587,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/material/dialog",{"_index":55,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/userMock.html":{}}}],["angular/material/expansion",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/icon",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/input",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/list",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/menu",{"_index":2594,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/material/paginator",{"_index":2569,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["angular/material/progress",{"_index":2604,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/material/select",{"_index":414,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/sidenav",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/slide",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/sort",{"_index":2576,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["angular/material/table",{"_index":2565,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["angular/material/tabs",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/theming",{"_index":3132,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/ProjectListComponent.html":{},"components/SideNavComponent.html":{}}}],["angular/material/toolbar",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/tooltip",{"_index":2601,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/platform",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":495,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"interfaces/User.html":{},"dependencies.html":{},"interfaces/userMock.html":{}}}],["animation",{"_index":3875,"title":{},"body":{"components/LinkedIssueItemComponent.html":{},"miscellaneous/variables.html":{}}}],["animations",{"_index":2294,"title":{},"body":{"components/FrameComponent.html":{}}}],["animations.ts",{"_index":5790,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["another",{"_index":3045,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{},"index.html":{}}}],["ant",{"_index":392,"title":{},"body":{"modules/AppModule.html":{}}}],["antd",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["antd/i18n",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["antd/icon",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["antdesignicons",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["antdesignicons[key",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["any).__typename",{"_index":911,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueLocationComponent.html":{}}}],["anything",{"_index":2169,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["anyway",{"_index":2934,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["anywhere",{"_index":4512,"title":{},"body":{"interfaces/Positions.html":{}}}],["apart",{"_index":3904,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["api",{"_index":760,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["api.service",{"_index":3226,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["api.service.ts",{"_index":2941,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"coverage.html":{}}}],["api.service.ts:24",{"_index":2956,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["api.service.ts:42",{"_index":2962,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["api.service.ts:68",{"_index":2976,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["api.service.ts:80",{"_index":2959,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["api.service.ts:91",{"_index":2974,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["apis",{"_index":6210,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["apiservice",{"_index":3209,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["apiurl",{"_index":6063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apollo",{"_index":2483,"title":{},"body":{"modules/GraphQLModule.html":{},"components/RegisterComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["apollo's",{"_index":5170,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["apollo/client",{"_index":5807,"title":{},"body":{"dependencies.html":{}}}],["apollo/client/core",{"_index":2487,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollo/client/core/apolloclient",{"_index":2497,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollo/client/link/error",{"_index":2493,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollo/link",{"_index":2491,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["apollo_named_options",{"_index":2480,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollo_options",{"_index":2481,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apolloclientoptions",{"_index":2484,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apolloclients",{"_index":2501,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["apollolink",{"_index":2485,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollolink.from([basic",{"_index":2547,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["app.component",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["app/auth/authentication.service",{"_index":1552,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"injectables/ProjectStoreService.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["app/components/cache",{"_index":2595,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/components/cursor",{"_index":2579,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/components/issue",{"_index":2583,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/components/item.directive",{"_index":787,"title":{},"body":{"components/CacheNodeComponent.html":{},"modules/GraphsModule.html":{},"components/SetEditorComponent.html":{}}}],["app/components/set",{"_index":2581,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/components/user",{"_index":2589,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/data",{"_index":788,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectsService.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/UsersService.html":{}}}],["app/data/component/component",{"_index":1406,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{}}}],["app/data/interface/interface",{"_index":1554,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{}}}],["app/data/issue",{"_index":1214,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["app/data/project/project",{"_index":1656,"title":{},"body":{"components/CreateProjectDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["app/dialogs/add",{"_index":4969,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["app/dialogs/create",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["app/dialogs/remove",{"_index":1009,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["app/dialogs/settings",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"components/TopToolbarComponent.html":{}}}],["app/graphs/automatic",{"_index":4330,"title":{},"body":{"interfaces/Positions.html":{}}}],["app/graphs/component",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Positions.html":{}}}],["app/graphs/issue",{"_index":1094,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["app/graphs/shared",{"_index":2989,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["app/issue",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["app/node",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{}}}],["app/project",{"_index":2577,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/state.service",{"_index":2292,"title":{},"body":{"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{},"components/SideNavComponent.html":{}}}],["app/text",{"_index":457,"title":{},"body":{"modules/AppModule.html":{}}}],["app/user",{"_index":1010,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{}}}],["app/utils/query",{"_index":837,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["app/utils/validators",{"_index":1407,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{}}}],["appcoalescedtimelineitems",{"_index":5524,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["appcoalescedtimelineitems]'},{'name",{"_index":213,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["appcomponent",{"_index":103,"title":{"components/AppComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":2609,"title":{},"body":{"modules/GraphsModule.html":{}}}],["appears",{"_index":5276,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["appitem",{"_index":3715,"title":{},"body":{"directives/ItemDirective.html":{},"components/SetEditorComponent.html":{}}}],["appitem]'},{'name",{"_index":207,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["applicable",{"_index":5102,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["application",{"_index":2249,"title":{},"body":{"components/FrameComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["applied",{"_index":3021,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"components/IssueListComponent.html":{}}}],["applies",{"_index":3028,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["apply",{"_index":1543,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["applychangeset",{"_index":4112,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["applychangeset([...this.additions].map(decodenodeid",{"_index":4165,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["applycomponentchangeset",{"_index":1513,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["applyfilter",{"_index":3440,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["applyfilter(filter",{"_index":3451,"title":{},"body":{"components/IssueListComponent.html":{}}}],["applyfilter(filtervalue",{"_index":4925,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["applyidchangeset",{"_index":2820,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["applyidchangeset(id",{"_index":2837,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["applying",{"_index":5271,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["appmodule",{"_index":324,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appquerybody",{"_index":5089,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["appquerybody]'},{'name",{"_index":209,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["appquerybutton",{"_index":5097,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["appquerybutton]'},{'name",{"_index":211,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["appropriate",{"_index":735,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/IssueIconComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["approutingmodule",{"_index":331,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsingletimelineitem",{"_index":217,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["appstate",{"_index":524,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{},"coverage.html":{}}}],["appstate.project",{"_index":5413,"title":{},"body":{"components/SideNavComponent.html":{}}}],["appstate.project.node",{"_index":5414,"title":{},"body":{"components/SideNavComponent.html":{}}}],["appstate.project.node.id",{"_index":3237,"title":{},"body":{"injectables/IssueGraphStateService.html":{},"components/SideNavComponent.html":{}}}],["appstate.project.node.name",{"_index":5416,"title":{},"body":{"components/SideNavComponent.html":{}}}],["appstate.project?.node.id",{"_index":3234,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["apptimelineitemdeleted",{"_index":5527,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["apptimelineitemdeleted]'},{'name",{"_index":215,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["arbitrary",{"_index":3835,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["architecture",{"_index":5852,"title":{},"body":{"index.html":{}}}],["architectures",{"_index":5848,"title":{},"body":{"index.html":{},"license.html":{}}}],["area",{"_index":6182,"title":{},"body":{"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["areas",{"_index":6222,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["args",{"_index":1750,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["arguments",{"_index":2395,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["arial",{"_index":3603,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["arising",{"_index":6033,"title":{},"body":{"license.html":{}}}],["around",{"_index":2930,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{},"additional-documentation/managing-gropius.html":{}}}],["arranged",{"_index":4323,"title":{},"body":{"interfaces/Positions.html":{}}}],["array",{"_index":826,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["array(nodes.length",{"_index":3834,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["array.from(node.issuegroupcontainer.issuegroupnodeids).map((id",{"_index":4719,"title":{},"body":{"interfaces/Positions.html":{}}}],["array.from(nodes.values",{"_index":4804,"title":{},"body":{"interfaces/Positions.html":{}}}],["array.from(this.graphdata.components.values()).map((component",{"_index":4618,"title":{},"body":{"interfaces/Positions.html":{}}}],["array.from(this.graphdata.interfaces.values()).map((intrface",{"_index":4622,"title":{},"body":{"interfaces/Positions.html":{}}}],["array.includes(item",{"_index":2910,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["array.isarray(spec.sourcenodes",{"_index":4057,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["array.isarray(this.componentlist",{"_index":1517,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["array.isarray(this.data.listset",{"_index":4122,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["array.isarray(this.listset",{"_index":5303,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["array.push(item",{"_index":2911,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["array.splice(array.indexof(item",{"_index":2912,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["arrives",{"_index":3047,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{}}}],["arrow",{"_index":1289,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"components/IssueDetailComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["arrows",{"_index":1666,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["artifact",{"_index":3884,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["artifacts",{"_index":3918,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["asc",{"_index":3529,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["ask",{"_index":2356,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["aspect",{"_index":4554,"title":{},"body":{"interfaces/Positions.html":{},"additional-documentation/managing-gropius.html":{}}}],["assets/icons/issues",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["assets/icons/svg",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["asseturl",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["assign",{"_index":1540,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["assigned",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/IssueDetailComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["assignedevent",{"_index":965,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["assignedevent.createdby.id",{"_index":967,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["assignedevent.removedassignee?.id",{"_index":968,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["assignee",{"_index":3555,"title":{},"body":{"components/IssueListComponent.html":{}}}],["assignee.displayname",{"_index":3557,"title":{},"body":{"components/IssueListComponent.html":{}}}],["assignees",{"_index":1586,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/using-gropius.html":{}}}],["associated",{"_index":2060,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"license.html":{},"additional-documentation/using-gropius.html":{}}}],["assume",{"_index":4644,"title":{},"body":{"interfaces/Positions.html":{},"additional-documentation/managing-gropius.html":{}}}],["async",{"_index":1514,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["attached",{"_index":2444,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{}}}],["attempt",{"_index":1465,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["attempts",{"_index":6226,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["attribute",{"_index":4811,"title":{},"body":{"interfaces/Positions.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["auth",{"_index":2542,"title":{},"body":{"modules/GraphQLModule.html":{},"additional-documentation/managing-gropius.html":{}}}],["auth/auth.guard",{"_index":500,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/authentication.service",{"_index":2494,"title":{},"body":{"modules/GraphQLModule.html":{},"components/LoginComponent.html":{}}}],["authenticated",{"_index":631,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authentication",{"_index":2544,"title":{},"body":{"modules/GraphQLModule.html":{},"additional-documentation/using-gropius.html":{}}}],["authentication.service",{"_index":636,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authenticationservice",{"_index":624,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"injectables/ProjectStoreService.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"additional-documentation/managing-gropius.html":{}}}],["authenticationsservice",{"_index":618,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authguard",{"_index":499,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{},"additional-documentation/managing-gropius.html":{}}}],["author",{"_index":3472,"title":{},"body":{"components/IssueListComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["authorization",{"_index":2545,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["authors",{"_index":6025,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":1556,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"injectables/ProjectStoreService.html":{},"components/TopToolbarComponent.html":{}}}],["authservice.logout",{"_index":2537,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["auto",{"_index":1202,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LoginComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["autodismiss",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["automatic",{"_index":2112,"title":{},"body":{"injectables/DataService.html":{},"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["automatically",{"_index":621,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueIconComponent.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["automaticly",{"_index":3611,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["autonomous",{"_index":5854,"title":{},"body":{"index.html":{}}}],["available",{"_index":570,"title":{},"body":{"interfaces/AppState.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["avgeriou",{"_index":5937,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":1842,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["avoiding",{"_index":4647,"title":{},"body":{"interfaces/Positions.html":{}}}],["await",{"_index":1526,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"miscellaneous/variables.html":{}}}],["away",{"_index":3796,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["b",{"_index":953,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueLabelComponent.html":{},"components/ProjectListComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["b.blur",{"_index":4883,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["back",{"_index":4362,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{}}}],["backend",{"_index":228,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/AppState.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectMembersComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["backend:can",{"_index":5921,"title":{},"body":{"index.html":{}}}],["background",{"_index":269,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectListComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["backtologin",{"_index":5183,"title":{},"body":{"components/RegisterComponent.html":{}}}],["backtologin(e",{"_index":5192,"title":{},"body":{"components/RegisterComponent.html":{}}}],["backwards",{"_index":3920,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["badge",{"_index":5554,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["badge.closed",{"_index":5570,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["badge.reopened",{"_index":5571,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["badge.warning",{"_index":5568,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["badly",{"_index":3877,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["bar",{"_index":2200,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["based",{"_index":1247,"title":{},"body":{"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"index.html":{},"license.html":{}}}],["basic",{"_index":2517,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bd",{"_index":5954,"title":{},"body":{"index.html":{}}}],["bearer",{"_index":2546,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["becker",{"_index":5931,"title":{},"body":{"index.html":{}}}],["before",{"_index":1950,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"components/IssueContentsComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"components/RemoveDialogComponent.html":{},"components/TimelineItemComponent.html":{}}}],["beforenodemove",{"_index":3328,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["beforenodemove(group",{"_index":3277,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["beginediting",{"_index":2723,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/SetEditorComponent.html":{}}}],["beginning",{"_index":2172,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["begins",{"_index":2729,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["behavior",{"_index":1809,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{}}}],["behaviorsubject",{"_index":683,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"interfaces/User.html":{}}}],["behaviorsubject(false",{"_index":2287,"title":{},"body":{"components/FrameComponent.html":{}}}],["behaviorsubject(null",{"_index":4367,"title":{},"body":{"interfaces/Positions.html":{}}}],["behaviorsubject(this.fetchuserfromstorage",{"_index":692,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["behaviorsubject(this.getselectedcategories",{"_index":3083,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["behaviour",{"_index":4391,"title":{},"body":{"interfaces/Positions.html":{}}}],["behaviours",{"_index":4327,"title":{},"body":{"interfaces/Positions.html":{}}}],["behaviours.ts",{"_index":3246,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"coverage.html":{}}}],["behaviours.ts:163",{"_index":3261,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:168",{"_index":3263,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:18",{"_index":3331,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["behaviours.ts:19",{"_index":3330,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["behaviours.ts:23",{"_index":3332,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["behaviours.ts:91",{"_index":3254,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:92",{"_index":3256,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:93",{"_index":3255,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:95",{"_index":3265,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behind",{"_index":5851,"title":{},"body":{"index.html":{}}}],["being",{"_index":1003,"title":{},"body":{"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"classes/NodeCache.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{}}}],["belongs",{"_index":996,"title":{},"body":{"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["below",{"_index":2791,"title":{},"body":{"components/IssueDetailComponent.html":{},"index.html":{}}}],["beneath",{"_index":5393,"title":{},"body":{"components/SideNavComponent.html":{}}}],["benefits",{"_index":5861,"title":{},"body":{"index.html":{}}}],["bespoke",{"_index":3532,"title":{},"body":{"components/IssueListComponent.html":{}}}],["best",{"_index":3283,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["bestdistance",{"_index":3286,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["beta.3",{"_index":5810,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":6166,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["between",{"_index":704,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["beyond",{"_index":1778,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["bindings",{"_index":6207,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["bit",{"_index":1723,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["black",{"_index":3424,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectListComponent.html":{}}}],["blank",{"_index":4645,"title":{},"body":{"interfaces/Positions.html":{}}}],["block",{"_index":2793,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["blue",{"_index":5897,"title":{},"body":{"index.html":{}}}],["body",{"_index":994,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/TimelineItemComponent.html":{}}}],["body.mat",{"_index":4303,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["bold",{"_index":2937,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SideNavComponent.html":{}}}],["bool",{"_index":2878,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":600,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{}}}],["booleans",{"_index":3061,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["bootstrap",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":1177,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["both",{"_index":740,"title":{},"body":{"classes/CCIMSValidators.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{},"additional-documentation/managing-gropius.html":{}}}],["bottom",{"_index":1276,"title":{},"body":{"interfaces/ComponentNode.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"interfaces/IssueNode.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"interfaces/Position.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TimelineItemComponent.html":{}}}],["bound",{"_index":3091,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["bounding",{"_index":4372,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox",{"_index":4610,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox.height",{"_index":4662,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox.width",{"_index":4659,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox.x",{"_index":4658,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox.y",{"_index":4661,"title":{},"body":{"interfaces/Positions.html":{}}}],["box",{"_index":1180,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/DialogData-1.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["boxes",{"_index":5898,"title":{},"body":{"index.html":{}}}],["brandt",{"_index":6275,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["break",{"_index":4090,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/TextDisplayComponent.html":{}}}],["breakpointobserver",{"_index":2274,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["breakpoints",{"_index":2291,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["breitenbücher",{"_index":5930,"title":{},"body":{"index.html":{}}}],["bridges",{"_index":2252,"title":{},"body":{"components/FrameComponent.html":{}}}],["brightness",{"_index":3412,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["browse",{"_index":6035,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["browseranimationsmodule",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["browsermodule",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["bug",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["bug_report",{"_index":3128,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/SideNavComponent.html":{}}}],["bugcount",{"_index":2390,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["bugs",{"_index":2391,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["buhnova",{"_index":5938,"title":{},"body":{"index.html":{}}}],["buildfilter",{"_index":2821,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["builds",{"_index":2841,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["built",{"_index":5847,"title":{},"body":{"index.html":{}}}],["button",{"_index":89,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData-1.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TopToolbarComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["buttoncreateproject",{"_index":4910,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["buttondeleteproject",{"_index":4909,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["buttonmode",{"_index":5124,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["buttons",{"_index":2713,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{},"index.html":{}}}],["c",{"_index":2011,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["c.name",{"_index":4270,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["c1",{"_index":3469,"title":{},"body":{"components/IssueListComponent.html":{}}}],["cache",{"_index":106,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/variables.html":{}}}],["cache_fast_debounce_time_ms",{"_index":1773,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cache_interactive_debounce_time_ms",{"_index":1776,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cache_stale_time_ms",{"_index":1782,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cacheable",{"_index":1692,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["cached",{"_index":774,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["cachenodecomponent",{"_index":105,"title":{"components/CacheNodeComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["caching",{"_index":2113,"title":{},"body":{"injectables/DataService.html":{}}}],["calc(100",{"_index":1199,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["calc(36px",{"_index":5556,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["calculaiton",{"_index":3191,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculate",{"_index":3279,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["calculateboundingbox",{"_index":4773,"title":{},"body":{"interfaces/Positions.html":{}}}],["calculated",{"_index":4771,"title":{},"body":{"interfaces/Positions.html":{}}}],["calculatemovement",{"_index":3758,"title":{},"body":{"classes/LayoutNode.html":{}}}],["calculatemovement(allnodes",{"_index":3781,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["calculates",{"_index":3177,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["calculatesourcehandles",{"_index":3171,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculatesourcehandles(source",{"_index":3174,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculatetargethandles",{"_index":3172,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculatetargethandles(target",{"_index":3178,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculation",{"_index":3183,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["calculations",{"_index":4746,"title":{},"body":{"interfaces/Positions.html":{}}}],["call",{"_index":1878,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"index.html":{}}}],["callback",{"_index":1421,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["callbacks",{"_index":5317,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["called",{"_index":1905,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueGraphClassSettersService.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["caller",{"_index":3221,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["calling",{"_index":1788,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["calls",{"_index":1256,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["camara",{"_index":5940,"title":{},"body":{"index.html":{}}}],["camporuscio",{"_index":5942,"title":{},"body":{"index.html":{}}}],["can't",{"_index":5296,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["canactivate",{"_index":505,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":626,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":77,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CommentComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{}}}],["canceled",{"_index":6223,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["cancelled",{"_index":5457,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["cancels",{"_index":1469,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/Positions.html":{}}}],["cancreatenewissue",{"_index":3431,"title":{},"body":{"components/IssueListComponent.html":{}}}],["capturechildmovement",{"_index":3248,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["card",{"_index":3850,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["care",{"_index":4606,"title":{},"body":{"interfaces/Positions.html":{}}}],["carries",{"_index":5200,"title":{},"body":{"components/RegisterComponent.html":{}}}],["carry",{"_index":2968,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["case",{"_index":902,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{}}}],["cases",{"_index":3404,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["catch",{"_index":3400,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["catch((err",{"_index":1637,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["catch((error",{"_index":1504,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["catch(error",{"_index":1734,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["catcherror",{"_index":2194,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["categiry",{"_index":3458,"title":{},"body":{"components/IssueListComponent.html":{}}}],["categories",{"_index":2352,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["categories[key",{"_index":2992,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["category",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueCategoryComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["category'},{'name",{"_index":128,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["category.component",{"_index":2608,"title":{},"body":{"modules/GraphsModule.html":{}}}],["category.component.html",{"_index":2652,"title":{},"body":{"components/IssueCategoryComponent.html":{}}}],["category.component.scss",{"_index":2651,"title":{},"body":{"components/IssueCategoryComponent.html":{}}}],["category.component.ts",{"_index":2650,"title":{},"body":{"components/IssueCategoryComponent.html":{},"coverage.html":{}}}],["category.component.ts:10",{"_index":2653,"title":{},"body":{"components/IssueCategoryComponent.html":{}}}],["category/issue",{"_index":2607,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"coverage.html":{}}}],["cause",{"_index":1629,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/NodeCache.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["caused",{"_index":3351,"title":{},"body":{"components/IssueIconComponent.html":{},"index.html":{}}}],["causes",{"_index":2147,"title":{},"body":{"injectables/DataService.html":{}}}],["caution",{"_index":591,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["ccc",{"_index":5563,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["ccims",{"_index":722,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/Positions.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["ccimsicons",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["ccimsvalidators",{"_index":718,"title":{"classes/CCIMSValidators.html":{}},"body":{"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{},"coverage.html":{}}}],["ccimsvalidators.contentvalidator",{"_index":1420,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["ccimsvalidators.nameformatvalidator",{"_index":1414,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["ccimsvalidators.namevalidator",{"_index":1589,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["ccimsvalidators.urlvalidator",{"_index":1416,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["cdktablemodule",{"_index":2571,"title":{},"body":{"modules/GraphsModule.html":{}}}],["cdktreemodule",{"_index":2573,"title":{},"body":{"modules/GraphsModule.html":{}}}],["center",{"_index":1195,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["center_focus_strong",{"_index":3130,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["centered",{"_index":4903,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["certain",{"_index":4716,"title":{},"body":{"interfaces/Positions.html":{}}}],["ceur",{"_index":5979,"title":{},"body":{"index.html":{}}}],["chain",{"_index":5873,"title":{},"body":{"index.html":{}}}],["challenges",{"_index":5864,"title":{},"body":{"index.html":{}}}],["change",{"_index":592,"title":{},"body":{"interfaces/AppState.html":{},"components/IssueFilterComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"components/SetEditorComponent.html":{},"injectables/StateService.html":{},"classes/TimeFormatter.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["changecolour",{"_index":4858,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["changed",{"_index":2730,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["changedetector",{"_index":1062,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["changedetectorref",{"_index":1063,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["changeissuecategory",{"_index":3614,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changeissuecategory(changeissuecategoryinput",{"_index":3655,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changeissuecategory(math.random().tostring",{"_index":2776,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["changeissuecategorygql",{"_index":3640,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changeissuecategoryinput",{"_index":3656,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changeissuecategorymutation",{"_index":3639,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changepassword",{"_index":4825,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["changes",{"_index":549,"title":{},"body":{"interfaces/AppState.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"classes/LayoutNode.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"classes/Vector.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["changes.listset",{"_index":5311,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["changes.listset.currentvalue",{"_index":5313,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["changeset",{"_index":2839,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/SetEditorComponent.html":{}}}],["changing",{"_index":1847,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["charge",{"_index":5993,"title":{},"body":{"license.html":{}}}],["charset=utf",{"_index":2521,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":1802,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"classes/Vector.html":{},"index.html":{}}}],["checkbox",{"_index":5364,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["checked",{"_index":1645,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"components/IssueDetailComponent.html":{}}}],["checkimstype",{"_index":1434,"title":{},"body":{"components/CreateComponentDialogComponent.html":{}}}],["checkimstype(returnfromselect",{"_index":1431,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["checking",{"_index":5132,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["checks",{"_index":963,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/FrameComponent.html":{},"components/RegisterComponent.html":{}}}],["checkusernamegql",{"_index":5190,"title":{},"body":{"components/RegisterComponent.html":{}}}],["chevron_left",{"_index":1680,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["chevron_right",{"_index":1681,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["child",{"_index":2704,"title":{},"body":{"components/IssueContentsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/NodeDetailsComponent.html":{},"components/SetEditorDialogComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["child(2",{"_index":5369,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["child(3",{"_index":5371,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["child(4",{"_index":5373,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["child.x",{"_index":3315,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["child.y",{"_index":3316,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["child::after",{"_index":3873,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["childgroup",{"_index":3258,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["childnode",{"_index":3260,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["childnode.allowedanchors",{"_index":3324,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["childnodepositions",{"_index":3249,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["children",{"_index":506,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["children.has(childid",{"_index":3305,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["circumstance",{"_index":3767,"title":{},"body":{"classes/LayoutNode.html":{}}}],["claim",{"_index":6028,"title":{},"body":{"license.html":{}}}],["class",{"_index":57,"title":{"classes/CCIMSValidators.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"classes/TimeFormatter.html":{},"classes/Vector.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["class=\"timeline",{"_index":2698,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["classes",{"_index":719,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/TimeFormatter.html":{},"classes/Vector.html":{},"overview.html":{},"additional-documentation/managing-gropius.html":{}}}],["classname",{"_index":3026,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["clean",{"_index":4613,"title":{},"body":{"interfaces/Positions.html":{}}}],["clear",{"_index":2697,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["cleartimeout(this.loadtimeout",{"_index":1902,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["cli",{"_index":6187,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["click",{"_index":2166,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Positions.html":{},"components/RemoveDialogComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["clicked",{"_index":1657,"title":{},"body":{"components/CreateProjectDialogComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{}}}],["clickedonrow",{"_index":3441,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["clickedonrow(row",{"_index":3453,"title":{},"body":{"components/IssueListComponent.html":{}}}],["clickedonrow(rowdata",{"_index":4928,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["clicking",{"_index":4511,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["clicks",{"_index":2253,"title":{},"body":{"components/FrameComponent.html":{}}}],["client",{"_index":2550,"title":{},"body":{"modules/GraphQLModule.html":{},"additional-documentation/managing-gropius.html":{}}}],["clientmutationid",{"_index":1611,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["clockwise",{"_index":5682,"title":{},"body":{"classes/Vector.html":{}}}],["close",{"_index":61,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"injectables/IssueStoreService.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["close(closeinput",{"_index":3658,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["close_ios",{"_index":65,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["closebutton",{"_index":2514,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["closecomponentactions(reload",{"_index":4594,"title":{},"body":{"interfaces/Positions.html":{}}}],["closed",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["closedialog",{"_index":31,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["closeinput",{"_index":3661,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["closeissue",{"_index":2665,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["closeissuegql",{"_index":3634,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["closeissueinput",{"_index":3659,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["closeissuemutation",{"_index":3633,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["closer",{"_index":5967,"title":{},"body":{"index.html":{}}}],["closes",{"_index":2672,"title":{},"body":{"components/IssueContentsComponent.html":{},"interfaces/Positions.html":{}}}],["closing",{"_index":4363,"title":{},"body":{"interfaces/Positions.html":{},"components/SetEditorComponent.html":{}}}],["cloud",{"_index":5964,"title":{},"body":{"index.html":{}}}],["clr/ui",{"_index":5811,"title":{},"body":{"dependencies.html":{}}}],["cluster_appmodule",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_graphsmodule",{"_index":2558,"title":{},"body":{"modules/GraphsModule.html":{},"overview.html":{}}}],["cluster_graphsmodule_declarations",{"_index":2559,"title":{},"body":{"modules/GraphsModule.html":{},"overview.html":{}}}],["cluster_graphsmodule_exports",{"_index":2560,"title":{},"body":{"modules/GraphsModule.html":{},"overview.html":{}}}],["coalescable_events",{"_index":845,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalesce",{"_index":900,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalesced",{"_index":813,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["coalesced.push",{"_index":942,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescedtimelineitem",{"_index":805,"title":{"interfaces/CoalescedTimelineItem.html":{}},"body":{"interfaces/CoalescedTimelineItem.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{}}}],["coalescelist",{"_index":898,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescelist.length",{"_index":905,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescelist.push(timelineitem",{"_index":921,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescelist[0",{"_index":937,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescelist[0].createdat",{"_index":943,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescing",{"_index":916,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescingtype",{"_index":897,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["code",{"_index":2615,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/ProjectMembersComponent.html":{},"index.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["codechange",{"_index":3982,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["codedidchange",{"_index":3981,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["codegen",{"_index":6250,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["codegenerator",{"_index":1315,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["collect",{"_index":4254,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["collection",{"_index":2062,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["collections",{"_index":2336,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"dependencies.html":{}}}],["collects",{"_index":3042,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["color",{"_index":270,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/LabelStoreService.html":{},"components/MarkdownEditorComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"dependencies.html":{}}}],["color($accent",{"_index":5422,"title":{},"body":{"components/SideNavComponent.html":{}}}],["colorpickermodule",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["colortestcanvas",{"_index":3380,"title":{},"body":{"components/IssueLabelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["colortestcanvas.getcontext('2d",{"_index":3385,"title":{},"body":{"components/IssueLabelComponent.html":{},"miscellaneous/variables.html":{}}}],["colortestcanvas.height",{"_index":3383,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["colortestcanvas.width",{"_index":3382,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["colortestctx",{"_index":3384,"title":{},"body":{"components/IssueLabelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["colortestctx.fillrect(0",{"_index":3394,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["colortestctx.fillstyle",{"_index":3393,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["colortestctx.getimagedata(0",{"_index":3396,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["column",{"_index":2302,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["columns",{"_index":2309,"title":{},"body":{"components/FrameComponent.html":{}}}],["columnstodisplay",{"_index":3432,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["combination",{"_index":5099,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["combined",{"_index":3093,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["combinelatest",{"_index":3087,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["combinelatest([this.selectedcategories",{"_index":3106,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["combinelatest([this.ss.state",{"_index":3229,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["combines",{"_index":3043,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["comes",{"_index":4384,"title":{},"body":{"interfaces/Positions.html":{}}}],["coming",{"_index":3739,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["comment",{"_index":975,"title":{},"body":{"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{}}}],["comment'},{'name",{"_index":109,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["comment.component.html",{"_index":979,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment.component.scss",{"_index":978,"title":{},"body":{"components/CommentComponent.html":{}}}],["commentcomponent",{"_index":108,"title":{"components/CommentComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["commentcontainer",{"_index":5566,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["commented",{"_index":1047,"title":{},"body":{"components/CommentComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["commenteditor",{"_index":2663,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["commentid",{"_index":984,"title":{},"body":{"components/CommentComponent.html":{}}}],["commentissue",{"_index":2666,"title":{},"body":{"components/IssueContentsComponent.html":{},"injectables/IssueStoreService.html":{}}}],["commentissue(commentissueinput",{"_index":3662,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["commentissuegql",{"_index":3628,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["commentissueinput",{"_index":3665,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["commentissuemutation",{"_index":3627,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["commentsub",{"_index":1016,"title":{},"body":{"components/CommentComponent.html":{}}}],["common",{"_index":6233,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["commonly",{"_index":721,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["commonmodule",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["communicate",{"_index":6208,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["communicated",{"_index":2256,"title":{},"body":{"components/FrameComponent.html":{}}}],["communicating",{"_index":3986,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["communication",{"_index":2502,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["communications",{"_index":5951,"title":{},"body":{"index.html":{}}}],["companion",{"_index":5976,"title":{},"body":{"index.html":{}}}],["compare",{"_index":1832,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{}}}],["compared",{"_index":3903,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["compatibility",{"_index":2074,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["compatible",{"_index":5635,"title":{},"body":{"injectables/UsersService.html":{}}}],["complete",{"_index":4600,"title":{},"body":{"interfaces/Positions.html":{}}}],["completely",{"_index":4598,"title":{},"body":{"interfaces/Positions.html":{}}}],["complex",{"_index":4648,"title":{},"body":{"interfaces/Positions.html":{}}}],["compodoc",{"_index":4003,"title":{},"body":{"components/MarkdownPreviewComponent.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["compodoc.p.s",{"_index":5910,"title":{},"body":{"index.html":{}}}],["compodocfor",{"_index":6192,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["component",{"_index":0,"title":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["component'},{'name",{"_index":116,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["component(s",{"_index":4261,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["component.component",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["component.component.html",{"_index":5258,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.scss",{"_index":5257,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts",{"_index":5256,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{},"coverage.html":{}}}],["component.component.ts:10",{"_index":5259,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts:11",{"_index":5262,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts:14",{"_index":5263,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts:18",{"_index":5261,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts:22",{"_index":5260,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.graphql",{"_index":1318,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["component.id",{"_index":1262,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["component.name",{"_index":1263,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueItemComponent.html":{},"interfaces/IssueNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["component.node",{"_index":4241,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["component/:componentid",{"_index":514,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component/:componentid/issue/:issueid",{"_index":516,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component/project",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProjectListComponent.html":{},"coverage.html":{}}}],["component/query.component",{"_index":838,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["component/query.component.ts",{"_index":5087,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["component/query.component.ts:123",{"_index":5154,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:124",{"_index":5159,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:125",{"_index":5160,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:130",{"_index":5161,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:131",{"_index":5162,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:133",{"_index":5153,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:150",{"_index":5156,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:160",{"_index":5155,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:196",{"_index":5157,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:202",{"_index":5158,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:25",{"_index":5091,"title":{},"body":{"directives/QueryBodyDirective.html":{}}}],["component/query.component.ts:26",{"_index":5092,"title":{},"body":{"directives/QueryBodyDirective.html":{}}}],["component/query.component.ts:36",{"_index":5149,"title":{},"body":{"directives/QueryButtonDirective.html":{}}}],["component/query.component.ts:37",{"_index":5150,"title":{},"body":{"directives/QueryButtonDirective.html":{}}}],["component/remove",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["component_context_menu_data",{"_index":1106,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":97,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["componentcontextmenu",{"_index":4351,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentcontextmenucomponent",{"_index":110,"title":{"components/ComponentContextMenuComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["componentcontextmenucomponent.componentcontextmenucomponent",{"_index":4352,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentcontextmenucomponent.componentcontextmenuservice",{"_index":4344,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentcontextmenucomponent.last_height",{"_index":1079,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentcontextmenucomponent.last_width",{"_index":1082,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentcontextmenucomponent.min_height",{"_index":1138,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentcontextmenucomponent.min_width",{"_index":1136,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentcontextmenudata",{"_index":1061,"title":{"interfaces/ComponentContextMenuData.html":{}},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"coverage.html":{}}}],["componentcontextmenunodeid",{"_index":4353,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentcontextmenuservice",{"_index":1101,"title":{"injectables/ComponentContextMenuService.html":{}},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["componentdetails",{"_index":6162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["componentfilter",{"_index":1393,"title":{},"body":{"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["componentid",{"_index":1294,"title":{},"body":{"interfaces/ComponentNode.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["componentinterface",{"_index":2329,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["componentinterfacefilter",{"_index":1394,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["componentinterfaceprovider",{"_index":3433,"title":{},"body":{"components/IssueListComponent.html":{}}}],["componentinterfaces",{"_index":3915,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["componentinterfacesub",{"_index":3434,"title":{},"body":{"components/IssueListComponent.html":{}}}],["componentlist",{"_index":1454,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["componentnode",{"_index":1207,"title":{"interfaces/ComponentNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["componentnodes",{"_index":4617,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentportal",{"_index":1092,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentportal(componentcontextmenucomponent",{"_index":1130,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentStoreService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/QueriesService.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"overview.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["components.node.component.name",{"_index":4268,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["components.node.consumedby.nodes",{"_index":4269,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["components.service",{"_index":5084,"title":{},"body":{"injectables/QueriesService.html":{}}}],["componentsize",{"_index":4774,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentsservice",{"_index":1368,"title":{"injectables/ComponentsService.html":{}},"body":{"injectables/ComponentsService.html":{},"injectables/QueriesService.html":{},"coverage.html":{}}}],["componentstore",{"_index":1410,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["componentstoreservice",{"_index":1306,"title":{"injectables/ComponentStoreService.html":{}},"body":{"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{},"additional-documentation/managing-gropius.html":{}}}],["componentsub",{"_index":3435,"title":{},"body":{"components/IssueListComponent.html":{}}}],["composed",{"_index":3890,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["compute",{"_index":2382,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["computed",{"_index":4024,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["computer",{"_index":5952,"title":{},"body":{"index.html":{}}}],["computerelatedfolders",{"_index":2445,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"coverage.html":{}}}],["computerelatedfolders(linkissues",{"_index":2374,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["computes",{"_index":2442,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["computing",{"_index":5965,"title":{},"body":{"index.html":{}}}],["concat",{"_index":2193,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["concat(affected",{"_index":4272,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["concepts",{"_index":6229,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["concerns",{"_index":6195,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["condition",{"_index":6253,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["conditions",{"_index":6010,"title":{},"body":{"license.html":{}}}],["conference",{"_index":5963,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/managing-gropius.html":{}}}],["configurations",{"_index":2500,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["configured",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/managing-gropius.html":{}}}],["confirm",{"_index":1605,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["confirmation",{"_index":2168,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["confirmbuttontext",{"_index":1604,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["confirmdeletedialogref",{"_index":1029,"title":{},"body":{"components/CommentComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["confirmdeletedialogref.afterclosed().subscribe",{"_index":1038,"title":{},"body":{"components/CommentComponent.html":{}}}],["confirmdeletedialogref.afterclosed().subscribe((del",{"_index":5019,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["confirmdeletedialogref.afterclosed().subscribe((deletedata",{"_index":4273,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["confirmed",{"_index":1040,"title":{},"body":{"components/CommentComponent.html":{}}}],["confirms",{"_index":1464,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["confirmvalidator",{"_index":5180,"title":{},"body":{"components/RegisterComponent.html":{}}}],["congiuration",{"_index":2510,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["conjunction",{"_index":5523,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["connect",{"_index":1233,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["connectconsumingcomponents(interfacenode",{"_index":4669,"title":{},"body":{"interfaces/Positions.html":{}}}],["connected",{"_index":3764,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["connectedposition",{"_index":1088,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["connectedto",{"_index":3750,"title":{},"body":{"classes/LayoutNode.html":{}}}],["connecting",{"_index":4632,"title":{},"body":{"interfaces/Positions.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["connection",{"_index":872,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/LayoutNode.html":{},"components/ProjectIssueListComponent.html":{},"classes/Vector.html":{},"license.html":{}}}],["connections",{"_index":4607,"title":{},"body":{"interfaces/Positions.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["connector",{"_index":1296,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["connectto",{"_index":3759,"title":{},"body":{"classes/LayoutNode.html":{}}}],["connectto(other",{"_index":3787,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["connecttoofferingcomponent(node",{"_index":4663,"title":{},"body":{"interfaces/Positions.html":{}}}],["considered",{"_index":1779,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["consistent",{"_index":6202,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["consists",{"_index":4338,"title":{},"body":{"interfaces/Positions.html":{}}}],["console",{"_index":5613,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["console.error('oh",{"_index":1735,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["console.log('dark",{"_index":5388,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["console.log('deleted",{"_index":2175,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["console.log('error",{"_index":5112,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"injectables/UserNotifyService.html":{}}}],["console.log('node",{"_index":1733,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["console.log('not",{"_index":2176,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["console.log('register",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('result",{"_index":5111,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["console.log('setting",{"_index":4411,"title":{},"body":{"interfaces/Positions.html":{}}}],["console.log(`[graphql",{"_index":2531,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["console.log(`[network",{"_index":2533,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["const",{"_index":254,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":1807,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{}}}],["constructed",{"_index":2506,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["constructing",{"_index":2048,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{}}}],["construction",{"_index":2967,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{}}}],["constructor(@inject(component_context_menu_data",{"_index":1147,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["constructor(activatedroute",{"_index":3447,"title":{},"body":{"components/IssueListComponent.html":{}}}],["constructor(apiservice",{"_index":3207,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["constructor(authservice",{"_index":5029,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["constructor(breakpointobserver",{"_index":2273,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["constructor(changedetector",{"_index":5543,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["constructor(components",{"_index":5074,"title":{},"body":{"injectables/QueriesService.html":{}}}],["constructor(createinterfacemutation",{"_index":2620,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["constructor(createissue",{"_index":3621,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["constructor(data",{"_index":1060,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["constructor(dataservice",{"_index":766,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{}}}],["constructor(dialog",{"_index":1460,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["constructor(dialogref",{"_index":34,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["constructor(element",{"_index":5148,"title":{},"body":{"directives/QueryButtonDirective.html":{}}}],["constructor(fb",{"_index":5186,"title":{},"body":{"components/RegisterComponent.html":{}}}],["constructor(getfullissuegraphdataquery",{"_index":2948,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["constructor(getlabelsgql",{"_index":3731,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["constructor(http",{"_index":660,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(id",{"_index":1882,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["constructor(initialposition",{"_index":3329,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["constructor(labelstore",{"_index":3717,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["constructor(maticonregistry",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(notify",{"_index":5152,"title":{},"body":{"components/QueryComponent.html":{}}}],["constructor(overlay",{"_index":1203,"title":{},"body":{"injectables/ComponentContextMenuService.html":{}}}],["constructor(private",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectsService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{}}}],["constructor(projectstore",{"_index":4862,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["constructor(public",{"_index":58,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/DialogData-1.html":{},"components/IssueGraphControlsComponent.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["constructor(qlistprojectcomponents",{"_index":1375,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["constructor(qlistprojects",{"_index":5061,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["constructor(qsearchusers",{"_index":5625,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(queries",{"_index":1939,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["constructor(route",{"_index":3939,"title":{},"body":{"components/LoginComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectIssueListComponent.html":{}}}],["constructor(router",{"_index":623,"title":{},"body":{"guards/AuthGuard.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/NodeDetailsComponent.html":{},"injectables/StateService.html":{}}}],["constructor(spec",{"_index":4019,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["constructor(ss",{"_index":5403,"title":{},"body":{"components/SideNavComponent.html":{}}}],["constructor(template",{"_index":5090,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["constructor(toastr",{"_index":5607,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["constructor(updatecomponentmutation",{"_index":1327,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["constructor(x",{"_index":3792,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["constructors",{"_index":1241,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["consumed",{"_index":2960,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{}}}],["consumedby",{"_index":2403,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["consumer",{"_index":4429,"title":{},"body":{"interfaces/Positions.html":{}}}],["consumerid",{"_index":4670,"title":{},"body":{"interfaces/Positions.html":{}}}],["consuming",{"_index":4633,"title":{},"body":{"interfaces/Positions.html":{}}}],["contain",{"_index":808,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["contained",{"_index":1257,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{},"index.html":{}}}],["container",{"_index":1198,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"interfaces/Position.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/enumerations.html":{}}}],["containers",{"_index":4779,"title":{},"body":{"interfaces/Positions.html":{}}}],["containing",{"_index":901,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/TopToolbarComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["contains",{"_index":2024,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"injectables/LabelStoreService.html":{},"components/MarkdownEditorComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["content",{"_index":261,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"classes/CCIMSValidators.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{}}}],["content.nativeelement.addeventlistener('mousedown",{"_index":1143,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["contentchild",{"_index":786,"title":{},"body":{"components/CacheNodeComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["contentchild(itemdirective",{"_index":779,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/SetEditorComponent.html":{}}}],["contentchild(querybodydirective",{"_index":5121,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["contentchild(querybuttondirective",{"_index":5122,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["contentchild(timelinecoalesceditemsdirective",{"_index":5531,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["contentchild(timelineitemdeleteddirective",{"_index":5533,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["contentchild(timelinesingleitemdirective",{"_index":5529,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["contents",{"_index":2660,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["contents'},{'name",{"_index":130,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["contents.component",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"components/CommentComponent.html":{}}}],["contents.component.html",{"_index":2662,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.scss",{"_index":2661,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts",{"_index":2658,"title":{},"body":{"components/IssueContentsComponent.html":{},"coverage.html":{}}}],["contents.component.ts:19",{"_index":2669,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:21",{"_index":2670,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:33",{"_index":2677,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:35",{"_index":2668,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:56",{"_index":2671,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:61",{"_index":2674,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:66",{"_index":2673,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contentvalidator",{"_index":728,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["context",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"modules/GraphQLModule.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["contextmenutype",{"_index":4533,"title":{},"body":{"interfaces/Positions.html":{}}}],["contextmenutypefornodetype(node",{"_index":4537,"title":{},"body":{"interfaces/Positions.html":{}}}],["continue",{"_index":923,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{}}}],["contract",{"_index":6031,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":809,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"modules/GraphQLModule.html":{}}}],["contributors",{"_index":5926,"title":{"additional-documentation/contributors.html":{}},"body":{"index.html":{},"additional-documentation/contributors.html":{}}}],["control",{"_index":1688,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"interfaces/DialogData-1.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["control.value",{"_index":2178,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["control.value}).subscribe",{"_index":5225,"title":{},"body":{"components/RegisterComponent.html":{}}}],["controlled",{"_index":1673,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["controls",{"_index":1105,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/IssueGraphControlsComponent.html":{},"components/RegisterComponent.html":{}}}],["controls'},{'name",{"_index":139,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["controls.component",{"_index":498,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{}}}],["controls.component.html",{"_index":3050,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.scss",{"_index":3049,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts",{"_index":3039,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"coverage.html":{}}}],["controls.component.ts:111",{"_index":3067,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:26",{"_index":3079,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:27",{"_index":3081,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:29",{"_index":3082,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:32",{"_index":3076,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:33",{"_index":3074,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:34",{"_index":3086,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:36",{"_index":3085,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:38",{"_index":3077,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:39",{"_index":3058,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:41",{"_index":3075,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:52",{"_index":3084,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:57",{"_index":3071,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:65",{"_index":3059,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:73",{"_index":3066,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls/issue",{"_index":497,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{},"coverage.html":{}}}],["conversion",{"_index":2943,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["convert",{"_index":2324,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/QueryListParams.html":{}}}],["converts",{"_index":2365,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"classes/TimeFormatter.html":{}}}],["convertvalueforfilter",{"_index":5778,"title":{},"body":{"coverage.html":{}}}],["convertvalueforfilter(predicates[id].type",{"_index":2919,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["convertvalueforfilter(type",{"_index":2897,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["coordinate",{"_index":3197,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["coordinates",{"_index":4539,"title":{},"body":{"interfaces/Positions.html":{}}}],["copies",{"_index":6006,"title":{},"body":{"license.html":{}}}],["copy",{"_index":5996,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":5988,"title":{},"body":{"license.html":{}}}],["coressponding",{"_index":3064,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["corner",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["corner.svg",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["correct",{"_index":749,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"classes/TimeFormatter.html":{}}}],["correctly",{"_index":1985,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["correspond",{"_index":2221,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"components/SetEditorComponent.html":{},"interfaces/TextFragment.html":{}}}],["corresponding",{"_index":865,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["corresponds",{"_index":3891,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{}}}],["count",{"_index":889,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["count(c",{"_index":2013,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["count.tostring",{"_index":4710,"title":{},"body":{"interfaces/Positions.html":{}}}],["counter",{"_index":1865,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["counts",{"_index":2351,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["course",{"_index":5901,"title":{},"body":{"index.html":{}}}],["cover",{"_index":4138,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["coverage",{"_index":5692,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":112,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["create(issueinput",{"_index":3666,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["create(name",{"_index":2631,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/ProjectStoreService.html":{}}}],["create/edit",{"_index":1486,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["createcomponent",{"_index":1321,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["createcomponent(input",{"_index":1342,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["createcomponentdata",{"_index":1401,"title":{"interfaces/CreateComponentData.html":{}},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"coverage.html":{}}}],["createcomponentdialogcomponent",{"_index":111,"title":{"components/CreateComponentDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createcomponentdialogref",{"_index":4819,"title":{},"body":{"interfaces/Positions.html":{}}}],["createcomponentdialogref.afterclosed().subscribe((componentinformation",{"_index":4821,"title":{},"body":{"interfaces/Positions.html":{}}}],["createcomponentgql",{"_index":1334,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["createcomponentinput",{"_index":1343,"title":{},"body":{"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["createcomponentinterfacegql",{"_index":2621,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["createcomponentinterfaceinput",{"_index":2642,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["createcomponentmutation",{"_index":1333,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["createcomponentnode",{"_index":1223,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createcomponentnode(component",{"_index":1260,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createconsumptionedge",{"_index":1228,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createconsumptionedge(componentid",{"_index":1292,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["created",{"_index":924,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["createdby",{"_index":939,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["createdprojectid",{"_index":1660,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["createeditlabeldialogcomponent",{"_index":113,"title":{"components/CreateEditLabelDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createeditlabeldialogdata",{"_index":1452,"title":{"interfaces/CreateEditLabelDialogData.html":{}},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"coverage.html":{}}}],["createerrorlink",{"_index":5753,"title":{},"body":{"coverage.html":{}}}],["createerrorlink(authservice",{"_index":2523,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["createinterfacedata",{"_index":1550,"title":{"interfaces/CreateInterfaceData.html":{}},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["createinterfacedialogcomponent",{"_index":117,"title":{"components/CreateInterfaceDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createinterfacedialogref",{"_index":4472,"title":{},"body":{"interfaces/Positions.html":{}}}],["createinterfacedialogref.afterclosed().subscribe((interfaceid",{"_index":4474,"title":{},"body":{"interfaces/Positions.html":{}}}],["createinterfacemutation",{"_index":2630,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["createinterfacenode",{"_index":1224,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createinterfacenode(intrface",{"_index":1266,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createinterfaceprovisionedge",{"_index":1229,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createinterfaceprovisionedge(componentid",{"_index":1297,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createissue",{"_index":3650,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["createissue(issuedata",{"_index":1617,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["createissuedialogcomponent",{"_index":119,"title":{"components/CreateIssueDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createissuefoldernode",{"_index":1226,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createissuefoldernode(node",{"_index":1279,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createissuegql",{"_index":3622,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["createissuegroupcontainernode",{"_index":1225,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createissuegroupcontainernode(node",{"_index":1272,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createissueinput",{"_index":1590,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"injectables/IssueStoreService.html":{}}}],["createitem",{"_index":4115,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["createlabel(math.random().tostring",{"_index":1532,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["createnode",{"_index":4172,"title":{},"body":{"classes/NodeCache.html":{}}}],["createnode(id",{"_index":2065,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["createproject",{"_index":5035,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["createprojectdialogcomponent",{"_index":121,"title":{"components/CreateProjectDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createprojectdialogref",{"_index":4875,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["createprojectdialogref.afterclosed().subscribe((result",{"_index":4877,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["createprojectgql",{"_index":5036,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["createprojectinput",{"_index":5047,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["createrelationedge",{"_index":1227,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createrelationedge(sourceid",{"_index":1282,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["creates",{"_index":1451,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"injectables/IssueGraphApiService.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["creating",{"_index":1488,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["creation",{"_index":1238,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/variables.html":{}}}],["creator",{"_index":928,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["creator's",{"_index":931,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["credentials",{"_index":2540,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["credits",{"_index":5923,"title":{},"body":{"index.html":{}}}],["critical",{"_index":5866,"title":{},"body":{"index.html":{}}}],["cross",{"_index":5874,"title":{},"body":{"index.html":{},"license.html":{}}}],["crud",{"_index":3608,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["css",{"_index":3379,"title":{},"body":{"components/IssueLabelComponent.html":{},"interfaces/Positions.html":{}}}],["current",{"_index":545,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["current_user_node",{"_index":2678,"title":{},"body":{"components/IssueContentsComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["current_user_node.id",{"_index":6141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentcolor",{"_index":5367,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["currentdata",{"_index":1830,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["currenthasnode(key",{"_index":2025,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["currentissueid",{"_index":4582,"title":{},"body":{"interfaces/Positions.html":{}}}],["currentitems",{"_index":1945,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["currently",{"_index":615,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["currentqueryparams",{"_index":1846,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["currentuser",{"_index":638,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/IssueContentsComponent.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["currentusergql",{"_index":5628,"title":{},"body":{"injectables/UsersService.html":{}}}],["currentusersub",{"_index":2681,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["currentusersubject",{"_index":652,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["currentuservalue",{"_index":659,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["currentviewwindow",{"_index":4732,"title":{},"body":{"interfaces/Positions.html":{}}}],["currentvisiblearea",{"_index":4350,"title":{},"body":{"interfaces/Positions.html":{}}}],["cursor",{"_index":123,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["cursor(c",{"_index":2010,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["cursor[objkey",{"_index":4089,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["cursorpaginatorcomponent",{"_index":122,"title":{"components/CursorPaginatorComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cursory",{"_index":3855,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["custom_elements_schema",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["customevent",{"_index":4456,"title":{},"body":{"interfaces/Positions.html":{}}}],["d",{"_index":5947,"title":{},"body":{"index.html":{},"additional-documentation/using-gropius.html":{}}}],["d4d4d4",{"_index":5560,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["damages",{"_index":6029,"title":{},"body":{"license.html":{}}}],["danner",{"_index":6258,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["dark",{"_index":3378,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/SettingsDialogComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["dark_mode",{"_index":5382,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["dashboard",{"_index":3131,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["dashed",{"_index":4608,"title":{},"body":{"interfaces/Positions.html":{}}}],["data",{"_index":231,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/UserItemComponent.html":{},"miscellaneous/enumerations.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["data.checkusername",{"_index":5226,"title":{},"body":{"components/RegisterComponent.html":{}}}],["data.color",{"_index":1502,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["data.component.id",{"_index":3517,"title":{},"body":{"components/IssueListComponent.html":{}}}],["data.createproject.project.id",{"_index":1661,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["data.currentuser",{"_index":6143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.emptyresultslabel",{"_index":5361,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["data.emptysuggestionslabel",{"_index":5362,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["data.length",{"_index":6129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node",{"_index":6137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.assignees.pageinfo",{"_index":6116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.assignees.totalcount",{"_index":6115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.components.pageinfo",{"_index":6079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.components.totalcount",{"_index":6078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.interfaces.pageinfo",{"_index":6086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.interfaces.totalcount",{"_index":6085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.issues.pageinfo",{"_index":6090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.issues.totalcount",{"_index":6089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.issuesonlocation.pageinfo",{"_index":6095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.issuesonlocation.totalcount",{"_index":6094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.labels.nodes",{"_index":3746,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["data.node.labels.pageinfo",{"_index":6109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.labels.totalcount",{"_index":6108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.linkedbyissues.pageinfo",{"_index":6125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.linkedbyissues.totalcount",{"_index":6124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.linkingissues.nodes.map((gqlissue",{"_index":2372,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["data.node.linkstoissues.pageinfo",{"_index":6120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.linkstoissues.totalcount",{"_index":6119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.locations.pageinfo",{"_index":6105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.locations.totalcount",{"_index":6104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.timeline.pageinfo",{"_index":6100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.timeline.totalcount",{"_index":6099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.projects.edges.map((edge",{"_index":5055,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["data.projects.pageinfo",{"_index":6074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.projects.totalcount",{"_index":6073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.searchuser",{"_index":5645,"title":{},"body":{"injectables/UsersService.html":{}}}],["data.then((value",{"_index":2044,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["data.title",{"_index":5245,"title":{},"body":{"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{}}}],["data.ts",{"_index":2315,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["data.ts:104",{"_index":2465,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:105",{"_index":2467,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:106",{"_index":2468,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:107",{"_index":2464,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:108",{"_index":2466,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:110",{"_index":2469,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:121",{"_index":2470,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:135",{"_index":2320,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:136",{"_index":2318,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:137",{"_index":2319,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:143",{"_index":2323,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:156",{"_index":2327,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:177",{"_index":2474,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:178",{"_index":2473,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:179",{"_index":2476,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:180",{"_index":2475,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:186",{"_index":2478,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:198",{"_index":2477,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:37",{"_index":2463,"title":{},"body":{"classes/GraphDataFactory.html":{}}}],["data.ts:48",{"_index":2462,"title":{},"body":{"classes/GraphDataFactory.html":{}}}],["data.userstoadd",{"_index":4983,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["data.userstodelete",{"_index":4992,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["data.values",{"_index":3527,"title":{},"body":{"components/IssueListComponent.html":{}}}],["data.verificationname",{"_index":5250,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["data/issue",{"_index":3089,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["data/label/label",{"_index":2199,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["data/project/project",{"_index":539,"title":{},"body":{"interfaces/AppState.html":{},"components/ProjectListComponent.html":{},"injectables/StateService.html":{}}}],["data[0]?.id",{"_index":6131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data[data.length",{"_index":6133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dataaspromise",{"_index":1498,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["database",{"_index":229,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectStoreService.html":{}}}],["datalist",{"_index":834,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueContentsComponent.html":{},"components/IssueListComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"additional-documentation/managing-gropius.html":{}}}],["datalist#hydrateinitial",{"_index":1875,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["datalist(this.queries",{"_index":2155,"title":{},"body":{"injectables/DataService.html":{}}}],["datanode",{"_index":783,"title":{"classes/DataNode.html":{}},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"coverage.html":{},"additional-documentation/managing-gropius.html":{}}}],["datanode#subscribelazy",{"_index":1013,"title":{},"body":{"components/CommentComponent.html":{}}}],["datanode(this.queries",{"_index":2068,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["datanode.hasdata",{"_index":2080,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["datanode.insertresult(node",{"_index":2090,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["datanodes",{"_index":2058,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["dataquery",{"_index":1693,"title":{"classes/DataQuery.html":{}},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["dataquery#interactive",{"_index":1774,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["dataquery:137",{"_index":1720,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:171",{"_index":1726,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:222",{"_index":1741,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:231",{"_index":1737,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:250",{"_index":1743,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:264",{"_index":1740,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:295",{"_index":1748,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:385",{"_index":1725,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:48",{"_index":1719,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:49",{"_index":1724,"title":{},"body":{"classes/DataNode.html":{}}}],["dataservice",{"_index":767,"title":{"injectables/DataService.html":{}},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"additional-documentation/managing-gropius.html":{}}}],["dataservice.getlist(spec.sourcenodes",{"_index":4061,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["dataservice.getnode(somenodeid",{"_index":1731,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["datasource",{"_index":3436,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["datatype",{"_index":2880,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":5486,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["date(datestring",{"_index":5500,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["date(time).tostring",{"_index":5498,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["date.now",{"_index":1839,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["date.parse(firstitem.createdat",{"_index":961,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["datestring",{"_index":5492,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["day",{"_index":5518,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["days",{"_index":73,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/TimeFormatter.html":{}}}],["db",{"_index":1558,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["deal",{"_index":1811,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"license.html":{}}}],["dealings",{"_index":6034,"title":{},"body":{"license.html":{}}}],["debounce",{"_index":1722,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["debounced",{"_index":1872,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["debouncetime",{"_index":4326,"title":{},"body":{"interfaces/Positions.html":{}}}],["debouncetime(300)).subscribe",{"_index":4410,"title":{},"body":{"interfaces/Positions.html":{}}}],["debugnologin",{"_index":6247,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["decide",{"_index":888,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["decides",{"_index":914,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["declarations",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"additional-documentation/managing-gropius.html":{}}}],["declarative",{"_index":6225,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["declare",{"_index":1790,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{}}}],["declared",{"_index":2562,"title":{},"body":{"modules/GraphsModule.html":{}}}],["decode",{"_index":3895,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["decodelistid",{"_index":2131,"title":{},"body":{"injectables/DataService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["decodelistid(id",{"_index":3921,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["decodelistid(id).type",{"_index":2153,"title":{},"body":{"injectables/DataService.html":{}}}],["decodenodeid",{"_index":1757,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["decodenodeid(firstkey",{"_index":2018,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["decodenodeid(id",{"_index":3893,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["decodenodeid(keys[keys.length",{"_index":2023,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["decodenodeid(parts[0",{"_index":3922,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["decompose",{"_index":5853,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":241,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CacheNodeComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TimelineItemComponent.html":{}}}],["deep",{"_index":1644,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["default",{"_index":50,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["defaultdictionary",{"_index":2334,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["defaultmenutitle",{"_index":5397,"title":{},"body":{"components/SideNavComponent.html":{}}}],["defaultoptions",{"_index":2496,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":4997,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["define",{"_index":1411,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"modules/GraphQLModule.html":{},"directives/ItemDirective.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":37,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"additional-documentation/managing-gropius.html":{}}}],["defines",{"_index":1638,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["definition",{"_index":6248,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["definitions",{"_index":1237,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"additional-documentation/managing-gropius.html":{}}}],["degrees",{"_index":3797,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["del",{"_index":1039,"title":{},"body":{"components/CommentComponent.html":{},"classes/MultiSourceList.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["delay",{"_index":1745,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["delete",{"_index":1032,"title":{},"body":{"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/using-gropius.html":{}}}],["delete(id",{"_index":2634,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/ProjectStoreService.html":{}}}],["deletecomment",{"_index":982,"title":{},"body":{"components/CommentComponent.html":{},"injectables/IssueStoreService.html":{}}}],["deletecomment(deleteissuecommentinput",{"_index":3669,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["deletecomponent",{"_index":1322,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deletecomponent(id",{"_index":1345,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deletecomponentgql",{"_index":1330,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deletecomponentinput",{"_index":1358,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deletecomponentinterfacegql",{"_index":2625,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["deletecomponentinterfaceinput",{"_index":2643,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["deletecomponentmutation",{"_index":1329,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deleted",{"_index":925,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"additional-documentation/using-gropius.html":{}}}],["deletedata",{"_index":4274,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["deleteinterfacemutation",{"_index":2624,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["deleteissuecommentgql",{"_index":3630,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["deleteissuecommentinput",{"_index":3670,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["deleteissuecommentmutation",{"_index":3629,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["deleteitem",{"_index":4117,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["deletememberdialogref",{"_index":4987,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["deletememberdialogref.afterclosed().subscribe((data",{"_index":4991,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["deleteproject",{"_index":5008,"title":{},"body":{"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{}}}],["deleteprojectgql",{"_index":5037,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["deleteprojectinput",{"_index":5048,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["deletequery",{"_index":4229,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["deletes",{"_index":998,"title":{},"body":{"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["deleting",{"_index":1310,"title":{},"body":{"injectables/ComponentStoreService.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/RemoveDialogComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["deletion",{"_index":1041,"title":{},"body":{"components/CommentComponent.html":{},"injectables/InterfaceStoreService.html":{},"interfaces/Positions.html":{}}}],["deletions",{"_index":1516,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["delivers",{"_index":2366,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["demo",{"_index":4893,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["denoting",{"_index":2979,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["dependencies",{"_index":326,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":1303,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["dependent",{"_index":4553,"title":{},"body":{"interfaces/Positions.html":{}}}],["depending",{"_index":2876,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["depends",{"_index":1302,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["depicted",{"_index":4702,"title":{},"body":{"interfaces/Positions.html":{}}}],["deployment",{"_index":5863,"title":{},"body":{"index.html":{}}}],["deps",{"_index":2557,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["derived",{"_index":4813,"title":{},"body":{"interfaces/Positions.html":{}}}],["described",{"_index":5876,"title":{},"body":{"index.html":{}}}],["describes",{"_index":2341,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"miscellaneous/variables.html":{}}}],["describing",{"_index":3217,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["description",{"_index":223,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphIssue.html":{},"modules/GraphsModule.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"classes/Vector.html":{},"additional-documentation/using-gropius.html":{}}}],["description).subscribe",{"_index":1561,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["descriptionvalidator",{"_index":1653,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["deselect",{"_index":5283,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["design/icons",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["desired",{"_index":2085,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/NodeCache.html":{},"components/TextDisplayComponent.html":{},"classes/Vector.html":{}}}],["destroy",{"_index":3051,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{}}}],["destroyed",{"_index":1814,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["destruction",{"_index":4383,"title":{},"body":{"interfaces/Positions.html":{}}}],["detail",{"_index":155,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["detail'},{'name",{"_index":132,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["detail.component",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["detail.component.html",{"_index":2716,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.scss",{"_index":2715,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts",{"_index":2714,"title":{},"body":{"components/IssueDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:110",{"_index":2736,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:22",{"_index":2745,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:25",{"_index":2743,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:28",{"_index":2742,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:32",{"_index":2746,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:35",{"_index":2747,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:38",{"_index":2748,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:40",{"_index":2741,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:41",{"_index":2744,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:44",{"_index":2740,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:47",{"_index":2727,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:49",{"_index":2738,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:64",{"_index":2735,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:75",{"_index":2728,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:91",{"_index":2732,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail/comment/comment.component",{"_index":453,"title":{},"body":{"modules/AppModule.html":{}}}],["detail/comment/comment.component.ts",{"_index":973,"title":{},"body":{"components/CommentComponent.html":{},"coverage.html":{}}}],["detail/comment/comment.component.ts:23",{"_index":990,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:25",{"_index":989,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:27",{"_index":995,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:30",{"_index":1007,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:32",{"_index":1002,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:34",{"_index":1005,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:45",{"_index":988,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:63",{"_index":1000,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:79",{"_index":997,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/issue",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["detail/linked",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"components/LinkedIssueItemComponent.html":{},"coverage.html":{}}}],["detail/time",{"_index":831,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueDetailComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{}}}],["detail/timeline/coalesced/timeline",{"_index":470,"title":{},"body":{"modules/AppModule.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{}}}],["detail/timeline/timeline.component",{"_index":452,"title":{},"body":{"modules/AppModule.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["detail/timeline/timeline.component.ts",{"_index":807,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["detailed",{"_index":2749,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["details",{"_index":454,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/using-gropius.html":{}}}],["details'},{'name",{"_index":166,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["details.component",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{}}}],["details.component.html",{"_index":4181,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.scss",{"_index":4180,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts",{"_index":4179,"title":{},"body":{"components/NodeDetailsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["details.component.ts:132",{"_index":4201,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:147",{"_index":4203,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:154",{"_index":4205,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:162",{"_index":4206,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:167",{"_index":4208,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:171",{"_index":4207,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:203",{"_index":4212,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:252",{"_index":4209,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:266",{"_index":4210,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:280",{"_index":4213,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:295",{"_index":4214,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:42",{"_index":4200,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:46",{"_index":4198,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:50",{"_index":4199,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:54",{"_index":4196,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:65",{"_index":4218,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:66",{"_index":4215,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:67",{"_index":4217,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:68",{"_index":4216,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:69",{"_index":4220,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:70",{"_index":4219,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:73",{"_index":4223,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:74",{"_index":4222,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:75",{"_index":4225,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:76",{"_index":4221,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:77",{"_index":4224,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:78",{"_index":4195,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details/node",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["detailscallback",{"_index":1155,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["determine",{"_index":1866,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{}}}],["determines",{"_index":546,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{}}}],["dev",{"_index":6190,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["developing",{"_index":5858,"title":{},"body":{"index.html":{}}}],["development",{"_index":5915,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["dgql",{"_index":789,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectsService.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{},"additional-documentation/managing-gropius.html":{}}}],["dgql/id",{"_index":790,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["dgql/id.ts",{"_index":3878,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dgql/index.ts",{"_index":2111,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["dgql/index.ts:30",{"_index":2123,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/index.ts:38",{"_index":2126,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/index.ts:43",{"_index":2128,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/index.ts:71",{"_index":2125,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/load.ts",{"_index":5717,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dgql/mutate",{"_index":2133,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/mutate.ts",{"_index":5720,"title":{},"body":{"coverage.html":{}}}],["dgql/queries/components.service.ts",{"_index":1370,"title":{},"body":{"injectables/ComponentsService.html":{},"coverage.html":{}}}],["dgql/queries/components.service.ts:15",{"_index":1382,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/components.service.ts:23",{"_index":1390,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/components.service.ts:27",{"_index":1392,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/components.service.ts:31",{"_index":1385,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/components.service.ts:35",{"_index":1387,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/issues.service.ts",{"_index":5723,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dgql/queries/projects.service.ts",{"_index":5058,"title":{},"body":{"injectables/ProjectsService.html":{},"coverage.html":{}}}],["dgql/queries/projects.service.ts:11",{"_index":5070,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["dgql/queries/projects.service.ts:15",{"_index":5068,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["dgql/queries/projects.service.ts:8",{"_index":5065,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["dgql/queries/queries.service.ts",{"_index":5073,"title":{},"body":{"injectables/QueriesService.html":{},"coverage.html":{}}}],["dgql/queries/queries.service.ts:10",{"_index":5077,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/queries.service.ts:12",{"_index":5078,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/queries.service.ts:13",{"_index":5079,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/queries.service.ts:14",{"_index":5080,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/queries.service.ts:15",{"_index":5081,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/users.service.ts",{"_index":5624,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["dgql/queries/users.service.ts:11",{"_index":5633,"title":{},"body":{"injectables/UsersService.html":{}}}],["dgql/queries/users.service.ts:30",{"_index":5631,"title":{},"body":{"injectables/UsersService.html":{}}}],["dgql/queries/users.service.ts:8",{"_index":5629,"title":{},"body":{"injectables/UsersService.html":{}}}],["dgql/queries/util",{"_index":1396,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["dgql/queries/util.ts",{"_index":5165,"title":{},"body":{"interfaces/QueryListParams.html":{},"coverage.html":{}}}],["dgql/query",{"_index":791,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["dgql/query.ts",{"_index":1691,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dgql/query.ts:137",{"_index":2093,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:171",{"_index":2095,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:222",{"_index":2098,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:231",{"_index":2096,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:240",{"_index":2100,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:250",{"_index":2099,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:264",{"_index":2097,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:295",{"_index":2101,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:330",{"_index":2110,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:381",{"_index":1754,"title":{},"body":{"classes/DataNode.html":{}}}],["dgql/query.ts:48",{"_index":2092,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:49",{"_index":2094,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:655",{"_index":4174,"title":{},"body":{"classes/NodeCache.html":{}}}],["dgql/query.ts:660",{"_index":4175,"title":{},"body":{"classes/NodeCache.html":{}}}],["dgql/query.ts:666",{"_index":4176,"title":{},"body":{"classes/NodeCache.html":{}}}],["dgql/query.ts:68",{"_index":2103,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:680",{"_index":4177,"title":{},"body":{"classes/NodeCache.html":{}}}],["dgql/query.ts:73",{"_index":2105,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:86",{"_index":2107,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:89",{"_index":2108,"title":{},"body":{"classes/DataQuery.html":{}}}],["diagram",{"_index":5886,"title":{},"body":{"index.html":{},"additional-documentation/using-gropius.html":{}}}],["dialog",{"_index":20,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["dialog'},{'name",{"_index":98,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["dialog.component",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/userMock.html":{}}}],["dialog.component.html",{"_index":24,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.scss",{"_index":22,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts",{"_index":13,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dialog.component.ts:10",{"_index":38,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:100",{"_index":1575,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:11",{"_index":4829,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:117",{"_index":4042,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:12",{"_index":48,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:123",{"_index":1468,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:125",{"_index":4038,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:128",{"_index":1463,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:14",{"_index":245,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:144",{"_index":4047,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:15",{"_index":238,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":243,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{}}}],["dialog.component.ts:164",{"_index":1470,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:168",{"_index":4034,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:17",{"_index":44,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":248,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["dialog.component.ts:182",{"_index":4043,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:19",{"_index":1569,"title":{},"body":{"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1439,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":47,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:213",{"_index":5355,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:214",{"_index":5359,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:215",{"_index":5357,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:216",{"_index":5356,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:217",{"_index":5358,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:218",{"_index":5352,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:219",{"_index":5354,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1565,"title":{},"body":{"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:220",{"_index":5344,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:226",{"_index":5353,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:23",{"_index":5381,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":239,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:249",{"_index":5350,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:25",{"_index":1568,"title":{},"body":{"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:256",{"_index":5348,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1567,"title":{},"body":{"components/CreateInterfaceDialogComponent.html":{}}}],["dialog.component.ts:261",{"_index":5347,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:265",{"_index":5349,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:279",{"_index":5351,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:28",{"_index":1442,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:29",{"_index":240,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:290",{"_index":5345,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":1441,"title":{},"body":{"components/CreateComponentDialogComponent.html":{}}}],["dialog.component.ts:306",{"_index":5346,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:31",{"_index":1443,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:32",{"_index":1440,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:33",{"_index":1655,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:34",{"_index":1482,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:35",{"_index":1437,"title":{},"body":{"components/CreateComponentDialogComponent.html":{}}}],["dialog.component.ts:36",{"_index":1474,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:37",{"_index":1584,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:38",{"_index":1480,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:39",{"_index":1588,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:40",{"_index":1438,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/MultiSourceList.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:41",{"_index":1475,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:43",{"_index":1461,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:45",{"_index":1654,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:47",{"_index":4031,"title":{},"body":{"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:48",{"_index":1479,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:49",{"_index":4029,"title":{},"body":{"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:53",{"_index":1435,"title":{},"body":{"components/CreateComponentDialogComponent.html":{}}}],["dialog.component.ts:55",{"_index":5244,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:56",{"_index":4021,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:58",{"_index":4026,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:59",{"_index":1566,"title":{},"body":{"components/CreateInterfaceDialogComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:60",{"_index":1579,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/MultiSourceList.html":{}}}],["dialog.component.ts:65",{"_index":4020,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:67",{"_index":4027,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:75",{"_index":1577,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:78",{"_index":4033,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:83",{"_index":4046,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:96",{"_index":1574,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog/access",{"_index":12,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"modules/AppModule.html":{},"components/SettingsDialogComponent.html":{},"coverage.html":{}}}],["dialog/add",{"_index":222,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"modules/GraphsModule.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["dialog/create",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"coverage.html":{}}}],["dialog/profile",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"coverage.html":{}}}],["dialog/remove",{"_index":422,"title":{},"body":{"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"coverage.html":{}}}],["dialog/settings",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["dialogdata",{"_index":1573,"title":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{}},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":28,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["dialogref.afterclosed().subscribe(confirm",{"_index":2174,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["dialogs/access",{"_index":469,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogs/add",{"_index":2578,"title":{},"body":{"modules/GraphsModule.html":{}}}],["dialogs/create",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Positions.html":{}}}],["dialogs/profile",{"_index":467,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogs/remove",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogservice",{"_index":5268,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["didopen",{"_index":3853,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["difference",{"_index":4755,"title":{},"body":{"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["different",{"_index":2081,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"index.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["differs",{"_index":952,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{}}}],["dimensions",{"_index":3280,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["direct",{"_index":5870,"title":{},"body":{"index.html":{},"additional-documentation/using-gropius.html":{}}}],["direction",{"_index":1986,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"classes/Vector.html":{}}}],["directions",{"_index":3833,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["directive",{"_index":95,"title":{"directives/ItemDirective.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["directives",{"_index":205,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"overview.html":{}}}],["directly",{"_index":1100,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["directory",{"_index":2618,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"additional-documentation/managing-gropius.html":{}}}],["disable",{"_index":793,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["disabled",{"_index":5113,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["disables",{"_index":5103,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["disappear",{"_index":4812,"title":{},"body":{"interfaces/Positions.html":{}}}],["discard",{"_index":1603,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{}}}],["display",{"_index":1104,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{},"additional-documentation/using-gropius.html":{}}}],["display'},{'name",{"_index":195,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["display.component",{"_index":459,"title":{},"body":{"modules/AppModule.html":{}}}],["display.component.html",{"_index":5435,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.scss",{"_index":5434,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts",{"_index":5432,"title":{},"body":{"components/TextDisplayComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["display.component.ts:20",{"_index":5443,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:22",{"_index":5441,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:24",{"_index":5446,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:29",{"_index":5455,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:34",{"_index":5445,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:36",{"_index":5444,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:38",{"_index":5453,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:39",{"_index":5450,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:40",{"_index":5451,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:41",{"_index":5452,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:43",{"_index":5448,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:54",{"_index":5449,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display/text",{"_index":458,"title":{},"body":{"modules/AppModule.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["displayed",{"_index":3361,"title":{},"body":{"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/SideNavComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{}}}],["displayedcode",{"_index":4001,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["displaying",{"_index":4680,"title":{},"body":{"interfaces/Positions.html":{}}}],["displayname",{"_index":2889,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["displays",{"_index":974,"title":{},"body":{"components/CommentComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueDetailComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/SetEditorComponent.html":{},"components/SideNavComponent.html":{},"components/UserItemComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["distance",{"_index":3824,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["distance(newposition.x",{"_index":3287,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["distance(x",{"_index":3268,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["distancetoline",{"_index":5648,"title":{},"body":{"classes/Vector.html":{}}}],["distancetoline(sourcepoint",{"_index":5662,"title":{},"body":{"classes/Vector.html":{}}}],["distinctuntilchanged",{"_index":2195,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["distinguish",{"_index":2087,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["distribute",{"_index":6002,"title":{},"body":{"license.html":{}}}],["document",{"_index":4489,"title":{},"body":{"interfaces/Positions.html":{}}}],["document.createelement('canvas",{"_index":3381,"title":{},"body":{"components/IssueLabelComponent.html":{},"miscellaneous/variables.html":{}}}],["document.queryselector('#buttoncreateproject",{"_index":4881,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["documentation",{"_index":1948,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/managing-gropius.html":{}}}],["documentation:can",{"_index":5906,"title":{},"body":{"index.html":{}}}],["doesn't",{"_index":2084,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["dographlayout",{"_index":4329,"title":{},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["dographlayout(nodelist",{"_index":4805,"title":{},"body":{"interfaces/Positions.html":{}}}],["doing",{"_index":1871,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["domsanitizer",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["don't",{"_index":1810,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"classes/NodeCache.html":{},"components/RemoveDialogComponent.html":{}}}],["don\\'t",{"_index":5255,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["done",{"_index":1812,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["dont",{"_index":4361,"title":{},"body":{"interfaces/Positions.html":{}}}],["dot",{"_index":3595,"title":{},"body":{"components/IssueLocationComponent.html":{},"components/SetEditorDialogComponent.html":{},"classes/Vector.html":{}}}],["dot(other",{"_index":5670,"title":{},"body":{"classes/Vector.html":{}}}],["dot(target",{"_index":3798,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["dot(this",{"_index":5673,"title":{},"body":{"classes/Vector.html":{}}}],["dots",{"_index":5366,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["down",{"_index":2262,"title":{},"body":{"components/FrameComponent.html":{}}}],["drag",{"_index":4390,"title":{},"body":{"interfaces/Positions.html":{}}}],["dragged",{"_index":4418,"title":{},"body":{"interfaces/Positions.html":{}}}],["draggededge",{"_index":3184,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["draghandles",{"_index":1291,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["draw",{"_index":2342,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["drawbacks",{"_index":6218,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["drawer",{"_index":2258,"title":{},"body":{"components/FrameComponent.html":{}}}],["drawfolderrelations(node",{"_index":4717,"title":{},"body":{"interfaces/Positions.html":{}}}],["drawgraph",{"_index":1259,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["drawing",{"_index":2443,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["draws",{"_index":4714,"title":{},"body":{"interfaces/Positions.html":{}}}],["dropped",{"_index":4425,"title":{},"body":{"interfaces/Positions.html":{}}}],["dropping",{"_index":4432,"title":{},"body":{"interfaces/Positions.html":{}}}],["due",{"_index":3901,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["duplicate",{"_index":1305,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"components/TimelineItemComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["duplicated",{"_index":5228,"title":{},"body":{"components/RegisterComponent.html":{}}}],["duplicates",{"_index":1304,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["dynamic",{"_index":3146,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{},"coverage.html":{},"dependencies.html":{}}}],["dynamictemplate",{"_index":1275,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["dynamictemplate.dynamicnodetemplate",{"_index":3166,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["dynamictemplate.dynamictemplatecontext",{"_index":3159,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["e",{"_index":4486,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/RegisterComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["e.g",{"_index":724,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/ComponentNode.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueItemComponent.html":{},"interfaces/IssueNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"classes/TimeFormatter.html":{},"injectables/UsersService.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["e.preventdefault",{"_index":4891,"title":{},"body":{"components/ProjectListComponent.html":{},"components/RegisterComponent.html":{}}}],["e.stoppropagation",{"_index":4892,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["e6e6e6",{"_index":3994,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["each",{"_index":1251,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["early",{"_index":3843,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["ease",{"_index":5862,"title":{},"body":{"index.html":{}}}],["easier",{"_index":5860,"title":{},"body":{"index.html":{}}}],["east",{"_index":4320,"title":{},"body":{"interfaces/Positions.html":{}}}],["easy",{"_index":5528,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"additional-documentation/managing-gropius.html":{}}}],["edge",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{}}}],["edge.createdfrom",{"_index":4433,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.draghandles",{"_index":4442,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.markerend",{"_index":4445,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.node",{"_index":5056,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["edge.svg",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["edge.type",{"_index":3035,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["edge.validtargets.add(node.id.tostring",{"_index":4448,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.validtargets.add(original.target.tostring",{"_index":4437,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.validtargets.clear",{"_index":4436,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.validtargets.delete(existingedge.target.tostring",{"_index":4450,"title":{},"body":{"interfaces/Positions.html":{}}}],["edgeclasssetter",{"_index":3032,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["edges",{"_index":1243,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{}}}],["edgetype",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["edgetype].filter((part",{"_index":3347,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["edgex",{"_index":4557,"title":{},"body":{"interfaces/Positions.html":{}}}],["edgey",{"_index":4559,"title":{},"body":{"interfaces/Positions.html":{}}}],["edit",{"_index":114,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editable",{"_index":2751,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/SetEditorComponent.html":{}}}],["editbody",{"_index":980,"title":{},"body":{"components/CommentComponent.html":{}}}],["editcomment",{"_index":983,"title":{},"body":{"components/CommentComponent.html":{}}}],["editcomment(body",{"_index":999,"title":{},"body":{"components/CommentComponent.html":{}}}],["edited",{"_index":1004,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueContentsComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["editexisting",{"_index":1489,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["editing",{"_index":992,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["edititem",{"_index":4116,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["editmode",{"_index":4182,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/TextDisplayComponent.html":{}}}],["editor",{"_index":188,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["editor'},{'name",{"_index":161,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["editor.component",{"_index":448,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["editor.component.html",{"_index":3979,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{}}}],["editor.component.scss",{"_index":3978,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{}}}],["editor.component.ts",{"_index":3975,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editor.component.ts:141",{"_index":5294,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:15",{"_index":3990,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:170",{"_index":5292,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:19",{"_index":3983,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:23",{"_index":3985,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:28",{"_index":3988,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:40",{"_index":5284,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:42",{"_index":5281,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:44",{"_index":5270,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:46",{"_index":5286,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:48",{"_index":5288,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:50",{"_index":5273,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:52",{"_index":5278,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:54",{"_index":5274,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:56",{"_index":5279,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:58",{"_index":5280,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:61",{"_index":5272,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:63",{"_index":5291,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:65",{"_index":5290,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:93",{"_index":5269,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor/markdown",{"_index":447,"title":{},"body":{"modules/AppModule.html":{},"components/MarkdownEditorComponent.html":{},"coverage.html":{}}}],["editor/set",{"_index":2582,"title":{},"body":{"modules/GraphsModule.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editorcontainer",{"_index":3993,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editoroptions",{"_index":3980,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["edits",{"_index":1001,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueFilterComponent.html":{},"components/SetEditorComponent.html":{}}}],["edittext",{"_index":5436,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["effect",{"_index":1908,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["effects",{"_index":4371,"title":{},"body":{"interfaces/Positions.html":{}}}],["element",{"_index":94,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["element.assigneesstring",{"_index":3569,"title":{},"body":{"components/IssueListComponent.html":{}}}],["element.createdby.displayname",{"_index":3568,"title":{},"body":{"components/IssueListComponent.html":{}}}],["element.displayname",{"_index":5002,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["element.email",{"_index":5003,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["element.title",{"_index":3567,"title":{},"body":{"components/IssueListComponent.html":{}}}],["elementref",{"_index":1084,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueDetailComponent.html":{},"components/SetEditorComponent.html":{}}}],["elements",{"_index":2220,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["ellipsis",{"_index":3871,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["elsewhere",{"_index":1738,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["email",{"_index":4937,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{}}}],["embedded",{"_index":4335,"title":{},"body":{"interfaces/Positions.html":{}}}],["emission",{"_index":3105,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["emit",{"_index":1923,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"classes/NodeCache.html":{},"interfaces/TextFragment.html":{}}}],["emiterrortoallsubscribers(error",{"_index":1931,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["emits",{"_index":1934,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{}}}],["emitselectedlabels",{"_index":2217,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["emitted",{"_index":2833,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/QueryListParams.html":{}}}],["emitting",{"_index":3125,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"injectables/LabelStoreService.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{}}}],["emitupdatetoallsubscribers",{"_index":1928,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["emoji_objects",{"_index":3127,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["empty",{"_index":903,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"components/LabelSearchComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{}}}],["emptying",{"_index":2149,"title":{},"body":{"injectables/DataService.html":{}}}],["emptyresultslabel",{"_index":4114,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["emptysuggestionslabel",{"_index":4113,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["en",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["en_us",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["enable",{"_index":4889,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["enabled",{"_index":5104,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{}}}],["enablehtml",{"_index":2516,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["enables",{"_index":4643,"title":{},"body":{"interfaces/Positions.html":{}}}],["enabling",{"_index":5878,"title":{},"body":{"index.html":{}}}],["encoded",{"_index":3892,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["encodedid",{"_index":2066,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["encodelistid",{"_index":2130,"title":{},"body":{"injectables/DataService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["encodelistid(id",{"_index":2154,"title":{},"body":{"injectables/DataService.html":{}}}],["encodelistid(ld",{"_index":3925,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["encodelistid(selector",{"_index":2142,"title":{},"body":{"injectables/DataService.html":{}}}],["encodenodeid",{"_index":1485,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["encodenodeid(id",{"_index":1520,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["encodenodeid(ld.node",{"_index":3926,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["encodenodeid(nd",{"_index":3909,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["encodenodeid(this.getnodeid(item",{"_index":4148,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["encodes",{"_index":3900,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["encoding",{"_index":3906,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["end",{"_index":1684,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["endcursor",{"_index":6132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["endpoint",{"_index":1791,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["ensure",{"_index":5209,"title":{},"body":{"components/RegisterComponent.html":{}}}],["ensures",{"_index":734,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["enter",{"_index":1446,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RegisterComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["entered",{"_index":2972,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"components/RegisterComponent.html":{}}}],["entirely",{"_index":5856,"title":{},"body":{"index.html":{}}}],["entities",{"_index":5497,"title":{},"body":{"classes/TimeFormatter.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["entity",{"_index":6216,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["entry",{"_index":2171,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["entry[1",{"_index":2924,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["enum",{"_index":1231,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/variables.html":{}}}],["enumdictionary",{"_index":2244,"title":{},"body":{"interfaces/FilterState.html":{},"miscellaneous/typealiases.html":{}}}],["enumerations",{"_index":5837,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":688,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":2549,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["environment.publicclientname",{"_index":5207,"title":{},"body":{"components/RegisterComponent.html":{}}}],["environment.signupurl",{"_index":2554,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["environments/environment",{"_index":689,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["epoch",{"_index":1837,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["equals",{"_index":918,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["equation",{"_index":3413,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["equivalent",{"_index":2041,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["err",{"_index":1627,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["err.message).join",{"_index":2530,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["error",{"_index":1045,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"modules/GraphQLModule.html":{},"components/LabelSearchComponent.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error('could",{"_index":3894,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["error('not",{"_index":6145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error('parameters",{"_index":1943,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["error(`${nodetype[node.type",{"_index":6151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(`${nodetype[type",{"_index":6155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(`unknown",{"_index":2896,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["error(err",{"_index":5141,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["error.status",{"_index":3965,"title":{},"body":{"components/LoginComponent.html":{}}}],["errorconfig",{"_index":5616,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["errorlink",{"_index":2524,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["errormessage",{"_index":5119,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["errorpolicy",{"_index":2509,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":675,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"components/IssueFilterComponent.html":{},"interfaces/User.html":{}}}],["eslint",{"_index":792,"title":{},"body":{"components/CacheNodeComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["eslint/component",{"_index":796,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["eslintignore",{"_index":6201,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["essentially",{"_index":3790,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["etc",{"_index":5211,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["european",{"_index":5978,"title":{},"body":{"index.html":{}}}],["even",{"_index":5171,"title":{},"body":{"interfaces/QueryListParams.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["event",{"_index":580,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueFilterComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{},"license.html":{}}}],["event.detail.currentviewwindow",{"_index":4516,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.dropposition",{"_index":4467,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.edge",{"_index":4457,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.eventsource",{"_index":4458,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.node",{"_index":4492,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.node.type",{"_index":4503,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.rendered",{"_index":4599,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.sourceevent.shiftkey",{"_index":4528,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.sourceevent.stopimmediatepropagation",{"_index":4543,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.movementx",{"_index":1169,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["event.movementy",{"_index":1171,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["event.preventdefault",{"_index":4459,"title":{},"body":{"interfaces/Positions.html":{}}}],["eventemitter",{"_index":2831,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["eventlisteneroreventlistenerobject",{"_index":4597,"title":{},"body":{"interfaces/Positions.html":{}}}],["events",{"_index":575,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"interfaces/CoalescedTimelineItem.html":{},"injectables/StateService.html":{}}}],["everything",{"_index":5985,"title":{},"body":{"index.html":{}}}],["ex",{"_index":3466,"title":{},"body":{"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["example",{"_index":80,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"injectables/IssueGraphApiService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["examplecomponent",{"_index":1700,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["examples",{"_index":3881,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["except",{"_index":6173,"title":{},"body":{"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["excluded",{"_index":6200,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["exclusive",{"_index":561,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["execute",{"_index":6252,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["executed",{"_index":3227,"title":{},"body":{"injectables/IssueGraphStateService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["execution",{"_index":4751,"title":{},"body":{"interfaces/Positions.html":{}}}],["exist",{"_index":2056,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/LabelStoreService.html":{},"classes/NodeCache.html":{},"components/SideNavComponent.html":{}}}],["existing",{"_index":1478,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"interfaces/TextFragment.html":{}}}],["exists",{"_index":927,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"modules/GraphQLModule.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["exit",{"_index":1026,"title":{},"body":{"components/CommentComponent.html":{}}}],["expands",{"_index":3848,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["expected",{"_index":6165,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["expects",{"_index":5100,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["expitarion",{"_index":71,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["export",{"_index":56,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{}}}],["exports",{"_index":523,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}}}],["expose",{"_index":672,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["exposes",{"_index":542,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["exposing",{"_index":650,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["express",{"_index":6017,"title":{},"body":{"license.html":{}}}],["expression",{"_index":2978,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["extended",{"_index":3356,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["extending",{"_index":1252,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["extends",{"_index":1210,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["externally",{"_index":1828,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["extra",{"_index":2928,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["extract",{"_index":4490,"title":{},"body":{"interfaces/Positions.html":{}}}],["extractissueid(issuelist",{"_index":4589,"title":{},"body":{"interfaces/Positions.html":{}}}],["extracts",{"_index":4587,"title":{},"body":{"interfaces/Positions.html":{}}}],["f",{"_index":1951,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"additional-documentation/using-gropius.html":{}}}],["f.subscribe",{"_index":5175,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["f0ad4e",{"_index":5569,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["fabian",{"_index":6257,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["fabiandanner",{"_index":6259,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["fact",{"_index":6224,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["factor",{"_index":5687,"title":{},"body":{"classes/Vector.html":{}}}],["fade",{"_index":1685,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["fafafa",{"_index":5467,"title":{},"body":{"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["fail",{"_index":3402,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["failed",{"_index":5118,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["fails",{"_index":673,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["false",{"_index":244,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/variables.html":{}}}],["familiar",{"_index":6209,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["family",{"_index":3602,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["fb",{"_index":1408,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["feature",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/CreateIssueDialogComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueCategoryComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["feature_request",{"_index":4570,"title":{},"body":{"interfaces/Positions.html":{}}}],["featurerequestcount",{"_index":2392,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["featurerequests",{"_index":2402,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueGraphControlsComponent.html":{}}}],["features",{"_index":5902,"title":{},"body":{"index.html":{},"additional-documentation/using-gropius.html":{}}}],["features:can",{"_index":5912,"title":{},"body":{"index.html":{}}}],["feed",{"_index":3048,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["feeds",{"_index":3041,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["fetch",{"_index":773,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/QueryListParams.html":{},"additional-documentation/managing-gropius.html":{}}}],["fetch({projectid",{"_index":2997,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["fetched",{"_index":4202,"title":{},"body":{"components/NodeDetailsComponent.html":{},"injectables/ProjectStoreService.html":{}}}],["fetches",{"_index":5023,"title":{},"body":{"injectables/ProjectStoreService.html":{},"components/SetEditorComponent.html":{}}}],["fetchpolicy",{"_index":2508,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["fetchuserfromstorage",{"_index":655,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["few",{"_index":5300,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ff0036",{"_index":2808,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/TimelineItemComponent.html":{}}}],["fff",{"_index":272,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/TimelineItemComponent.html":{}}}],["field",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{}}}],["fields",{"_index":726,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueFilterComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["file.run",{"_index":6251,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["files",{"_index":5997,"title":{},"body":{"license.html":{},"additional-documentation/managing-gropius.html":{}}}],["files:run",{"_index":5920,"title":{},"body":{"index.html":{}}}],["fill",{"_index":2610,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{}}}],["filter",{"_index":534,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["filter'},{'name",{"_index":134,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["filter(([appstate",{"_index":3232,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["filter((childid",{"_index":3304,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["filter((event",{"_index":579,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["filter((part",{"_index":317,"title":{},"body":{"components/AppComponent.html":{}}}],["filter(childid",{"_index":3311,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["filter(f",{"_index":2007,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["filter(timelineitem",{"_index":920,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["filter.component",{"_index":2599,"title":{},"body":{"modules/GraphsModule.html":{}}}],["filter.component.html",{"_index":2813,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.scss",{"_index":2812,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts",{"_index":2810,"title":{},"body":{"components/IssueFilterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.component.ts:122",{"_index":2830,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:124",{"_index":2829,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:126",{"_index":2832,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:129",{"_index":2862,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:130",{"_index":2861,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:133",{"_index":2858,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:135",{"_index":2863,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:137",{"_index":2864,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:143",{"_index":2844,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:153",{"_index":2855,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:163",{"_index":2847,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:173",{"_index":2835,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:186",{"_index":2850,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:201",{"_index":2838,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:216",{"_index":2840,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:228",{"_index":2857,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.fullsearch",{"_index":2916,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.username",{"_index":5641,"title":{},"body":{"injectables/UsersService.html":{}}}],["filter[id",{"_index":2918,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter_list",{"_index":2922,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filterby",{"_index":5169,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["filterchange",{"_index":2828,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filtered",{"_index":2353,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{}}}],["filterelement",{"_index":2210,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["filtering",{"_index":2202,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"index.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["filterlabel",{"_index":2192,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["filters",{"_index":2842,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"additional-documentation/using-gropius.html":{}}}],["filterselection",{"_index":2187,"title":{"interfaces/FilterSelection.html":{}},"body":{"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{}}}],["filterstate",{"_index":2239,"title":{"interfaces/FilterState.html":{}},"body":{"interfaces/FilterState.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"coverage.html":{}}}],["filterstate.selectedcategories",{"_index":3238,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["filterstate.selectedfilter.labels",{"_index":3239,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["filterstate.selectedfilter.texts",{"_index":3240,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["filtertext",{"_index":5042,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["filtervalue",{"_index":4927,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["filtervalue.tolowercase",{"_index":4996,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["filtervalue.trim",{"_index":4995,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["finally",{"_index":1028,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["find",{"_index":2219,"title":{},"body":{"interfaces/FilterSelection.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/LabelSearchComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/TextFragment.html":{},"index.html":{}}}],["findidealcomponentposition(id",{"_index":4655,"title":{},"body":{"interfaces/Positions.html":{}}}],["finds",{"_index":4654,"title":{},"body":{"interfaces/Positions.html":{}}}],["finishcoalescing",{"_index":904,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["finished",{"_index":2778,"title":{},"body":{"components/IssueDetailComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["finishediting",{"_index":2724,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/TextDisplayComponent.html":{}}}],["finishediting(save",{"_index":2731,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["finishediting(saved",{"_index":5447,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["finishes",{"_index":2733,"title":{},"body":{"components/IssueDetailComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["fired",{"_index":1658,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["fires",{"_index":4885,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["first",{"_index":955,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["first_page",{"_index":1679,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["firstcomponent",{"_index":4739,"title":{},"body":{"interfaces/Positions.html":{}}}],["firstitem",{"_index":936,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["firstitem.__typename",{"_index":938,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["firstitem.createdby.id",{"_index":958,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["firstkey",{"_index":2016,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["firstnode",{"_index":3839,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["firstnode.fixed",{"_index":3841,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["firstpage",{"_index":2029,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["firstpageitemid",{"_index":2015,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["fit",{"_index":4540,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{}}}],["fitgraphinview",{"_index":4770,"title":{},"body":{"interfaces/Positions.html":{}}}],["fitness",{"_index":6022,"title":{},"body":{"license.html":{}}}],["fits",{"_index":4769,"title":{},"body":{"interfaces/Positions.html":{}}}],["fix",{"_index":3519,"title":{},"body":{"components/IssueListComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{},"additional-documentation/managing-gropius.html":{}}}],["fixed",{"_index":3751,"title":{},"body":{"classes/LayoutNode.html":{}}}],["fixme",{"_index":887,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/TextDisplayComponent.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["flag",{"_index":1775,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["flex",{"_index":1682,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["float",{"_index":90,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["floating",{"_index":4906,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["flow",{"_index":2308,"title":{},"body":{"components/FrameComponent.html":{}}}],["flying",{"_index":3838,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["focus",{"_index":4880,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["folder",{"_index":1319,"title":{},"body":{"injectables/ComponentStoreService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"injectables/IssueStoreService.html":{},"interfaces/Positions.html":{},"index.html":{}}}],["folderedgetypes",{"_index":1300,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["folderedgetypes.relatedto",{"_index":1284,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["foldernode",{"_index":4721,"title":{},"body":{"interfaces/Positions.html":{}}}],["foldernode.type",{"_index":4723,"title":{},"body":{"interfaces/Positions.html":{}}}],["foldernodes",{"_index":4718,"title":{},"body":{"interfaces/Positions.html":{}}}],["folders",{"_index":2441,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["following",{"_index":1947,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"license.html":{},"additional-documentation/managing-gropius.html":{}}}],["font",{"_index":1646,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LoginComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["force",{"_index":3806,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["forces",{"_index":2165,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["forgot",{"_index":3972,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":81,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/AppState.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{},"classes/TimeFormatter.html":{},"additional-documentation/using-gropius.html":{}}}],["format",{"_index":750,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["formatcategorydescription",{"_index":3442,"title":{},"body":{"components/IssueListComponent.html":{}}}],["formatcategorydescription(category",{"_index":3456,"title":{},"body":{"components/IssueListComponent.html":{}}}],["formatcategoryicon",{"_index":3443,"title":{},"body":{"components/IssueListComponent.html":{}}}],["formatcategoryicon(issue",{"_index":3459,"title":{},"body":{"components/IssueListComponent.html":{}}}],["formatissueopentime",{"_index":2725,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["formatted",{"_index":4204,"title":{},"body":{"components/NodeDetailsComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["formatter",{"_index":832,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueDetailComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"additional-documentation/managing-gropius.html":{}}}],["formatter.ts",{"_index":5471,"title":{},"body":{"classes/TimeFormatter.html":{},"coverage.html":{}}}],["formatter.ts:10",{"_index":5476,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formatter.ts:18",{"_index":5488,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formatter.ts:47",{"_index":5495,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formattime",{"_index":5472,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formattime(time",{"_index":5475,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formattimedifference",{"_index":5473,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formattimedifference(datestring",{"_index":5487,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formatting",{"_index":862,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueDetailComponent.html":{},"classes/TimeFormatter.html":{},"additional-documentation/managing-gropius.html":{}}}],["formbuilder",{"_index":1402,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol",{"_index":246,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"interfaces/userMock.html":{}}}],["formgroup",{"_index":3952,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["forward",{"_index":1949,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorComponent.html":{}}}],["forward(f",{"_index":2014,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["found",{"_index":3886,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["fourth",{"_index":5899,"title":{},"body":{"index.html":{}}}],["fragment",{"_index":2222,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["fragments",{"_index":2204,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["frame",{"_index":1140,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/FrameComponent.html":{}}}],["frame'},{'name",{"_index":126,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["frame.component.html",{"_index":2267,"title":{},"body":{"components/FrameComponent.html":{}}}],["frame.component.scss",{"_index":2266,"title":{},"body":{"components/FrameComponent.html":{}}}],["frame/frame.component",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["framecomponent",{"_index":125,"title":{"components/FrameComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/managing-gropius.html":{}}}],["franzago",{"_index":5943,"title":{},"body":{"index.html":{}}}],["free",{"_index":5992,"title":{},"body":{"license.html":{}}}],["fri",{"_index":5479,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["fromat",{"_index":2425,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgql",{"_index":2316,"title":{},"body":{"classes/GraphComponent.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgql(gqlgraphcomponent",{"_index":2321,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgql(gqlinterface",{"_index":2405,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgql(gqlissue",{"_index":2436,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgqlnolinks",{"_index":2472,"title":{},"body":{"classes/GraphIssue.html":{}}}],["fromgqlnolinks(gqlpartialissue",{"_index":2431,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromsinglelist",{"_index":4015,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["fromsinglelist(list",{"_index":4032,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["frontend",{"_index":2325,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"interfaces/QueryListParams.html":{},"index.html":{},"additional-documentation/contributors.html":{}}}],["full",{"_index":86,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/LinkedIssueItemComponent.html":{}}}],["fullissue",{"_index":3861,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["fullissuelink",{"_index":3852,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["fullissuesub",{"_index":3862,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["funcion",{"_index":3473,"title":{},"body":{"components/IssueListComponent.html":{}}}],["function",{"_index":593,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functional",{"_index":5579,"title":{},"body":{"components/TopToolbarComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["functionality",{"_index":861,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"classes/TimeFormatter.html":{},"index.html":{}}}],["functioning",{"_index":6186,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["functions",{"_index":1239,"title":{},"body":{"interfaces/ComponentNode.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueDetailComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["furnished",{"_index":6009,"title":{},"body":{"license.html":{}}}],["further",{"_index":594,"title":{},"body":{"interfaces/AppState.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/StateService.html":{},"index.html":{}}}],["fut",{"_index":1910,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["g",{"_index":1539,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueLabelComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["g.append('circle').attr('x",{"_index":3160,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["gamma",{"_index":3418,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["garbage",{"_index":2061,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{}}}],["gather",{"_index":3930,"title":{},"body":{"components/LoginComponent.html":{}}}],["gathers",{"_index":3060,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["generate",{"_index":68,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["generated",{"_index":2614,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"additional-documentation/managing-gropius.html":{}}}],["generated/graphql",{"_index":833,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["generates",{"_index":6239,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["generatetoken",{"_index":32,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["generation",{"_index":5919,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["generation:run",{"_index":5908,"title":{},"body":{"index.html":{}}}],["generator",{"_index":2616,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"components/MarkdownPreviewComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["generator.com",{"_index":6238,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["generic",{"_index":5166,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["getall",{"_index":5024,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getall(filtertext",{"_index":5040,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getallfilter",{"_index":3729,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getallfilter(projectid",{"_index":3734,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getallprojectsgql",{"_index":5031,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getallquery",{"_index":5030,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getalltimelineitems",{"_index":3615,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getalltimelineitems(id",{"_index":3672,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getalltimelineitemsgql",{"_index":3648,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getalltimelineitemsquery",{"_index":3647,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getbasiccomponent",{"_index":1323,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getbasiccomponent(id",{"_index":1347,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getbasiccomponentgql",{"_index":1338,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getbasiccomponentquery",{"_index":1337,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["getbasicproject",{"_index":5027,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getbasicproject(id",{"_index":5043,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getbasicprojectgql",{"_index":5032,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getbasicprojectquery",{"_index":527,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ProjectStoreService.html":{},"injectables/StateService.html":{}}}],["getcomponent",{"_index":1371,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["getcomponent(id",{"_index":1384,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["getcomponentgql",{"_index":1332,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{}}}],["getcomponentinterfaces",{"_index":1324,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentinterfaces(id",{"_index":1349,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentinterfacesgql",{"_index":1340,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentinterfacesquery",{"_index":1339,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentlabels",{"_index":1325,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentlabels(id",{"_index":1351,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentlabelsgql",{"_index":1336,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentlabelsquery",{"_index":1359,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentquery",{"_index":1360,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["getconsumingcomponents",{"_index":2619,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["getconsumingcomponents(id",{"_index":2636,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["getconsumingcomponentsgql",{"_index":2628,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["getconsumingcomponentsquery",{"_index":2627,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["getcurrent",{"_index":2104,"title":{},"body":{"classes/DataQuery.html":{}}}],["getcurrentuservalue",{"_index":686,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getdefaultfortype",{"_index":5779,"title":{},"body":{"coverage.html":{}}}],["getdefaultfortype(predicates[type].type",{"_index":2905,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["getdefaultfortype(type",{"_index":2894,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["getencodedid",{"_index":5340,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["getencodedid(item",{"_index":4147,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["getfullcomponent",{"_index":1326,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getfullcomponent(id",{"_index":1353,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getfullcomponentquery",{"_index":1331,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getfullissue",{"_index":3616,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getfullissue(id",{"_index":3674,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getfullissuegraphdataquery",{"_index":2957,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["getfullissuequery",{"_index":3625,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getfullproject",{"_index":5028,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getfullproject(id",{"_index":5045,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getfullprojectgql",{"_index":5034,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getfullprojectquery",{"_index":4963,"title":{},"body":{"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"interfaces/userMock.html":{}}}],["getfullquery",{"_index":5033,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getfulproject",{"_index":5022,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["gethasdata",{"_index":2102,"title":{},"body":{"classes/DataQuery.html":{}}}],["geticonlabel",{"_index":3336,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["geticonname",{"_index":3337,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["getimagedata",{"_index":3401,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["getinterface",{"_index":1372,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/InterfaceStoreService.html":{}}}],["getinterface(id",{"_index":1386,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/InterfaceStoreService.html":{}}}],["getinterfacegql",{"_index":1381,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/InterfaceStoreService.html":{}}}],["getinterfacequery",{"_index":2626,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["getissuefolderid",{"_index":1230,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["getissuefolderid(id",{"_index":1298,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["getissuefolderid(node.id",{"_index":1280,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["getissuegql",{"_index":3626,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getissuegraphdatadocument",{"_index":2330,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["getissuegraphdataforsearchgql",{"_index":2955,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["getissuegraphdatagql",{"_index":2949,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["getissuegraphdataquery",{"_index":2331,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["getissuelink",{"_index":3355,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["getissuequery",{"_index":3695,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getlabelsgql",{"_index":3732,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getlabelsquery",{"_index":1335,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getlinkhandles(g",{"_index":3165,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["getlist",{"_index":2120,"title":{},"body":{"injectables/DataService.html":{}}}],["getlist(id",{"_index":2124,"title":{},"body":{"injectables/DataService.html":{}}}],["getmatchinglabels",{"_index":3730,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getmatchinglabels(projectid",{"_index":3736,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getnode",{"_index":2119,"title":{},"body":{"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["getnode(id",{"_index":2069,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["getnodeid",{"_index":5341,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["getnodeid(item",{"_index":4145,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["getnodename",{"_index":4187,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["getnodetypestring",{"_index":4188,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["getnodetypestring().tolowercase",{"_index":4301,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["getparams",{"_index":2106,"title":{},"body":{"classes/DataQuery.html":{}}}],["getproject",{"_index":5059,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["getproject(id",{"_index":5067,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["getprojectgql",{"_index":5064,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["getqueryparamfilter",{"_index":3444,"title":{},"body":{"components/IssueListComponent.html":{}}}],["getremainingtypes",{"_index":2822,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["getremainingtypes(index",{"_index":2843,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["gets",{"_index":881,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/TopToolbarComponent.html":{}}}],["getsearchissuegraphdataquery",{"_index":2954,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["getselectedcategories",{"_index":3054,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["getsubscribercount",{"_index":2109,"title":{},"body":{"classes/DataQuery.html":{}}}],["gettext",{"_index":5454,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["getting",{"_index":5842,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["gettotalcount",{"_index":5293,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["github",{"_index":1448,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["github/time",{"_index":5813,"title":{},"body":{"dependencies.html":{}}}],["give",{"_index":1250,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["given",{"_index":841,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["gives",{"_index":4612,"title":{},"body":{"interfaces/Positions.html":{}}}],["glitch",{"_index":3876,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["global",{"_index":1973,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["globalconfig",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["gm",{"_index":4687,"title":{},"body":{"interfaces/Positions.html":{}}}],["gm.addnodetogroup(node.id",{"_index":4697,"title":{},"body":{"interfaces/Positions.html":{}}}],["gm.markastreeroot(node.id",{"_index":4689,"title":{},"body":{"interfaces/Positions.html":{}}}],["gm.setgroupbehaviourof(issuegroupcontainernode.id",{"_index":4699,"title":{},"body":{"interfaces/Positions.html":{}}}],["gm.setgroupbehaviourof(node.id",{"_index":4692,"title":{},"body":{"interfaces/Positions.html":{}}}],["gmt+0200",{"_index":5483,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["gotolocationdetails",{"_index":3581,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["gql",{"_index":2052,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/InterfaceStoreService.html":{},"classes/NodeCache.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["gqlcomponent.id",{"_index":2423,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponent",{"_index":2322,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["gqlgraphcomponent.bugs.totalcount",{"_index":2417,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponent.featurerequests.totalcount",{"_index":2418,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponent.id",{"_index":2420,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponent.name",{"_index":2421,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponent.unclassified.totalcount",{"_index":2419,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponents",{"_index":2328,"title":{},"body":{"classes/GraphComponent.html":{}}}],["gqlinterface",{"_index":2400,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["gqlinterface.component.id",{"_index":2411,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.consumedby.nodes.map((component",{"_index":2412,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.featurerequests.totalcount",{"_index":2407,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.id",{"_index":2409,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.name",{"_index":2410,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.unclassified.totalcount",{"_index":2408,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterfaces",{"_index":2471,"title":{},"body":{"classes/GraphInterface.html":{}}}],["gqlissue",{"_index":2426,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["gqlissue.linkstoissues.nodes.map((gqlpartialissue",{"_index":2439,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlpartialissue",{"_index":2430,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlpartialissue.category",{"_index":2433,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlpartialissue.id",{"_index":2432,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlpartialissue.locations.nodes.map((location",{"_index":2434,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["granted",{"_index":5991,"title":{},"body":{"license.html":{}}}],["granularity",{"_index":6219,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["graph",{"_index":138,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["graph'},{'name",{"_index":136,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["graph.addeventlistener('click",{"_index":4513,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('edgeadd",{"_index":4421,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('edgedrop",{"_index":4426,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('edgeremove",{"_index":4423,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('nodeadd",{"_index":4502,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('nodeclick",{"_index":4483,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('nodedragend",{"_index":4491,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('nodepositionchange",{"_index":4485,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('noderemove",{"_index":4505,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('render",{"_index":4509,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('zoomchange",{"_index":4514,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.calculatelinkhandlesforedge",{"_index":3192,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["graph.component",{"_index":1096,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{}}}],["graph.component.css",{"_index":4343,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.component.html",{"_index":4342,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.component.ts",{"_index":4316,"title":{},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["graph.dynamictemplateregistry.adddynamictemplate('issue",{"_index":3157,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["graph.getedge(edge.createdfrom",{"_index":4435,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.getedgesbysource(sourcenode.id).foreach((existingedge",{"_index":4449,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.getnode(edge.source",{"_index":4431,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.getnode(edge.target",{"_index":4480,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.getnode(rootid",{"_index":4574,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.groupingmanager.gettreerootof(node.id",{"_index":4572,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.nodelist.foreach((node",{"_index":4447,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.oncreatedraggededge",{"_index":4416,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.ondraggededgetargetchange",{"_index":4419,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.setedgeclass",{"_index":3037,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["graph.setnodeclass",{"_index":3030,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["graph/class",{"_index":3009,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"coverage.html":{}}}],["graph/dynamic",{"_index":3144,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"coverage.html":{}}}],["graph/graph",{"_index":1215,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["graph/group",{"_index":3245,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"coverage.html":{}}}],["graph/issue",{"_index":1095,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["graph/link",{"_index":3168,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"coverage.html":{}}}],["graph_structure_documentation.png",{"_index":3271,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{}}}],["graphcomponent",{"_index":1212,"title":{"classes/GraphComponent.html":{}},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["graphcomponent.fromgql(gqlcomponent",{"_index":2424,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphcomponent.mapfromgql(data.node.components.nodes",{"_index":2369,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphdata",{"_index":2343,"title":{"interfaces/GraphData.html":{}},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["graphdata.graphlocations.values",{"_index":2361,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphdatafactory",{"_index":2349,"title":{"classes/GraphDataFactory.html":{}},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"coverage.html":{}}}],["graphdatafactory.graphdatafromgql",{"_index":2970,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["graphdatafactory.removefiltereddata(graphdatafactory.graphdatafromgql(result.data",{"_index":2999,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["graphdataforfilter",{"_index":3104,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["graphdataforfilter(filter",{"_index":3212,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["graphdataforfilter(this.filter",{"_index":3119,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["graphdatafromgql",{"_index":2460,"title":{},"body":{"classes/GraphDataFactory.html":{}}}],["graphdatafromgql(data",{"_index":2368,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphedit.zoomtobox(box",{"_index":4757,"title":{},"body":{"interfaces/Positions.html":{}}}],["grapheditor",{"_index":1253,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["grapheditor.getnode(childid",{"_index":3314,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["grapheditor.zoomtobox",{"_index":4748,"title":{},"body":{"interfaces/Positions.html":{}}}],["grapheditor.zoomtobox(box",{"_index":4747,"title":{},"body":{"interfaces/Positions.html":{}}}],["graphfirstrender",{"_index":4354,"title":{},"body":{"interfaces/Positions.html":{}}}],["graphfolder",{"_index":2339,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["graphical",{"_index":5883,"title":{},"body":{"index.html":{}}}],["graphically",{"_index":5880,"title":{},"body":{"index.html":{}}}],["graphinitialized",{"_index":4356,"title":{},"body":{"interfaces/Positions.html":{}}}],["graphinterface",{"_index":1213,"title":{"classes/GraphInterface.html":{}},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["graphinterface.fromgql(gqlinterface",{"_index":2415,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphinterface.mapfromgql(data.node.interfaces.nodes",{"_index":2370,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphissue",{"_index":2348,"title":{"classes/GraphIssue.html":{}},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"coverage.html":{}}}],["graphissue.fromgql(gqlissue",{"_index":2373,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphlink",{"_index":5398,"title":{},"body":{"components/SideNavComponent.html":{}}}],["graphlocation",{"_index":2340,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["graphlocations",{"_index":2344,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphql",{"_index":1426,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"modules/GraphQLModule.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["graphql.module",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["graphql.module.ts",{"_index":479,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlerrors",{"_index":2527,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["graphqlerrors.map((err",{"_index":2529,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["graphqlmodule",{"_index":332,"title":{"modules/GraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/managing-gropius.html":{}}}],["graphs/graphs.module",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["graphs/issue",{"_index":496,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["graphsmodule",{"_index":333,"title":{"modules/GraphsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/managing-gropius.html":{}}}],["graphstateservice",{"_index":3113,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["graphwrapper",{"_index":4347,"title":{},"body":{"interfaces/Positions.html":{}}}],["gray",{"_index":4908,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TextDisplayComponent.html":{}}}],["green",{"_index":271,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["grid",{"_index":2301,"title":{},"body":{"components/FrameComponent.html":{}}}],["gropius",{"_index":282,"title":{"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}},"body":{"components/AppComponent.html":{},"components/RegisterComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/using-gropius.html":{}}}],["gropius.p.s",{"_index":5903,"title":{},"body":{"index.html":{}}}],["gropius—a",{"_index":5933,"title":{},"body":{"index.html":{}}}],["group",{"_index":1235,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"interfaces/RelationEdge.html":{},"components/SideNavComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["groupbehaviour",{"_index":3247,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["grouping",{"_index":4682,"title":{},"body":{"interfaces/Positions.html":{}}}],["groupnode",{"_index":3259,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.issuegroupnodeids.add(childgroup",{"_index":3326,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.issuegroupnodeids.delete(childgroup",{"_index":3327,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.position",{"_index":3296,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.type",{"_index":3281,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.x",{"_index":3288,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.y",{"_index":3289,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groups",{"_index":4322,"title":{},"body":{"interfaces/Positions.html":{}}}],["grow",{"_index":3134,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["gs",{"_index":1409,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["guaranteed",{"_index":6203,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["guard",{"_index":610,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":611,"title":{},"body":{"guards/AuthGuard.html":{}}}],["gui",{"_index":3947,"title":{},"body":{"components/LoginComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["h",{"_index":5935,"title":{},"body":{"index.html":{}}}],["h2",{"_index":4907,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["hack",{"_index":3518,"title":{},"body":{"components/IssueListComponent.html":{}}}],["hand",{"_index":5578,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["handels",{"_index":2966,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["handle",{"_index":3156,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["handleclick",{"_index":5582,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["handled",{"_index":956,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["handler",{"_index":3858,"title":{},"body":{"components/LinkedIssueItemComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["handles",{"_index":969,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"index.html":{}}}],["handles.service",{"_index":4332,"title":{},"body":{"interfaces/Positions.html":{}}}],["handles.service.ts",{"_index":3170,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"coverage.html":{}}}],["handles.service.ts:21",{"_index":3182,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["handles.service.ts:62",{"_index":3176,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["handles.service.ts:98",{"_index":3180,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["handles.sourcehandles",{"_index":3195,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["handles/issue",{"_index":3169,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["handling",{"_index":869,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"index.html":{}}}],["handset",{"_index":2265,"title":{},"body":{"components/FrameComponent.html":{}}}],["happen",{"_index":3845,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["happens",{"_index":1805,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hardcoded",{"_index":4914,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/userMock.html":{}}}],["hasdata",{"_index":1803,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hasin",{"_index":3343,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["hasmore",{"_index":4010,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["hasn't",{"_index":3859,"title":{},"body":{"components/LinkedIssueItemComponent.html":{},"components/SetEditorComponent.html":{}}}],["hasnextpage",{"_index":1984,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["hasout",{"_index":3345,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["hasprevious/nextpage",{"_index":1969,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["haspreviouspage",{"_index":1983,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["hasprevpage",{"_index":2027,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["having",{"_index":1729,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"index.html":{}}}],["header",{"_index":2313,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{}}}],["header'},{'name",{"_index":171,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["header.component",{"_index":2598,"title":{},"body":{"modules/GraphsModule.html":{}}}],["header.component.html",{"_index":4838,"title":{},"body":{"components/ProjectHeaderComponent.html":{}}}],["header.component.scss",{"_index":4837,"title":{},"body":{"components/ProjectHeaderComponent.html":{}}}],["header.component.ts",{"_index":4836,"title":{},"body":{"components/ProjectHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:12",{"_index":4841,"title":{},"body":{"components/ProjectHeaderComponent.html":{}}}],["header.component.ts:13",{"_index":4840,"title":{},"body":{"components/ProjectHeaderComponent.html":{}}}],["header/project",{"_index":2597,"title":{},"body":{"modules/GraphsModule.html":{},"components/ProjectHeaderComponent.html":{},"coverage.html":{}}}],["headers",{"_index":2519,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["headline",{"_index":4904,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["height",{"_index":262,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["heinrich",{"_index":5974,"title":{},"body":{"index.html":{}}}],["help",{"_index":3129,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"index.html":{}}}],["helper",{"_index":2933,"title":{},"body":{"components/IssueFilterComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["hence",{"_index":1987,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{},"injectables/UsersService.html":{}}}],["here",{"_index":1955,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphsModule.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{},"index.html":{}}}],["hereby",{"_index":5990,"title":{},"body":{"license.html":{}}}],["heuristic",{"_index":4137,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["hidden",{"_index":2312,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["hide",{"_index":4823,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"components/TimelineItemComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["hides",{"_index":5599,"title":{},"body":{"components/UserItemComponent.html":{},"index.html":{}}}],["highlight",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{}}}],["highlighting",{"_index":3977,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["hold",{"_index":1320,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["holders",{"_index":6026,"title":{},"body":{"license.html":{}}}],["holding",{"_index":680,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["holds",{"_index":2248,"title":{},"body":{"components/FrameComponent.html":{}}}],["home",{"_index":521,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TopToolbarComponent.html":{}}}],["hook",{"_index":879,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["horizontal",{"_index":4849,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["host",{"_index":3349,"title":{},"body":{"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/SetEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hostlistener",{"_index":1085,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["hostlistener('window:mousemove",{"_index":1165,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["hostlistener('window:mouseup",{"_index":1163,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["host}/api",{"_index":6064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host}/api/public",{"_index":6066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host}/login",{"_index":6068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hour",{"_index":5520,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["hours",{"_index":5509,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["hrsg",{"_index":5950,"title":{},"body":{"index.html":{}}}],["hsp",{"_index":3408,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["html",{"_index":93,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["htmlelement",{"_index":4882,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["http",{"_index":663,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["http://alienryderflex.com/hsp.html",{"_index":3414,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["http://ccims.github.io/ccims",{"_index":5907,"title":{},"body":{"index.html":{}}}],["http://ceur",{"_index":5980,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":5918,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["http://localhost:6060",{"_index":6193,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["http://localhost:8080",{"_index":6069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":661,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["httpclientmodule",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{}}}],["httperrorresponse",{"_index":3954,"title":{},"body":{"components/LoginComponent.html":{}}}],["httplink",{"_index":2488,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["httplink.create({uri",{"_index":2548,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["https://doi.org/10.5220/0010497703040311",{"_index":5969,"title":{},"body":{"index.html":{}}}],["https://github.com/ccims/ccims",{"_index":5922,"title":{},"body":{"index.html":{}}}],["https://graphql",{"_index":6237,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["hue",{"_index":3409,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["hydrate",{"_index":5267,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["hydrated",{"_index":1874,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hydrateinitial(data",{"_index":2042,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hydratelist",{"_index":2053,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"miscellaneous/typealiases.html":{}}}],["hydrateraw",{"_index":1713,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{}}}],["hydrateraw(prepareddata",{"_index":1736,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hydrates",{"_index":2037,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hydration",{"_index":1877,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{}}}],["hyperlink",{"_index":3359,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["i.c.insertnodes(data",{"_index":6135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.assignees.nodes",{"_index":6117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.components.nodes",{"_index":6080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.interfaces.nodes",{"_index":6087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.issues.nodes",{"_index":6091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.issuesonlocation.nodes",{"_index":6096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.labels.nodes",{"_index":6110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.linkedbyissues.nodes",{"_index":6126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.linkstoissues.nodes",{"_index":6121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.locations.nodes",{"_index":6106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.timeline.nodes",{"_index":6101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.projects.nodes",{"_index":6075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.consumedby.nodes",{"_index":4263,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["i.consumedby.nodes.length",{"_index":4259,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["i.e",{"_index":772,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["i.name",{"_index":4258,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["i.q.components.getcomponent(id).then((data",{"_index":6138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.components.getinterface(id).then((data",{"_index":6139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.components.listprojectcomponents(list.node.id",{"_index":6076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.components.listprojectinterfaces(list.node.id",{"_index":6084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.getissueheader(id).then((data",{"_index":6140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.getlabel(id).then((data",{"_index":6147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listcomponentinterfaceissuesonlocation(list.node.id",{"_index":6097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listcomponentissues(list.node.id",{"_index":6092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listcomponentissuesonlocation(list.node.id",{"_index":6093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listcomponentlabels(list.node.id",{"_index":6111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissueassignees(list.node.id",{"_index":6114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuecomponents(list.node.id",{"_index":6081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuelabels(list.node.id",{"_index":6112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuelinkedbyissues(list.node.id",{"_index":6123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuelinkstoissues(list.node.id",{"_index":6118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuelocations(list.node.id",{"_index":6103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuetimelineitems(list.node.id",{"_index":6098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listlabelcomponents(list.node.id",{"_index":6083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listprojectissues(list.node.id",{"_index":6088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listprojectlabels(list.node.id",{"_index":6107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.projects.getproject(id).then((data",{"_index":6136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.projects.listprojects(listparams(params)).then((data",{"_index":6072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.users.currentuser().then((data",{"_index":6142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.users.searchusers(params.filter",{"_index":6127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i1",{"_index":3467,"title":{},"body":{"components/IssueListComponent.html":{}}}],["icomponent",{"_index":3497,"title":{},"body":{"components/IssueListComponent.html":{}}}],["icon",{"_index":2254,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TopToolbarComponent.html":{}}}],["icon'},{'name",{"_index":141,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["icon.component",{"_index":2592,"title":{},"body":{"modules/GraphsModule.html":{}}}],["icon.component.html",{"_index":3335,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon.component.scss",{"_index":3334,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon.component.ts",{"_index":3333,"title":{},"body":{"components/IssueIconComponent.html":{},"coverage.html":{}}}],["icon.component.ts:13",{"_index":3338,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon.component.ts:15",{"_index":3340,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon.component.ts:33",{"_index":3339,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon/issue",{"_index":2591,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueIconComponent.html":{},"coverage.html":{}}}],["icondefinition",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["iconname",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["icons",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":544,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["id.split",{"_index":3897,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["ide",{"_index":5972,"title":{},"body":{"index.html":{}}}],["idea",{"_index":5850,"title":{},"body":{"index.html":{}}}],["ideal",{"_index":4551,"title":{},"body":{"interfaces/Positions.html":{}}}],["identical",{"_index":3814,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["identified",{"_index":1695,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["identifier",{"_index":1881,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{}}}],["identifies",{"_index":3880,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["identity",{"_index":3905,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["ids",{"_index":1477,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["idt",{"_index":2040,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["id}).pipe(map(({data",{"_index":3710,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["id}__${issuecategory",{"_index":1299,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["ifempty",{"_index":2885,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["iff",{"_index":596,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/StateService.html":{}}}],["ignore",{"_index":1014,"title":{},"body":{"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/UserNotifyService.html":{}}}],["ignored",{"_index":2075,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ignoring",{"_index":2428,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["imagedata",{"_index":3395,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["imagedata.data[0",{"_index":3397,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["imagedata.data[1",{"_index":3398,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["imagedata.data[2",{"_index":3399,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["img",{"_index":4851,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["immediately",{"_index":1730,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["immutable",{"_index":3791,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["implementation",{"_index":1900,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["implementations",{"_index":3273,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["implemented",{"_index":6146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":14,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"guards/AuthGuard.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"interfaces/userMock.html":{}}}],["implied",{"_index":6018,"title":{},"body":{"license.html":{}}}],["import",{"_index":53,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["important",{"_index":5424,"title":{},"body":{"components/SideNavComponent.html":{},"components/TimelineItemComponent.html":{}}}],["imported",{"_index":2563,"title":{},"body":{"modules/GraphsModule.html":{}}}],["imports",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}}}],["improve",{"_index":6227,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["ims",{"_index":1423,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["imstype",{"_index":1403,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["imstype.github",{"_index":1433,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["in(black",{"_index":1686,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["inarray",{"_index":2849,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["include",{"_index":3785,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{},"index.html":{}}}],["included",{"_index":4030,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"license.html":{},"additional-documentation/managing-gropius.html":{}}}],["includes",{"_index":1236,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["including",{"_index":1581,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"license.html":{},"additional-documentation/using-gropius.html":{}}}],["incorrect",{"_index":5640,"title":{},"body":{"injectables/UsersService.html":{}}}],["indented",{"_index":2164,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":1705,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["indicates",{"_index":2734,"title":{},"body":{"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{}}}],["indicating",{"_index":3062,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/RegisterComponent.html":{}}}],["indication",{"_index":5101,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["indicator",{"_index":5108,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["indirection",{"_index":4008,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["individual",{"_index":822,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/FrameComponent.html":{}}}],["individualconfig",{"_index":2495,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{}}}],["inelegant",{"_index":1856,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["infinite",{"_index":5665,"title":{},"body":{"classes/Vector.html":{}}}],["infinitely",{"_index":5666,"title":{},"body":{"classes/Vector.html":{}}}],["infix",{"_index":2794,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["infoconfig",{"_index":5618,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["information",{"_index":568,"title":{},"body":{"interfaces/AppState.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/StateService.html":{},"components/TopToolbarComponent.html":{},"index.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["inherit",{"_index":2307,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["inherited",{"_index":1718,"title":{},"body":{"classes/DataNode.html":{}}}],["inidcate",{"_index":5096,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["initgraph",{"_index":3015,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["initial",{"_index":1639,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["initialized",{"_index":4355,"title":{},"body":{"interfaces/Positions.html":{}}}],["initializes",{"_index":4374,"title":{},"body":{"interfaces/Positions.html":{}}}],["initially",{"_index":3984,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["initialposition",{"_index":3276,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{}}}],["initiated",{"_index":3465,"title":{},"body":{"components/IssueListComponent.html":{}}}],["inject",{"_index":249,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["inject(component_context_menu_data",{"_index":1077,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["inject(mat_dialog_data",{"_index":242,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["injectable",{"_index":528,"title":{"injectables/AuthenticationService.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{}},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"additional-documentation/managing-gropius.html":{}}}],["injectable({providedin",{"_index":637,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{}}}],["injectables",{"_index":645,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injected",{"_index":1314,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["injection",{"_index":6212,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["injectiontoken",{"_index":1086,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["injectiontoken('component_context_menu_data",{"_index":1107,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":1087,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["injector)).instance",{"_index":1131,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["inline",{"_index":2798,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["inmemorycache",{"_index":2486,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["inner",{"_index":1859,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["innermapfn",{"_index":1863,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["innerquery/mapfn",{"_index":1855,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["innerqueryfn",{"_index":1824,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["inout",{"_index":312,"title":{},"body":{"components/AppComponent.html":{}}}],["input",{"_index":725,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["inputs",{"_index":764,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["inputtitle",{"_index":2718,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["insert",{"_index":1974,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["insertnodes",{"_index":4173,"title":{},"body":{"classes/NodeCache.html":{}}}],["insertnodes(nodes",{"_index":2076,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["insertresult(result",{"_index":1935,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["inserts",{"_index":2073,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["inset",{"_index":3572,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["inside",{"_index":3474,"title":{},"body":{"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["instance",{"_index":2505,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":581,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["instances",{"_index":3020,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{}}}],["instantiate",{"_index":5299,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["instantiated",{"_index":1254,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["instead",{"_index":820,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{}}}],["int",{"_index":4247,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["int.node",{"_index":4248,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["inteface",{"_index":6171,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["integrated",{"_index":6197,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["intended",{"_index":5098,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["interact",{"_index":5888,"title":{},"body":{"index.html":{}}}],["interacting",{"_index":1786,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["interaction",{"_index":227,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["interactive",{"_index":1711,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueItemComponent.html":{},"classes/NodeCache.html":{}}}],["interest",{"_index":2971,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["interested",{"_index":3222,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["interface",{"_index":118,"title":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"interfaces/ComponentContextMenuData.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"interfaces/GraphData.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"interfaces/User.html":{},"interfaces/userMock.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["interface.graphql",{"_index":2617,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["interface/:interfaceid",{"_index":515,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["interfaceconsumer",{"_index":1232,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["interfaceid",{"_index":1293,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["interfacenode",{"_index":1220,"title":{"interfaces/InterfaceNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["interfacenode.dataaspromise().then((data",{"_index":3520,"title":{},"body":{"components/IssueListComponent.html":{}}}],["interfacenode.id",{"_index":4673,"title":{},"body":{"interfaces/Positions.html":{}}}],["interfacenodes",{"_index":4621,"title":{},"body":{"interfaces/Positions.html":{}}}],["interfacenodes.foreach((interfacenode",{"_index":4634,"title":{},"body":{"interfaces/Positions.html":{}}}],["interfaceofferingcomponents",{"_index":2384,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["interfaceofferingcomponents.has(id",{"_index":2389,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["interfaces",{"_index":525,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"interfaces/ComponentContextMenuData.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"interfaces/User.html":{},"index.html":{},"overview.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{}}}],["interfaces.get(interfaceid).offeredby",{"_index":2387,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["interfaces.has(locationid)).map((interfaceid",{"_index":2386,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["interfaces.node.interfaces.nodes",{"_index":4256,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["interfacesize",{"_index":4775,"title":{},"body":{"interfaces/Positions.html":{}}}],["interfacestore",{"_index":1557,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["interfacestoreservice",{"_index":1553,"title":{"injectables/InterfaceStoreService.html":{}},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"injectables/InterfaceStoreService.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["internal",{"_index":1015,"title":{},"body":{"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["international",{"_index":5962,"title":{},"body":{"index.html":{}}}],["interplay",{"_index":3274,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["intrface.id",{"_index":1267,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["intrface.name",{"_index":1268,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["intrface.offeredby",{"_index":1270,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["introducing",{"_index":6228,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["introduction",{"_index":5843,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":1444,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"components/RegisterComponent.html":{}}}],["invalidate",{"_index":1714,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["invalidatelists",{"_index":2122,"title":{},"body":{"injectables/DataService.html":{}}}],["invalidatelists(selector",{"_index":2127,"title":{},"body":{"injectables/DataService.html":{}}}],["invalidates",{"_index":2129,"title":{},"body":{"injectables/DataService.html":{}}}],["invalidating",{"_index":2146,"title":{},"body":{"injectables/DataService.html":{}}}],["invalidation",{"_index":1834,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["invalidcredentials",{"_index":3934,"title":{},"body":{"components/LoginComponent.html":{}}}],["invisible",{"_index":4674,"title":{},"body":{"interfaces/Positions.html":{}}}],["invoke",{"_index":6242,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["invoked",{"_index":622,"title":{},"body":{"guards/AuthGuard.html":{}}}],["invokes",{"_index":2969,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["involves",{"_index":2170,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["irrelevant",{"_index":3218,"title":{},"body":{"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{}}}],["isbehind",{"_index":5649,"title":{},"body":{"classes/Vector.html":{}}}],["isbehind(source",{"_index":5674,"title":{},"body":{"classes/Vector.html":{}}}],["isclosed",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["iscoalesced",{"_index":825,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["iscolordark",{"_index":3373,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["iscolordark(color",{"_index":3375,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["iscomponent",{"_index":3582,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["isduplicate",{"_index":2879,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["isfilterlabel",{"_index":2197,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{}}}],["isfilterlabel(item)).map((item",{"_index":2225,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["isfilterlabel(label",{"_index":2228,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{}}}],["ishandset",{"_index":2268,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/TopToolbarComponent.html":{}}}],["isinset",{"_index":5342,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["isinset(item",{"_index":4149,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["isissuebody",{"_index":985,"title":{},"body":{"components/CommentComponent.html":{}}}],["islinkedbyissues",{"_index":2886,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["isloading",{"_index":3935,"title":{},"body":{"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["islocalset",{"_index":4118,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["isn't",{"_index":4550,"title":{},"body":{"interfaces/Positions.html":{}}}],["isnextsublazy",{"_index":1879,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["isopen",{"_index":2877,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["isprojectset",{"_index":2269,"title":{},"body":{"components/FrameComponent.html":{}}}],["isprojecturl",{"_index":5425,"title":{},"body":{"injectables/StateService.html":{}}}],["isprojecturl(url",{"_index":599,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["isright",{"_index":6159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issue",{"_index":120,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["issue$.current?.usercaneditissue",{"_index":2753,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["issue's",{"_index":993,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["issue.assignees.nodes",{"_index":3556,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.assigneesstring",{"_index":3553,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.category",{"_index":2451,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["issue.createdby.displayname",{"_index":3560,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.graphql",{"_index":3612,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["issue.id",{"_index":4590,"title":{},"body":{"interfaces/Positions.html":{}}}],["issue.isopen",{"_index":3501,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.issuecomments?.totalcount",{"_index":2785,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["issue.labels.nodes",{"_index":3558,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.labelsstring",{"_index":3554,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.linksissues",{"_index":2438,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issue.search",{"_index":3561,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.title",{"_index":2779,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueItemComponent.html":{}}}],["issuecategory",{"_index":1216,"title":{},"body":{"interfaces/ComponentNode.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/FilterState.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/typealiases.html":{}}}],["issuecategory.bug",{"_index":2397,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["issuecategory.featurerequest",{"_index":2398,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["issuecategory.unclassified",{"_index":2399,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["issuecategory[key",{"_index":4706,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuecategorycomponent",{"_index":127,"title":{"components/IssueCategoryComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecomment",{"_index":1008,"title":{},"body":{"components/CommentComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["issuecontainersize",{"_index":4776,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuecontentscomponent",{"_index":129,"title":{"components/IssueContentsComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecount",{"_index":1278,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["issuecounts",{"_index":2416,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuecounts(bugcount",{"_index":2396,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issuecounts(gqlinterface.bugs.totalcount",{"_index":2406,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issuecounts.get(issuecategory",{"_index":4708,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuecounts.has(issuecategory",{"_index":4707,"title":{},"body":{"interfaces/Positions.html":{}}}],["issued",{"_index":4365,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuedata",{"_index":1570,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["issuedetailcomponent",{"_index":131,"title":{"components/IssueDetailComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueeditable",{"_index":2719,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["issuefilter",{"_index":2811,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{}}}],["issuefiltercomponent",{"_index":133,"title":{"components/IssueFilterComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["issuefoldernode",{"_index":1277,"title":{"interfaces/IssueFolderNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["issuefoldernode.id",{"_index":4713,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraph",{"_index":1108,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueGraphControlsComponent.html":{}}}],["issuegraphapiservice",{"_index":2940,"title":{"injectables/IssueGraphApiService.html":{}},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"coverage.html":{}}}],["issuegraphclasssettersservice",{"_index":3008,"title":{"injectables/IssueGraphClassSettersService.html":{}},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegraphcomponent",{"_index":135,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuegraphcontrolscomponent",{"_index":137,"title":{"components/IssueGraphControlsComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuegraphcontrolscomponents",{"_index":4366,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphdynamictemplateregistryservice",{"_index":3143,"title":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegraphlinkhandlesservice",{"_index":3167,"title":{"injectables/IssueGraphLinkHandlesService.html":{}},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegraphnodes",{"_index":4328,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createcomponentnode(component",{"_index":4619,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createinterfacenode(intrface",{"_index":4623,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createissuefoldernode(node",{"_index":4709,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createissuegroupcontainernode(node",{"_index":4690,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createrelationedge(foldernode.id",{"_index":4725,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.getissuefolderid(issuenodeid",{"_index":4726,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.interfacenode",{"_index":4664,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.issuenode",{"_index":4627,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.issuenode[]).concat(interfacenodes",{"_index":4626,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.nodetype.component",{"_index":4440,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.nodetype.interface",{"_index":4441,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.nodetype.interfaceconsumer",{"_index":4454,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.nodetype.issuegroupcontainer",{"_index":4493,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.position",{"_index":4471,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphstateservice",{"_index":1404,"title":{"injectables/IssueGraphStateService.html":{}},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegroupcontainer",{"_index":1234,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["issuegroupcontainerbehaviour",{"_index":3244,"title":{"classes/IssueGroupContainerBehaviour.html":{}},"body":{"classes/IssueGroupContainerBehaviour.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegroupcontainernode",{"_index":1221,"title":{"interfaces/IssueGroupContainerNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["issuegroupcontainernode.id",{"_index":4698,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegroupcontainerparentbehaviour",{"_index":3275,"title":{"classes/IssueGroupContainerParentBehaviour.html":{}},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegroupcontainerparentbehaviour(initialposition",{"_index":4693,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegroupnodeids",{"_index":1271,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["issuegroupparents",{"_index":4358,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegroups",{"_index":4317,"title":{},"body":{"interfaces/Positions.html":{}}}],["issueheadercomponent",{"_index":4843,"title":{},"body":{"components/ProjectIssueListComponent.html":{}}}],["issueiconcomponent",{"_index":140,"title":{"components/IssueIconComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueid",{"_index":512,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{}}}],["issueinput",{"_index":3668,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["issueitemcomponent",{"_index":142,"title":{"components/IssueItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelabelcomponent",{"_index":144,"title":{"components/IssueLabelComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelist",{"_index":4588,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuelistcomponent",{"_index":146,"title":{"components/IssueListComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelistid",{"_index":4183,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{}}}],["issuelistparams",{"_index":6044,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["issuelocation",{"_index":3584,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["issuelocationcomponent",{"_index":148,"title":{"components/IssueLocationComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelocations",{"_index":3917,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["issuenode",{"_index":1211,"title":{"interfaces/IssueNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["issuenodeid",{"_index":2759,"title":{},"body":{"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{}}}],["issuenodes",{"_index":4625,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuenodes.foreach((node",{"_index":4628,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuenodes.length",{"_index":4639,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuepage",{"_index":2332,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issueregex",{"_index":3002,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["issues",{"_index":511,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ComponentNode.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"injectables/QueriesService.html":{},"interfaces/RelationEdge.html":{},"components/SideNavComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["issues&quot",{"_index":2985,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["issues.service",{"_index":5082,"title":{},"body":{"injectables/QueriesService.html":{}}}],["issuesidebarcomponent",{"_index":150,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueslink",{"_index":5399,"title":{},"body":{"components/SideNavComponent.html":{}}}],["issuesonlocation",{"_index":3916,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["issuesservice",{"_index":5075,"title":{},"body":{"injectables/QueriesService.html":{},"coverage.html":{}}}],["issuestoreservice",{"_index":3606,"title":{"injectables/IssueStoreService.html":{}},"body":{"injectables/IssueStoreService.html":{},"coverage.html":{}}}],["issuestub",{"_index":3847,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["issuestub.title",{"_index":3870,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["issuesub",{"_index":2720,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["issuetimelineitem",{"_index":827,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["issuing",{"_index":5201,"title":{},"body":{"components/RegisterComponent.html":{}}}],["iszero",{"_index":5650,"title":{},"body":{"classes/Vector.html":{}}}],["it's",{"_index":619,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["italic",{"_index":5470,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["item",{"_index":88,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["item's",{"_index":930,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item'},{'name",{"_index":143,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["item.component",{"_index":464,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"modules/GraphsModule.html":{}}}],["item.component.html",{"_index":3354,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/UserItemComponent.html":{}}}],["item.component.name",{"_index":2927,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["item.component.scss",{"_index":3353,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/UserItemComponent.html":{}}}],["item.component.ts",{"_index":3352,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:12",{"_index":5575,"title":{},"body":{"directives/TimelineSingleItemDirective.html":{},"components/UserItemComponent.html":{}}}],["item.component.ts:13",{"_index":3362,"title":{},"body":{"components/IssueItemComponent.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["item.component.ts:14",{"_index":5600,"title":{},"body":{"components/UserItemComponent.html":{}}}],["item.component.ts:15",{"_index":3360,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["item.component.ts:16",{"_index":5598,"title":{},"body":{"components/UserItemComponent.html":{}}}],["item.component.ts:17",{"_index":3358,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["item.component.ts:19",{"_index":3357,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["item.component.ts:22",{"_index":3856,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["item.component.ts:23",{"_index":5525,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{}}}],["item.component.ts:24",{"_index":3363,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{}}}],["item.component.ts:27",{"_index":3860,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["item.component.ts:31",{"_index":3854,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["item.component.ts:35",{"_index":5573,"title":{},"body":{"directives/TimelineItemDeletedDirective.html":{}}}],["item.component.ts:36",{"_index":5574,"title":{},"body":{"directives/TimelineItemDeletedDirective.html":{}}}],["item.component.ts:40",{"_index":3857,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["item.component.ts:51",{"_index":5546,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:53",{"_index":5545,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:57",{"_index":5548,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:60",{"_index":5550,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:63",{"_index":5549,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:65",{"_index":5547,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:66",{"_index":5544,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.createdby",{"_index":933,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.createdby.displayname",{"_index":934,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.id",{"_index":2215,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{}}}],["item.label",{"_index":847,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.linkedissue",{"_index":858,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.location",{"_index":854,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.name",{"_index":1541,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["item.removedcomponent",{"_index":852,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.removedlabel",{"_index":849,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.removedlinkedissue",{"_index":860,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.removedlocation",{"_index":856,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item/issue",{"_index":2588,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueItemComponent.html":{},"coverage.html":{}}}],["item/user",{"_index":2590,"title":{},"body":{"modules/GraphsModule.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["item::before",{"_index":5567,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["itemdirective",{"_index":206,"title":{"directives/ItemDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["itemfilterfunction",{"_index":839,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"miscellaneous/typealiases.html":{}}}],["itemfilterfunction|undefined",{"_index":945,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["itemops",{"_index":4109,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{}}}],["items",{"_index":812,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["items.filter((x",{"_index":3743,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["items.push(item",{"_index":4099,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["items.splice(this.limit",{"_index":4103,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["items.values",{"_index":909,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["items/events",{"_index":823,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["itemtemplate",{"_index":762,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["itemtype",{"_index":910,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["iterate",{"_index":3811,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["itself",{"_index":2260,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/TopToolbarComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["j",{"_index":5939,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":1870,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{}}}],["jimmy",{"_index":6260,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["join",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"injectables/IssueGraphApiService.html":{}}}],["json",{"_index":4733,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.parse(atob(response.token.split('.')[1",{"_index":709,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["json.parse(data",{"_index":4407,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.parse(localstorage.getitem(this.userstoragekey",{"_index":696,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["json.parse(previousboundingboxasstring",{"_index":4742,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.parse(zoomtransformasstring",{"_index":4743,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.parse(zoomtransformasstring).k",{"_index":4761,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.stringify(this.graph.currentviewwindow",{"_index":4388,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.stringify(this.graph.currentzoomtransform",{"_index":4386,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.stringify(this.savedpositions",{"_index":4413,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.stringify(user",{"_index":698,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["jump",{"_index":5000,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["jumps",{"_index":4886,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["justify",{"_index":1683,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/TopToolbarComponent.html":{}}}],["jwt",{"_index":648,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["k",{"_index":2245,"title":{},"body":{"interfaces/FilterState.html":{}}}],["keep",{"_index":703,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["keeps",{"_index":2057,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["key",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["key.split",{"_index":4088,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["keyed",{"_index":2872,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["keyframes",{"_index":1649,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["keys",{"_index":2020,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorComponent.html":{}}}],["keys[keys.length",{"_index":2022,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["keyset",{"_index":1518,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["keyset.add(encodenodeid(item",{"_index":1523,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["keyset.delete(encodenodeid(item",{"_index":1525,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["keyset.has(encodenodeid(item",{"_index":1521,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["keyword",{"_index":3462,"title":{},"body":{"components/IssueListComponent.html":{},"components/MarkdownPreviewComponent.html":{}}}],["keywords",{"_index":3475,"title":{},"body":{"components/IssueListComponent.html":{}}}],["kind",{"_index":6016,"title":{},"body":{"license.html":{}}}],["kklimentov1618",{"_index":6264,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["kliment",{"_index":6262,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["klimentov",{"_index":6263,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["knowledge",{"_index":1990,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["koziolek",{"_index":5944,"title":{},"body":{"index.html":{}}}],["krieger",{"_index":5970,"title":{},"body":{"index.html":{}}}],["kristina",{"_index":6265,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["kristinapn",{"_index":6267,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["label",{"_index":115,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["label'},{'name",{"_index":145,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["label.component",{"_index":2585,"title":{},"body":{"modules/GraphsModule.html":{}}}],["label.component.html",{"_index":3372,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["label.component.scss",{"_index":3371,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["label.component.ts",{"_index":3370,"title":{},"body":{"components/IssueLabelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["label.component.ts:37",{"_index":3374,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["label.component.ts:44",{"_index":3376,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["label.id",{"_index":3001,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["label.name",{"_index":3559,"title":{},"body":{"components/IssueListComponent.html":{}}}],["label/issue",{"_index":2584,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueLabelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["label/label",{"_index":2990,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["label?.name",{"_index":3422,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["labeled",{"_index":5433,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["labelledevent",{"_index":846,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["labels",{"_index":1476,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["labels.length",{"_index":2994,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["labels.map((label",{"_index":3000,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["labelsearch",{"_index":3052,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["labelsearchcomponent",{"_index":152,"title":{"components/LabelSearchComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["labelsinput",{"_index":2208,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["labelsloading",{"_index":2207,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["labelstore",{"_index":2211,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["labelstoreservice",{"_index":2198,"title":{"injectables/LabelStoreService.html":{}},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{},"coverage.html":{}}}],["labeltext",{"_index":5439,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["landing",{"_index":4853,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["language",{"_index":2980,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"components/MarkdownEditorComponent.html":{},"index.html":{}}}],["larger",{"_index":3973,"title":{},"body":{"components/LoginComponent.html":{}}}],["last",{"_index":1831,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{}}}],["last_height",{"_index":1137,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["last_width",{"_index":1135,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["lastloadtime",{"_index":1840,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["lastpageitemid",{"_index":2019,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["lastqueriedprojectname",{"_index":4856,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["latter",{"_index":6185,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["layer",{"_index":4007,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["layour",{"_index":4796,"title":{},"body":{"interfaces/Positions.html":{}}}],["layout",{"_index":2148,"title":{},"body":{"injectables/DataService.html":{},"interfaces/Positions.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["layout.ts",{"_index":3749,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["layout.ts:100",{"_index":5684,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:109",{"_index":5671,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:123",{"_index":5664,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:135",{"_index":5676,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:145",{"_index":3775,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:148",{"_index":3770,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:151",{"_index":3772,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:154",{"_index":3774,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:157",{"_index":3776,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:160",{"_index":3778,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:163",{"_index":3768,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:166",{"_index":3780,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:169",{"_index":3765,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:172",{"_index":3763,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:175",{"_index":3762,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:188",{"_index":3788,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:197",{"_index":3782,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:29",{"_index":5675,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:40",{"_index":5686,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:47",{"_index":5677,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:55",{"_index":5678,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:64",{"_index":5658,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:73",{"_index":5661,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:8",{"_index":5656,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:84",{"_index":5691,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:9",{"_index":5655,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:92",{"_index":5680,"title":{},"body":{"classes/Vector.html":{}}}],["layoutgraph",{"_index":3055,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["layoutmodule",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["layoutnode",{"_index":3747,"title":{"classes/LayoutNode.html":{}},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["layoutnode(node.id",{"_index":4798,"title":{},"body":{"interfaces/Positions.html":{}}}],["layoutnode.padding_component",{"_index":3800,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["layoutnode.padding_interface",{"_index":3801,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["layoutnode.position.x",{"_index":4808,"title":{},"body":{"interfaces/Positions.html":{}}}],["layoutnode.position.y",{"_index":4809,"title":{},"body":{"interfaces/Positions.html":{}}}],["lazily",{"_index":771,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{}}}],["lazy",{"_index":765,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ld",{"_index":3924,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["lead",{"_index":3470,"title":{},"body":{"components/IssueListComponent.html":{},"index.html":{}}}],["leak",{"_index":1817,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["leaving",{"_index":754,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["left",{"_index":1074,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["leftdistance",{"_index":3291,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["legend",{"_index":92,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["length",{"_index":736,"title":{},"body":{"classes/CCIMSValidators.html":{},"classes/Vector.html":{}}}],["lets",{"_index":1789,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{}}}],["levels",{"_index":4685,"title":{},"body":{"interfaces/Positions.html":{}}}],["li",{"_index":5553,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["liability",{"_index":6030,"title":{},"body":{"license.html":{}}}],["liable",{"_index":6027,"title":{},"body":{"license.html":{}}}],["license",{"_index":5984,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["licensed",{"_index":5986,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":878,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"additional-documentation/using-gropius.html":{}}}],["light",{"_index":3377,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["light_mode",{"_index":5387,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["lightgray",{"_index":5252,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["limit",{"_index":4011,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["limitation",{"_index":3902,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"license.html":{}}}],["limited",{"_index":6019,"title":{},"body":{"license.html":{}}}],["line",{"_index":795,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/DialogData-1.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"classes/Vector.html":{}}}],["line.replace(\"\\n",{"_index":5466,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["lines",{"_index":2161,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["link",{"_index":751,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"components/IssueContentsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"injectables/IssueStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["link(linkissueinput",{"_index":3676,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linked",{"_index":156,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["linked).catch((err",{"_index":1626,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["linkedbyissues",{"_index":2887,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["linkedissue",{"_index":2452,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["linkedissue.category",{"_index":2456,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["linkedissueitemcomponent",{"_index":154,"title":{"components/LinkedIssueItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["linkedissues",{"_index":2679,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["linkedissuesub",{"_index":2680,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["linkevent",{"_index":857,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["linkhandle",{"_index":3154,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{}}}],["linkhandle.x",{"_index":3200,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["linkhandle.y",{"_index":3203,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["linkhandlecalculation",{"_index":3185,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["linking",{"_index":3610,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linkissue",{"_index":3623,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linkissuegql",{"_index":3624,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linkissueinput",{"_index":3677,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linkissues",{"_index":2347,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["links",{"_index":2429,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"index.html":{}}}],["linksissues",{"_index":2427,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["linkstoissues",{"_index":1587,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["lint",{"_index":6198,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["list",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"interfaces/QueryListParams.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["list'},{'name",{"_index":147,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["list.component",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{}}}],["list.component.html",{"_index":3430,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.scss",{"_index":3429,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts",{"_index":3425,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"coverage.html":{}}}],["list.component.ts:158",{"_index":3461,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:18",{"_index":4846,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts:181",{"_index":3452,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:19",{"_index":4845,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts:190",{"_index":3454,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:20",{"_index":4868,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:200",{"_index":3471,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:21",{"_index":4869,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:22",{"_index":4863,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:23",{"_index":4844,"title":{},"body":{"components/ProjectIssueListComponent.html":{}}}],["list.component.ts:237",{"_index":3463,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:27",{"_index":3449,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:28",{"_index":3450,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:29",{"_index":3490,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:30",{"_index":3486,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:31",{"_index":4867,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:33",{"_index":3479,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:34",{"_index":3483,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:37",{"_index":3480,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:38",{"_index":3482,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:41",{"_index":3481,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:45",{"_index":3477,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:47",{"_index":3476,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:49",{"_index":3485,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:50",{"_index":3478,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts:51",{"_index":3491,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:52",{"_index":3495,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:54",{"_index":3489,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:55",{"_index":3494,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:56",{"_index":3448,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:62",{"_index":4865,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:70",{"_index":3460,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts:86",{"_index":3457,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.interactive",{"_index":4072,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["list.invalidate",{"_index":2150,"title":{},"body":{"injectables/DataService.html":{}}}],["list.loaddebounced",{"_index":2151,"title":{},"body":{"injectables/DataService.html":{}}}],["list.subscribe",{"_index":4075,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["list.subscribercount",{"_index":2145,"title":{},"body":{"injectables/DataService.html":{}}}],["list/issue",{"_index":2570,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["list/project",{"_index":501,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{},"components/ProjectIssueListComponent.html":{},"coverage.html":{}}}],["list]=\"linkedissues",{"_index":2699,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["listall",{"_index":2882,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["listallissues",{"_index":2868,"title":{},"body":{"components/IssueFilterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["listed",{"_index":867,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["listen",{"_index":573,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["listeners",{"_index":4341,"title":{},"body":{"interfaces/Positions.html":{}}}],["listening",{"_index":547,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["listento",{"_index":5151,"title":{},"body":{"components/QueryComponent.html":{}}}],["listento(query",{"_index":5134,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["listfromnode",{"_index":4052,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["listid",{"_index":1472,"title":{"interfaces/ListId.html":{}},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"components/ProjectIssueListComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["listidenc",{"_index":2132,"title":{},"body":{"injectables/DataService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{}}}],["listids",{"_index":6235,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["listing",{"_index":2867,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["listparams",{"_index":1758,"title":{"interfaces/ListParams.html":{}},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/QueryListParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["listparams(params)).then((data",{"_index":6077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listprojectcomponents",{"_index":1373,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectcomponents(project",{"_index":1388,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectcomponentsgql",{"_index":1376,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectinterfaces",{"_index":1374,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectinterfaces(project",{"_index":1391,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectinterfacesgql",{"_index":1378,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojects",{"_index":5060,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["listprojects(list",{"_index":5069,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["listprojectsgql",{"_index":5062,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["listqueries",{"_index":5718,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["listqueries[type",{"_index":6149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listqueries[type][node.type",{"_index":6150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listqueries[type][node.type](i",{"_index":6153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listqueryinput",{"_index":6049,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["listresult",{"_index":1763,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lists",{"_index":1944,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["listset",{"_index":4111,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["listsetsub",{"_index":4120,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["listtype",{"_index":835,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"injectables/DataService.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"components/ProjectIssueListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["listtype.assignees",{"_index":6113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listtype.componentinterfaces",{"_index":2893,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.components",{"_index":1492,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.issuelocations",{"_index":6102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listtype.issues",{"_index":2871,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"components/ProjectIssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.issuesonlocation",{"_index":4237,"title":{},"body":{"components/NodeDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.labels",{"_index":3504,"title":{},"body":{"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.linkedbyissues",{"_index":6122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listtype.linkedissues",{"_index":2684,"title":{},"body":{"components/IssueContentsComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/variables.html":{}}}],["listtype.projects",{"_index":6071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listtype.searchusers",{"_index":2890,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.timelineitems",{"_index":886,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"miscellaneous/variables.html":{}}}],["listtype[ld.type",{"_index":3927,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["listtype[parts[1",{"_index":3923,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["listtype[type",{"_index":6152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listwrapper",{"_index":4898,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["literal",{"_index":1551,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["literature",{"_index":5928,"title":{},"body":{"index.html":{}}}],["load",{"_index":1506,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectListComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"additional-documentation/managing-gropius.html":{}}}],["loaddebounced",{"_index":1715,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{}}}],["loaddebounced(interactive",{"_index":1742,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["loaded",{"_index":778,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["loadifneeded",{"_index":1712,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["loadimpl(fut",{"_index":1901,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["loading",{"_index":232,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectListComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/enumerations.html":{}}}],["loadissuegraphdata",{"_index":2945,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{}}}],["loadissuegraphdata(projectid",{"_index":2961,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["loadlabels",{"_index":2230,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["loads",{"_index":759,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["loadsavedpositions",{"_index":4405,"title":{},"body":{"interfaces/Positions.html":{}}}],["loadtimeout",{"_index":1873,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["local",{"_index":670,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"modules/GraphQLModule.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"interfaces/User.html":{}}}],["localissuedata",{"_index":1585,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"miscellaneous/typealiases.html":{}}}],["locally",{"_index":5905,"title":{},"body":{"index.html":{}}}],["localset",{"_index":4119,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["localstorage",{"_index":649,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{}}}],["localstorage.getitem('token",{"_index":2541,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["localstorage.getitem(`zoomboundingbox_${this.projectstoragekey",{"_index":4735,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.getitem(`zoomtransform_${this.projectstoragekey",{"_index":4738,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.getitem(this.projectstoragekey",{"_index":4406,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.removeitem('currentuser",{"_index":714,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["localstorage.removeitem('token",{"_index":715,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["localstorage.setitem('token",{"_index":706,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["localstorage.setitem(`zoomboundingbox_${this.projectstoragekey",{"_index":4387,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.setitem(`zoomtransform_${this.projectstoragekey",{"_index":4385,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.setitem(this.projectstoragekey",{"_index":4414,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.setitem(this.userstoragekey",{"_index":697,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["located",{"_index":5927,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["location",{"_index":1640,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueLocationComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["location's",{"_index":3587,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location'},{'name",{"_index":149,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["location.component",{"_index":2606,"title":{},"body":{"modules/GraphsModule.html":{}}}],["location.component.html",{"_index":3580,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.scss",{"_index":3579,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.ts",{"_index":3578,"title":{},"body":{"components/IssueLocationComponent.html":{},"coverage.html":{}}}],["location.component.ts:15",{"_index":3585,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.ts:17",{"_index":3583,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.ts:22",{"_index":3588,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.ts:27",{"_index":3586,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.id",{"_index":2435,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["location.issues",{"_index":2362,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["location.name",{"_index":3594,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location/issue",{"_index":2605,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueLocationComponent.html":{},"coverage.html":{}}}],["locationid",{"_index":2337,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["locationids",{"_index":2375,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["locationids.filter((id",{"_index":2388,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["locationids.filter((locationid",{"_index":2385,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["locations",{"_index":1582,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["log",{"_index":3971,"title":{},"body":{"components/LoginComponent.html":{},"components/TopToolbarComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["logged",{"_index":616,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"additional-documentation/using-gropius.html":{}}}],["loggin",{"_index":4854,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["logic",{"_index":3500,"title":{},"body":{"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["login",{"_index":517,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["login'},{'name",{"_index":158,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["login(this.validateform.controls.username.value",{"_index":3960,"title":{},"body":{"components/LoginComponent.html":{}}}],["login(username",{"_index":665,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["login.component.html",{"_index":3933,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":3932,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":157,"title":{"components/LoginComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/managing-gropius.html":{}}}],["loginurl",{"_index":6067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":656,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{}}}],["lollipop",{"_index":4667,"title":{},"body":{"interfaces/Positions.html":{}}}],["long",{"_index":1767,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["longer",{"_index":926,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"injectables/IssueGraphStateService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["look",{"_index":562,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"injectables/StateService.html":{},"additional-documentation/managing-gropius.html":{}}}],["loop",{"_index":3842,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["lot",{"_index":6220,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["lowercase",{"_index":4998,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["m",{"_index":5941,"title":{},"body":{"index.html":{}}}],["made",{"_index":3987,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/using-gropius.html":{}}}],["main",{"_index":1819,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"classes/NodeCache.html":{},"additional-documentation/using-gropius.html":{}}}],["make",{"_index":569,"title":{},"body":{"interfaces/AppState.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{},"classes/Vector.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["makecommentid(node",{"_index":970,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["makecomponentfilter(search",{"_index":1511,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["makefilter",{"_index":2884,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["makes",{"_index":2264,"title":{},"body":{"components/FrameComponent.html":{},"injectables/IssueGraphApiService.html":{},"additional-documentation/managing-gropius.html":{}}}],["making",{"_index":5287,"title":{},"body":{"components/SetEditorComponent.html":{},"index.html":{}}}],["manage",{"_index":4912,"title":{},"body":{"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["manageclasssetters",{"_index":3016,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["manageclasssetters(graph",{"_index":3017,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["managed",{"_index":5868,"title":{},"body":{"index.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["managedragbehaviour(graph",{"_index":4415,"title":{},"body":{"interfaces/Positions.html":{}}}],["managedynamictemplateregistry",{"_index":3149,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["managedynamictemplateregistry(graph",{"_index":3150,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["manageeventlisteners(graph",{"_index":4482,"title":{},"body":{"interfaces/Positions.html":{}}}],["managelinkhandles",{"_index":3173,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["managelinkhandles(graph",{"_index":3181,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["management",{"_index":5869,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/managing-gropius.html":{}}}],["manager",{"_index":4683,"title":{},"body":{"interfaces/Positions.html":{}}}],["manages",{"_index":1053,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"components/SideNavComponent.html":{}}}],["managing",{"_index":3013,"title":{"additional-documentation/managing-gropius.html":{}},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["manipulation",{"_index":3220,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["manually",{"_index":1813,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"miscellaneous/typealiases.html":{}}}],["many",{"_index":4577,"title":{},"body":{"interfaces/Positions.html":{},"index.html":{}}}],["map",{"_index":690,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"injectables/ProjectStoreService.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{}}}],["map(([selectedcategories",{"_index":3109,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["map((items",{"_index":3742,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["map((key",{"_index":3302,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["map((response",{"_index":701,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["map((result",{"_index":2283,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["map([...components",{"_index":2371,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["map([...location.issues].filter(([category",{"_index":2363,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["map(gqlgraphcomponents.map((gqlcomponent",{"_index":2422,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["map(gqlinterfaces.map((gqlinterface",{"_index":2414,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["map.set(component_context_menu_data",{"_index":1127,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["map.set(encodenodeid(id",{"_index":2091,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["mapfromgql",{"_index":2317,"title":{},"body":{"classes/GraphComponent.html":{},"classes/GraphInterface.html":{}}}],["mapfromgql(gqlgraphcomponents",{"_index":2326,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["mapfromgql(gqlinterfaces",{"_index":2413,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["mapping",{"_index":2376,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["maps",{"_index":1861,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["margin",{"_index":1196,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["mark",{"_index":2750,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/RegisterComponent.html":{}}}],["markdown",{"_index":160,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"dependencies.html":{}}}],["markdown/markdown",{"_index":446,"title":{},"body":{"modules/AppModule.html":{}}}],["markdowneditorcomponent",{"_index":159,"title":{"components/MarkdownEditorComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["markdownmodule",{"_index":449,"title":{},"body":{"modules/AppModule.html":{}}}],["markdownmodule.forroot",{"_index":487,"title":{},"body":{"modules/AppModule.html":{}}}],["markdownpreviewcomponent",{"_index":162,"title":{"components/MarkdownPreviewComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["marker",{"_index":4444,"title":{},"body":{"interfaces/Positions.html":{}}}],["markerend",{"_index":1288,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["marks",{"_index":2767,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/RegisterComponent.html":{}}}],["mat",{"_index":267,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SideNavComponent.html":{},"components/TopToolbarComponent.html":{}}}],["mat_dialog_data",{"_index":252,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["mat_form_field_default_options",{"_index":2567,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matbutton",{"_index":5093,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["matbuttonmodule",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matbuttontogglemodule",{"_index":460,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["match",{"_index":2181,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/managing-gropius.html":{}}}],["matcheckboxmodule",{"_index":2586,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matches",{"_index":4999,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{}}}],["matching",{"_index":220,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{},"additional-documentation/contributors.html":{}}}],["matchstrings",{"_index":4085,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["matchstrings.push(cursor",{"_index":4091,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["matchvalidator",{"_index":2177,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["matdialog",{"_index":36,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/userMock.html":{}}}],["matdialogmodule",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matdialogref",{"_index":35,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["matexpansionmodule",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["math.abs(date.parse(timelineitem.createdat",{"_index":960,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["math.abs(linkhandle.x",{"_index":3198,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["math.abs(linkhandle.y",{"_index":3199,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["math.max(0",{"_index":4562,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.max(1",{"_index":3825,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["math.max(nodex",{"_index":4793,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.max(nodey",{"_index":4795,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.max(this.height",{"_index":1170,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["math.max(this.width",{"_index":1168,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["math.max(y",{"_index":4521,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.min(nodex",{"_index":4789,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.min(nodey",{"_index":4791,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.random",{"_index":1537,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["math.random().tostring(36",{"_index":1612,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["math.round((+now",{"_index":5507,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["math.round(hours",{"_index":5511,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["math.round(minutes",{"_index":5510,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["math.sqrt(0.299",{"_index":3415,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["math.sqrt(0.5",{"_index":3421,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["maticonmodule",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["maticonregistry",{"_index":279,"title":{},"body":{"components/AppComponent.html":{}}}],["matinputmodule",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matlistmodule",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matmenumodule",{"_index":2593,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matpaginator",{"_index":3487,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["matpaginatormodule",{"_index":2568,"title":{},"body":{"modules/GraphsModule.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["matprogressspinnermodule",{"_index":2602,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matselectmodule",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matsidenavmodule",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matslidetogglemodule",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matsort",{"_index":3492,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["matsortable",{"_index":3496,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["matsortmodule",{"_index":2575,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matspinner",{"_index":2603,"title":{},"body":{"modules/GraphsModule.html":{}}}],["mattabledatasource",{"_index":3484,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["mattabledatasource(data",{"_index":3526,"title":{},"body":{"components/IssueListComponent.html":{}}}],["mattabledatasource(this.mockusers",{"_index":4975,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["mattablemodule",{"_index":2564,"title":{},"body":{"modules/GraphsModule.html":{}}}],["mattabsmodule",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["mattoolbarmodule",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["mattooltipmodule",{"_index":2600,"title":{},"body":{"modules/GraphsModule.html":{}}}],["max",{"_index":84,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["max_distance_connected",{"_index":3752,"title":{},"body":{"classes/LayoutNode.html":{}}}],["maximum",{"_index":3771,"title":{},"body":{"classes/LayoutNode.html":{}}}],["maxopened",{"_index":482,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["maybe",{"_index":1827,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/NodeCache.html":{}}}],["maybelocallist",{"_index":6050,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["mayer",{"_index":6272,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["media",{"_index":2789,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{}}}],["member",{"_index":102,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["members",{"_index":513,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ProjectMembersComponent.html":{},"components/SideNavComponent.html":{},"index.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["members'},{'name",{"_index":175,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["members.component",{"_index":503,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{}}}],["members.component.html",{"_index":4920,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["members.component.scss",{"_index":4919,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["members.component.ts",{"_index":4911,"title":{},"body":{"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["members.component.ts:115",{"_index":4935,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:118",{"_index":4926,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:124",{"_index":4929,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:26",{"_index":4960,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:27",{"_index":4962,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:28",{"_index":4967,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:29",{"_index":4966,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:30",{"_index":4965,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:31",{"_index":4964,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:32",{"_index":4968,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:34",{"_index":4945,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:35",{"_index":4946,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:38",{"_index":4959,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:49",{"_index":4944,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:53",{"_index":4924,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:77",{"_index":4931,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:96",{"_index":4932,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members/project",{"_index":502,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["memberslink",{"_index":5400,"title":{},"body":{"components/SideNavComponent.html":{}}}],["memory",{"_index":1818,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["mentioned",{"_index":5879,"title":{},"body":{"index.html":{}}}],["menu",{"_index":1054,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/SideNavComponent.html":{},"components/TopToolbarComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["menu.component",{"_index":440,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Positions.html":{}}}],["menu.component.html",{"_index":1057,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["menu.component.scss",{"_index":1056,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["menu.component.ts",{"_index":1052,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["menu.component.ts:119",{"_index":1083,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:121",{"_index":1080,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:123",{"_index":1081,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:136",{"_index":1064,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:138",{"_index":1078,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:166",{"_index":1069,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:175",{"_index":1065,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:45",{"_index":1204,"title":{},"body":{"injectables/ComponentContextMenuService.html":{}}}],["menu.component.ts:59",{"_index":1206,"title":{},"body":{"injectables/ComponentContextMenuService.html":{}}}],["menu/component",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/Positions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["menuclick",{"_index":5585,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["menutitle",{"_index":5401,"title":{},"body":{"components/SideNavComponent.html":{}}}],["merchantability",{"_index":6021,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2089,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"license.html":{}}}],["message",{"_index":2528,"title":{},"body":{"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"injectables/UserNotifyService.html":{}}}],["message.startswith",{"_index":5247,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["message.substring(1",{"_index":5248,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["messages",{"_index":1033,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["met",{"_index":6254,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["metamodel",{"_index":5958,"title":{},"body":{"index.html":{}}}],["method",{"_index":620,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"interfaces/userMock.html":{}}}],["methods",{"_index":30,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"components/TopToolbarComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["mgmt",{"_index":2938,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["mico",{"_index":4336,"title":{},"body":{"interfaces/Positions.html":{}}}],["microservices",{"_index":5855,"title":{},"body":{"index.html":{}}}],["middle",{"_index":2655,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueItemComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{}}}],["millisecond",{"_index":1836,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["milliseconds",{"_index":1772,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["min",{"_index":82,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{}}}],["min_distance_connected",{"_index":3753,"title":{},"body":{"classes/LayoutNode.html":{}}}],["min_distance_edge",{"_index":3754,"title":{},"body":{"classes/LayoutNode.html":{}}}],["min_distance_not_connected",{"_index":3755,"title":{},"body":{"classes/LayoutNode.html":{}}}],["min_height",{"_index":1134,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["min_width",{"_index":1132,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["minheight",{"_index":1123,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["minimap",{"_index":3018,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["minimap.addedge(event.detail.edge",{"_index":4507,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.addnode(node",{"_index":4504,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.calculatelinkhandlesforedge",{"_index":3193,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["minimap.completerender",{"_index":4601,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.removeedge(event.detail.edge",{"_index":4508,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.removenode(node",{"_index":4506,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.setedgeclass",{"_index":3038,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["minimap.setnodeclass",{"_index":3031,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["minimap.updategraphpositions",{"_index":4604,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.updatenodeclasses",{"_index":4603,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.zoomtoboundingbox",{"_index":4602,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimum",{"_index":3773,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["minute",{"_index":5522,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["minutes",{"_index":5506,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["minwidth",{"_index":1121,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["mirrandola",{"_index":5975,"title":{},"body":{"index.html":{}}}],["mirrors",{"_index":2050,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":5836,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":5987,"title":{},"body":{"index.html":{},"license.html":{}}}],["mitteleuropäische",{"_index":5484,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["mock",{"_index":4972,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["mocked",{"_index":226,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["mockmembers",{"_index":4989,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["mockusers",{"_index":4916,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["mode",{"_index":5376,"title":{},"body":{"components/SettingsDialogComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["modeicon",{"_index":5377,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["modelling",{"_index":5959,"title":{},"body":{"index.html":{}}}],["models",{"_index":5881,"title":{},"body":{"index.html":{}}}],["modern",{"_index":5844,"title":{},"body":{"index.html":{}}}],["modify",{"_index":6000,"title":{},"body":{"license.html":{}}}],["module",{"_index":323,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}},"body":{"modules/GraphsModule.html":{},"additional-documentation/managing-gropius.html":{}}}],["modules",{"_index":325,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["moemode",{"_index":6270,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["monaco",{"_index":445,"title":{},"body":{"modules/AppModule.html":{},"components/MarkdownEditorComponent.html":{},"dependencies.html":{}}}],["monacoeditormodule",{"_index":444,"title":{},"body":{"modules/AppModule.html":{}}}],["monacoeditormodule.forroot",{"_index":486,"title":{},"body":{"modules/AppModule.html":{}}}],["month",{"_index":5516,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["months",{"_index":5501,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["more",{"_index":941,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{},"index.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["more:can",{"_index":5914,"title":{},"body":{"index.html":{}}}],["more_vert",{"_index":5360,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["moritz",{"_index":6268,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["mouseevent",{"_index":1167,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/RegisterComponent.html":{}}}],["move",{"_index":3562,"title":{},"body":{"components/IssueListComponent.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["movechildrenalonggoup",{"_index":3250,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["moved",{"_index":4451,"title":{},"body":{"interfaces/Positions.html":{}}}],["movement",{"_index":3783,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["moves",{"_index":2028,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["movex",{"_index":4561,"title":{},"body":{"interfaces/Positions.html":{}}}],["movey",{"_index":4564,"title":{},"body":{"interfaces/Positions.html":{}}}],["moz",{"_index":4902,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["muccini",{"_index":5936,"title":{},"body":{"index.html":{}}}],["much",{"_index":5859,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":2203,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{}}}],["multisourcelist",{"_index":4004,"title":{"classes/MultiSourceList.html":{}},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["multisourcelist(this.data.listall",{"_index":4130,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["multisourcelist.fromsinglelist(this.data.listall",{"_index":4133,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["mutate",{"_index":1466,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"injectables/DataService.html":{},"components/IssueFilterComponent.html":{}}}],["mutation",{"_index":1316,"title":{},"body":{"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"injectables/DataService.html":{},"components/RegisterComponent.html":{}}}],["mutationinputdata",{"_index":4298,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["mutations",{"_index":2121,"title":{},"body":{"injectables/DataService.html":{},"injectables/IssueStoreService.html":{},"coverage.html":{},"additional-documentation/managing-gropius.html":{}}}],["mutations(queries",{"_index":2138,"title":{},"body":{"injectables/DataService.html":{}}}],["mutually",{"_index":560,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["n",{"_index":4054,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/TimeFormatter.html":{},"index.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["namedoptions",{"_index":2482,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["nameformatvalidator",{"_index":729,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["names",{"_index":2180,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"components/RemoveDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["namevalidator",{"_index":730,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/CreateProjectDialogComponent.html":{}}}],["nan",{"_index":3407,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/SetEditorComponent.html":{}}}],["narrow",{"_index":2792,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueLocationComponent.html":{}}}],["nativeelement",{"_index":4348,"title":{},"body":{"interfaces/Positions.html":{}}}],["nav",{"_index":4905,"title":{},"body":{"components/ProjectListComponent.html":{},"components/SideNavComponent.html":{}}}],["nav'},{'name",{"_index":192,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["nav.component",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["nav.component.html",{"_index":5396,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.scss",{"_index":5395,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts",{"_index":5391,"title":{},"body":{"components/SideNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:17",{"_index":5405,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:18",{"_index":5409,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:19",{"_index":5411,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:20",{"_index":5406,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:21",{"_index":5407,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:22",{"_index":5404,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:24",{"_index":5410,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav/side",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"components/SideNavComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":5917,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["navigates",{"_index":3455,"title":{},"body":{"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{}}}],["navigating",{"_index":614,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["navigation",{"_index":2257,"title":{},"body":{"components/FrameComponent.html":{},"components/SideNavComponent.html":{}}}],["navigationend",{"_index":529,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["nbsp",{"_index":2780,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["nbsp;&nbsp;&nbsp;&nbsp",{"_index":5246,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["nbsp;&sdot",{"_index":2783,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["nd",{"_index":3908,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nd.id",{"_index":3911,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nearest",{"_index":3282,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["necessary",{"_index":1862,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/MarkdownEditorComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"classes/TimeFormatter.html":{},"miscellaneous/typealiases.html":{}}}],["need",{"_index":844,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueGraphControlsComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["needed",{"_index":1792,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"classes/TimeFormatter.html":{}}}],["network",{"_index":2511,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["networkerror",{"_index":2526,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["networkerror.name}\\n${networkerror.message}\\n${networkerror.stack",{"_index":2534,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["networkerror.status",{"_index":2535,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["networkerrortoast",{"_index":2513,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["never",{"_index":1880,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["new",{"_index":87,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"coverage.html":{},"index.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["newdata",{"_index":4412,"title":{},"body":{"interfaces/Positions.html":{}}}],["newest",{"_index":1907,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueGraphApiService.html":{},"classes/NodeCache.html":{}}}],["newly",{"_index":3072,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["newposition",{"_index":3278,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["newposition.x",{"_index":3284,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["newposition.y",{"_index":3285,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["newsourceset",{"_index":4065,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["newsourceset.add(encodelistid(source",{"_index":4069,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["newsourceset.add(encodelistid(this.spec.listfromnode(nodeid",{"_index":4067,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["newsourceset.has(source",{"_index":4078,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["newvalue",{"_index":5312,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["next",{"_index":794,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"classes/NodeCache.html":{},"components/RemoveDialogComponent.html":{}}}],["nextpage",{"_index":2035,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ng",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/FilterSelection.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"components/NodeDetailsComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"dependencies.html":{},"additional-documentation/managing-gropius.html":{}}}],["ngafterviewinit",{"_index":873,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["ngmodel",{"_index":3092,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["ngmodule",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}}}],["ngonchanges(changes",{"_index":5310,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ngondestroy",{"_index":803,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["ngoninit",{"_index":60,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"interfaces/TextFragment.html":{},"interfaces/userMock.html":{}}}],["ngoptionhighlightmodule",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["ngselectmodule",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["ngx",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"components/MarkdownEditorComponent.html":{},"injectables/UserNotifyService.html":{},"dependencies.html":{}}}],["ngzorroantdmodule",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["nice",{"_index":6191,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["noce",{"_index":3029,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["node",{"_index":165,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["node.component",{"_index":2596,"title":{},"body":{"modules/GraphsModule.html":{}}}],["node.component.ts",{"_index":758,"title":{},"body":{"components/CacheNodeComponent.html":{},"coverage.html":{}}}],["node.component.ts:19",{"_index":777,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.component.ts:21",{"_index":769,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.component.ts:22",{"_index":782,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.component.ts:24",{"_index":784,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.component.ts:25",{"_index":768,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.dataaspromise().then(data",{"_index":1732,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["node.id",{"_index":972,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["node.id.tostring",{"_index":4545,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.id}__issue",{"_index":1273,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["node.invalidate",{"_index":1496,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["node.issuecount",{"_index":4575,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.issuegroupcontainer",{"_index":4695,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.issuegroupnodeids.size",{"_index":4778,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.load",{"_index":1497,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["node.position",{"_index":4495,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.type",{"_index":3027,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["node.x",{"_index":4498,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.y",{"_index":4499,"title":{},"body":{"interfaces/Positions.html":{}}}],["node?.id",{"_index":2077,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["node]'},{'name",{"_index":107,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["nodecache",{"_index":1976,"title":{"classes/NodeCache.html":{}},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nodecache(queries",{"_index":2136,"title":{},"body":{"injectables/DataService.html":{}}}],["nodeclasssetter",{"_index":3025,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["nodeclickcontextmenuhastype(node",{"_index":4538,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodeclickissuefolder(node",{"_index":4569,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodeclickmanyissues(rootnode",{"_index":4591,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodeclickoneissue(rootid",{"_index":4579,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodedeleted",{"_index":1156,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsComponent.html":{}}}],["nodedetails",{"_index":1146,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["nodedetailscomponent",{"_index":164,"title":{"components/NodeDetailsComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nodedetailspagecomponent",{"_index":167,"title":{"components/NodeDetailsPageComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nodedetailsready",{"_index":1058,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["nodedetailstype",{"_index":1097,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"miscellaneous/enumerations.html":{}}}],["nodedetailstype.component",{"_index":4234,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{}}}],["nodedetailstype.interface",{"_index":4245,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{}}}],["nodeid",{"_index":776,"title":{"interfaces/NodeId.html":{}},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["nodeid[]).length",{"_index":5314,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["nodeid`s",{"_index":3907,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodeidenc",{"_index":1759,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{}}}],["nodeids",{"_index":6234,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["nodelist",{"_index":4803,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodequeries",{"_index":5719,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["nodequeries[type",{"_index":6154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodequeries[type](i",{"_index":6156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodequery",{"_index":4227,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["nodequeryinput",{"_index":6051,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nodes",{"_index":1242,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["nodes.get(edge.source).connectto(nodes.get(edge.target",{"_index":4801,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.get(edge.target).connectto(nodes.get(edge.source",{"_index":4802,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.get(node.id",{"_index":4806,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.has(edge.source",{"_index":4799,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.has(edge.target",{"_index":4800,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.length",{"_index":3832,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["nodes.set(node.id",{"_index":4797,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.ts",{"_index":1209,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["nodes[0",{"_index":3840,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["nodesub",{"_index":763,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["nodetype",{"_index":836,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{}}}],["nodetype.component",{"_index":1264,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["nodetype.componentinterface",{"_index":3511,"title":{},"body":{"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["nodetype.interface",{"_index":1269,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["nodetype.interfaceconsumer",{"_index":1295,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["nodetype.issue",{"_index":1620,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/variables.html":{}}}],["nodetype.issuecomment",{"_index":971,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["nodetype.issuegroupcontainer",{"_index":1274,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["nodetype.label",{"_index":6082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodetype.project",{"_index":2869,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"miscellaneous/variables.html":{}}}],["nodetype.root",{"_index":3912,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/variables.html":{}}}],["nodetype.user",{"_index":3914,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/variables.html":{}}}],["nodetype[nd.type",{"_index":3910,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodetype[parts[0",{"_index":3898,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodetype[typename",{"_index":3889,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodetypefromtypename",{"_index":1760,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["nodetypefromtypename(item.__typename",{"_index":4146,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["nodetypefromtypename(node.__typename",{"_index":2078,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["nodetypefromtypename(typename",{"_index":3888,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodeupdatedcallbackfn",{"_index":1098,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["nodex",{"_index":4780,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodey",{"_index":4782,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodisplay",{"_index":5597,"title":{},"body":{"components/UserItemComponent.html":{}}}],["non",{"_index":1631,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["none",{"_index":2939,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/TimelineItemComponent.html":{},"miscellaneous/typealiases.html":{}}}],["noninfringement",{"_index":6024,"title":{},"body":{"license.html":{}}}],["normal",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/IssueItemComponent.html":{}}}],["normalize",{"_index":5651,"title":{},"body":{"classes/Vector.html":{}}}],["normalized",{"_index":5679,"title":{},"body":{"classes/Vector.html":{}}}],["north",{"_index":4318,"title":{},"body":{"interfaces/Positions.html":{}}}],["not(.has",{"_index":5602,"title":{},"body":{"components/UserItemComponent.html":{}}}],["notation",{"_index":4668,"title":{},"body":{"interfaces/Positions.html":{}}}],["note",{"_index":70,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"classes/Vector.html":{}}}],["nothing",{"_index":4859,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["nothing(e",{"_index":4866,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["notice",{"_index":6011,"title":{},"body":{"license.html":{}}}],["notification",{"_index":3141,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/UserNotifyService.html":{}}}],["notify",{"_index":986,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"injectables/UserNotifyService.html":{}}}],["notify.notifyerror('the",{"_index":5421,"title":{},"body":{"components/SideNavComponent.html":{}}}],["notify.service",{"_index":1012,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{}}}],["notify.service.ts",{"_index":5604,"title":{},"body":{"injectables/UserNotifyService.html":{},"coverage.html":{}}}],["notify.service.ts:23",{"_index":5608,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notify.service.ts:32",{"_index":5610,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notify.service.ts:44",{"_index":5615,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notify/user",{"_index":1011,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/UserNotifyService.html":{},"coverage.html":{}}}],["notifyerror",{"_index":5605,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notifyerror(message",{"_index":5609,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notifyinfo",{"_index":5606,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notifyinfo(message",{"_index":5614,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notifyservice",{"_index":4121,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["now",{"_index":755,"title":{},"body":{"classes/CCIMSValidators.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"classes/TimeFormatter.html":{}}}],["now.getfullyear",{"_index":5504,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["now.getmonth",{"_index":5502,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["nowrap",{"_index":5254,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["npm",{"_index":5909,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["npx",{"_index":6204,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["nth",{"_index":5368,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["null",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"injectables/StateService.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["null)).subscribe(this.isprojectset",{"_index":2297,"title":{},"body":{"components/FrameComponent.html":{}}}],["nullable",{"_index":2009,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{}}}],["number",{"_index":1067,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueLabelComponent.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/TimeFormatter.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["nz",{"_index":4897,"title":{},"body":{"components/ProjectListComponent.html":{},"components/RegisterComponent.html":{}}}],["nz_i18n",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["nz_icons",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["obervable",{"_index":3112,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["object",{"_index":1787,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.entries(ccimsicons",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["object.keys(antdesignicons).map((key",{"_index":473,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["object.keys(issuecategory",{"_index":3301,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["object.keys(issuecategory).foreach((key",{"_index":4705,"title":{},"body":{"interfaces/Positions.html":{}}}],["object.keys(predicates).filter((id",{"_index":2901,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["object.keys(predicates).length",{"_index":2860,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["object.keys(this.savedpositions.nodes).length",{"_index":4616,"title":{},"body":{"interfaces/Positions.html":{}}}],["object.keys(this.validateform.controls",{"_index":5233,"title":{},"body":{"components/RegisterComponent.html":{}}}],["object.keys(this.validateform.controls).foreach((controlkey",{"_index":3955,"title":{},"body":{"components/LoginComponent.html":{}}}],["object.values(issuecategory",{"_index":2991,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["objects",{"_index":1312,"title":{},"body":{"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/managing-gropius.html":{}}}],["objkey",{"_index":4087,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["observable",{"_index":543,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"interfaces/userMock.html":{}}}],["observable#subscribe",{"_index":1799,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["observable((observer",{"_index":5223,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observables",{"_index":3215,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["observed",{"_index":3498,"title":{},"body":{"components/IssueListComponent.html":{}}}],["observer",{"_index":5214,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observer.complete",{"_index":5230,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observer.next(null",{"_index":5229,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observer.next({error",{"_index":5227,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observers",{"_index":2117,"title":{},"body":{"injectables/DataService.html":{}}}],["obtain",{"_index":1694,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["obtaining",{"_index":5995,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":5611,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["occurs",{"_index":5867,"title":{},"body":{"index.html":{}}}],["oct",{"_index":5480,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["offer",{"_index":2383,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["offered",{"_index":2613,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["offeredby",{"_index":2404,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["offeredbyid",{"_index":1265,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["offering",{"_index":2377,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["offeringcomponentid",{"_index":2632,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["offers",{"_index":4915,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["offset",{"_index":1073,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["offsetx",{"_index":1116,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["offsety",{"_index":1117,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["old",{"_index":4832,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["onaddclick",{"_index":3445,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["oncancelclick",{"_index":4189,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["once",{"_index":2754,"title":{},"body":{"components/IssueDetailComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["onchanges",{"_index":5266,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["onclick",{"_index":5114,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["onconfirmclick",{"_index":1457,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["onconfirmclick(name",{"_index":1462,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["oncreate",{"_index":1571,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["oncreateedge",{"_index":4430,"title":{},"body":{"interfaces/Positions.html":{}}}],["ondeleteclick",{"_index":2186,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"interfaces/userMock.html":{}}}],["ondestroy",{"_index":761,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["ondialogapplychangeset",{"_index":5318,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ondialogcreateitem",{"_index":5320,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ondialogdeleteitem",{"_index":5324,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ondialogedititem",{"_index":5322,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ondraggededgetargetchanged",{"_index":4452,"title":{},"body":{"interfaces/Positions.html":{}}}],["one",{"_index":811,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"injectables/ProjectStoreService.html":{},"interfaces/QueryListParams.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["onedgeadd",{"_index":4455,"title":{},"body":{"interfaces/Positions.html":{}}}],["onedgedrop",{"_index":4465,"title":{},"body":{"interfaces/Positions.html":{}}}],["onedgeremove",{"_index":4479,"title":{},"body":{"interfaces/Positions.html":{}}}],["oneditclick",{"_index":4190,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["oneditfinished",{"_index":5440,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["onerror",{"_index":2492,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["onerror(({graphqlerrors",{"_index":2525,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["ones",{"_index":6174,"title":{},"body":{"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["oninit",{"_index":15,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"interfaces/TextFragment.html":{},"interfaces/userMock.html":{}}}],["onlabelcancelclick",{"_index":1458,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["onminimaprender(minimap",{"_index":4596,"title":{},"body":{"interfaces/Positions.html":{}}}],["onmousemove(event",{"_index":1166,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["onmouseup",{"_index":1164,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["onnoclick",{"_index":236,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["onnoclick(showconfirmdialog",{"_index":1576,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["onnodeclick",{"_index":4522,"title":{},"body":{"interfaces/Positions.html":{}}}],["onnodeupdate",{"_index":4307,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["onnodeupdate(deleted",{"_index":4309,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["onokclick",{"_index":237,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["onokclick(name",{"_index":1422,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["onpagechange",{"_index":4923,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["onpagechange(event",{"_index":4933,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["onsaveclick",{"_index":4191,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["onto",{"_index":3214,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["opacity",{"_index":2711,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/UserItemComponent.html":{}}}],["open",{"_index":1102,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["open(parent",{"_index":1205,"title":{},"body":{"injectables/ComponentContextMenuService.html":{}}}],["open(removedialogcomponent",{"_index":1602,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["openaccesstokensettings",{"_index":5378,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["opencreatecomponentdialog",{"_index":4818,"title":{},"body":{"interfaces/Positions.html":{}}}],["opencreateprojectdialog",{"_index":4860,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["opened",{"_index":2781,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["opening",{"_index":4469,"title":{},"body":{"interfaces/Positions.html":{}}}],["openprofilesettings",{"_index":5379,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["opens",{"_index":1592,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["opensettingsdialog",{"_index":5583,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["operation",{"_index":1867,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["operations",{"_index":3609,"title":{},"body":{"injectables/IssueStoreService.html":{},"classes/MultiSourceList.html":{},"injectables/ProjectStoreService.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{}}}],["optimized",{"_index":4730,"title":{},"body":{"interfaces/Positions.html":{}}}],["option",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"dependencies.html":{},"additional-documentation/using-gropius.html":{}}}],["option2",{"_index":52,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["optional",{"_index":43,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{}}}],["optionally",{"_index":5612,"title":{},"body":{"injectables/UserNotifyService.html":{},"additional-documentation/using-gropius.html":{}}}],["options",{"_index":2875,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/MarkdownEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":1244,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{}}}],["ordered",{"_index":1946,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["original",{"_index":4434,"title":{},"body":{"interfaces/Positions.html":{}}}],["originally",{"_index":3944,"title":{},"body":{"components/LoginComponent.html":{}}}],["originates",{"_index":4438,"title":{},"body":{"interfaces/Positions.html":{}}}],["originating",{"_index":4715,"title":{},"body":{"interfaces/Positions.html":{}}}],["originx",{"_index":1111,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["originy",{"_index":1113,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["othernode",{"_index":3810,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["othernode.id",{"_index":3813,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["othernode.padding",{"_index":3823,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["othernode.position.subtract(this.position",{"_index":3818,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["othernodesvisited",{"_index":3809,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["others",{"_index":6277,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["otherwise",{"_index":519,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"index.html":{},"license.html":{}}}],["out",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CCIMSValidators.html":{},"interfaces/FilterSelection.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueIconComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"license.html":{},"overview.html":{},"additional-documentation/managing-gropius.html":{}}}],["outlet",{"_index":2279,"title":{},"body":{"components/FrameComponent.html":{}}}],["outlet.activatedroutedata",{"_index":2298,"title":{},"body":{"components/FrameComponent.html":{}}}],["outlet.activatedroutedata.animation",{"_index":2299,"title":{},"body":{"components/FrameComponent.html":{}}}],["output",{"_index":2865,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["outputs",{"_index":2827,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{},"components/TopToolbarComponent.html":{}}}],["outside",{"_index":5667,"title":{},"body":{"classes/Vector.html":{}}}],["over",{"_index":3812,"title":{},"body":{"classes/LayoutNode.html":{},"components/MarkdownEditorComponent.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{},"index.html":{}}}],["overflow",{"_index":1201,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["overlay",{"_index":1089,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/FrameComponent.html":{},"interfaces/Positions.html":{}}}],["overlayref",{"_index":1090,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["overlayx",{"_index":1114,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["overlayy",{"_index":1115,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["override",{"_index":5275,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["overview",{"_index":4887,"title":{"overview.html":{}},"body":{"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SideNavComponent.html":{},"overview.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["overview'},{'name",{"_index":177,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["overview.component",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["overview.component.html",{"_index":5007,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.scss",{"_index":5006,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts",{"_index":5004,"title":{},"body":{"components/ProjectOverviewComponent.html":{},"coverage.html":{}}}],["overview.component.ts:23",{"_index":5014,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:25",{"_index":5013,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:26",{"_index":5012,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:27",{"_index":5009,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:51",{"_index":5011,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:59",{"_index":5010,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview/project",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProjectOverviewComponent.html":{},"coverage.html":{}}}],["overviewlink",{"_index":5402,"title":{},"body":{"components/SideNavComponent.html":{}}}],["overwriting",{"_index":2083,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["owner",{"_index":5005,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["p",{"_index":1755,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/TimelineItemComponent.html":{},"index.html":{}}}],["package",{"_index":5800,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":3822,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["padding",{"_index":1175,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{}}}],["padding.these",{"_index":4750,"title":{},"body":{"interfaces/Positions.html":{}}}],["padding_component",{"_index":3756,"title":{},"body":{"classes/LayoutNode.html":{}}}],["padding_interface",{"_index":3757,"title":{},"body":{"classes/LayoutNode.html":{}}}],["paddingx",{"_index":4759,"title":{},"body":{"interfaces/Positions.html":{}}}],["paddingy",{"_index":4763,"title":{},"body":{"interfaces/Positions.html":{}}}],["page",{"_index":640,"title":{"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{},"additional-documentation/contributors.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"modules/GraphQLModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"index.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["page.component",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":4306,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.scss",{"_index":4305,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.ts",{"_index":4304,"title":{},"body":{"components/NodeDetailsPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:10",{"_index":4312,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.ts:11",{"_index":4311,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.ts:12",{"_index":4308,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.ts:31",{"_index":4310,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page/node",{"_index":455,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NodeDetailsPageComponent.html":{},"coverage.html":{}}}],["pageevent",{"_index":4934,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["pagefill",{"_index":4852,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["pageinfo",{"_index":1766,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["pages",{"_index":4993,"title":{},"body":{"components/ProjectMembersComponent.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["pagesizes",{"_index":1671,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["pagesizes]=\"[10",{"_index":2700,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["paginated",{"_index":4913,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["pagination",{"_index":2008,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["pagination/sorting/filtering",{"_index":3533,"title":{},"body":{"components/IssueListComponent.html":{}}}],["paginator",{"_index":1668,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["paginator'},{'name",{"_index":124,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["paginator.component",{"_index":2580,"title":{},"body":{"modules/GraphsModule.html":{}}}],["paginator.component.html",{"_index":1670,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["paginator.component.scss",{"_index":1669,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["paginator.component.ts",{"_index":1664,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"coverage.html":{}}}],["paginator.component.ts:14",{"_index":1672,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["paginator.component.ts:16",{"_index":1674,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["paginator/cursor",{"_index":1663,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"modules/GraphsModule.html":{},"coverage.html":{}}}],["paginatormodule",{"_index":4922,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["pairs",{"_index":3022,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["panel",{"_index":5559,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["paper103.pdf",{"_index":5983,"title":{},"body":{"index.html":{}}}],["param",{"_index":571,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"classes/Vector.html":{}}}],["parameter",{"_index":1825,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["parameterize",{"_index":6241,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["parameters",{"_index":39,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{}}}],["params",{"_index":1717,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["params(p",{"_index":1850,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["params.filter",{"_index":3544,"title":{},"body":{"components/IssueListComponent.html":{}}}],["parent",{"_index":1076,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/MarkdownEditorComponent.html":{},"interfaces/NodeId.html":{},"additional-documentation/managing-gropius.html":{}}}],["parent}__${issuecategory[key",{"_index":3303,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["parent}__bug",{"_index":3309,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["parent}__feature",{"_index":3310,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["parent}__undecided",{"_index":3308,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["parsed",{"_index":4404,"title":{},"body":{"interfaces/Positions.html":{},"classes/TimeFormatter.html":{}}}],["parsing",{"_index":550,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["part",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/SetEditorComponent.html":{},"index.html":{}}}],["part).join",{"_index":3348,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["partial",{"_index":481,"title":{},"body":{"modules/AppModule.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["participants",{"_index":2888,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["particular",{"_index":6023,"title":{},"body":{"license.html":{}}}],["parts",{"_index":3896,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["parts[1",{"_index":3899,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["pass",{"_index":3116,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/SetEditorComponent.html":{}}}],["passed",{"_index":1751,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/TopToolbarComponent.html":{}}}],["passes",{"_index":2261,"title":{},"body":{"components/FrameComponent.html":{}}}],["password",{"_index":666,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"additional-documentation/using-gropius.html":{}}}],["passwords",{"_index":5243,"title":{},"body":{"components/RegisterComponent.html":{}}}],["password}).pipe",{"_index":700,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["pasttime",{"_index":5499,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pasttime.getfullyear",{"_index":5505,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pasttime.getmonth",{"_index":5503,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["path",{"_index":504,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":509,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":753,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["pcount",{"_index":1964,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pcursor",{"_index":1963,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pencheva",{"_index":6266,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["pendingcreate",{"_index":4857,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["per",{"_index":1678,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["perceived",{"_index":3411,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["perform",{"_index":4890,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["performed",{"_index":814,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["permission",{"_index":5989,"title":{},"body":{"license.html":{}}}],["permit",{"_index":6007,"title":{},"body":{"license.html":{}}}],["perpendicularclockwise",{"_index":5652,"title":{},"body":{"classes/Vector.html":{}}}],["perpendicularcounterclockwise",{"_index":5653,"title":{},"body":{"classes/Vector.html":{}}}],["persisted",{"_index":6255,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["persistent",{"_index":6184,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["person",{"_index":5994,"title":{},"body":{"license.html":{}}}],["personal",{"_index":66,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["persons",{"_index":6008,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":6214,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["pertaining",{"_index":598,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["pfeffer",{"_index":6269,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["pfilter",{"_index":1965,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pforward",{"_index":1966,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["phone",{"_index":4525,"title":{},"body":{"interfaces/Positions.html":{}}}],["pick",{"_index":2401,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/LabelStoreService.html":{},"components/ProjectListComponent.html":{},"miscellaneous/typealiases.html":{}}}],["picker",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"components/IssueFilterComponent.html":{},"dependencies.html":{}}}],["picture",{"_index":5893,"title":{},"body":{"index.html":{}}}],["pictures",{"_index":6164,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["piece",{"_index":1784,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pipe",{"_index":578,"title":{},"body":{"interfaces/AppState.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/StateService.html":{}}}],["pipe(first",{"_index":3962,"title":{},"body":{"components/LoginComponent.html":{}}}],["pipe(map((result",{"_index":2998,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["pipe(takeuntil(this.destroy",{"_index":3121,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["place",{"_index":3836,"title":{},"body":{"classes/LayoutNode.html":{},"components/RemoveDialogComponent.html":{},"classes/Vector.html":{},"index.html":{}}}],["placeholder",{"_index":4184,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/TextDisplayComponent.html":{}}}],["places",{"_index":3293,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["please",{"_index":5242,"title":{},"body":{"components/RegisterComponent.html":{}}}],["pluralize",{"_index":5474,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pluralize(n",{"_index":5493,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pluralized",{"_index":5496,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pnodes",{"_index":1975,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["point",{"_index":3267,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueLabelComponent.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["point.x",{"_index":4657,"title":{},"body":{"interfaces/Positions.html":{}}}],["point.y",{"_index":4660,"title":{},"body":{"interfaces/Positions.html":{}}}],["pointer",{"_index":1972,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"components/SetEditorComponent.html":{}}}],["pointing",{"_index":3795,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["points",{"_index":5394,"title":{},"body":{"components/SideNavComponent.html":{},"classes/Vector.html":{}}}],["pop",{"_index":6170,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["popup",{"_index":6168,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["portalinjector",{"_index":1093,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["portalinjector(this.injector",{"_index":1128,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["portalmodule",{"_index":435,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":6014,"title":{},"body":{"license.html":{}}}],["pos",{"_index":1110,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["position",{"_index":1071,"title":{"interfaces/Position.html":{}},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["position.withpositions([pos",{"_index":1118,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["position.x",{"_index":4476,"title":{},"body":{"interfaces/Positions.html":{}}}],["position.y",{"_index":4477,"title":{},"body":{"interfaces/Positions.html":{}}}],["positionclass",{"_index":2515,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["positioning",{"_index":4496,"title":{},"body":{"interfaces/Positions.html":{}}}],["positions",{"_index":4315,"title":{"interfaces/Positions.html":{}},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["positionstrategy",{"_index":1125,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["positionx",{"_index":3760,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["positiony",{"_index":3761,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["possible",{"_index":1857,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"miscellaneous/variables.html":{}}}],["possibly",{"_index":2873,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["practice",{"_index":2054,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pre",{"_index":3306,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/MarkdownEditorComponent.html":{}}}],["pred",{"_index":2935,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicate",{"_index":2836,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["predicatecount",{"_index":2815,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicates",{"_index":2816,"title":{},"body":{"components/IssueFilterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["predicates[id].ifempty",{"_index":2926,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicates[id].label",{"_index":2925,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicates[type].label",{"_index":2923,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicatevalues",{"_index":2817,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["prefer",{"_index":6231,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["prepare",{"_index":895,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["prepareddata",{"_index":1739,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{}}}],["prepareissuearray",{"_index":3446,"title":{},"body":{"components/IssueListComponent.html":{}}}],["prepareroute",{"_index":2271,"title":{},"body":{"components/FrameComponent.html":{}}}],["prepareroute(outlet",{"_index":2276,"title":{},"body":{"components/FrameComponent.html":{}}}],["prepares",{"_index":894,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueListComponent.html":{}}}],["preparetimelineitems(items",{"_index":896,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["presence",{"_index":2851,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["present",{"_index":1916,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["preservewhitespaces",{"_index":3998,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["pressed",{"_index":4527,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["presumes",{"_index":4701,"title":{},"body":{"interfaces/Positions.html":{}}}],["prettier",{"_index":6196,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["prettierignore",{"_index":6206,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["prevent",{"_index":3837,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["prevents",{"_index":4888,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["preview",{"_index":3995,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["preview'},{'name",{"_index":163,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["preview.component",{"_index":451,"title":{},"body":{"modules/AppModule.html":{}}}],["preview.component.html",{"_index":4000,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["preview.component.scss",{"_index":3999,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["preview.component.ts",{"_index":3997,"title":{},"body":{"components/MarkdownPreviewComponent.html":{},"coverage.html":{}}}],["preview.component.ts:16",{"_index":4002,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["preview/markdown",{"_index":450,"title":{},"body":{"modules/AppModule.html":{},"components/MarkdownPreviewComponent.html":{},"coverage.html":{}}}],["previous",{"_index":2032,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["previousboundingbox",{"_index":4745,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingbox.height",{"_index":4754,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingbox.width",{"_index":4752,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingbox.x",{"_index":4765,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingbox.y",{"_index":4766,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingboxasstring",{"_index":4734,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousitems",{"_index":2899,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["previousitems.includes(id",{"_index":2902,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["previouslyhadpagecontents",{"_index":1971,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["prevpage",{"_index":2033,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["primary",{"_index":602,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{},"additional-documentation/managing-gropius.html":{}}}],["primary.segments",{"_index":605,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primary.segments.length",{"_index":608,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primary_outlet",{"_index":530,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primarysegments",{"_index":604,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primarysegments[0].path",{"_index":607,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primer/css",{"_index":5817,"title":{},"body":{"dependencies.html":{}}}],["prior",{"_index":1989,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pristine",{"_index":5197,"title":{},"body":{"components/RegisterComponent.html":{}}}],["private",{"_index":59,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueListComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{}}}],["probably",{"_index":2134,"title":{},"body":{"injectables/DataService.html":{}}}],["problem",{"_index":5877,"title":{},"body":{"index.html":{}}}],["problems",{"_index":5882,"title":{},"body":{"index.html":{}}}],["proceedings",{"_index":5960,"title":{},"body":{"index.html":{}}}],["process",{"_index":951,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueDetailComponent.html":{},"index.html":{}}}],["processing",{"_index":4976,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["product",{"_index":5672,"title":{},"body":{"classes/Vector.html":{}}}],["production",{"_index":6062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":169,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["profilesettingsdialogcomponent",{"_index":168,"title":{"components/ProfileSettingsDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":101,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["project's",{"_index":4339,"title":{},"body":{"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["project.description",{"_index":5017,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["project.name",{"_index":4894,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["project.node.users.nodes.foreach(u",{"_index":4973,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["project_${this.projectid",{"_index":4379,"title":{},"body":{"interfaces/Positions.html":{}}}],["projectfilter",{"_index":5049,"title":{},"body":{"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{}}}],["projectheadercomponent",{"_index":170,"title":{"components/ProjectHeaderComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectid",{"_index":868,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["projectissuelistcomponent",{"_index":172,"title":{"components/ProjectIssueListComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectlistcomponent",{"_index":173,"title":{"components/ProjectListComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectmemberscomponent",{"_index":174,"title":{"components/ProjectMembersComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["projectname",{"_index":4839,"title":{},"body":{"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{}}}],["projectnameedited",{"_index":4826,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["projectnameedited(saved",{"_index":4828,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["projectoverviewcomponent",{"_index":176,"title":{"components/ProjectOverviewComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projects",{"_index":508,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/QueriesService.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/using-gropius.html":{}}}],["projects.service",{"_index":5083,"title":{},"body":{"injectables/QueriesService.html":{}}}],["projects/:id",{"_index":510,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["projectsservice",{"_index":5057,"title":{"injectables/ProjectsService.html":{}},"body":{"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"coverage.html":{}}}],["projectstoragekey",{"_index":4359,"title":{},"body":{"interfaces/Positions.html":{}}}],["projectstore",{"_index":4864,"title":{},"body":{"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["projectstoreservice",{"_index":538,"title":{"injectables/ProjectStoreService.html":{}},"body":{"interfaces/AppState.html":{},"components/CreateProjectDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/StateService.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["prolong",{"_index":1721,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["promise",{"_index":1727,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":1892,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{}}}],["promise.all(promises",{"_index":1635,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["promise.reject(new",{"_index":6144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise.resolve",{"_index":5643,"title":{},"body":{"injectables/UsersService.html":{}}}],["promise.resolve(this.current",{"_index":1891,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["promises",{"_index":1622,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["promises.push",{"_index":1624,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["promisifyapollofetch",{"_index":1395,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["promisifyapollofetch(f",{"_index":5174,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["promisifyapollofetch(this.qcurrentuser.fetch",{"_index":5646,"title":{},"body":{"injectables/UsersService.html":{}}}],["promisifyapollofetch(this.qgetcomponent.fetch({id",{"_index":1399,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["promisifyapollofetch(this.qgetinterface.fetch({id",{"_index":1400,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["promisifyapollofetch(this.qgetproject.fetch({id",{"_index":5072,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["promisifyapollofetch(this.qlistprojectcomponents.fetch({project",{"_index":1397,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["promisifyapollofetch(this.qlistprojectinterfaces.fetch({project",{"_index":1398,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["promisifyapollofetch(this.qlistprojects.fetch({...list",{"_index":5071,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["promisifyapollofetch(this.qsearchusers.fetch({query})).then((data",{"_index":5644,"title":{},"body":{"injectables/UsersService.html":{}}}],["prop",{"_index":4334,"title":{},"body":{"interfaces/Positions.html":{}}}],["propagate",{"_index":5871,"title":{},"body":{"index.html":{}}}],["propagated",{"_index":5895,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["propagates",{"_index":2116,"title":{},"body":{"injectables/DataService.html":{}}}],["propagation",{"_index":5890,"title":{},"body":{"index.html":{}}}],["proper",{"_index":3499,"title":{},"body":{"components/IssueListComponent.html":{}}}],["properly",{"_index":4675,"title":{},"body":{"interfaces/Positions.html":{}}}],["properties",{"_index":26,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["property",{"_index":1795,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["protected",{"_index":1829,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["provide",{"_index":489,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["provided",{"_index":230,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"interfaces/User.html":{},"license.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["providedefaultapollo",{"_index":2504,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":551,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"injectables/UsersService.html":{}}}],["providepublicapollo",{"_index":2503,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["providepublicapollo(httplink",{"_index":2553,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["provider",{"_index":1424,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["providers",{"_index":488,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}}}],["provides",{"_index":224,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentStoreService.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueStoreService.html":{},"classes/NodeCache.html":{},"injectables/ProjectStoreService.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"injectables/UserNotifyService.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["providing",{"_index":4468,"title":{},"body":{"interfaces/Positions.html":{}}}],["prvider",{"_index":3468,"title":{},"body":{"components/IssueListComponent.html":{}}}],["ps",{"_index":555,"title":{},"body":{"interfaces/AppState.html":{},"components/CreateProjectDialogComponent.html":{},"injectables/StateService.html":{}}}],["ps.getbasicproject(this.router.parseurl(event.url).root?.children[primary_outlet].segments[1].path",{"_index":584,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["psetparamsnoupdate",{"_index":1844,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ptotalcount",{"_index":1968,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["public",{"_index":27,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["publicclient",{"_index":2555,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["publicclientname",{"_index":5181,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["publish",{"_index":6001,"title":{},"body":{"license.html":{}}}],["purely",{"_index":6183,"title":{},"body":{"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["purpose",{"_index":2498,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/Positions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["put",{"_index":2790,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/SetEditorComponent.html":{}}}],["px",{"_index":1149,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["q",{"_index":6148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["qcurrentuser",{"_index":5627,"title":{},"body":{"injectables/UsersService.html":{}}}],["qgetcomponent",{"_index":1379,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["qgetinterface",{"_index":1380,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["qgetproject",{"_index":5063,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["qlistprojectcomponents",{"_index":1383,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["qlistprojectinterfaces",{"_index":1377,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["qlistprojects",{"_index":5066,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["qsearchusers",{"_index":5630,"title":{},"body":{"injectables/UsersService.html":{}}}],["quality",{"_index":6194,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["queries",{"_index":2064,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["queries/queries.service",{"_index":1762,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["queriesservice",{"_index":1761,"title":{"injectables/QueriesService.html":{}},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{},"injectables/QueriesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":179,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentStoreService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["query.component.html",{"_index":5116,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["query.component.scss",{"_index":5117,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["query.subscribe",{"_index":5137,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["query/mutation",{"_index":6240,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["querybodydirective",{"_index":208,"title":{"directives/QueryBodyDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["querybuttondirective",{"_index":210,"title":{"directives/QueryButtonDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["querycomponent",{"_index":178,"title":{"components/QueryComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["querycomponentstate",{"_index":5094,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"miscellaneous/enumerations.html":{}}}],["querycomponentstate.error",{"_index":5140,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["querycomponentstate.loading",{"_index":5123,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["querycomponentstate.ready",{"_index":5129,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["querylist",{"_index":1764,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["querylist(queries",{"_index":1977,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["querylistparams",{"_index":1389,"title":{"interfaces/QueryListParams.html":{}},"body":{"injectables/ComponentsService.html":{},"injectables/ProjectsService.html":{},"interfaces/QueryListParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["querynode",{"_index":1765,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["querynode(queries",{"_index":1941,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["queryparamfilter",{"_index":3437,"title":{},"body":{"components/IssueListComponent.html":{}}}],["queryparams",{"_index":642,"title":{},"body":{"guards/AuthGuard.html":{}}}],["querystate",{"_index":5107,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["quick",{"_index":4049,"title":{},"body":{"classes/MultiSourceList.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"dependencies.html":{}}}],["quicker",{"_index":69,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/CCIMSValidators.html":{}}}],["quickscore",{"_index":4048,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["quickscore(matchstrings.join",{"_index":4092,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["quot",{"_index":5249,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["quot;(newest",{"_index":2987,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["quot;test&quot",{"_index":2986,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["r",{"_index":1535,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{},"index.html":{}}}],["r.matches",{"_index":4382,"title":{},"body":{"interfaces/Positions.html":{}}}],["radius",{"_index":1178,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["ran",{"_index":5145,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["randomize",{"_index":1549,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["randomizecolor",{"_index":1459,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["randomized",{"_index":3816,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["randomizes",{"_index":1471,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["range",{"_index":3390,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["rank",{"_index":4022,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["ranking",{"_index":4040,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["rare",{"_index":3403,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["ratio",{"_index":4555,"title":{},"body":{"interfaces/Positions.html":{}}}],["raw",{"_index":1487,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["re",{"_index":1804,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{}}}],["reactiveformsmodule",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["read",{"_index":780,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{}}}],["readcsscolor",{"_index":5706,"title":{},"body":{"coverage.html":{}}}],["readcsscolor(color",{"_index":3391,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["readonly",{"_index":653,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{}}}],["reads",{"_index":3386,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["ready",{"_index":5095,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"miscellaneous/enumerations.html":{}}}],["really",{"_index":1031,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["reasonable",{"_index":4136,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["recalculates",{"_index":5204,"title":{},"body":{"components/RegisterComponent.html":{}}}],["received",{"_index":1876,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["receiving",{"_index":1970,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["recommended",{"_index":6217,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["recoverable",{"_index":1632,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["rect",{"_index":4324,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.x",{"_index":4756,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.xmax",{"_index":4792,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.xmin",{"_index":4788,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.y",{"_index":4762,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.ymax",{"_index":4794,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.ymin",{"_index":4790,"title":{},"body":{"interfaces/Positions.html":{}}}],["red",{"_index":3139,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/QueryComponent.html":{},"index.html":{}}}],["redirect",{"_index":520,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["redirected",{"_index":5202,"title":{},"body":{"components/RegisterComponent.html":{}}}],["redirects",{"_index":630,"title":{},"body":{"guards/AuthGuard.html":{}}}],["redirectto",{"_index":507,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirecturl",{"_index":3943,"title":{},"body":{"components/LoginComponent.html":{}}}],["redraw",{"_index":3117,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["redrawbycloseofcomponentdetails",{"_index":4364,"title":{},"body":{"interfaces/Positions.html":{}}}],["reduce",{"_index":5025,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["reduces",{"_index":4994,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["reducing",{"_index":2114,"title":{},"body":{"injectables/DataService.html":{}}}],["redundant",{"_index":2039,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ref",{"_index":1119,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["ref.attach(new",{"_index":1129,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["refactor",{"_index":1858,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["refer",{"_index":6215,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["reference",{"_index":1103,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["references",{"_index":4345,"title":{},"body":{"interfaces/Positions.html":{}}}],["referring",{"_index":566,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["refers",{"_index":3589,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["reflect",{"_index":4337,"title":{},"body":{"interfaces/Positions.html":{}}}],["reflected",{"_index":6178,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["refresh",{"_index":1542,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["refreshes",{"_index":705,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["regarding",{"_index":5924,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":3829,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["register",{"_index":518,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["register'},{'name",{"_index":181,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["register.component.css",{"_index":5178,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":5179,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":180,"title":{"components/RegisterComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/managing-gropius.html":{}}}],["registering",{"_index":2507,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["registerlocaledata",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(en",{"_index":471,"title":{},"body":{"modules/AppModule.html":{}}}],["registerusergql",{"_index":5188,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registeruserinput",{"_index":5215,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerusermutation",{"_index":5187,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registration",{"_index":2551,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["registry",{"_index":3148,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{}}}],["registry.service",{"_index":4333,"title":{},"body":{"interfaces/Positions.html":{}}}],["registry.service.ts",{"_index":3147,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"coverage.html":{}}}],["registry.service.ts:20",{"_index":3151,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["registry/issue",{"_index":3145,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["regular",{"_index":2977,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["reject",{"_index":1893,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{}}}],["reject(error",{"_index":1898,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{}}}],["related",{"_index":3036,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["relatedfolder",{"_index":4724,"title":{},"body":{"interfaces/Positions.html":{}}}],["relatedfolders",{"_index":2346,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["relatedfolders.getvalue(folder).concat(targetfolders",{"_index":2459,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["relatedfolders.setvalue(folder",{"_index":2458,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["relatedto",{"_index":1301,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["relation",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["relationedge",{"_index":1222,"title":{"interfaces/RelationEdge.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["relations",{"_index":3070,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["relative",{"_index":1075,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"classes/NodeCache.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["relativepositionchanged",{"_index":3253,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["relativepositionchanged(group",{"_index":3264,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["relativerotation",{"_index":1290,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["relativeto",{"_index":4530,"title":{},"body":{"interfaces/Positions.html":{}}}],["relevance",{"_index":4023,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["relevant",{"_index":1868,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["reload",{"_index":1495,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"additional-documentation/managing-gropius.html":{}}}],["reload$]).pipe",{"_index":3230,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["reloaded",{"_index":1781,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["reloadlistset",{"_index":5302,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["reloadonmouseup",{"_index":4368,"title":{},"body":{"interfaces/Positions.html":{}}}],["reloadprojects",{"_index":4861,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["reloads",{"_index":4593,"title":{},"body":{"interfaces/Positions.html":{}}}],["remaining",{"_index":919,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["remember",{"_index":1708,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["remove",{"_index":183,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["removeconsumedinterface",{"_index":2946,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{}}}],["removeconsumedinterface(component",{"_index":2973,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["removeconsumedinterface(componentid",{"_index":3224,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["removeconsumedinterfacegql",{"_index":2953,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["removeconsumedinterfacemutation",{"_index":2952,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["removed",{"_index":2380,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{}}}],["removedfromcomponentevent",{"_index":851,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["removedfromlocationevent",{"_index":855,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["removedialogcomponent",{"_index":182,"title":{"components/RemoveDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["removefiltereddata",{"_index":2461,"title":{},"body":{"classes/GraphDataFactory.html":{}}}],["removefiltereddata(graphdata",{"_index":2360,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["removefromlocation",{"_index":3617,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removefromlocation(removelocationinput",{"_index":3678,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removeissuefromlocationgql",{"_index":3644,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removeissuefromlocationinput",{"_index":3679,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removeissuefromlocationmutation",{"_index":3643,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removelocationinput",{"_index":3681,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removeofferingcomponents",{"_index":5738,"title":{},"body":{"coverage.html":{}}}],["removeofferingcomponents(issue.locations",{"_index":2448,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["removeofferingcomponents(linkedissue.locations",{"_index":2454,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["removeofferingcomponents(locationids",{"_index":2381,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["removepredicateat",{"_index":2823,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["removepredicateat(index",{"_index":2846,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["removeprojectmembercomponentcomponent",{"_index":184,"title":{"components/RemoveProjectMemberComponentComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["removes",{"_index":2350,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"interfaces/Positions.html":{}}}],["rename",{"_index":3618,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["rename(renameinput",{"_index":3682,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["renameinput",{"_index":3685,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["renameissuemutation",{"_index":3637,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["renameissuetitlegql",{"_index":3638,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["renameissuetitleinput",{"_index":3683,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["render",{"_index":2963,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"interfaces/Positions.html":{}}}],["rendered",{"_index":2251,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/MarkdownPreviewComponent.html":{},"interfaces/Positions.html":{}}}],["rendering",{"_index":2367,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["renderinitialtemplate(g",{"_index":3158,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["renders",{"_index":2659,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueLabelComponent.html":{},"components/MarkdownPreviewComponent.html":{},"interfaces/Positions.html":{}}}],["reopen",{"_index":2701,"title":{},"body":{"components/IssueContentsComponent.html":{},"injectables/IssueStoreService.html":{}}}],["reopen(reopeninput",{"_index":3686,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopeninput",{"_index":3689,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopenissue",{"_index":2667,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["reopenissuegql",{"_index":3636,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopenissueinput",{"_index":3687,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopenissuemutation",{"_index":3635,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopens",{"_index":2675,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["replace",{"_index":2752,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["replaced",{"_index":4918,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["replaysubject",{"_index":532,"title":{},"body":{"interfaces/AppState.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{}}}],["replaysubject(1",{"_index":554,"title":{},"body":{"interfaces/AppState.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{}}}],["report",{"_index":3138,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["reports",{"_index":1982,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["repository",{"_index":1445,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["repositoryurl",{"_index":1429,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["represent",{"_index":1248,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["representation",{"_index":863,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"classes/TimeFormatter.html":{},"index.html":{}}}],["represented",{"_index":824,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["representing",{"_index":821,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/FilterSelection.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["represents",{"_index":4681,"title":{},"body":{"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"additional-documentation/using-gropius.html":{}}}],["reqeusts",{"_index":2552,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["request",{"_index":1641,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueCategoryComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["requested",{"_index":2965,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["requests",{"_index":1769,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["requesttimelineitems",{"_index":880,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["require",{"_index":5798,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":6060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":633,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphStateService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["requires",{"_index":6180,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["rerun",{"_index":6244,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["reset",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphsModule.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["resetform",{"_index":5184,"title":{},"body":{"components/RegisterComponent.html":{}}}],["resetform(e",{"_index":5195,"title":{},"body":{"components/RegisterComponent.html":{}}}],["resetgraph",{"_index":4649,"title":{},"body":{"interfaces/Positions.html":{}}}],["resets",{"_index":4642,"title":{},"body":{"interfaces/Positions.html":{},"components/RegisterComponent.html":{}}}],["resetvalues",{"_index":4192,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["resize",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["resizecorner(content",{"_index":1142,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["resolve(data",{"_index":1896,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{}}}],["resolved",{"_index":5865,"title":{},"body":{"index.html":{}}}],["resolves",{"_index":5173,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["respective",{"_index":3882,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["response.token",{"_index":707,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["responsible",{"_index":613,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"components/LoginComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"index.html":{}}}],["respoonsible",{"_index":3012,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{}}}],["rest",{"_index":5636,"title":{},"body":{"injectables/UsersService.html":{}}}],["restricting",{"_index":2964,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["restriction",{"_index":5998,"title":{},"body":{"license.html":{}}}],["result",{"_index":1619,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"classes/Vector.html":{}}}],["result.id",{"_index":1621,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["result.items",{"_index":1996,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["result.items.size",{"_index":1995,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["result.matches",{"_index":2284,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["result.pageinfo",{"_index":1979,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["result.totalcount",{"_index":1981,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["result?.createdprojectid",{"_index":4879,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["resulting",{"_index":4758,"title":{},"body":{"interfaces/Positions.html":{}}}],["results",{"_index":219,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{},"additional-documentation/contributors.html":{}}}],["rethrow",{"_index":1634,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["retrieval",{"_index":2942,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["retrieve",{"_index":567,"title":{},"body":{"interfaces/AppState.html":{},"injectables/LabelStoreService.html":{},"injectables/StateService.html":{}}}],["retrieved",{"_index":932,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["retrievel",{"_index":2612,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["retrieves",{"_index":875,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["retrieving",{"_index":1311,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/ProjectIssueListComponent.html":{}}}],["return",{"_index":606,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":674,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/User.html":{}}}],["returnedfilter",{"_index":3542,"title":{},"body":{"components/IssueListComponent.html":{}}}],["returnfromselect",{"_index":1436,"title":{},"body":{"components/CreateComponentDialogComponent.html":{}}}],["returnfromselect.localecompare(imstype.github",{"_index":1432,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["returning",{"_index":2499,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":45,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["returnurl",{"_index":643,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["reusable",{"_index":3563,"title":{},"body":{"components/IssueListComponent.html":{},"index.html":{}}}],["rgb",{"_index":3387,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["rgb(0",{"_index":1185,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueLocationComponent.html":{}}}],["rgb(204",{"_index":1546,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["rgb(9",{"_index":3597,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["rgba(0",{"_index":2656,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/ProjectListComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["rgba(201",{"_index":3575,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["rgba(255",{"_index":2804,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueLabelComponent.html":{},"components/QueryComponent.html":{}}}],["rid",{"_index":3350,"title":{},"body":{"components/IssueIconComponent.html":{},"interfaces/Positions.html":{}}}],["right",{"_index":91,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SideNavComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["right/bottom",{"_index":4547,"title":{},"body":{"interfaces/Positions.html":{}}}],["rightdistance",{"_index":3290,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["rights",{"_index":5999,"title":{},"body":{"license.html":{}}}],["role",{"_index":259,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["root",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":104,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["root_node",{"_index":2866,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rootid",{"_index":4571,"title":{},"body":{"interfaces/Positions.html":{}}}],["rootnode",{"_index":4573,"title":{},"body":{"interfaces/Positions.html":{}}}],["rootnode.id",{"_index":4592,"title":{},"body":{"interfaces/Positions.html":{}}}],["rootnode.type",{"_index":4580,"title":{},"body":{"interfaces/Positions.html":{}}}],["rotate",{"_index":5681,"title":{},"body":{"classes/Vector.html":{}}}],["rotate(360deg",{"_index":1652,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["rotated",{"_index":5683,"title":{},"body":{"classes/Vector.html":{}}}],["route",{"_index":597,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/StateService.html":{},"interfaces/userMock.html":{}}}],["router",{"_index":531,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"interfaces/User.html":{}}}],["router.events",{"_index":577,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["router.events.pipe(filter((event",{"_index":589,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["routermodule",{"_index":494,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":522,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":2277,"title":{},"body":{"components/FrameComponent.html":{}}}],["routerstatesnapshot",{"_index":628,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":493,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":574,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/StateService.html":{},"additional-documentation/managing-gropius.html":{}}}],["routing.module",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":492,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":2303,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["row.id",{"_index":3548,"title":{},"body":{"components/IssueListComponent.html":{}}}],["row:hover",{"_index":3571,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["rowdata",{"_index":4930,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["rows",{"_index":2311,"title":{},"body":{"components/FrameComponent.html":{}}}],["run",{"_index":5120,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["running",{"_index":5904,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["rxjs",{"_index":533,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueListComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"dependencies.html":{},"interfaces/userMock.html":{}}}],["rxjs/operators",{"_index":536,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"injectables/ComponentStoreService.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LoginComponent.html":{},"interfaces/Positions.html":{},"injectables/ProjectStoreService.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{}}}],["s",{"_index":5231,"title":{},"body":{"components/RegisterComponent.html":{},"classes/TimeFormatter.html":{},"index.html":{}}}],["s${sourceid}t${targetid}r${edgetype",{"_index":1285,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["s1",{"_index":2086,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["s2",{"_index":2088,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["same",{"_index":818,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{}}}],["sandwich",{"_index":2281,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["sans",{"_index":3604,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["sat",{"_index":3410,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["save",{"_index":669,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueDetailComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/User.html":{}}}],["savechanges",{"_index":2726,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["saved",{"_index":1006,"title":{},"body":{"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TextDisplayComponent.html":{}}}],["savedpositions",{"_index":4369,"title":{},"body":{"interfaces/Positions.html":{}}}],["savefailed",{"_index":1555,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["savepositionssubject",{"_index":4370,"title":{},"body":{"interfaces/Positions.html":{}}}],["saves",{"_index":2737,"title":{},"body":{"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{}}}],["saveusertostorage",{"_index":657,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["saveusertostorage(user",{"_index":681,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["saving",{"_index":647,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{}}}],["savingbody",{"_index":981,"title":{},"body":{"components/CommentComponent.html":{}}}],["savingchanges",{"_index":2721,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["savingcomment",{"_index":2664,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["scalar",{"_index":5688,"title":{},"body":{"classes/Vector.html":{}}}],["scalars",{"_index":2333,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["scalars['id",{"_index":2338,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["scale",{"_index":3830,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["scale(factor",{"_index":5685,"title":{},"body":{"classes/Vector.html":{}}}],["scaled",{"_index":5689,"title":{},"body":{"classes/Vector.html":{}}}],["scandurra",{"_index":5945,"title":{},"body":{"index.html":{}}}],["schema",{"_index":1427,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueStoreService.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["schemas",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["schould",{"_index":4917,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["science",{"_index":5953,"title":{},"body":{"index.html":{}}}],["score",{"_index":4016,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"dependencies.html":{}}}],["score(item",{"_index":4037,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["scorekeys",{"_index":2881,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["scores",{"_index":4039,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["scoring",{"_index":5289,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["screen",{"_index":3929,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Positions.html":{}}}],["sdot",{"_index":1049,"title":{},"body":{"components/CommentComponent.html":{}}}],["search",{"_index":1512,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"injectables/UsersService.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["search'},{'name",{"_index":153,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["search.component",{"_index":2243,"title":{},"body":{"interfaces/FilterState.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{}}}],["search.component.html",{"_index":2205,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["search.component.scss",{"_index":2206,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["search.component.ts",{"_index":2190,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["search.component.ts:17",{"_index":3722,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:22",{"_index":3723,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:23",{"_index":3725,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:24",{"_index":3724,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:25",{"_index":3718,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:33",{"_index":3721,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:40",{"_index":3719,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:51",{"_index":3720,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search/label",{"_index":2189,"title":{},"body":{"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["searched",{"_index":5265,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["searchissuesdataarray",{"_index":3438,"title":{},"body":{"components/IssueListComponent.html":{}}}],["searchquery",{"_index":2818,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["searchquerydidchange",{"_index":4141,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["searchuser",{"_index":5634,"title":{},"body":{"injectables/UsersService.html":{}}}],["searchusers",{"_index":3919,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["searchusers(filter",{"_index":5632,"title":{},"body":{"injectables/UsersService.html":{}}}],["searchusersgql",{"_index":5626,"title":{},"body":{"injectables/UsersService.html":{}}}],["second",{"_index":4676,"title":{},"body":{"interfaces/Positions.html":{}}}],["seconds",{"_index":954,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["section",{"_index":6177,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["see",{"_index":977,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"additional-documentation/managing-gropius.html":{}}}],["seen",{"_index":5892,"title":{},"body":{"index.html":{}}}],["seenitems",{"_index":4093,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["seenitems.add(id",{"_index":4098,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["seenitems.has(id",{"_index":4097,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["segment",{"_index":5668,"title":{},"body":{"classes/Vector.html":{}}}],["select",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"modules/GraphsModule.html":{},"components/LabelSearchComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/TextFragment.html":{},"dependencies.html":{}}}],["select.label",{"_index":3726,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["select/ng",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{}}}],["selectable",{"_index":5363,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["selected",{"_index":29,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["selectedcategories",{"_index":2241,"title":{},"body":{"interfaces/FilterState.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["selectedfilter",{"_index":2242,"title":{},"body":{"interfaces/FilterState.html":{},"components/IssueGraphControlsComponent.html":{}}}],["selectedlabels",{"_index":2209,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["selectedusers",{"_index":233,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["selecting",{"_index":6176,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["selection",{"_index":2218,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["selection.labels",{"_index":2226,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["selection.texts",{"_index":2223,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["selects",{"_index":3464,"title":{},"body":{"components/IssueListComponent.html":{}}}],["self",{"_index":964,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"components/RemoveDialogComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["self.alllabelslist",{"_index":2883,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["self.projectid",{"_index":2870,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["selfassigned(assignedevent",{"_index":966,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["sell",{"_index":6005,"title":{},"body":{"license.html":{}}}],["send",{"_index":1854,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/MarkdownEditorComponent.html":{},"classes/NodeCache.html":{}}}],["sending",{"_index":1771,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["sent",{"_index":5167,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["separate",{"_index":3427,"title":{},"body":{"components/IssueListComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["separately",{"_index":3851,"title":{},"body":{"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sequence",{"_index":3216,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["serif",{"_index":3605,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["server",{"_index":870,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/SetEditorComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["server/connection",{"_index":2539,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["server:run",{"_index":5916,"title":{},"body":{"index.html":{}}}],["service",{"_index":541,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueStoreService.html":{},"classes/NodeCache.html":{},"injectables/ProjectStoreService.html":{},"injectables/StateService.html":{},"injectables/UserNotifyService.html":{},"additional-documentation/managing-gropius.html":{}}}],["services",{"_index":5966,"title":{},"body":{"index.html":{}}}],["session",{"_index":4729,"title":{},"body":{"interfaces/Positions.html":{}}}],["set",{"_index":186,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["set(this.componentlist.map((id",{"_index":1519,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["setcontext",{"_index":2490,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["setcontext((_",{"_index":2543,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["setcontext((operation",{"_index":2518,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["seteditorcomponent",{"_index":185,"title":{"components/SetEditorComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seteditordialogcomponent",{"_index":187,"title":{"components/SetEditorDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seteditordialogdata",{"_index":4110,"title":{"interfaces/SetEditorDialogData.html":{}},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["seterror",{"_index":5139,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["setfilter",{"_index":4017,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["setfilter(query",{"_index":4041,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["setgraphtolastview",{"_index":4731,"title":{},"body":{"interfaces/Positions.html":{}}}],["setinenumarray",{"_index":2824,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["setinenumarray(array",{"_index":2848,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["setmultisource",{"_index":4009,"title":{"interfaces/SetMultiSource.html":{}},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["setparams",{"_index":1999,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["setparams(p",{"_index":1753,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{}}}],["setpredicatetype",{"_index":2825,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["setpredicatetype(index",{"_index":2854,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["setrelationvisibility",{"_index":3056,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["setrelationvisibility(showrelations",{"_index":4815,"title":{},"body":{"interfaces/Positions.html":{}}}],["sets",{"_index":557,"title":{},"body":{"interfaces/AppState.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{}}}],["setter",{"_index":3024,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["setters",{"_index":3014,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["setters.service",{"_index":4331,"title":{},"body":{"interfaces/Positions.html":{}}}],["setters.service.ts",{"_index":3011,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"coverage.html":{}}}],["setters.service.ts:23",{"_index":3019,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["setters/issue",{"_index":3010,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["settext(value",{"_index":5456,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["settimeout",{"_index":1918,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/RegisterComponent.html":{}}}],["setting",{"_index":4814,"title":{},"body":{"interfaces/Positions.html":{}}}],["settings",{"_index":62,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["settingsdialogcomponent",{"_index":189,"title":{"components/SettingsDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["setup",{"_index":3103,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"additional-documentation/managing-gropius.html":{}}}],["several",{"_index":810,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"additional-documentation/managing-gropius.html":{}}}],["shadow",{"_index":1181,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/TimelineItemComponent.html":{}}}],["shall",{"_index":6012,"title":{},"body":{"license.html":{}}}],["shared",{"_index":3088,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["sharereplay",{"_index":2285,"title":{},"body":{"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["sharereplay(1",{"_index":3241,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["sheet",{"_index":4646,"title":{},"body":{"interfaces/Positions.html":{}}}],["shift",{"_index":4526,"title":{},"body":{"interfaces/Positions.html":{}}}],["short",{"_index":1744,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/UserItemComponent.html":{}}}],["shortcut",{"_index":4884,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["shouldn't",{"_index":2049,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{}}}],["show",{"_index":3069,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["showconfirmdialog",{"_index":1578,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["showdeleted",{"_index":5526,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["showdeletedialog",{"_index":4193,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["showdeletedialog(affected",{"_index":4211,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["showdrawer",{"_index":2270,"title":{},"body":{"components/FrameComponent.html":{}}}],["showing",{"_index":2932,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SideNavComponent.html":{},"components/TopToolbarComponent.html":{}}}],["showmenubutton",{"_index":5584,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["shown",{"_index":866,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/enumerations.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{}}}],["showname",{"_index":4185,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["showplaceholder",{"_index":5437,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["showrelations",{"_index":3053,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["shows",{"_index":840,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/DialogData-1.html":{},"components/IssueListComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["side",{"_index":191,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["sidebar",{"_index":2263,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/SetEditorComponent.html":{}}}],["sidebar'},{'name",{"_index":151,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["sidebar.component",{"_index":1591,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{}}}],["sidebar.component.ts",{"_index":5772,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["sidemenu",{"_index":5392,"title":{},"body":{"components/SideNavComponent.html":{}}}],["sidenav",{"_index":2300,"title":{},"body":{"components/FrameComponent.html":{}}}],["sidenavcomponent",{"_index":190,"title":{"components/SideNavComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sign",{"_index":6179,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["signal",{"_index":3219,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["signals",{"_index":3114,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["signature",{"_index":634,"title":{},"body":{"guards/AuthGuard.html":{}}}],["significant",{"_index":3844,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["signup",{"_index":6070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signupurl",{"_index":6065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["similar",{"_index":5884,"title":{},"body":{"index.html":{}}}],["simple",{"_index":1864,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{},"additional-documentation/managing-gropius.html":{}}}],["simplechanges",{"_index":5295,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["simply",{"_index":3406,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["simultaneously",{"_index":4025,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"additional-documentation/managing-gropius.html":{}}}],["single",{"_index":944,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"additional-documentation/managing-gropius.html":{}}}],["singular",{"_index":5494,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["size",{"_index":1667,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LoginComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["size.height",{"_index":4783,"title":{},"body":{"interfaces/Positions.html":{}}}],["size.width",{"_index":4781,"title":{},"body":{"interfaces/Positions.html":{}}}],["sizes",{"_index":1675,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["slate",{"_index":4614,"title":{},"body":{"interfaces/Positions.html":{}}}],["slide",{"_index":3136,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["slider",{"_index":2293,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slideto",{"_index":5791,"title":{},"body":{"coverage.html":{}}}],["slideto('right",{"_index":6160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sliding",{"_index":6161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slightly",{"_index":5168,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["small",{"_index":3815,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["smaller",{"_index":5365,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["software",{"_index":5845,"title":{},"body":{"index.html":{},"license.html":{}}}],["solid",{"_index":2709,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["solves",{"_index":5875,"title":{},"body":{"index.html":{}}}],["something",{"_index":4035,"title":{},"body":{"classes/MultiSourceList.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sometimes",{"_index":4360,"title":{},"body":{"interfaces/Positions.html":{}}}],["somewhat",{"_index":4552,"title":{},"body":{"interfaces/Positions.html":{}}}],["somewhere",{"_index":4036,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sommerzeit",{"_index":5485,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["soon",{"_index":5109,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{}}}],["sort",{"_index":3426,"title":{},"body":{"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["sorted",{"_index":3307,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["sortedchildids",{"_index":3300,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["sortedchildids.foreach((childid",{"_index":3312,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["sortedchildids.length",{"_index":3321,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["source.allowedanchors.has('bottom",{"_index":3202,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["source.allowedanchors.has('right",{"_index":3201,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["source.current.entries",{"_index":4096,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source.current.size",{"_index":4100,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source.filter",{"_index":4084,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source.hasdata",{"_index":4095,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source.loading",{"_index":4106,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source?.allowedanchors",{"_index":3187,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["sourced",{"_index":4053,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcefolders",{"_index":2449,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["sourcefolders.foreach((folder",{"_index":2457,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["sourcehandles",{"_index":3175,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["sourcehandles.filter((linkhandle",{"_index":3196,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["sourcehandles:linkhandle[];targethandles:linkhandle",{"_index":3194,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["sourceid",{"_index":1286,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["sourceissues",{"_index":1281,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["sourcelocationids",{"_index":2447,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["sourcelocationids.map((locationid",{"_index":2450,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["sourcenode",{"_index":3033,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["sourcenode.type",{"_index":4439,"title":{},"body":{"interfaces/Positions.html":{}}}],["sourcenodelist",{"_index":4012,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcenodelistsub",{"_index":4055,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcenodes",{"_index":4028,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcepoint",{"_index":5669,"title":{},"body":{"classes/Vector.html":{}}}],["sources",{"_index":4006,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcesubs",{"_index":4056,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["south",{"_index":4319,"title":{},"body":{"interfaces/Positions.html":{}}}],["space",{"_index":2163,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/IssueIconComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/TopToolbarComponent.html":{}}}],["spacer",{"_index":3142,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/TopToolbarComponent.html":{}}}],["spaces",{"_index":744,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["spacing",{"_index":2929,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["span[matline",{"_index":4896,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["spec",{"_index":4013,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["spec.sourcenodes",{"_index":4059,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["spec\\.ts",{"_index":6061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":3913,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["specific",{"_index":588,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"injectables/StateService.html":{},"index.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["specified",{"_index":1425,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/DialogData-1.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/MultiSourceList.html":{},"injectables/ProjectStoreService.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"index.html":{}}}],["specifies",{"_index":4050,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["specify",{"_index":6172,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["specifying",{"_index":1099,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/Positions.html":{}}}],["speth",{"_index":5929,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":1650,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{}}}],["springer",{"_index":5957,"title":{},"body":{"index.html":{}}}],["src/.../app.module.ts",{"_index":6053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../component",{"_index":6055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":6057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":6058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graph",{"_index":6042,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../graphql.module.ts",{"_index":6054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../id.ts",{"_index":5839,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../issue",{"_index":5838,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../issues.service.ts",{"_index":6045,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../label",{"_index":6041,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../load.ts",{"_index":6048,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../node",{"_index":5840,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../query.component.ts",{"_index":5841,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../query.ts",{"_index":6043,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../route",{"_index":6059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../set",{"_index":6047,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../shared.ts",{"_index":6040,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../test.ts",{"_index":6056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../text",{"_index":6052,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../timeline.component.ts",{"_index":6046,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":491,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":612,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:10",{"_index":625,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:19",{"_index":629,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/authentication.service.ts",{"_index":646,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/auth/authentication.service.ts:14",{"_index":685,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:15",{"_index":684,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:16",{"_index":662,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:23",{"_index":687,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:27",{"_index":664,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:31",{"_index":682,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:42",{"_index":667,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:59",{"_index":678,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/components/cache",{"_index":757,"title":{},"body":{"components/CacheNodeComponent.html":{},"coverage.html":{}}}],["src/app/components/cursor",{"_index":1662,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"coverage.html":{}}}],["src/app/components/issue",{"_index":2649,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/item.directive.ts",{"_index":3711,"title":{},"body":{"directives/ItemDirective.html":{},"coverage.html":{}}}],["src/app/components/set",{"_index":4005,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/components/user",{"_index":5596,"title":{},"body":{"components/UserItemComponent.html":{},"coverage.html":{}}}],["src/app/data",{"_index":1369,"title":{},"body":{"injectables/ComponentsService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"interfaces/QueryListParams.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/data/component/component",{"_index":1307,"title":{},"body":{"injectables/ComponentStoreService.html":{},"coverage.html":{}}}],["src/app/data/interface/interface",{"_index":2611,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"coverage.html":{}}}],["src/app/data/issue",{"_index":2314,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/data/issue/issue",{"_index":3607,"title":{},"body":{"injectables/IssueStoreService.html":{},"coverage.html":{}}}],["src/app/data/label/label",{"_index":3728,"title":{},"body":{"injectables/LabelStoreService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/data/project/project",{"_index":5021,"title":{},"body":{"injectables/ProjectStoreService.html":{},"coverage.html":{}}}],["src/app/dialogs/access",{"_index":10,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/add",{"_index":221,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/create",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/ProjectListComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/profile",{"_index":4822,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/remove",{"_index":2159,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/settings",{"_index":5375,"title":{},"body":{"components/SettingsDialogComponent.html":{},"coverage.html":{}}}],["src/app/frame/frame.component.ts",{"_index":2247,"title":{},"body":{"components/FrameComponent.html":{},"coverage.html":{}}}],["src/app/frame/frame.component.ts:27",{"_index":2288,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:28",{"_index":2289,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:30",{"_index":2286,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:33",{"_index":2275,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:35",{"_index":2290,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:42",{"_index":2280,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:46",{"_index":2278,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/graphql.module.ts",{"_index":2479,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/graphs",{"_index":3272,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["src/app/graphs/automatic",{"_index":3748,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["src/app/graphs/component",{"_index":1051,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/graphs/graphs.module.ts",{"_index":2561,"title":{},"body":{"modules/GraphsModule.html":{}}}],["src/app/graphs/issue",{"_index":1208,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/graphs/label",{"_index":2188,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/graphs/shared.ts",{"_index":2240,"title":{},"body":{"interfaces/FilterState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/issue",{"_index":806,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/login/login.component.ts",{"_index":3928,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:18",{"_index":3953,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:19",{"_index":3950,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:20",{"_index":3949,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:21",{"_index":3948,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:22",{"_index":3951,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:29",{"_index":3941,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:51",{"_index":3940,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/markdown/markdown",{"_index":3974,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"coverage.html":{}}}],["src/app/node",{"_index":4178,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/project",{"_index":4835,"title":{},"body":{"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["src/app/register/register.component.ts",{"_index":5176,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:100",{"_index":5199,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:126",{"_index":5196,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:139",{"_index":5193,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:19",{"_index":5212,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:20",{"_index":5206,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:21",{"_index":5191,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:48",{"_index":5208,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:73",{"_index":5205,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:90",{"_index":5203,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/route",{"_index":5789,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/side",{"_index":5390,"title":{},"body":{"components/SideNavComponent.html":{},"coverage.html":{}}}],["src/app/state.service.ts",{"_index":526,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{},"coverage.html":{}}}],["src/app/state.service.ts:16",{"_index":5430,"title":{},"body":{"injectables/StateService.html":{}}}],["src/app/state.service.ts:17",{"_index":5427,"title":{},"body":{"injectables/StateService.html":{}}}],["src/app/state.service.ts:31",{"_index":5429,"title":{},"body":{"injectables/StateService.html":{}}}],["src/app/state.service.ts:57",{"_index":5428,"title":{},"body":{"injectables/StateService.html":{}}}],["src/app/text",{"_index":5431,"title":{},"body":{"components/TextDisplayComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/top",{"_index":5576,"title":{},"body":{"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["src/app/user",{"_index":5603,"title":{},"body":{"injectables/UserNotifyService.html":{},"coverage.html":{}}}],["src/app/utils/query",{"_index":5086,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/utils/validators.ts",{"_index":720,"title":{},"body":{"classes/CCIMSValidators.html":{},"coverage.html":{}}}],["src/app/utils/validators.ts:10",{"_index":747,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["src/app/utils/validators.ts:16",{"_index":739,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["src/app/utils/validators.ts:22",{"_index":748,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["src/app/utils/validators.ts:27",{"_index":733,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["src/environments/environment.prod.ts",{"_index":5795,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":5796,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/generated",{"_index":6245,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["src/generated/graphql",{"_index":537,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/FilterState.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueDetailComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"interfaces/RelationEdge.html":{},"injectables/StateService.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{}}}],["src/generated/public",{"_index":5216,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/styles/dialog",{"_index":1449,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["src/styles/spinner",{"_index":2702,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/ProjectListComponent.html":{}}}],["src/styles/variables",{"_index":1174,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/TextDisplayComponent.html":{}}}],["src/styles/variables.scss",{"_index":2786,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["src/test.ts",{"_index":5797,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ss",{"_index":2212,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"components/SideNavComponent.html":{},"interfaces/TextFragment.html":{}}}],["ss.state$.pipe(map((state",{"_index":2295,"title":{},"body":{"components/FrameComponent.html":{}}}],["ss.state$.subscribe((appstate",{"_index":5412,"title":{},"body":{"components/SideNavComponent.html":{}}}],["st161848",{"_index":6276,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["stale",{"_index":1780,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["standing",{"_index":2237,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["star",{"_index":2803,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["start",{"_index":1112,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/TimelineItemComponent.html":{},"index.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["start/end",{"_index":741,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["startcursor",{"_index":6130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["started",{"_index":2771,"title":{"index.html":{},"license.html":{}},"body":{"components/IssueDetailComponent.html":{},"index.html":{}}}],["startediting",{"_index":5438,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["startoffset",{"_index":3297,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["starts",{"_index":2162,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["state",{"_index":553,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"injectables/StateService.html":{},"miscellaneous/enumerations.html":{}}}],["state.project",{"_index":2296,"title":{},"body":{"components/FrameComponent.html":{}}}],["state.service",{"_index":1405,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/FilterSelection.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["state.service.ts",{"_index":3206,"title":{},"body":{"injectables/IssueGraphStateService.html":{},"coverage.html":{}}}],["state.service.ts:13",{"_index":3208,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["state.service.ts:26",{"_index":3213,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["state.service.ts:51",{"_index":3211,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["state.service.ts:58",{"_index":3225,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["state.url",{"_index":644,"title":{},"body":{"guards/AuthGuard.html":{}}}],["state[fill",{"_index":2800,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["state[stroke",{"_index":2801,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["stateful",{"_index":1785,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["statelock",{"_index":1869,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["statements",{"_index":5693,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":3223,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["stateservice",{"_index":552,"title":{"injectables/StateService.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"additional-documentation/managing-gropius.html":{}}}],["static",{"_index":727,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{},"additional-documentation/managing-gropius.html":{}}}],["staticsourcenodelist",{"_index":4014,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["staticsources",{"_index":2892,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["stats",{"_index":2809,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["status",{"_index":2797,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["sticky",{"_index":5595,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["still",{"_index":1481,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["stop",{"_index":915,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["stopcoalescing",{"_index":913,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["stopcoalescing(coalescingtype",{"_index":957,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["stops",{"_index":950,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["storage",{"_index":671,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{}}}],["store",{"_index":702,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{}}}],["store.service",{"_index":540,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"interfaces/userMock.html":{}}}],["store.service.ts",{"_index":1308,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["store.service.ts:100",{"_index":3653,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:104",{"_index":3680,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:110",{"_index":3694,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:114",{"_index":3675,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:118",{"_index":3673,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:19",{"_index":3738,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["store.service.ts:25",{"_index":2629,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:29",{"_index":5038,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:30",{"_index":1341,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["store.service.ts:32",{"_index":3735,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["store.service.ts:34",{"_index":2633,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:39",{"_index":5039,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:41",{"_index":1352,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["store.service.ts:42",{"_index":3649,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:43",{"_index":2638,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:45",{"_index":1348,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["store.service.ts:47",{"_index":2637,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/ProjectStoreService.html":{}}}],["store.service.ts:49",{"_index":1354,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["store.service.ts:51",{"_index":2641,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:53",{"_index":1350,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["store.service.ts:54",{"_index":5044,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:55",{"_index":2635,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:57",{"_index":1346,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["store.service.ts:58",{"_index":5046,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:60",{"_index":3667,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:62",{"_index":5041,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:64",{"_index":1344,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/IssueStoreService.html":{}}}],["store.service.ts:68",{"_index":1357,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/IssueStoreService.html":{}}}],["store.service.ts:72",{"_index":3664,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:76",{"_index":3671,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:82",{"_index":3660,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:86",{"_index":3688,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:9",{"_index":3733,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["store.service.ts:90",{"_index":3684,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:94",{"_index":3657,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["stored",{"_index":1246,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["stretch",{"_index":266,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["string",{"_index":49,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":2981,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["string}).then((data",{"_index":6128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stroke",{"_index":2802,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["structural",{"_index":3713,"title":{},"body":{"directives/ItemDirective.html":{}}}],["structure",{"_index":2051,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["stuff",{"_index":595,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["style",{"_index":3600,"title":{},"body":{"components/IssueLocationComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["styleurls",{"_index":21,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["sub",{"_index":1894,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sub.error(error",{"_index":1933,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["sub.next(this.current",{"_index":1930,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["sub.unsubscribe",{"_index":1897,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sub.unsubscribe()`]{@link",{"_index":1815,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subclass",{"_index":1860,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subclasses",{"_index":1841,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subdivided",{"_index":6213,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["subheading",{"_index":2796,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["subject",{"_index":679,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"interfaces/User.html":{},"license.html":{}}}],["sublicense",{"_index":6003,"title":{},"body":{"license.html":{}}}],["submitform",{"_index":3938,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["submitform(value",{"_index":5198,"title":{},"body":{"components/RegisterComponent.html":{}}}],["subscribe",{"_index":770,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["subscribe((close",{"_index":1607,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["subscribe((filterstate",{"_index":3110,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["subscribe((graphdata",{"_index":3122,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["subscribe((project",{"_index":585,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["subscribe]{@link",{"_index":1798,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscribed",{"_index":976,"title":{},"body":{"components/CommentComponent.html":{}}}],["subscribelazy",{"_index":1716,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["subscribelazy(...args",{"_index":1747,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscriber",{"_index":1756,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["subscriber.next(this.current",{"_index":1924,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscribercount",{"_index":1937,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscribers",{"_index":1853,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["subscribes",{"_index":4396,"title":{},"body":{"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["subscribetosubject",{"_index":4408,"title":{},"body":{"interfaces/Positions.html":{}}}],["subscription",{"_index":785,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["subscription#unsubscribe",{"_index":1816,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscriptions",{"_index":563,"title":{},"body":{"interfaces/AppState.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{}}}],["subsequent",{"_index":1800,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["substantial",{"_index":6013,"title":{},"body":{"license.html":{}}}],["subtract",{"_index":5654,"title":{},"body":{"classes/Vector.html":{}}}],["subtract(other",{"_index":5690,"title":{},"body":{"classes/Vector.html":{}}}],["success",{"_index":268,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["success(value",{"_index":5138,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["successful",{"_index":677,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/NodeDetailsComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/User.html":{}}}],["successfull",{"_index":3942,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["successfully",{"_index":5088,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["succession",{"_index":815,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["sucessfull",{"_index":668,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["such",{"_index":2059,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueItemComponent.html":{},"classes/NodeCache.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"additional-documentation/managing-gropius.html":{}}}],["sufficient",{"_index":1806,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["suggestions",{"_index":5277,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["sum",{"_index":5659,"title":{},"body":{"classes/Vector.html":{}}}],["super((subscriber",{"_index":1883,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["super(id",{"_index":1940,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["superclass",{"_index":6232,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["superset",{"_index":5282,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["support",{"_index":5973,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":1034,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/LayoutNode.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"classes/Vector.html":{}}}],["svg",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"components/IssueDetailComponent.html":{},"modules.html":{}}}],["switch",{"_index":2895,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/SettingsDialogComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["switches",{"_index":3063,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["switchmap",{"_index":535,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{}}}],["switchmap(([appstate",{"_index":3235,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["switchmap((event",{"_index":583,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["switchmap((term",{"_index":2234,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["switchtheme",{"_index":5380,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["symbol",{"_index":5894,"title":{},"body":{"index.html":{}}}],["symbols",{"_index":5210,"title":{},"body":{"components/RegisterComponent.html":{}}}],["synchronously",{"_index":1794,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["syncstatewithurl",{"_index":5426,"title":{},"body":{"injectables/StateService.html":{}}}],["syncstatewithurl(router",{"_index":576,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["syntax",{"_index":3976,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["system",{"_index":4855,"title":{},"body":{"components/ProjectListComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/using-gropius.html":{}}}],["systems",{"_index":5846,"title":{},"body":{"index.html":{}}}],["t",{"_index":1822,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/FilterState.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tab",{"_index":4302,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["table",{"_index":3428,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":5799,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":3885,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"additional-documentation/managing-gropius.html":{}}}],["taken",{"_index":2845,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/RegisterComponent.html":{}}}],["takes",{"_index":4605,"title":{},"body":{"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["takeuntil",{"_index":3090,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{}}}],["takeuntil(destroy",{"_index":3231,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["takeuntil(this.destroy",{"_index":3108,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["tap",{"_index":2196,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["target",{"_index":1287,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{}}}],["target.allowedanchors.has('bottom",{"_index":3205,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["target.allowedanchors.has('right",{"_index":3204,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["target?.allowedanchors",{"_index":3189,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["targeted",{"_index":6175,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["targetfolders",{"_index":2446,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["targetfolders.concat(targetlocationids.map((locationid",{"_index":2455,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["targethandles",{"_index":3179,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["targetid",{"_index":1283,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["targetlocationids",{"_index":2453,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["targetnode",{"_index":3034,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["targetnode.id.tostring()).subscribe",{"_index":4463,"title":{},"body":{"interfaces/Positions.html":{}}}],["targetnode?.type",{"_index":4453,"title":{},"body":{"interfaces/Positions.html":{}}}],["targetpoint",{"_index":5663,"title":{},"body":{"classes/Vector.html":{}}}],["targets",{"_index":4443,"title":{},"body":{"interfaces/Positions.html":{}}}],["task",{"_index":4977,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["team",{"_index":6256,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["technically",{"_index":5639,"title":{},"body":{"injectables/UsersService.html":{}}}],["technologies",{"_index":5913,"title":{},"body":{"index.html":{}}}],["tell",{"_index":3068,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["templateref",{"_index":781,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/MultiSourceList.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["templates",{"_index":3714,"title":{},"body":{"directives/ItemDirective.html":{}}}],["templates/dynamic",{"_index":3153,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["term",{"_index":3737,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["term).pipe",{"_index":2236,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["test",{"_index":2983,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["test)&quot;&quot",{"_index":2988,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["testing",{"_index":756,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["text",{"_index":194,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["text(value",{"_index":5458,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["textdisplaycomponent",{"_index":193,"title":{"components/TextDisplayComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["textdisplayeditcallbackfn",{"_index":5442,"title":{},"body":{"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["textfragment",{"_index":2238,"title":{"interfaces/TextFragment.html":{}},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["texts",{"_index":2191,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["texts.length",{"_index":2995,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["texts.map((text",{"_index":3005,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["textstoregex",{"_index":2947,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["textstoregex([\"newest",{"_index":2982,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["textstoregex([&quot;newest",{"_index":2984,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["textstoregex(texts",{"_index":2975,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["thecurrent",{"_index":882,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["theme",{"_index":3989,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["then((created",{"_index":1533,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["then((data",{"_index":1499,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["then(async",{"_index":1618,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["theres",{"_index":4728,"title":{},"body":{"interfaces/Positions.html":{}}}],["thing",{"_index":1697,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thing$.hasdata",{"_index":1698,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thing$.loading",{"_index":1696,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thing.something",{"_index":1699,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thingid",{"_index":1701,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["things",{"_index":1953,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thingslistid",{"_index":1952,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thingssub",{"_index":1956,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thingsub",{"_index":1702,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["think",{"_index":1240,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["this({staticsources",{"_index":4064,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.activatedroute.parent",{"_index":4531,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.activatedroute.queryparams.subscribe((params",{"_index":3543,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('id",{"_index":2757,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('issueid",{"_index":2758,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.activeitemcontent",{"_index":5537,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.activepredicates",{"_index":2917,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.activepredicates.slice(0",{"_index":2900,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.activepredicates.splice(index",{"_index":2907,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.activepredicates[index",{"_index":2903,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.addableusers",{"_index":4981,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.addableusers.foreach((addableuser",{"_index":4984,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.addcoalesceitems(coalescelist",{"_index":907,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.addconsumedinterfacemutation.mutate",{"_index":3006,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.addinterfacetocomponent(event.detail.sourcenode.id",{"_index":4466,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.addissuefoldernodes(node",{"_index":4679,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.addissuefolders(node",{"_index":4630,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.addissuegroupcontainer(node",{"_index":4678,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.addissuetolocationmutation.mutate({input",{"_index":3705,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.additions.add(encodenodeid(node",{"_index":4169,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.additions.add(id",{"_index":4160,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.additions.delete(id",{"_index":4157,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.additions.has(id",{"_index":4151,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.additions.size",{"_index":4161,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.addsinglecoalesceitem(timelineitem",{"_index":922,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.addsubscriber(subscriber",{"_index":1884,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.allcomponentslist",{"_index":1510,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.alllabelslist",{"_index":3502,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.apiservice.addconsumedinterface(componentid",{"_index":3242,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["this.apiservice.loadissuegraphdata",{"_index":3236,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["this.apiservice.removeconsumedinterface(componentid",{"_index":3243,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["this.applychangeset(additions",{"_index":5319,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.authenticationservice.currentuservalue",{"_index":639,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice",{"_index":3959,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.body",{"_index":5126,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.body.code",{"_index":1609,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset).pipe",{"_index":2282,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset).subscribe((r",{"_index":4380,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.bug",{"_index":3097,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.button",{"_index":5127,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.button.element.disabled",{"_index":5147,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.buttonmode",{"_index":5125,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.calculateboundingbox",{"_index":4611,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.calculatesourcehandles(source",{"_index":3188,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["this.calculatetargethandles(target",{"_index":3190,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["this.callback",{"_index":4276,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.callback(false",{"_index":4297,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.callback(true",{"_index":4277,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.cancreatenewissue",{"_index":3506,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.category.setvalue(data.category",{"_index":2770,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.category.setvalue(issuecategory.unclassified",{"_index":1594,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.category.value",{"_index":1610,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{}}}],["this.changecolour",{"_index":4878,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.changedetector.detectchanges",{"_index":1152,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.changeissuecategorymutation.mutate",{"_index":3704,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.childnodepositions.set(childid",{"_index":3313,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["this.close",{"_index":1158,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.closecomponentactions",{"_index":4389,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.closecomponentactions(false",{"_index":4487,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.closeissuemutation.mutate({input",{"_index":3701,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.codechange.emit(this.code",{"_index":3992,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["this.color",{"_index":1501,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.comment",{"_index":1017,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment$.subscribelazy",{"_index":1020,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commenteditor.code",{"_index":2696,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.commentid",{"_index":1025,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commentid).then",{"_index":1043,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commentissuemutation.mutate({input",{"_index":3699,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.commentsub",{"_index":1019,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commentsub?.unsubscribe",{"_index":1021,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.component",{"_index":3507,"title":{},"body":{"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["this.component$.id",{"_index":3565,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.component$.subscribe",{"_index":3510,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.component.node.description",{"_index":4283,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.component.node.id",{"_index":4295,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.component.node.ims.imstype",{"_index":4281,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.component.node.name",{"_index":4271,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.componentcontextmenu",{"_index":4517,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.close",{"_index":4595,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.data.nodeid",{"_index":4523,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.height",{"_index":4565,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.updateposition(math.max(x",{"_index":4520,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.width",{"_index":4563,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenunodeid",{"_index":4541,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenuservice.open",{"_index":4544,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentinterface",{"_index":3512,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterface$.dataaspromise().then((data",{"_index":3515,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterface$.id",{"_index":3566,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterface$.subscribe",{"_index":3514,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterfaceprovider",{"_index":3516,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterfacesub",{"_index":3513,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterfacesub?.unsubscribe",{"_index":3541,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentlist",{"_index":1491,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.componentlist.push(item",{"_index":1522,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.componentlist.splice(this.componentlist.indexof(item",{"_index":1524,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.componentstoreservice.getfullcomponent(rootid).subscribe((component",{"_index":4581,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentsub",{"_index":3509,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentsub?.unsubscribe",{"_index":3540,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.confirmvalidator",{"_index":5222,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.connectconsumingcomponents(interfacenode",{"_index":4636,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.connectedto.add(other",{"_index":3804,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.connectedto.has(othernode",{"_index":3831,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.connecttoofferingcomponent(interfacenode",{"_index":4635,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.contextmenutypefornodetype(node",{"_index":4534,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.createcomponentmutation.mutate({input",{"_index":1366,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.createinterfacemutation.mutate({input",{"_index":2644,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.createissue.mutate({input",{"_index":3696,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.createitem",{"_index":5321,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.createnode(id",{"_index":2071,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.createproject.mutate({input",{"_index":5050,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.current",{"_index":1922,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.current.keys",{"_index":2021,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.current.keys().next()?.value",{"_index":2017,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.current.values",{"_index":2006,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.current?.has(encodenodeid(key",{"_index":2026,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.currentdata",{"_index":1845,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.currentqueryparams",{"_index":1849,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.currentuser",{"_index":693,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueContentsComponent.html":{},"interfaces/User.html":{}}}],["this.currentuser$.subscribe",{"_index":2689,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.currentusersub",{"_index":2688,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.currentusersub.unsubscribe",{"_index":2691,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.currentusersubject",{"_index":691,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.asobservable",{"_index":694,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.next(null",{"_index":717,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.next(user",{"_index":713,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.value",{"_index":695,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentvisiblearea",{"_index":4515,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.cursor",{"_index":2030,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.data",{"_index":4164,"title":{},"body":{"classes/MultiSourceList.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.components",{"_index":1597,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.data.confirmbuttontext",{"_index":5251,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["this.data.createitem().then((node",{"_index":4168,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.editexisting",{"_index":1490,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.data.editexisting.id",{"_index":1531,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.data.graph.reload",{"_index":1157,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.issueid",{"_index":1509,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.data.listall",{"_index":4129,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.listset].map((id",{"_index":4125,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.locations",{"_index":1600,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.data.makefilter(this.searchquery",{"_index":4143,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.nodeid",{"_index":1173,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["this.data.offeredbyid",{"_index":1560,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["this.data.overlayref.dispose",{"_index":1162,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.overlayref.getconfig().positionstrategy.apply",{"_index":1161,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.position.offsetx",{"_index":1159,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.position.offsety",{"_index":1160,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.projectid",{"_index":1428,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.data.scorekeys",{"_index":4131,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.verificationname",{"_index":2179,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.dataservice",{"_index":4132,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.dataservice.getlist",{"_index":884,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueContentsComponent.html":{}}}],["this.dataservice.getlist(decodelistid(source",{"_index":4071,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.dataservice.getlist(this.data.listset",{"_index":4127,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.dataservice.getlist(this.listid",{"_index":3522,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.dataservice.getlist(this.listset",{"_index":5305,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.dataservice.getlist(this.thingslistid",{"_index":1958,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.dataservice.getnode",{"_index":3866,"title":{},"body":{"components/LinkedIssueItemComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["this.dataservice.getnode(current_user_node",{"_index":2687,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.dataservice.getnode(issuenodeid",{"_index":2761,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.dataservice.getnode(node",{"_index":4848,"title":{},"body":{"components/ProjectIssueListComponent.html":{}}}],["this.dataservice.getnode(this.commentid",{"_index":1018,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.dataservice.getnode(this.data.editexisting",{"_index":1494,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dataservice.getnode(this.listid.node",{"_index":3508,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.dataservice.getnode(this.node",{"_index":798,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.dataservice.getnode(this.thingid",{"_index":1704,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.dataservice.mutations",{"_index":1023,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{}}}],["this.dataservice.mutations.addlabeltocomponent(math.random().tostring",{"_index":1527,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dataservice.mutations.closeissue(math.random().tostring",{"_index":2692,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.dataservice.mutations.deleteissuecomment(math.random().tostring",{"_index":1042,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.dataservice.mutations.linkissue(math.random().tostring",{"_index":1625,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.dataservice.mutations.removelabelfromcomponent(math.random().tostring",{"_index":1528,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dataservice.mutations.renameissuetitle(math.random().tostring",{"_index":2774,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.dataservice.mutations.reopenissue(math.random().tostring",{"_index":2693,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.datasource",{"_index":3525,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.datasource.filter",{"_index":3536,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.datasource.paginator",{"_index":3534,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.datasource.sort",{"_index":3530,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.defaultmenutitle",{"_index":5408,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.deletecomponentmutation.mutate({input",{"_index":1365,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.deleteinterfacemutation.mutate({input",{"_index":2648,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.deleteissuecommentmutation.mutate",{"_index":3700,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.deleteitem.emit(item",{"_index":5325,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.deleteproject.mutate({input",{"_index":5051,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.deletequery.listento(this.componentstoreservice.deletecomponent(this.nodeid",{"_index":4275,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.deletequery.listento(this.componentstoreservice.getcomponentinterfaces(this.nodeid",{"_index":4255,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.deletequery.listento(this.interfacestoreservice.delete(this.nodeid",{"_index":4279,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.deletequery.listento(this.interfacestoreservice.getconsumingcomponents(this.nodeid",{"_index":4266,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.deletions.add(id",{"_index":4158,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.deletions.delete(id",{"_index":4159,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.deletions.has(id",{"_index":4152,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.deletions.size",{"_index":4162,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.deletions].map(decodenodeid",{"_index":4166,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.description",{"_index":5016,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.destroy",{"_index":3120,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.destroy$.next",{"_index":3126,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["this.dialog",{"_index":1601,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.dialog.close",{"_index":1530,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dialog.close(created",{"_index":1534,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dialog.close(null",{"_index":1507,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dialog.open(accesstokendialogcomponent",{"_index":5384,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["this.dialog.open(addprojectmemberdialogcomponent",{"_index":4979,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.dialog.open(createcomponentdialogcomponent",{"_index":4820,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.dialog.open(createinterfacedialogcomponent",{"_index":4473,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.dialog.open(createissuedialogcomponent",{"_index":3564,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.dialog.open(createprojectdialogcomponent",{"_index":4876,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.dialog.open(profilesettingsdialogcomponent",{"_index":5383,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["this.dialog.open(removedialogcomponent",{"_index":1030,"title":{},"body":{"components/CommentComponent.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["this.dialog.open(removeprojectmembercomponentcomponent",{"_index":4988,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.dialog.open(settingsdialogcomponent",{"_index":5594,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["this.dialogref.close",{"_index":63,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["this.dialogref.close(data",{"_index":257,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["this.dialogref.close(data.createcomponentinterface.componentinterface.id",{"_index":1562,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["this.dialogref.close(false",{"_index":2185,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.dialogref.close(null",{"_index":4163,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.dialogref.close(true",{"_index":1636,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.dialogref.disableclose",{"_index":1595,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.dialogservice.open>(seteditordialogcomponent",{"_index":5326,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl('../assets/icons/svg",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl(asseturl",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["this.drawfolderrelations(node",{"_index":4631,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.drawgraph",{"_index":4641,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.editbody",{"_index":1027,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.edititem.emit(item",{"_index":5323,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.editmode",{"_index":4232,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/TextDisplayComponent.html":{}}}],["this.edittext",{"_index":5463,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.emiterrortoallsubscribers(error",{"_index":1913,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.emitupdatetoallsubscribers",{"_index":1919,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.emptyresultslabel",{"_index":5332,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.emptysuggestionslabel",{"_index":5331,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.errorconfig",{"_index":5621,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["this.extractissueid(component.node.issues.nodes",{"_index":4583,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.extractissueid(interfacecomponent.node.issuesonlocation.nodes",{"_index":4586,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.fb.group",{"_index":3968,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.featurerequests",{"_index":3098,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.filter",{"_index":3044,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.filter$.next(filterstate",{"_index":3111,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.filterchange.emit(this.buildfilter",{"_index":2921,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.filterselection",{"_index":2216,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.filterselection$.next(selection",{"_index":2229,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.findidealcomponentposition(component.id",{"_index":4620,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.firstpageitemid",{"_index":2034,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.fitgraphinview",{"_index":4768,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.fixed",{"_index":3805,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.formatcategorydescription(element.category",{"_index":3570,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.formatissueopentime",{"_index":2782,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.forward",{"_index":1991,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.frame.nativeelement.style.minheight",{"_index":1150,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.frame.nativeelement.style.minwidth",{"_index":1148,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.fromgqlnolinks(gqlissue",{"_index":2437,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["this.fromgqlnolinks(gqlpartialissue",{"_index":2440,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["this.fullissue",{"_index":3865,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.fullissue.subscribe",{"_index":3868,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.fullissuelink",{"_index":3863,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.fullissuesub",{"_index":3867,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.fullissuesub?.unsubscribe",{"_index":3869,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.getallfilter(projectid",{"_index":3740,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["this.getallfilter(projectid).pipe",{"_index":3741,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["this.getallquery.fetch({filter}).pipe(map(({data",{"_index":5054,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.getalltimelineitemsquery.fetch({input",{"_index":3709,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.getbasiccomponentquery.fetch({id}).pipe(map(({data",{"_index":1362,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.getbasicprojectquery.fetch({id}).pipe(map(({data",{"_index":5052,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.getcomponentinterfacesquery.fetch({id}).pipe(map(({data",{"_index":1364,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.getconsumingcomponentsquery.fetch({id}).pipe(map(({data",{"_index":2646,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.getencodedid(item",{"_index":4150,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.getfullcomponentquery.fetch({id}).pipe(map(({data",{"_index":1363,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.getfullissuegraphdataquery",{"_index":2996,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.getfullissuequery.fetch({id}).pipe(map(({data",{"_index":3708,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.getfullquery.fetch({id}).pipe(map(({data",{"_index":5053,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.getinterfacequery.fetch({id}).pipe(map(({data",{"_index":2645,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.getlabelsgql.fetch({projectid}).pipe(map(({data",{"_index":3745,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["this.getlabelsquery.fetch({id}).pipe(map(({data",{"_index":1361,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.getnode(id",{"_index":2079,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.getqueryparamfilter",{"_index":3537,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.getremainingtypes(index",{"_index":2909,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.getsearchissuegraphdataquery",{"_index":3004,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.getselectedcategories",{"_index":3095,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.graph",{"_index":4375,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addedge(edge",{"_index":4727,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addedge(issuegraphnodes.createconsumptionedge(consumerid",{"_index":4672,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addedge(issuegraphnodes.createinterfaceprovisionedge(node.offeredbyid",{"_index":4665,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addnode(issuefoldernode",{"_index":4711,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addnode(issuegroupcontainernode",{"_index":4696,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addnode(node",{"_index":4629,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.completerender",{"_index":4637,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.currentviewwindow",{"_index":4548,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.currentzoomtransform.apply([node.x",{"_index":4519,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.currentzoomtransform.k",{"_index":4549,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.edgelist",{"_index":4650,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getnode(edge.source",{"_index":4460,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getnode(edge.target",{"_index":4461,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getnode(id",{"_index":4720,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getnode(this.componentcontextmenunodeid",{"_index":4518,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getsvg().style",{"_index":4816,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.groupingmanager",{"_index":4688,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.groupingmanager.addnodetogroup(node.issuegroupcontainer.id",{"_index":4712,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.groupingmanager.clearallgroups",{"_index":4653,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.nodelist",{"_index":4651,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.zoomtobox",{"_index":4566,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.zoomtobox(previousboundingbox",{"_index":4767,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.zoomtobox(rect",{"_index":4772,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata",{"_index":4340,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.components.size",{"_index":4740,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.graphlocations.get(node.id).issues",{"_index":4704,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.interfaces.get(interfacenode.id).consumedby",{"_index":4671,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.relatedfolders",{"_index":4609,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.relatedfolders.getvalue([node.id.tostring",{"_index":4722,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphfirstrender",{"_index":4744,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphinitialized",{"_index":4393,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphlink",{"_index":5418,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.graphwrapper.nativeelement",{"_index":4376,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.gs",{"_index":3118,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.gs.addconsumedinterface(sourcenode.id.tostring",{"_index":4462,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.gs.removeconsumedinterface(sourcenode.id.tostring",{"_index":4481,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.hasdata",{"_index":1890,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.hasmore",{"_index":4094,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.height",{"_index":1154,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.http.post(environment.loginurl",{"_index":699,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.hydrate",{"_index":5308,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.hydrated",{"_index":1912,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.hydrateraw",{"_index":2043,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.id",{"_index":1886,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["this.infoconfig",{"_index":5623,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["this.initgraph",{"_index":4377,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.innermapfn",{"_index":1888,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.innermapfn(result",{"_index":1936,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.innerqueryfn",{"_index":1887,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.inputtitle.nativeelement.value",{"_index":2775,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.insertresult(data",{"_index":1911,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.interactive",{"_index":1746,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.interface",{"_index":4249,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.interface.node.description",{"_index":4286,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.interface.node.id",{"_index":4299,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.interface.node.name",{"_index":4278,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.interfacestore.create(name",{"_index":1559,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["this.interfacestoreservice.getinterface(rootid).subscribe((interfacecomponent",{"_index":4585,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.invalidate",{"_index":2031,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.invalidatelists.bind(this",{"_index":2139,"title":{},"body":{"injectables/DataService.html":{}}}],["this.invalidcredentials",{"_index":3946,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.iscomponent",{"_index":3591,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["this.ishandset",{"_index":4381,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.isinset(item",{"_index":4156,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.isloading",{"_index":3958,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.islocalset",{"_index":4123,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.isnextsublazy",{"_index":1885,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.isprojecturl(event.url",{"_index":582,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.isprojecturl(event.url))).subscribe((_",{"_index":590,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.issue",{"_index":2760,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issue$.dataaspromise().then((data",{"_index":2769,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issue$.hasdata",{"_index":2765,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issue$.id",{"_index":2683,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{}}}],["this.issue$.subscribe",{"_index":2763,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issue.category",{"_index":3341,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["this.issue.id",{"_index":3365,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["this.issue.isopen",{"_index":3342,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["this.issue.linkedbyissues?.totalcount",{"_index":3344,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["this.issue.linkstoissues?.totalcount",{"_index":3346,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["this.issuedata.assignees.map((node",{"_index":1616,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.components.map((node",{"_index":1613,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.components.push(componentid",{"_index":1598,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.labels.map((node",{"_index":1615,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.linkstoissues",{"_index":1623,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.locations.map((node",{"_index":1614,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.locations.push(componentid",{"_index":1599,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issueeditable",{"_index":2768,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issuegraph.drawgraph",{"_index":3101,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.fitgraphinview",{"_index":3102,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.graphdata",{"_index":3123,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.layoutgraph",{"_index":3100,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.reload",{"_index":3115,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.setrelationvisibility(this.showrelations",{"_index":3124,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraphclasssettersservice.manageclasssetters(graph",{"_index":4399,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issuegraphdynamictemplateregistryservice.managedynamictemplateregistry(graph",{"_index":4402,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issuegraphlinkhandlesservice.managelinkhandles(graph",{"_index":4400,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issuegroupparents",{"_index":4652,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issuegroupparents.push(node",{"_index":4700,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issueid",{"_index":885,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueDetailComponent.html":{}}}],["this.issuelistid",{"_index":4235,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{}}}],["this.issueslink",{"_index":5419,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.issuestub.id",{"_index":3864,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.issuesub",{"_index":2762,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issuesub.unsubscribe",{"_index":2764,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.itemops.includes('create",{"_index":5333,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.itemops.includes('delete",{"_index":5337,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.itemops.includes('edit",{"_index":5335,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.itemtemplate",{"_index":5328,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.labels",{"_index":2231,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.labelsearch.filterselection",{"_index":3107,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.labelsinput$.pipe",{"_index":2232,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.labelsloading",{"_index":2233,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.labelstore.getmatchinglabels(this.ss.state.project.node.id",{"_index":2235,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.lastloadtime",{"_index":1904,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.lastpageitemid",{"_index":2036,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.lastqueriedprojectname",{"_index":4871,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.layoutgraph",{"_index":4640,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.lazy",{"_index":800,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.linkedissues",{"_index":2682,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.linkedissues$.subscribe",{"_index":2686,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.linkedissuesub",{"_index":2685,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.linkedissuesub.unsubscribe",{"_index":2690,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.linkissue.mutate({input",{"_index":3697,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.list",{"_index":3521,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.list$.count",{"_index":3523,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.list$.current.values",{"_index":3551,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.list$.filter",{"_index":3546,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.list$.hasdata",{"_index":3549,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.listall",{"_index":4128,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listall.setfilter(this.searchquery",{"_index":4144,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listall.unsubscribe",{"_index":4171,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listid.node",{"_index":3503,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.listid.node.type",{"_index":3505,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.lists",{"_index":2152,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.get(encodedid).add(list",{"_index":2158,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.get(id",{"_index":2144,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.has(encodedid",{"_index":2156,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.has(id",{"_index":2143,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.set(encodedid",{"_index":2157,"title":{},"body":{"injectables/DataService.html":{}}}],["this.listset",{"_index":4126,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.count",{"_index":4139,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.current?.has(id",{"_index":4154,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.filter",{"_index":4142,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.hydrateinitial(this.hydrate",{"_index":5309,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.listset$.interactive",{"_index":4140,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.loading",{"_index":5315,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.listset$.subscribe",{"_index":5306,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.listset$.totalcount",{"_index":5316,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.listset$?.subscribe",{"_index":4135,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listsetsub",{"_index":4134,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listsetsub.unsubscribe",{"_index":5304,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.listsetsub?.unsubscribe",{"_index":4170,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.load",{"_index":1917,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loaddebounced",{"_index":1852,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loadifneeded",{"_index":1925,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loadimpl(prepareddata",{"_index":1915,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loadimpl(this.innerqueryfn(this.id",{"_index":1914,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loading",{"_index":1493,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/NodeCache.html":{},"components/ProjectListComponent.html":{}}}],["this.loadlabels",{"_index":2213,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.loadsavedpositions",{"_index":4395,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.loadtimeout",{"_index":1903,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.localset",{"_index":4124,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.localset.includes(id",{"_index":4153,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.location",{"_index":3590,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["this.location.id",{"_index":3593,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["this.makefilter",{"_index":5330,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.managedragbehaviour(graph",{"_index":4401,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.manageeventlisteners(graph",{"_index":4403,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.matchvalidator",{"_index":2183,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.maticonregistry.addsvgicon(iconname",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["this.maticonregistry.addsvgicon(key",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["this.memberslink",{"_index":5420,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.menuclick.emit",{"_index":5593,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["this.menutitle",{"_index":5415,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.minimap.nativeelement",{"_index":4398,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.mockusers",{"_index":4990,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.mockusers.push(addableuser",{"_index":4986,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.mockusers.push(u",{"_index":4974,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.mode",{"_index":5385,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["this.modeicon",{"_index":5386,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["this.mutations",{"_index":2137,"title":{},"body":{"injectables/DataService.html":{}}}],["this.node",{"_index":797,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.node$.subscribe",{"_index":802,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.node$.subscribelazy",{"_index":801,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.node().node.name",{"_index":4252,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodeclickcontextmenuhastype(node",{"_index":4535,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.nodeclickissuefolder(node",{"_index":4536,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.nodeclickmanyissues(rootnode",{"_index":4578,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.nodeclickoneissue(rootid",{"_index":4576,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.nodedetails.getnodename",{"_index":1172,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["this.nodedetailsready",{"_index":1151,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.nodeid",{"_index":4236,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{}}}],["this.nodequery",{"_index":4250,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodequery.listento(this.componentstoreservice.getbasiccomponent(this.nodeid",{"_index":4240,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodequery.listento(this.interfacestoreservice.getinterface(this.nodeid",{"_index":4246,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodequery.ready",{"_index":4251,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodequery.seterror",{"_index":4244,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodes",{"_index":2135,"title":{},"body":{"injectables/DataService.html":{}}}],["this.nodes.get(encodedid",{"_index":2072,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.nodes.getnode(id",{"_index":2140,"title":{},"body":{"injectables/DataService.html":{}}}],["this.nodes.has(encodedid",{"_index":2070,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.nodes.set(encodedid",{"_index":2067,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.nodesub",{"_index":799,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.nodesub.unsubscribe",{"_index":804,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.nodetype",{"_index":4233,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{}}}],["this.notify.notifyerror('could",{"_index":1505,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.notify.notifyerror('failed",{"_index":1046,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RegisterComponent.html":{}}}],["this.notify.notifyerror(this.errormessage",{"_index":5143,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.notify.notifyinfo('successfully",{"_index":1044,"title":{},"body":{"components/CommentComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["this.notifyservice.notifyerror('failed",{"_index":4167,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.oncreateedge",{"_index":4417,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.ondialogapplychangeset",{"_index":5329,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.ondialogcreateitem",{"_index":5334,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.ondialogdeleteitem",{"_index":5338,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.ondialogedititem",{"_index":5336,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.ondraggededgetargetchanged",{"_index":4420,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.onedgeadd",{"_index":4422,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.onedgedrop",{"_index":4427,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.onedgeremove",{"_index":4424,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.oneditfinished",{"_index":5464,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.oneditfinished(saved",{"_index":5465,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.onminimaprender(minimap",{"_index":4510,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.onnodeclick",{"_index":4484,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.overlay.create",{"_index":1120,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.overlay.position().flexibleconnectedto(parent",{"_index":1109,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.overviewlink",{"_index":5417,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.padding",{"_index":3799,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.pageinfo",{"_index":1978,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pageinfo.hasnextpage",{"_index":1994,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pageinfo.haspreviouspage",{"_index":1992,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.paginator",{"_index":3535,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.params",{"_index":2000,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pcount",{"_index":2002,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pcursor",{"_index":2001,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pfilter",{"_index":2004,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pforward",{"_index":2003,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pluralize(days",{"_index":5517,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["this.pluralize(hours",{"_index":5519,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["this.pluralize(minutes",{"_index":5521,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["this.pluralize(months",{"_index":5513,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["this.pnodes",{"_index":1997,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pnodes.insertnodes(value.nodes",{"_index":2047,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.position",{"_index":3802,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.position.x",{"_index":3820,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.position.y",{"_index":3821,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.predicatevalues[id",{"_index":2920,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.predicatevalues[id].push(item",{"_index":2913,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.predicatevalues[id].splice(this.predicatevalues[id].indexof(item",{"_index":2914,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.predicatevalues[type",{"_index":2904,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.prepareissuearray",{"_index":3539,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.preparetimelineitems(value",{"_index":893,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.previouslyhadpagecontents",{"_index":1993,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.project",{"_index":4847,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["this.project$.subscribe((project",{"_index":4971,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.project.current.name",{"_index":5018,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.projectid",{"_index":2756,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["this.projectname",{"_index":4872,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.projects",{"_index":4874,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.projectstoragekey",{"_index":4378,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.projectstore.delete(this.projectid).subscribe",{"_index":5020,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.projectstore.getall(this.projectname).subscribe",{"_index":4873,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.projectstore.getfullproject(this.projectid",{"_index":4970,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.ps.create(name",{"_index":1659,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["this.psetparamsnoupdate",{"_index":1851,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.ptotalcount",{"_index":1980,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.publicclientname",{"_index":5218,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.query",{"_index":4082,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.query.listento(this.list",{"_index":3524,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.query.listento(this.someobservable",{"_index":5110,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.query.listento(this.somethingthattakesawhile",{"_index":5115,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.query.listento(this.timelineitems",{"_index":892,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.query.querystate",{"_index":5133,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.querycomponent.listento(this.componentstore.createcomponent(input",{"_index":1430,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["this.querycomponent.listento(this.project",{"_index":5015,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.queryparamfilter",{"_index":3545,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.querystate",{"_index":5128,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.randomizecolor",{"_index":1508,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.redrawbycloseofcomponentdetails",{"_index":4524,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.registerusermutation.client",{"_index":5217,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerusermutation.mutate({input}).subscribe",{"_index":5239,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.relativepositionchanged(group",{"_index":3325,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["this.reload",{"_index":4501,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.reload$.next(null",{"_index":4464,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.reloadlistset",{"_index":5307,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.reloadonmouseup",{"_index":4488,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.reloadprojects",{"_index":4870,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.removeconsumedinterfacemutation.mutate",{"_index":3007,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.removeissuefromlocationmutation.mutate",{"_index":3706,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.renameissuemutation.mutate({input",{"_index":3703,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.reopenissuemutation.mutate({input",{"_index":3702,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.requesttimelineitems",{"_index":874,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.resetgraph",{"_index":4615,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.resetvalues",{"_index":4253,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.resize",{"_index":1144,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.results",{"_index":4104,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.returnurl",{"_index":3969,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.snapshot.parammap.get('componentid",{"_index":4313,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":3094,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["this.route.snapshot.parammap.get('interfaceid",{"_index":4314,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["this.route.snapshot.queryparams.returnurl",{"_index":3970,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate",{"_index":4584,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"components/SideNavComponent.html":{}}}],["this.router.navigate(['./component",{"_index":4529,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.router.navigate(['./interface",{"_index":4532,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.router.navigate(['/login",{"_index":641,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['/projects",{"_index":3547,"title":{},"body":{"components/IssueListComponent.html":{},"components/NodeDetailsPageComponent.html":{}}}],["this.router.navigate(['login",{"_index":716,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["this.router.navigate(['projects",{"_index":3592,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["this.router.navigate([this.returnurl",{"_index":3964,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.parseurl(url",{"_index":601,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.router.serializeurl(this.router.createurltree(['/projects",{"_index":3364,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["this.savechanges",{"_index":2773,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.savedpositions",{"_index":4394,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.issuegroups[issuegroupcontainernode.id",{"_index":4691,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.issuegroups[node.id",{"_index":4494,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[id",{"_index":4656,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[interfaceid",{"_index":4475,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[intrface.id",{"_index":4624,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[layoutnode.id",{"_index":4807,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[node.id",{"_index":4497,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savefailed",{"_index":1563,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.savepositionssubject.next",{"_index":4478,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savepositionssubject.pipe(takeuntil(this.destroy",{"_index":4409,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.saveusertostorage(user",{"_index":712,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.savingbody",{"_index":1022,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.savingchanges",{"_index":2772,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.savingcomment",{"_index":2694,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.score(a",{"_index":4101,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.score(b",{"_index":4102,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.scorekeys",{"_index":4086,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.searchissuesdataarray",{"_index":3550,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.searchquery.trim",{"_index":2915,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.selectedcategories",{"_index":3073,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.selectedcategories$.next(this.getselectedcategories",{"_index":3096,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.selectedlabels.filter((item",{"_index":2224,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.selectedlabels.filter((label",{"_index":2227,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.selectedusers",{"_index":256,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["this.seterror",{"_index":5142,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.setgraphtolastview",{"_index":4638,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.setparams",{"_index":1998,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.showdeleted",{"_index":5536,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.showdeletedialog(affected",{"_index":4265,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.showdrawer",{"_index":2259,"title":{},"body":{"components/FrameComponent.html":{}}}],["this.showplaceholder",{"_index":5460,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.sort",{"_index":3531,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.sort.sort({id",{"_index":3528,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.sourcenodelist",{"_index":4060,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelist.subscribe",{"_index":4063,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelist?.current?.keys",{"_index":4066,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelist?.loading",{"_index":4105,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelistsub",{"_index":4062,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelistsub?.unsubscribe",{"_index":4107,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.delete(source",{"_index":4081,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.has(source",{"_index":4070,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.keys",{"_index":4077,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.set(source",{"_index":4073,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.values",{"_index":4083,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcesubs.delete(source",{"_index":4080,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcesubs.foreach((sub",{"_index":4108,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcesubs.get(source).unsubscribe",{"_index":4079,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcesubs.set",{"_index":4074,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.spec.staticsources",{"_index":4068,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.state",{"_index":3228,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["this.state$.next(this.state",{"_index":587,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.state.project",{"_index":586,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.statelock",{"_index":1909,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.staticsourcenodelist",{"_index":4058,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.stopcoalescing(coalescingtype",{"_index":917,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.subscribe",{"_index":1895,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribe(...args",{"_index":1927,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribers",{"_index":1929,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribers.add(subscriber",{"_index":1921,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribers.delete(subscriber",{"_index":1926,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribers.size",{"_index":1938,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribetosubject",{"_index":4397,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.subscription",{"_index":5136,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.subscription?.unsubscribe",{"_index":5130,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.syncstatewithurl(router",{"_index":556,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.text",{"_index":5462,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.textstoregex(texts",{"_index":3003,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.thing",{"_index":1703,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thing$.subscribe",{"_index":1707,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.things",{"_index":1957,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.things$.subscribe",{"_index":1960,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thingssub",{"_index":1959,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thingssub.unsubscribe",{"_index":1961,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thingsub",{"_index":1706,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thingsub.unsubscribe",{"_index":1710,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.timeformatter.formattimedifference(comment.createdat",{"_index":1048,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.timeformatter.formattimedifference(comment.lasteditedat",{"_index":1050,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.timeformatter.formattimedifference(this.issue$.current.createdat",{"_index":2766,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.timeformatter.formattimedifference(timelineitem.time",{"_index":5551,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["this.timeformatter.pluralize",{"_index":2784,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.timelineitem.iscoalesced",{"_index":5539,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.timelineitemcontent.template",{"_index":5542,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.timelineitemdeletedcontent.template",{"_index":5538,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.timelineitems",{"_index":883,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.timelineitems$.count",{"_index":890,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.timelineitemscontent",{"_index":5540,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.timelineitemscontent.template",{"_index":5541,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.title.value",{"_index":1608,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.titletext?.nativeelement.textcontent",{"_index":5327,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.toastr.error(message",{"_index":5620,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["this.toastr.info(message",{"_index":5622,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["this.unclassified",{"_index":3099,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.unknownerror",{"_index":3966,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.unlinkissuemutation.mutate({input",{"_index":3698,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.update",{"_index":2906,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.updatebutton",{"_index":5135,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.updatecommentmutation.mutate({input",{"_index":3707,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.updatecomponent",{"_index":4285,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.updatecomponentmutation.mutate({input",{"_index":1367,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.updateinterface",{"_index":4287,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.updateinterfacemutation.mutate({input",{"_index":2647,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.updatepasswordfieldsshown",{"_index":4830,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["this.updatequery.listento(this.componentstoreservice.updatecomponent(input",{"_index":4296,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.updatequery.listento(this.interfacestoreservice.update(mutationinputdata",{"_index":4300,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.updateresults",{"_index":4076,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.updateselecteditems",{"_index":1596,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.useravailablyquery.client",{"_index":5219,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.useravailablyquery.fetch({username",{"_index":5224,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.username(firstitem",{"_index":940,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.username(timelineitem",{"_index":948,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.usernameasyncvalidator",{"_index":5220,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform",{"_index":3967,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.validateform.controls.confirm.updatevalueandvalidity",{"_index":5232,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform.controls.password.reset",{"_index":3963,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.validateform.controls.password.value",{"_index":3961,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.validateform.controls[controlkey].markasdirty",{"_index":3956,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.validateform.controls[controlkey].updatevalueandvalidity",{"_index":3957,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.validateform.controls[key].markasdirty",{"_index":5234,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform.controls[key].markaspristine",{"_index":5241,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform.controls[key].updatevalueandvalidity",{"_index":5235,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform.reset",{"_index":5240,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validationdescription.setvalue(this.component.node.description",{"_index":4292,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationdescription.setvalue(this.interface.node.description",{"_index":4294,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationdescription.value",{"_index":4284,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationfilter.setvalue(this.getqueryparamfilter",{"_index":3538,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.validationims.setvalue",{"_index":4238,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationims.setvalue('http://example.ims.com",{"_index":4289,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationims.setvalue('this",{"_index":4242,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationlabeldescription.setvalue(data.description",{"_index":1503,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.validationlabelname.setvalue(data.name",{"_index":1500,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.validationname.setvalue(this.component.node.name",{"_index":4288,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationname.setvalue(this.interface.node.name",{"_index":4293,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationname.value",{"_index":4280,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationprovider.setvalue(this.component.node.ims.imstype",{"_index":4290,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationprovider.value",{"_index":4282,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationrole.setvalue('administrator",{"_index":253,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["this.validationurl.setvalue",{"_index":4239,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationurl.setvalue('http://example.repo.com",{"_index":4291,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationurl.setvalue(component.node.repositoryurl",{"_index":4243,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.value",{"_index":5459,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.verificationnameinput.markastouched",{"_index":2184,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.width",{"_index":1153,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.x",{"_index":3793,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.y",{"_index":3794,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.zoomonredraw",{"_index":4500,"title":{},"body":{"interfaces/Positions.html":{}}}],["though",{"_index":5172,"title":{},"body":{"interfaces/QueryListParams.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["through",{"_index":651,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueListComponent.html":{},"classes/MultiSourceList.html":{},"components/ProjectIssueListComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/User.html":{},"index.html":{}}}],["throw",{"_index":1942,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"miscellaneous/variables.html":{}}}],["thus",{"_index":5857,"title":{},"body":{"index.html":{}}}],["till",{"_index":6271,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["time",{"_index":819,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"additional-documentation/managing-gropius.html":{}}}],["timeformatter",{"_index":830,"title":{"classes/TimeFormatter.html":{}},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueDetailComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{}}}],["timeline",{"_index":199,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["timeline'},{'name",{"_index":197,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["timeline.component.html",{"_index":842,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["timeline.component.scss",{"_index":843,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelinecoalesceditemsdirective",{"_index":212,"title":{"directives/TimelineCoalescedItemsDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelinecomponent",{"_index":196,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelinecomponent.coalescable_events.get(itemtype",{"_index":912,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["timelineitem",{"_index":908,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelineitem.createdat",{"_index":949,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["timelineitem.createdby.id",{"_index":959,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["timelineitemcomponent",{"_index":198,"title":{"components/TimelineItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelineitemcontent",{"_index":5530,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelineitemdeletedcontent",{"_index":5534,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelineitemdeleteddirective",{"_index":214,"title":{"directives/TimelineItemDeletedDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelineitems",{"_index":864,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["timelineitemscontent",{"_index":5532,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelinesingleitemdirective",{"_index":216,"title":{"directives/TimelineSingleItemDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timeout",{"_index":1835,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["timestamp",{"_index":1838,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["tipping",{"_index":3420,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["title",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Position.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["title.value.length",{"_index":1642,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["titletext",{"_index":5298,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["tlmrgvf",{"_index":6273,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["toast",{"_index":2512,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["toasterconfig",{"_index":480,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toastr",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"dependencies.html":{}}}],["toastr.error(message",{"_index":2532,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["toastr.error(networkerror.message",{"_index":2538,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["toastrmodule",{"_index":418,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{}}}],["toastrmodule.forroot(toasterconfig",{"_index":485,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{}}}],["toasts",{"_index":476,"title":{},"body":{"modules/AppModule.html":{}}}],["todo",{"_index":64,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/CCIMSValidators.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"interfaces/userMock.html":{}}}],["toggle",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"components/CreateIssueDialogComponent.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{}}}],["toggleinset",{"_index":5343,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["toggleinset(item",{"_index":4155,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["togglemenu",{"_index":2272,"title":{},"body":{"components/FrameComponent.html":{}}}],["toggles",{"_index":2359,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["token",{"_index":11,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"additional-documentation/using-gropius.html":{}}}],["tokenpayload",{"_index":708,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["tokenpayload.name",{"_index":710,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["tokenpayload.sub",{"_index":711,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["tokens",{"_index":67,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["tool",{"_index":5934,"title":{},"body":{"index.html":{}}}],["toolbar",{"_index":2306,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":202,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["toolbar.component",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["toolbar.component.html",{"_index":5581,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":5580,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts",{"_index":5577,"title":{},"body":{"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["toolbar.component.ts:22",{"_index":5587,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:25",{"_index":5588,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:27",{"_index":5592,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:30",{"_index":5586,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:32",{"_index":5591,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:34",{"_index":5589,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:38",{"_index":5590,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar/top",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["top",{"_index":201,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["topbar",{"_index":2255,"title":{},"body":{"components/FrameComponent.html":{}}}],["topdistance",{"_index":3292,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["toptoolbarcomponent",{"_index":200,"title":{"components/TopToolbarComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tort",{"_index":6032,"title":{},"body":{"license.html":{}}}],["total",{"_index":2005,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["totalcount",{"_index":1967,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["towards",{"_index":3828,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["towardsother",{"_index":3817,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["towardsother.iszero",{"_index":3819,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["towardsother.length",{"_index":3826,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["towardsother.scale(1",{"_index":3827,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["track",{"_index":564,"title":{},"body":{"interfaces/AppState.html":{},"classes/LayoutNode.html":{},"injectables/StateService.html":{},"classes/Vector.html":{}}}],["trackbyfn",{"_index":3716,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["trackbyfn(item",{"_index":2214,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["transfered",{"_index":5026,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["transform",{"_index":1651,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/Positions.html":{}}}],["transition",{"_index":6158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transparent",{"_index":3727,"title":{},"body":{"components/LabelSearchComponent.html":{},"components/TimelineItemComponent.html":{}}}],["travel",{"_index":3786,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["treated",{"_index":5285,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["tree.root.children[primary_outlet",{"_index":603,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["tries",{"_index":3931,"title":{},"body":{"components/LoginComponent.html":{}}}],["trigger",{"_index":1848,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["trigger('routeanimations",{"_index":6157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["triggered",{"_index":4428,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{}}}],["triggering",{"_index":1808,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["triggers",{"_index":4817,"title":{},"body":{"interfaces/Positions.html":{}}}],["trubiani",{"_index":5946,"title":{},"body":{"index.html":{}}}],["true",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"injectables/UserNotifyService.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["try",{"_index":3392,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/LoginComponent.html":{}}}],["ts",{"_index":1889,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["tsconfig.doc.json",{"_index":5911,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["tslib",{"_index":5831,"title":{},"body":{"dependencies.html":{}}}],["tuple",{"_index":3388,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["turned",{"_index":3065,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["twice",{"_index":1906,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["two",{"_index":559,"title":{},"body":{"interfaces/AppState.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{},"classes/Vector.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["type",{"_index":42,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["typealiases",{"_index":6038,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":2173,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"components/RemoveDialogComponent.html":{},"interfaces/TextFragment.html":{}}}],["typename",{"_index":3887,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["typeof",{"_index":2141,"title":{},"body":{"injectables/DataService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["typeparam",{"_index":1821,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["types",{"_index":1820,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["typescript",{"_index":2335,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"dependencies.html":{},"additional-documentation/managing-gropius.html":{}}}],["u",{"_index":2246,"title":{},"body":{"interfaces/FilterState.html":{},"index.html":{}}}],["ul",{"_index":5572,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["uml",{"_index":5885,"title":{},"body":{"index.html":{}}}],["uncategorized",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{}}}],["unclassified",{"_index":1593,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["unclassifiedcount",{"_index":2393,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["undefined",{"_index":947,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":3766,"title":{},"body":{"classes/LayoutNode.html":{},"index.html":{}}}],["undone",{"_index":1037,"title":{},"body":{"components/CommentComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["uneditable",{"_index":2777,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["union",{"_index":2345,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{}}}],["unique",{"_index":2856,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["uniquely",{"_index":3879,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["unknown",{"_index":1932,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["unknownerror",{"_index":3936,"title":{},"body":{"components/LoginComponent.html":{}}}],["unlabelledevent",{"_index":848,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["unless",{"_index":1749,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"index.html":{}}}],["unlink",{"_index":3619,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unlink(unlinkissueinput",{"_index":3690,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unlinkevent",{"_index":859,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["unlinkissuegql",{"_index":3632,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unlinkissueinput",{"_index":3691,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unlinkissuemutation",{"_index":3631,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unnecessary",{"_index":2115,"title":{},"body":{"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["unsubscribe",{"_index":1709,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["unsubscribes",{"_index":4044,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["until",{"_index":1770,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["unused",{"_index":632,"title":{},"body":{"guards/AuthGuard.html":{}}}],["up",{"_index":558,"title":{},"body":{"interfaces/AppState.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{},"additional-documentation/using-gropius.html":{}}}],["update",{"_index":1070,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["update(input",{"_index":2639,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["updatebutton",{"_index":5146,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["updatecomment",{"_index":3620,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecomment(updatecommentinput",{"_index":3692,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecommentgql",{"_index":3646,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecommentinput",{"_index":3693,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecommentmutation",{"_index":3645,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecomponent",{"_index":1317,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["updatecomponent(input",{"_index":1355,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["updatecomponentgql",{"_index":1328,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["updatecomponentinput",{"_index":1356,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["updatecomponentinterfacegql",{"_index":2623,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["updatecomponentinterfaceinput",{"_index":2640,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["updatecomponentmutation",{"_index":1313,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["updated",{"_index":4197,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["updateinterface",{"_index":4194,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["updateinterfacemutation",{"_index":2622,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["updateissuecomment(math.random().tostring",{"_index":1024,"title":{},"body":{"components/CommentComponent.html":{}}}],["updatelabel(math.random().tostring",{"_index":1529,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["updatepassword",{"_index":4827,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["updatepasswordfieldsshown",{"_index":4824,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["updateposition",{"_index":1059,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["updateposition(x",{"_index":1066,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["updatequery",{"_index":4231,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["updateresults",{"_index":4018,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["updates",{"_index":1580,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"additional-documentation/managing-gropius.html":{}}}],["updateselectedcategories",{"_index":3057,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["updateselecteditems",{"_index":1572,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["updatetemplate(g",{"_index":3164,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["updating",{"_index":1309,"title":{},"body":{"injectables/ComponentStoreService.html":{},"interfaces/Positions.html":{}}}],["upon",{"_index":1796,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["upper",{"_index":4684,"title":{},"body":{"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["url",{"_index":548,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/FrameComponent.html":{},"components/IssueItemComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"injectables/StateService.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["urls",{"_index":6249,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["urlvalidator",{"_index":731,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["usable",{"_index":723,"title":{},"body":{"classes/CCIMSValidators.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["usage",{"_index":3991,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["use",{"_index":877,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/UsersService.html":{},"license.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["used",{"_index":635,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"directives/ItemDirective.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"classes/Vector.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["usefactory",{"_index":2556,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["useful",{"_index":5144,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["user",{"_index":204,"title":{"interfaces/User.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["user's",{"_index":6181,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["user.displayname",{"_index":258,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/UserItemComponent.html":{}}}],["user.username",{"_index":5601,"title":{},"body":{"components/UserItemComponent.html":{}}}],["user1",{"_index":4947,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user1.de",{"_index":4948,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user2",{"_index":4949,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user2.de",{"_index":4950,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user3",{"_index":4951,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user3.de",{"_index":4952,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user4",{"_index":4953,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user4.de",{"_index":4954,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user5",{"_index":4955,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user5.de",{"_index":4956,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user6",{"_index":4957,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user6.de",{"_index":4958,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["useravailablyquery",{"_index":5189,"title":{},"body":{"components/RegisterComponent.html":{}}}],["usercaneditissue",{"_index":2722,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["userfilter",{"_index":5638,"title":{},"body":{"injectables/UsersService.html":{}}}],["useritemcomponent",{"_index":203,"title":{"components/UserItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usermock",{"_index":5001,"title":{"interfaces/userMock.html":{}},"body":{"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["username",{"_index":676,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueFilterComponent.html":{},"components/LoginComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["username(item",{"_index":929,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["usernameasyncvalidator",{"_index":5182,"title":{},"body":{"components/RegisterComponent.html":{}}}],["usernotifyservice",{"_index":987,"title":{"injectables/UserNotifyService.html":{}},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/UserNotifyService.html":{},"coverage.html":{}}}],["users",{"_index":2891,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/QueriesService.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["users.service",{"_index":5085,"title":{},"body":{"injectables/QueriesService.html":{}}}],["usersservice",{"_index":5076,"title":{"injectables/UsersService.html":{}},"body":{"injectables/QueriesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userstoadd",{"_index":255,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["userstodelete",{"_index":5264,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["userstoragekey",{"_index":654,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["uses",{"_index":5637,"title":{},"body":{"injectables/UsersService.html":{},"additional-documentation/managing-gropius.html":{}}}],["usevalue",{"_index":490,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["using",{"_index":1665,"title":{"additional-documentation/using-gropius.html":{}},"body":{"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["ustutt/grapheditor",{"_index":1217,"title":{},"body":{"interfaces/ComponentNode.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"dependencies.html":{}}}],["utilize",{"_index":4357,"title":{},"body":{"interfaces/Positions.html":{}}}],["v",{"_index":3846,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["valid",{"_index":1447,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/IssueLabelComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{}}}],["validateconfirmpassword",{"_index":5185,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validateform",{"_index":3937,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validation",{"_index":234,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RegisterComponent.html":{}}}],["validationdescription",{"_index":1419,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validationerrors",{"_index":5213,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validationfilter",{"_index":3439,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["validationims",{"_index":1417,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validationlabeldescription",{"_index":1455,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["validationlabelname",{"_index":1456,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["validationname",{"_index":1413,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validationprovider",{"_index":1418,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validationrole",{"_index":235,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["validations",{"_index":1412,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["validationtype",{"_index":4186,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["validationurl",{"_index":1415,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validator",{"_index":1483,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["validatorfn",{"_index":2167,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["validators",{"_index":250,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["validators.compose([ccimsvalidators.namevalidator",{"_index":737,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["validators.email",{"_index":5221,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.maxlength(256",{"_index":746,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["validators.maxlength(30",{"_index":1484,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["validators.maxlength(655536",{"_index":732,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["validators.pattern",{"_index":738,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["validators.required",{"_index":247,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":51,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.email",{"_index":5238,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value.length",{"_index":5461,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["value.map((item",{"_index":2898,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["value.pageinfo",{"_index":2046,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["value.password",{"_index":5237,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value.totalcount",{"_index":2045,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["value.username",{"_index":5236,"title":{},"body":{"components/RegisterComponent.html":{}}}],["values",{"_index":2394,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/RegisterComponent.html":{}}}],["var",{"_index":96,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["variable",{"_index":4810,"title":{},"body":{"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"coverage.html":{}}}],["variables",{"_index":3133,"title":{"miscellaneous/variables.html":{}},"body":{"components/IssueGraphControlsComponent.html":{},"components/ProjectListComponent.html":{},"components/SideNavComponent.html":{},"miscellaneous/variables.html":{}}}],["variant",{"_index":2853,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["variants",{"_index":2852,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["various",{"_index":3712,"title":{},"body":{"directives/ItemDirective.html":{},"interfaces/Positions.html":{}}}],["vector",{"_index":3779,"title":{"classes/Vector.html":{}},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["vector(positionx",{"_index":3803,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["verbatim",{"_index":1752,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["verification",{"_index":5106,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["verificationname",{"_index":2160,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["verificationnameinput",{"_index":2182,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["verify",{"_index":752,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/RegisterComponent.html":{}}}],["version",{"_index":6188,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["versions",{"_index":1962,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["vertical",{"_index":2654,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueItemComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{}}}],["via",{"_index":1255,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"interfaces/TextFragment.html":{},"additional-documentation/managing-gropius.html":{}}}],["view",{"_index":225,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["viewchild",{"_index":829,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"interfaces/userMock.html":{}}}],["viewchild('body",{"_index":1583,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["viewchild('comment",{"_index":2676,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["viewchild('deletequery",{"_index":4228,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["viewchild('frame",{"_index":1139,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["viewchild('graph",{"_index":4346,"title":{},"body":{"interfaces/Positions.html":{}}}],["viewchild('minimap",{"_index":4349,"title":{},"body":{"interfaces/Positions.html":{}}}],["viewchild('nodequery",{"_index":4226,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["viewchild('resizecorner",{"_index":1141,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["viewchild('titleinput",{"_index":2739,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["viewchild('titletext",{"_index":5297,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["viewchild('updatequery",{"_index":4230,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["viewchild(issuegraphcomponent",{"_index":3078,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["viewchild(labelsearchcomponent",{"_index":3080,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["viewchild(matpaginator",{"_index":3488,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["viewchild(matpaginatormodule",{"_index":4961,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["viewchild(matsort",{"_index":3493,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["viewchild(nodedetailscomponent",{"_index":1145,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["viewchild(querycomponent",{"_index":871,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["viewers",{"_index":1801,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["views",{"_index":2250,"title":{},"body":{"components/FrameComponent.html":{}}}],["vincent",{"_index":6274,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["visibility",{"_index":4834,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["visibility_off",{"_index":4833,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["visible",{"_index":4546,"title":{},"body":{"interfaces/Positions.html":{},"index.html":{}}}],["visible.height",{"_index":4560,"title":{},"body":{"interfaces/Positions.html":{}}}],["visible.width",{"_index":4558,"title":{},"body":{"interfaces/Positions.html":{}}}],["visible.x",{"_index":4567,"title":{},"body":{"interfaces/Positions.html":{}}}],["visible.y",{"_index":4568,"title":{},"body":{"interfaces/Positions.html":{}}}],["visit",{"_index":5900,"title":{},"body":{"index.html":{}}}],["visited",{"_index":3808,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["visual",{"_index":4694,"title":{},"body":{"interfaces/Positions.html":{}}}],["visualization",{"_index":6167,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["visualize",{"_index":1245,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["visualized",{"_index":4666,"title":{},"body":{"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["visualizes",{"_index":5891,"title":{},"body":{"index.html":{},"additional-documentation/using-gropius.html":{}}}],["visualizing",{"_index":5887,"title":{},"body":{"index.html":{}}}],["void",{"_index":46,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["vs",{"_index":1249,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"components/MarkdownEditorComponent.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["vsc",{"_index":5971,"title":{},"body":{"index.html":{}}}],["wagner",{"_index":6261,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["wait",{"_index":1768,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":1035,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["wanted",{"_index":3945,"title":{},"body":{"components/LoginComponent.html":{}}}],["warning",{"_index":6246,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["warranties",{"_index":6020,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":6015,"title":{},"body":{"license.html":{}}}],["wasnt",{"_index":4741,"title":{},"body":{"interfaces/Positions.html":{}}}],["way",{"_index":5131,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["we'll",{"_index":3405,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["we're",{"_index":1954,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["weakmap",{"_index":1126,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["webcomponent",{"_index":5819,"title":{},"body":{"dependencies.html":{}}}],["webcomponent/lib/dynamic",{"_index":3152,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["webcomponent/lib/edge",{"_index":1219,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["webcomponent/lib/grapheditor",{"_index":3023,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{}}}],["webcomponent/lib/grouping",{"_index":3266,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["webcomponent/lib/index",{"_index":2566,"title":{},"body":{"modules/GraphsModule.html":{}}}],["webcomponent/lib/link",{"_index":3155,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{}}}],["webcomponent/lib/node",{"_index":1218,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["webcomponent/lib/util",{"_index":4325,"title":{},"body":{"interfaces/Positions.html":{}}}],["webkit",{"_index":4899,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TimelineItemComponent.html":{}}}],["weight",{"_index":1647,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SideNavComponent.html":{},"components/UserItemComponent.html":{}}}],["weird",{"_index":1630,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["well",{"_index":1055,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{},"additional-documentation/using-gropius.html":{}}}],["west",{"_index":4321,"title":{},"body":{"interfaces/Positions.html":{}}}],["weyns",{"_index":5948,"title":{},"body":{"index.html":{}}}],["what's",{"_index":5896,"title":{},"body":{"index.html":{},"additional-documentation/using-gropius.html":{}}}],["whatever",{"_index":5301,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["whenever",{"_index":3046,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/RegisterComponent.html":{}}}],["whether",{"_index":565,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{},"components/TopToolbarComponent.html":{},"license.html":{}}}],["white",{"_index":743,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueLabelComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["whitesmoke",{"_index":5164,"title":{},"body":{"components/QueryComponent.html":{}}}],["whitespace",{"_index":742,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["whole",{"_index":5849,"title":{},"body":{"index.html":{},"additional-documentation/using-gropius.html":{}}}],["whoose",{"_index":2378,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/LabelStoreService.html":{}}}],["whose",{"_index":4051,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["width",{"_index":78,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["window",{"_index":6169,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["within",{"_index":1258,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["without",{"_index":1728,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"components/SetEditorComponent.html":{},"injectables/UsersService.html":{},"license.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["won't",{"_index":1633,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["wont",{"_index":2931,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["word",{"_index":5468,"title":{},"body":{"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{}}}],["work",{"_index":5642,"title":{},"body":{"injectables/UsersService.html":{}}}],["workaround",{"_index":2354,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["worked",{"_index":5925,"title":{},"body":{"index.html":{}}}],["works",{"_index":2755,"title":{},"body":{"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{}}}],["wrap",{"_index":3996,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["wrapper",{"_index":1450,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["wrappers",{"_index":6211,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["write",{"_index":6205,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["writes",{"_index":1843,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ws.org/vol",{"_index":5981,"title":{},"body":{"index.html":{}}}],["x",{"_index":1072,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["x.name.tolocalelowercase().indexof(term.tolocalelowercase",{"_index":3744,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["x2",{"_index":3269,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["xmax",{"_index":4786,"title":{},"body":{"interfaces/Positions.html":{}}}],["xmin",{"_index":4784,"title":{},"body":{"interfaces/Positions.html":{}}}],["xoffset",{"_index":3294,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["y",{"_index":1068,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["y2",{"_index":3270,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["year",{"_index":5514,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["yes",{"_index":1467,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{},"components/QueryComponent.html":{},"injectables/UserNotifyService.html":{}}}],["yielded",{"_index":5105,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["ymax",{"_index":4787,"title":{},"body":{"interfaces/Positions.html":{}}}],["ymin",{"_index":4785,"title":{},"body":{"interfaces/Positions.html":{}}}],["yoffset",{"_index":3295,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["you've",{"_index":2038,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["z",{"_index":5558,"title":{},"body":{"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["zdun",{"_index":5949,"title":{},"body":{"index.html":{}}}],["zero",{"_index":2063,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["zeroposition",{"_index":1261,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["zone.js",{"_index":5834,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"interfaces/Positions.html":{},"overview.html":{}}}],["zoomonredraw",{"_index":4373,"title":{},"body":{"interfaces/Positions.html":{}}}],["zooms",{"_index":4749,"title":{},"body":{"interfaces/Positions.html":{}}}],["zoomtransform",{"_index":4736,"title":{},"body":{"interfaces/Positions.html":{}}}],["zoomtransformasstring",{"_index":4737,"title":{},"body":{"interfaces/Positions.html":{}}}],["zorro",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccessTokenDialogComponent.html":{"url":"components/AccessTokenDialogComponent.html","title":"component - AccessTokenDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccessTokenDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/access-token-dialog/access-token-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-access-token-dialog\n            \n\n            \n                styleUrls\n                ./access-token-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./access-token-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeDialog\n                            \n                            \n                                    Public\n                                generateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'option2'\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-access-token-dialog',\n  templateUrl: './access-token-dialog.component.html',\n  styleUrls: ['./access-token-dialog.component.scss']\n})\nexport class AccessTokenDialogComponent implements OnInit {\n  selected = 'option2';\n\n  constructor(public dialogRef: MatDialogRef, private dialog: MatDialog) {}\n\n  ngOnInit(): void {}\n\n  //close access token settings dialog\n  public closeDialog() {\n    this.dialogRef.close();\n  }\n\n  public generateToken() {\n    //TODO\n  }\n}\n\n    \n\n    \n        \n  \n    close_ios\n  \n\n  Personal access tokens\n  Generate a personal access token for quicker access ...\n\n  \n    \n      Note\n      \n    \n  \n\n  \n    Expitarion\n    \n      7 days\n      30 days\n      60 days\n      90 days\n    \n  \n\n  \n\n  Generate Token\n\n  Cancel\n\n\n    \n\n    \n                \n                    ./access-token-dialog.component.scss\n                \n                .dialog {\n  width: 500px;\n}\n\n.example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n\n.example-full-width {\n  width: 100%;\n}\n\n.new-item-button {\n  float: right;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      close_ios    Personal access tokens  Generate a personal access token for quicker access ...            Note                  Expitarion          7 days      30 days      60 days      90 days          Generate Token  Cancel'\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccessTokenDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddProjectMemberDialogComponent.html":{"url":"components/AddProjectMemberDialogComponent.html","title":"component - AddProjectMemberDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddProjectMemberDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component provides a view to add a member to a project\nThe view is just mocked, so no interaction with the backend or database is provided yet\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-project-member-dialog\n            \n\n            \n                styleUrls\n                ./add-project-member-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-project-member-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                loading\n                            \n                            \n                                selectedUsers\n                            \n                            \n                                validation\n                            \n                            \n                                validationRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                            \n                                onOkClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOkClick\n                        \n                    \n                \n            \n            \n                \nonOkClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationRole\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n/**\n * This component provides a view to add a member to a project\n * The view is just mocked, so no interaction with the backend or database is provided yet\n */\n@Component({\n  selector: 'app-add-project-member-dialog',\n  templateUrl: './add-project-member-dialog.component.html',\n  styleUrls: ['./add-project-member-dialog.component.scss']\n})\nexport class AddProjectMemberDialogComponent implements OnInit {\n  loading = false;\n  selectedUsers = [];\n  constructor(public dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data) {}\n  validation = new FormControl('', [Validators.required]);\n  validationRole = new FormControl('', [Validators.required]);\n  ngOnInit(): void {\n    this.validationRole.setValue('administrator');\n  }\n\n  //cancel button\n  onNoClick() {\n    this.dialogRef.close();\n  }\n\n  //add member button\n  onOkClick() {\n    const data = {usersToAdd: this.selectedUsers};\n    this.dialogRef.close(data);\n  }\n}\n\n    \n\n    \n        Add Project Member\n\n  \n  \n     {{ user.displayName }} \n  \n\n  \n  \n    Role\n    \n      Administrator\n    \n  \n\n\n\n  Cancel\n  \n    Add\n  \n\n\n    \n\n    \n                \n                    ./add-project-member-dialog.component.scss\n                \n                .dialog-content {\n  min-height: 400px;\n  min-width: 400px;\n  max-width: 600px;\n}\n.actions {\n  float: right;\n}\n.stretch {\n  width: 100%;\n}\n\n.mat-success {\n  background-color: green;\n  color: #fff;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Add Project Member         {{ user.displayName }}           Role          Administrator        Cancel      Add  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddProjectMemberDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matIconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Gropius'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {MatIconRegistry} from '@angular/material/icon';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Gropius';\n\n  constructor(private matIconRegistry: MatIconRegistry, private domSanitizer: DomSanitizer) {\n    const ccimsIcons = {\n      'relation-edge': 'relation-edge.svg',\n      'resize-corner': 'resize-corner.svg'\n    };\n\n    for (const [key, value] of Object.entries(ccimsIcons)) {\n      console.log('register', key, 'as', '../assets/icons/svg/' + value);\n      this.matIconRegistry.addSvgIcon(key, this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/icons/svg/' + value));\n    }\n\n    // add all issue icons\n    for (const type of ['normal', 'assigned']) {\n      for (const category of ['bug', 'feature', 'uncategorized']) {\n        for (const isClosed of [false, true]) {\n          for (const edgeType of [null, 'in', 'out', 'inout']) {\n            const assetUrl = [\n              '../assets/icons/issues/',\n              type,\n              '/',\n              category,\n              isClosed ? '-closed' : null,\n              edgeType && '-',\n              edgeType,\n              '.svg'\n            ]\n              .filter((part) => !!part)\n              .join('');\n            const iconName = ['issue', type === 'assigned' ? 'assigned' : null, category, isClosed ? 'closed' : null, edgeType]\n              .filter((part) => !!part)\n              .join('-');\n            this.matIconRegistry.addSvgIcon(iconName, this.domSanitizer.bypassSecurityTrustResourceUrl(assetUrl));\n          }\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAccessTokenDialogComponent\n\nAccessTokenDialogComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccessTokenDialogComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nComponentContextMenuComponent\n\nComponentContextMenuComponent\n\nAppModule -->\n\nComponentContextMenuComponent->AppModule\n\n\n\n\n\nCreateComponentDialogComponent\n\nCreateComponentDialogComponent\n\nAppModule -->\n\nCreateComponentDialogComponent->AppModule\n\n\n\n\n\nCreateEditLabelDialogComponent\n\nCreateEditLabelDialogComponent\n\nAppModule -->\n\nCreateEditLabelDialogComponent->AppModule\n\n\n\n\n\nCreateInterfaceDialogComponent\n\nCreateInterfaceDialogComponent\n\nAppModule -->\n\nCreateInterfaceDialogComponent->AppModule\n\n\n\n\n\nCreateIssueDialogComponent\n\nCreateIssueDialogComponent\n\nAppModule -->\n\nCreateIssueDialogComponent->AppModule\n\n\n\n\n\nCreateProjectDialogComponent\n\nCreateProjectDialogComponent\n\nAppModule -->\n\nCreateProjectDialogComponent->AppModule\n\n\n\n\n\nFrameComponent\n\nFrameComponent\n\nAppModule -->\n\nFrameComponent->AppModule\n\n\n\n\n\nIssueContentsComponent\n\nIssueContentsComponent\n\nAppModule -->\n\nIssueContentsComponent->AppModule\n\n\n\n\n\nIssueDetailComponent\n\nIssueDetailComponent\n\nAppModule -->\n\nIssueDetailComponent->AppModule\n\n\n\n\n\nLinkedIssueItemComponent\n\nLinkedIssueItemComponent\n\nAppModule -->\n\nLinkedIssueItemComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMarkdownEditorComponent\n\nMarkdownEditorComponent\n\nAppModule -->\n\nMarkdownEditorComponent->AppModule\n\n\n\n\n\nMarkdownPreviewComponent\n\nMarkdownPreviewComponent\n\nAppModule -->\n\nMarkdownPreviewComponent->AppModule\n\n\n\n\n\nNodeDetailsComponent\n\nNodeDetailsComponent\n\nAppModule -->\n\nNodeDetailsComponent->AppModule\n\n\n\n\n\nNodeDetailsPageComponent\n\nNodeDetailsPageComponent\n\nAppModule -->\n\nNodeDetailsPageComponent->AppModule\n\n\n\n\n\nProfileSettingsDialogComponent\n\nProfileSettingsDialogComponent\n\nAppModule -->\n\nProfileSettingsDialogComponent->AppModule\n\n\n\n\n\nProjectListComponent\n\nProjectListComponent\n\nAppModule -->\n\nProjectListComponent->AppModule\n\n\n\n\n\nProjectOverviewComponent\n\nProjectOverviewComponent\n\nAppModule -->\n\nProjectOverviewComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nRemoveDialogComponent\n\nRemoveDialogComponent\n\nAppModule -->\n\nRemoveDialogComponent->AppModule\n\n\n\n\n\nRemoveProjectMemberComponentComponent\n\nRemoveProjectMemberComponentComponent\n\nAppModule -->\n\nRemoveProjectMemberComponentComponent->AppModule\n\n\n\n\n\nSettingsDialogComponent\n\nSettingsDialogComponent\n\nAppModule -->\n\nSettingsDialogComponent->AppModule\n\n\n\n\n\nSideNavComponent\n\nSideNavComponent\n\nAppModule -->\n\nSideNavComponent->AppModule\n\n\n\n\n\nTextDisplayComponent\n\nTextDisplayComponent\n\nAppModule -->\n\nTextDisplayComponent->AppModule\n\n\n\n\n\nTimelineCoalescedItemsDirective\n\nTimelineCoalescedItemsDirective\n\nAppModule -->\n\nTimelineCoalescedItemsDirective->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nTimelineItemComponent\n\nTimelineItemComponent\n\nAppModule -->\n\nTimelineItemComponent->AppModule\n\n\n\n\n\nTimelineItemDeletedDirective\n\nTimelineItemDeletedDirective\n\nAppModule -->\n\nTimelineItemDeletedDirective->AppModule\n\n\n\n\n\nTimelineSingleItemDirective\n\nTimelineSingleItemDirective\n\nAppModule -->\n\nTimelineSingleItemDirective->AppModule\n\n\n\n\n\nTopToolbarComponent\n\nTopToolbarComponent\n\nAppModule -->\n\nTopToolbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nGraphsModule\n\nGraphsModule\n\nAppModule -->\n\nGraphsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccessTokenDialogComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CommentComponent\n                        \n                        \n                            ComponentContextMenuComponent\n                        \n                        \n                            CreateComponentDialogComponent\n                        \n                        \n                            CreateEditLabelDialogComponent\n                        \n                        \n                            CreateInterfaceDialogComponent\n                        \n                        \n                            CreateIssueDialogComponent\n                        \n                        \n                            CreateProjectDialogComponent\n                        \n                        \n                            FrameComponent\n                        \n                        \n                            IssueContentsComponent\n                        \n                        \n                            IssueDetailComponent\n                        \n                        \n                            LinkedIssueItemComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MarkdownEditorComponent\n                        \n                        \n                            MarkdownPreviewComponent\n                        \n                        \n                            NodeDetailsComponent\n                        \n                        \n                            NodeDetailsPageComponent\n                        \n                        \n                            ProfileSettingsDialogComponent\n                        \n                        \n                            ProjectListComponent\n                        \n                        \n                            ProjectOverviewComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            RemoveDialogComponent\n                        \n                        \n                            RemoveProjectMemberComponentComponent\n                        \n                        \n                            SettingsDialogComponent\n                        \n                        \n                            SideNavComponent\n                        \n                        \n                            TextDisplayComponent\n                        \n                        \n                            TimelineCoalescedItemsDirective\n                        \n                        \n                            TimelineComponent\n                        \n                        \n                            TimelineItemComponent\n                        \n                        \n                            TimelineItemDeletedDirective\n                        \n                        \n                            TimelineSingleItemDirective\n                        \n                        \n                            TopToolbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            GraphQLModule\n                        \n                        \n                            GraphsModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {LayoutModule} from '@angular/cdk/layout';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {ProjectListComponent} from './project-list-component/project-list.component';\nimport {ProjectOverviewComponent} from './project-overview/project-overview.component';\nimport {TopToolbarComponent} from './top-toolbar/top-toolbar.component';\nimport {SideNavComponent} from './side-nav/side-nav.component';\nimport {GraphQLModule} from './graphql.module';\nimport {HttpClientModule} from '@angular/common/http';\nimport {IssueDetailComponent} from './issue-detail/issue-detail.component';\nimport {GraphsModule} from './graphs/graphs.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NZ_ICONS} from 'ng-zorro-antd/icon';\nimport {en_US, NZ_I18N} from 'ng-zorro-antd/i18n';\nimport {NgZorroAntdModule} from 'ng-zorro-antd';\nimport * as AllIcons from '@ant-design/icons-angular/icons';\nimport {IconDefinition} from '@ant-design/icons-angular';\nimport {CommonModule, registerLocaleData} from '@angular/common';\nimport en from '@angular/common/locales/en';\nimport {LoginComponent} from './login/login.component';\nimport {FrameComponent} from './frame/frame.component';\nimport {RegisterComponent} from './register/register.component';\nimport {CreateProjectDialogComponent} from 'src/app/dialogs/create-project-dialog/create-project-dialog.component';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {GlobalConfig, ToastrModule} from 'ngx-toastr';\nimport {RemoveDialogComponent} from './dialogs/remove-dialog/remove-dialog.component';\nimport {CreateComponentDialogComponent} from './dialogs/create-component-dialog/create-component-dialog.component';\nimport {CreateInterfaceDialogComponent} from './dialogs/create-interface-dialog/create-interface-dialog.component';\nimport {CreateIssueDialogComponent} from './dialogs/create-issue-dialog/create-issue-dialog.component';\nimport {NgSelectModule} from '@ng-select/ng-select';\nimport {NgOptionHighlightModule} from '@ng-select/ng-option-highlight';\nimport {ColorPickerModule} from 'ngx-color-picker';\nimport {CreateEditLabelDialogComponent} from '@app/dialogs/create-label-dialog/create-edit-label-dialog.component';\nimport {RemoveProjectMemberComponentComponent} from './dialogs/remove-project-member-component/remove-project-member-component.component';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ComponentContextMenuComponent} from '@app/graphs/component-context-menu/component-context-menu.component';\nimport {NodeDetailsComponent} from '@app/node-details/node-details.component';\nimport {MonacoEditorModule} from 'ngx-monaco-editor';\nimport {MarkdownEditorComponent} from './markdown/markdown-editor/markdown-editor.component';\nimport {MarkdownModule} from 'ngx-markdown';\nimport {MarkdownPreviewComponent} from './markdown/markdown-preview/markdown-preview.component';\nimport {TimelineComponent} from './issue-detail/timeline/timeline.component';\nimport {CommentComponent} from './issue-detail/comment/comment.component';\nimport {NodeDetailsPageComponent} from '@app/node-details-page/node-details-page.component';\nimport {TextDisplayComponent} from '@app/text-display/text-display.component';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {IssueContentsComponent} from '@app/issue-detail/issue-contents.component';\nimport {LinkedIssueItemComponent} from '@app/issue-detail/linked-issue-item.component';\nimport {SettingsDialogComponent} from '@app/dialogs/settings-dialog/settings-dialog.component';\nimport {ProfileSettingsDialogComponent} from './dialogs/profile-settings-dialog/profile-settings-dialog.component';\nimport {AccessTokenDialogComponent} from './dialogs/access-token-dialog/access-token-dialog.component';\nimport {\n  TimelineCoalescedItemsDirective,\n  TimelineItemComponent,\n  TimelineItemDeletedDirective,\n  TimelineSingleItemDirective\n} from '@app/issue-detail/timeline/coalesced/timeline-item.component';\n\nregisterLocaleData(en);\nconst antDesignIcons = AllIcons as {\n  [key: string]: IconDefinition;\n};\nconst icons: IconDefinition[] = Object.keys(antDesignIcons).map((key) => antDesignIcons[key]);\n\n// configuration for toasts, the toastrservice is configured in graphql.module.ts\nconst toasterConfig: Partial = {\n  maxOpened: 4,\n  autoDismiss: true\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProjectListComponent,\n    ProjectOverviewComponent,\n    TopToolbarComponent,\n    SideNavComponent,\n    IssueDetailComponent,\n    LoginComponent,\n    FrameComponent,\n    RegisterComponent,\n    CreateProjectDialogComponent,\n    RemoveDialogComponent,\n    CreateComponentDialogComponent,\n    CreateInterfaceDialogComponent,\n    CreateIssueDialogComponent,\n    CreateEditLabelDialogComponent,\n    RemoveProjectMemberComponentComponent,\n    ComponentContextMenuComponent,\n    NodeDetailsComponent,\n    NodeDetailsPageComponent,\n    MarkdownEditorComponent,\n    MarkdownPreviewComponent,\n    TimelineComponent,\n    CommentComponent,\n    TextDisplayComponent,\n    IssueContentsComponent,\n    LinkedIssueItemComponent,\n    SettingsDialogComponent,\n    ProfileSettingsDialogComponent,\n    AccessTokenDialogComponent,\n    TimelineItemComponent,\n    TimelineSingleItemDirective,\n    TimelineCoalescedItemsDirective,\n    TimelineItemDeletedDirective\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(toasterConfig),\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatTabsModule,\n    MatSlideToggleModule,\n    GraphQLModule,\n    HttpClientModule,\n    GraphsModule,\n    MatDialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgZorroAntdModule,\n    NgSelectModule,\n    CommonModule,\n    NgOptionHighlightModule,\n    ColorPickerModule,\n    MatExpansionModule,\n    PortalModule,\n    MonacoEditorModule.forRoot(),\n    MarkdownModule.forRoot(),\n    MatButtonToggleModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  providers: [\n    {provide: NZ_I18N, useValue: en_US},\n    {provide: NZ_ICONS, useValue: icons}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {ProjectListComponent} from './project-list-component/project-list.component';\nimport {ProjectOverviewComponent} from './project-overview/project-overview.component';\nimport {IssueDetailComponent} from './issue-detail/issue-detail.component';\nimport {IssueGraphControlsComponent} from './graphs/issue-graph-controls/issue-graph-controls.component';\nimport {LoginComponent} from './login/login.component';\nimport {FrameComponent} from './frame/frame.component';\nimport {AuthGuard} from './auth/auth.guard';\nimport {RegisterComponent} from './register/register.component';\nimport {ProjectIssueListComponent} from './project-issue-list/project-issue-list.component';\nimport {ProjectMembersComponent} from './project-members/project-members.component';\nimport {NodeDetailsPageComponent} from '@app/node-details-page/node-details-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FrameComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {path: '', redirectTo: 'projects', pathMatch: 'full'},\n      {path: 'projects', component: ProjectListComponent},\n      {\n        path: 'projects/:id',\n        children: [\n          {path: '', pathMatch: 'full', component: ProjectOverviewComponent},\n          {path: 'graph', component: IssueGraphControlsComponent},\n          {\n            path: 'issues',\n            children: [\n              {\n                path: '',\n                pathMatch: 'full',\n                component: ProjectIssueListComponent\n              },\n              {\n                path: ':issueId',\n                pathMatch: 'full',\n                component: IssueDetailComponent\n              }\n            ]\n          },\n          {path: 'members', component: ProjectMembersComponent},\n          {\n            path: 'component/:componentId',\n            children: [\n              {\n                path: '',\n                pathMatch: 'full',\n                component: NodeDetailsPageComponent\n              },\n              {\n                path: 'interface/:interfaceId',\n                children: [\n                  {\n                    path: '',\n                    pathMatch: 'full',\n                    component: NodeDetailsPageComponent\n                  },\n                  {\n                    path: 'component/:componentId/issue/:issueId',\n                    pathMatch: 'full',\n                    component: IssueDetailComponent\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            path: 'interface/:interfaceId',\n            children: [\n              {\n                path: '',\n                pathMatch: 'full',\n                component: NodeDetailsPageComponent\n              }\n            ]\n          }\n        ]\n      },\n      {path: 'issue', component: IssueDetailComponent}\n    ]\n  },\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent},\n  // otherwise redirect to home\n  {path: '**', redirectTo: ''}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            project\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        project\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        project:     GetBasicProjectQuery\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GetBasicProjectQuery\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {NavigationEnd, PRIMARY_OUTLET, Router} from '@angular/router';\nimport {ReplaySubject} from 'rxjs';\nimport {filter, switchMap} from 'rxjs/operators';\nimport {GetBasicProjectQuery} from 'src/generated/graphql';\nimport {ProjectStoreService} from './data/project/project-store.service';\n\n/**\n * This service exposes an observable of the name and id of the current project.\n * It determines the current project by listening for url changes and parsing the url.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n  state: AppState = {};\n  state$ = new ReplaySubject(1);\n\n  constructor(private router: Router, private ps: ProjectStoreService) {\n    this.syncStateWithUrl(router, ps);\n  }\n\n  /**\n   * Sets up two mutually exclusive (look at filter) subscriptions to track whether we are at a\n   * url referring to a project or not. If we are at a project we retrieve information about it\n   * from the backend and make it available in the state observable\n   *\n   * @param router allows to listen for routing events\n   * @param ps\n   */\n  syncStateWithUrl(router: Router, ps: ProjectStoreService) {\n    router.events\n      .pipe(\n        filter((event) => event instanceof NavigationEnd && this.isProjectURL(event.url)),\n        switchMap((event: NavigationEnd) =>\n          ps.getBasicProject(this.router.parseUrl(event.url).root?.children[PRIMARY_OUTLET].segments[1].path)\n        )\n      )\n      .subscribe((project) => {\n        this.state.project = project;\n        this.state$.next(this.state);\n      });\n    // set project to null if new url is not specific to a project\n    router.events.pipe(filter((event) => event instanceof NavigationEnd && !this.isProjectURL(event.url))).subscribe((_) => {\n      this.state.project = null;\n      this.state$.next(this.state);\n    });\n  }\n\n  /**\n   * Caution:\n   * If you change the routing you might have to change this function too.\n   * That is if it has the form 'projects/:id' + further stuff.\n   * @param url\n   * @returns true iff url is a route pertaining to a project\n   */\n  private isProjectURL(url: string): boolean {\n    const tree = this.router.parseUrl(url);\n    const primary = tree.root.children[PRIMARY_OUTLET];\n    if (primary) {\n      const primarySegments = primary.segments;\n      return primarySegments[0].path === 'projects' && primary.segments.length >= 2;\n    }\n    return false;\n  }\n}\n\nexport interface AppState {\n  project?: GetBasicProjectQuery;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    AuthGuard is responsible for navigating the user to /login when he is not\ncurrently logged in according to the AuthenticationsService. It's canActivate\nmethod is automatically invoked by angular on routing events.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:19\n                \n            \n\n\n            \n                \n                    Redirects user to login if he is not authenticated.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        unused but required for CanActivate signature\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        router state when guard was invoked, used to redirect the user after login\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true iff the user is logged in according to the AuthenticationService\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\nimport {AuthenticationService} from './authentication.service';\n\n/** AuthGuard is responsible for navigating the user to /login when he is not\n * currently logged in according to the AuthenticationsService. It's canActivate\n * method is automatically invoked by angular on routing events.\n */\n@Injectable({providedIn: 'root'})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router, private authenticationService: AuthenticationService) {}\n\n  /**\n   * Redirects user to login if he is not authenticated.\n   * @param route unused but required for CanActivate signature\n   * @param state router state when guard was invoked, used to redirect the user after login\n   * @returns true iff the user is logged in according to the AuthenticationService\n   */\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      // logged in so return true\n      return true;\n    }\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], {queryParams: {returnUrl: state.url}});\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/authentication.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Responsible for saving user name, id and jwt token in localstorage\nand exposing the name and id through currentUserSubject\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Private\n                                currentUserSubject\n                            \n                            \n                                    Readonly\n                                userStorageKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchUserFromStorage\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                saveUserToStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentUserValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/authentication.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchUserFromStorage\n                        \n                    \n                \n            \n            \n                \nfetchUserFromStorage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/authentication.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         User\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/authentication.service.ts:42\n                \n            \n\n\n            \n                \n                    If login is sucessfull save the user name, id and jwt token to local storage and expose the name and id\nthrough currentUserSubject. If the login fails the returned observable errors.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        provided by user to LoginComponent\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        provided by user to LoginComponent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the logged in user, errors if login is not successful\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/authentication.service.ts:59\n                \n            \n\n\n            \n                \n                    remove user from local storage and set subject holding the current user to null\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUserToStorage\n                        \n                    \n                \n            \n            \n                \nsaveUserToStorage(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/authentication.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/authentication.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/authentication.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        userStorageKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'currentUser'\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/authentication.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentUserValue\n                    \n                \n\n                \n                    \n                        getcurrentUserValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/authentication.service.ts:23\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {environment} from '@environments/environment';\nimport {Router} from '@angular/router';\nimport {map} from 'rxjs/operators';\n\n/**\n * Responsible for saving user name, id and jwt token in localstorage\n * and exposing the name and id through currentUserSubject\n */\n@Injectable({providedIn: 'root'})\nexport class AuthenticationService {\n  readonly userStorageKey = 'currentUser';\n  private currentUserSubject: BehaviorSubject;\n  public currentUser: Observable;\n\n  constructor(private http: HttpClient, private router: Router) {\n    this.currentUserSubject = new BehaviorSubject(this.fetchUserFromStorage());\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  fetchUserFromStorage(): User {\n    return JSON.parse(localStorage.getItem(this.userStorageKey));\n  }\n\n  saveUserToStorage(user: User): void {\n    localStorage.setItem(this.userStorageKey, JSON.stringify(user));\n  }\n\n  /**\n   * If login is sucessfull save the user name, id and jwt token to local storage and expose the name and id\n   * through currentUserSubject. If the login fails the returned observable errors.\n   * @param username provided by user to LoginComponent\n   * @param password provided by user to LoginComponent\n   * @returns the logged in user, errors if login is not successful\n   */\n  login(username: string, password: string): Observable {\n    return this.http.post(environment.loginUrl, {username, password}).pipe(\n      map((response) => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('token', response.token);\n        const tokenPayload = JSON.parse(atob(response.token.split('.')[1]));\n        const user = {name: tokenPayload.name, id: tokenPayload.sub};\n        this.saveUserToStorage(user);\n        this.currentUserSubject.next(user);\n        return user;\n      })\n    );\n  }\n\n  /**\n   * remove user from local storage and set subject holding the current user to null\n   */\n  logout() {\n    localStorage.removeItem('currentUser');\n    localStorage.removeItem('token');\n    this.router.navigate(['login']);\n    this.currentUserSubject.next(null);\n  }\n}\n\ninterface User {\n  name: string;\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CCIMSValidators.html":{"url":"classes/CCIMSValidators.html","title":"class - CCIMSValidators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CCIMSValidators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/validators.ts\n        \n\n\n            \n                Description\n            \n            \n                This class provides commonly used validators in CCIMS usable for e.g. input fields\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                contentValidator\n                            \n                            \n                                    Static\n                                    Readonly\n                                nameFormatValidator\n                            \n                            \n                                    Static\n                                    Readonly\n                                nameValidator\n                            \n                            \n                                    Static\n                                    Readonly\n                                urlValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        contentValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Validators.maxLength(655536)\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/validators.ts:27\n                        \n                    \n\n            \n                \n                    Ensures that the text has the appropriate length for content\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        nameFormatValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Validators.compose([CCIMSValidators.nameValidator, Validators.pattern('([^ ]+ )*([^ ]+)+')])\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/validators.ts:16\n                        \n                    \n\n            \n                \n                    Ensures that the text is both usable as a name (#nameValidator) and that the text does not start/end with\na whitespace (white-spaces in the name are allowed)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        nameValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Validators.maxLength(256)\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/validators.ts:10\n                        \n                    \n\n            \n                \n                    Ensures that text has the appropriate length to be used as a name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        urlValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Validators.maxLength(655536)\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/validators.ts:22\n                        \n                    \n\n            \n                \n                    Ensures that the provided text has the correct length and the correct format for an URL\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Validators} from '@angular/forms';\n\n/**\n * This class provides commonly used validators in CCIMS usable for e.g. input fields\n */\nexport class CCIMSValidators {\n  /**\n   * Ensures that text has the appropriate length to be used as a name\n   */\n  static readonly nameValidator = Validators.maxLength(256);\n\n  /**\n   * Ensures that the text is both usable as a name ({@link #nameValidator}) and that the text does not start/end with\n   * a whitespace (white-spaces in the name are allowed)\n   */\n  static readonly nameFormatValidator = Validators.compose([CCIMSValidators.nameValidator, Validators.pattern('([^ ]+ )*([^ ]+)+')]);\n\n  /**\n   * Ensures that the provided text has the correct length and the correct format for an URL\n   */\n  // TODO: Verify URL pattern, leaving this out for now for quicker testing\n  static readonly urlValidator = Validators.maxLength(655536);\n\n  /**\n   * Ensures that the text has the appropriate length for content\n   */\n  static readonly contentValidator = Validators.maxLength(655536);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CacheNodeComponent.html":{"url":"components/CacheNodeComponent.html","title":"component - CacheNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CacheNodeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/cache-node.component.ts\n\n\n\n    \n        Description\n    \n    \n        Loads data for a node from the cache or from the API.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                [cache-node]\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                itemTemplate\n                            \n                            \n                                node$\n                            \n                            \n                                nodeSub\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lazy\n                            \n                            \n                                node\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/cache-node.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lazy\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cache-node.component.ts:21\n                            \n                        \n                \n                    \n                        If true, this component will subscribe to the node lazily (i.e. it will not fetch new data if data is cached already)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        node\n                    \n                \n                \n                    \n                        Type :         NodeId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cache-node.component.ts:19\n                            \n                        \n                \n                    \n                        The node that will be loaded.\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        itemTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(ItemDirective, {read: TemplateRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/cache-node.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        node$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cache-node.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cache-node.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, ContentChild, Input, OnDestroy, OnInit, TemplateRef} from '@angular/core';\nimport {ItemDirective} from '@app/components/item.directive';\nimport DataService from '@app/data-dgql';\nimport {NodeId} from '@app/data-dgql/id';\nimport {DataNode} from '@app/data-dgql/query';\nimport {Subscription} from 'rxjs';\n\n/**\n * Loads data for a node from the cache or from the API.\n */\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: '[cache-node]',\n  template:\n    ''\n})\nexport class CacheNodeComponent implements OnInit, OnDestroy {\n  /** The node that will be loaded. */\n  @Input() node: NodeId;\n  /** If true, this component will subscribe to the node lazily (i.e. it will not fetch new data if data is cached already) */\n  @Input() lazy = true;\n  @ContentChild(ItemDirective, {read: TemplateRef}) itemTemplate;\n\n  node$: DataNode;\n  nodeSub: Subscription;\n\n  constructor(private dataService: DataService) {}\n\n  ngOnInit() {\n    this.node$ = this.dataService.getNode(this.node);\n    this.nodeSub = this.lazy ? this.node$.subscribeLazy() : this.node$.subscribe();\n  }\n  ngOnDestroy() {\n    this.nodeSub.unsubscribe();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CacheNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoalescedTimelineItem.html":{"url":"interfaces/CoalescedTimelineItem.html","title":"interface - CoalescedTimelineItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoalescedTimelineItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/timeline/timeline.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This interface may contain in contrast to a normal timeline item several events in one item.\nTimeline items are coalesced because they are performed in close succession.\nlabel 1 and label 2 are added to an issue at the same time.\nInstead of representing them as to individual items/events, they will be represented as one item in the timeline.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isCoalesced\n                                        \n                                \n                                \n                                        \n                                            item\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isCoalesced\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCoalesced:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        item:     Array | IssueTimelineItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array | IssueTimelineItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {AfterViewInit, Component, Input, ViewChild} from '@angular/core';\nimport {TimeFormatter} from '@app/issue-detail/time-formatter';\nimport {Router} from '@angular/router';\nimport {IssueTimelineItem} from '../../../generated/graphql-dgql';\nimport {DataList} from '@app/data-dgql/query';\nimport DataService from '@app/data-dgql';\nimport {ListType, NodeId, NodeType} from '@app/data-dgql/id';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n/**\n * This interface may contain in contrast to a normal timeline item several events in one item.\n * Timeline items are coalesced because they are performed in close succession.\n * @example\n * label 1 and label 2 are added to an issue at the same time.\n * Instead of representing them as to individual items/events, they will be represented as one item in the timeline.\n */\nexport interface CoalescedTimelineItem {\n  user: string;\n  type: string;\n  isCoalesced: boolean;\n  item: Array | IssueTimelineItem;\n  time: string;\n}\n\ntype ItemFilterFunction = (IssueTimelineItem) => boolean;\n\n/**\n * This component shows the full timeline\n * with all its timeline events for a given issue.\n */\n@Component({\n  selector: 'app-timeline',\n  templateUrl: './timeline.component.html',\n  styleUrls: ['./timeline.component.scss']\n})\nexport class TimelineComponent implements AfterViewInit {\n  /**\n   * Events which need to be coalesced\n   */\n  static readonly COALESCABLE_EVENTS: Map = new Map([\n    [\n      'LabelledEvent',\n      (item) => {\n        return !!item.label;\n      }\n    ],\n    [\n      'UnlabelledEvent',\n      (item) => {\n        return !!item.removedLabel;\n      }\n    ],\n    [\n      'AddedToComponentEvent',\n      (item) => {\n        return !!item.component;\n      }\n    ],\n    [\n      'RemovedFromComponentEvent',\n      (item) => {\n        return !!item.removedComponent;\n      }\n    ],\n    [\n      'AddedToLocationEvent',\n      (item) => {\n        return !!item.location;\n      }\n    ],\n    [\n      'RemovedFromLocationEvent',\n      (item) => {\n        return !!item.removedLocation;\n      }\n    ],\n    [\n      'LinkEvent',\n      (item) => {\n        return !!item.linkedIssue;\n      }\n    ],\n    [\n      'UnlinkEvent',\n      (item) => {\n        return !!item.removedLinkedIssue;\n      }\n    ]\n  ]);\n\n  /**\n   * provides functionality for time formatting for correct representation\n   */\n  public timeFormatter = new TimeFormatter();\n  /**\n   * Already coalesced items for timeline representation\n   */\n  timelineItems: Array = [];\n  /**\n   * Subscription for timelineitems\n   */\n  public timelineItems$: DataList;\n  /**\n   * The id of the corresponding issue for which the timeline is shown\n   */\n  @Input() issueId: NodeId;\n  /**\n   * The id of the project in which the issue is listed\n   */\n  @Input() projectID: string;\n  /**\n   * Component which is handling the query to the server\n   */\n  @ViewChild(QueryComponent) query: QueryComponent;\n\n  /**\n   * Service for handling API connection is required\n   * @param {DataService} dataService handling api connection\n   */\n  constructor(private dataService: DataService) {}\n\n  ngAfterViewInit(): void {\n    this.requestTimelineItems();\n  }\n\n  /**\n   * Retrieves all timeline items (aka. timeline events) for the current issue.\n   * Use in ngAfterViewInit() lifecycle hook\n   */\n  requestTimelineItems(): void {\n    // gets an observable with all timeline items for thecurrent issue\n    this.timelineItems$ = this.dataService.getList({\n      node: this.issueId,\n      type: ListType.TimelineItems\n    });\n\n    //FIXME: decide on the count\n    this.timelineItems$.count = 99999;\n\n    this.query.listenTo(this.timelineItems$, (value) => {\n      this.prepareTimelineItems(value);\n    });\n  }\n\n  /**\n   * Prepares the timeline items (aka. the timeline events).\n   * @param  {Map} items - Timeline items to prepare.\n   */\n  prepareTimelineItems(items: Map): void {\n    let coalescingType = null;\n    let coalesceList = new Array();\n    let coalesced: Array = [];\n\n    /**\n     * Adds items from the coalesce list {@link coalesceList}\n     * to a list containing all coalesced timeline items {@link coalesced}\n     * in case the coalesce list is not empty.\n     */\n    const finishCoalescing = () => {\n      // case: the coalesce list is empty\n      if (coalesceList.length === 0) {\n        return;\n      }\n\n      // case: the coalesce list is not empty\n      else {\n        coalesced = this.addCoalesceItems(coalesceList, coalesced);\n        coalesceList = [];\n      }\n    };\n\n    for (const timelineItem of items.values()) {\n      const itemType = (timelineItem as any).__typename;\n      const filter = TimelineComponent.COALESCABLE_EVENTS.get(itemType);\n      let stopCoalescing = false;\n\n      // decides whether to stop coalescing\n      stopCoalescing = this.stopCoalescing(coalescingType, coalesceList, stopCoalescing, timelineItem);\n\n      // case: the coalescing type equals the current item type\n      // or coalescing should stop\n      if (coalescingType !== itemType || stopCoalescing) {\n        // adds remaining items\n        finishCoalescing();\n\n        if (filter && filter(timelineItem)) {\n          coalescingType = itemType;\n          coalesceList.push(timelineItem);\n        } else {\n          coalescingType = null;\n          coalesced = this.addSingleCoalesceItem(timelineItem, filter, coalesced);\n        }\n\n        continue;\n      }\n\n      // case: the coalescing type is null\n      else if (coalescingType == null) {\n        coalesced = this.addSingleCoalesceItem(timelineItem, filter, coalesced);\n        continue;\n      }\n\n      if (filter(timelineItem)) {\n        coalesceList.push(timelineItem);\n      }\n    }\n\n    // adds remaining items\n    finishCoalescing();\n    this.timelineItems = coalesced;\n  }\n\n  /**\n   * Returns the name of the user\n   * that created a given timeline item (aka. timeline event)\n   * or just \"Deleted User\" in case the user no longer exists.\n   * @param  {IssueTimelineItem} item - The given timeline item.\n   * @returns - Name of the timeline item creator.\n   */\n  private userName(item: IssueTimelineItem) {\n    // case: the timeline item's creator's name can be retrieved\n    if (item.createdBy) {\n      return item.createdBy.displayName;\n    }\n\n    return 'Deleted User';\n  }\n\n  /**\n   * Adds items from a given coalesce list\n   * to a given list containing all coalesced timeline items.\n   * @param  {IssueTimelineItem[]} coalesceList  The given coalesce list.\n   * @param  {CoalescedTimelineItem[]} coalesced  The given list containing all coalesced timeline items.\n   * @returns The given list containing all coalesced timeline items.\n   */\n  private addCoalesceItems(coalesceList: IssueTimelineItem[], coalesced: CoalescedTimelineItem[]): CoalescedTimelineItem[] {\n    const firstItem: any = coalesceList[0];\n    const itemType = firstItem.__typename;\n    const createdBy = this.userName(firstItem);\n\n    // case: the coalesce list has more than one item\n    if (coalesceList.length > 1) {\n      coalesced.push({\n        type: itemType,\n        isCoalesced: true,\n        item: coalesceList,\n        user: createdBy,\n        time: coalesceList[0].createdAt\n      });\n    }\n\n    // case: the coalesce list has only one item\n    else if (coalesceList.length === 1) {\n      coalesced.push({\n        type: itemType,\n        isCoalesced: false,\n        item: coalesceList[0],\n        user: createdBy,\n        time: coalesceList[0].createdAt\n      });\n    }\n\n    // returns the list containing all coalesced timeline items\n    return coalesced;\n  }\n\n  /**\n   * Adds a single item to a list containing all coalesced timeline items.\n   * @param  {IssueTimelineItem} timelineItem - The given item.\n   * @param  {ItemFilterFunction|undefined} filter - Filter used on the given item.\n   * @returns The given list containing all coalesced timeline items.\n   */\n  private addSingleCoalesceItem(\n    timelineItem: IssueTimelineItem,\n    filter: ItemFilterFunction | undefined,\n    coalesced: CoalescedTimelineItem[]\n  ): CoalescedTimelineItem[] {\n    if (!filter || filter(timelineItem)) {\n      coalesced.push({\n        type: (timelineItem as any).__typename,\n        isCoalesced: false,\n        item: timelineItem,\n        user: this.userName(timelineItem),\n        time: timelineItem.createdAt\n      });\n    }\n\n    // returns the list containing all coalesced timeline items\n    return coalesced;\n  }\n\n  /**\n   * Stops the coalescing process in case\n   * a) the user differs or\n   * b) the current item was already added\n   * 60 seconds after the first one added.\n   * @param  {any} coalescingType - Coalescing type handled.\n   * @param  {IssueTimelineItem[]} coalesceList - Coalesce list handled.\n   * @param  {boolean} stopCoalescing - Value that determines whether the coalescing should stop.\n   * @param  {IssueTimelineItem} timelineItem - Timeline item handled.\n   * @returns The value that determines whether the coalescing should stop.\n   */\n  private stopCoalescing(coalescingType: any, coalesceList: IssueTimelineItem[], stopCoalescing: boolean, timelineItem: IssueTimelineItem) {\n    if (coalescingType) {\n      const firstItem = coalesceList[0];\n      stopCoalescing =\n        firstItem.createdBy.id !== timelineItem.createdBy.id ||\n        Math.abs(Date.parse(timelineItem.createdAt) - Date.parse(firstItem.createdAt)) > 60000;\n    }\n\n    return stopCoalescing;\n  }\n\n  /**\n   * Checks if the user self-assigned this issue for text representation.\n   * @param assignedEvent - Assigned event handled.\n   */\n  selfAssigned(assignedEvent): boolean {\n    if (assignedEvent.createdBy.id === assignedEvent.removedAssignee?.id) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Handles the id for a given node...\n   */\n  makeCommentId(node): NodeId {\n    return {type: NodeType.IssueComment, id: node.id};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentComponent.html":{"url":"components/CommentComponent.html","title":"component - CommentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CommentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/comment/comment.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays an issue comment.\nThe comment will be subscribed to lazily (see DataNode).\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comment\n            \n\n            \n                styleUrls\n                ./comment.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./comment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editBody\n                            \n                            \n                                    Public\n                                savingBody\n                            \n                            \n                                    Public\n                                timeFormatter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deleteComment\n                            \n                            \n                                    Public\n                                editComment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commentId\n                            \n                            \n                                isIssueBody\n                            \n                            \n                                issueId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, dialog: MatDialog, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/comment/comment.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commentId\n                    \n                \n                \n                    \n                        Type :         NodeId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/comment/comment.component.ts:25\n                            \n                        \n                \n                    \n                        The comment or issue ID. If this is an issue ID, set  to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isIssueBody\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/comment/comment.component.ts:23\n                            \n                        \n                \n                    \n                        If true, this comment component is actually editing an issue's body.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        issueId\n                    \n                \n                \n                    \n                        Type :         NodeId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/comment/comment.component.ts:27\n                            \n                        \n                \n                    \n                        The issue this comment belongs to.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteComment()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/comment/comment.component.ts:79\n                \n            \n\n\n            \n                \n                    Deletes the current comment.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    editComment(body: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/comment/comment.component.ts:63\n                \n            \n\n\n            \n                \n                    Edits the description of the current comment.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe new description of the current issue or comment.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        editBody\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/comment/comment.component.ts:32\n                        \n                    \n\n            \n                \n                    True if the comment body is being edited.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        savingBody\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/comment/comment.component.ts:34\n                        \n                    \n\n            \n                \n                    True if the comment body is being saved.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        timeFormatter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TimeFormatter()\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/comment/comment.component.ts:30\n                        \n                    \n\n            \n                \n                    Used to format time.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {IssueComment} from '../../../generated/graphql-dgql';\nimport {TimeFormatter} from '@app/issue-detail/time-formatter';\nimport DataService from '@app/data-dgql';\nimport {NodeId} from '@app/data-dgql/id';\nimport {DataNode} from '@app/data-dgql/query';\nimport {Subscription} from 'rxjs';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\n\n/**\n * This component displays an issue comment.\n * The comment will be subscribed to lazily (see {@link DataNode#subscribeLazy}).\n */\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.scss']\n})\nexport class CommentComponent implements OnInit, OnDestroy {\n  /** If true, this comment component is actually editing an issue's body. */\n  @Input() isIssueBody: boolean;\n  /** The comment or issue ID. If this is an issue ID, set {@link #isIssueBody} to true. */\n  @Input() commentId: NodeId;\n  /** The issue this comment belongs to. */\n  @Input() issueId: NodeId;\n\n  /** Used to format time. */\n  public timeFormatter = new TimeFormatter();\n  /** True if the comment body is being edited. */\n  public editBody = false;\n  /** True if the comment body is being saved. */\n  public savingBody = false;\n\n  /**\n   * @ignore\n   * Internal: comment data node view.\n   */\n  comment$: DataNode;\n  /**\n   * @ignore\n   * Internal: subscription to comment$.\n   */\n  commentSub: Subscription;\n\n  constructor(private dataService: DataService, private dialog: MatDialog, private notify: UserNotifyService) {}\n\n  ngOnInit() {\n    this.comment$ = this.dataService.getNode(this.commentId);\n    this.commentSub = this.comment$.subscribeLazy();\n  }\n\n  ngOnDestroy() {\n    this.commentSub?.unsubscribe();\n  }\n\n  /**\n   * Edits the description of the current comment.\n   *\n   * @param body - The new description of the current issue or comment.\n   */\n  public editComment(body: string): void {\n    this.savingBody = true;\n    this.dataService.mutations\n      .updateIssueComment(Math.random().toString(), this.commentId, body)\n      .then(() => {\n        // only exit if successful\n        this.editBody = false;\n      })\n      .finally(() => {\n        this.savingBody = false;\n      });\n  }\n\n  /**\n   * Deletes the current comment.\n   */\n  public deleteComment(): void {\n    const confirmDeleteDialogRef = this.dialog.open(RemoveDialogComponent, {\n      data: {\n        title: 'Really delete comment ?',\n        messages: ['Are you sure you want to delete this comment ?', 'This action cannot be undone!']\n      }\n    });\n\n    confirmDeleteDialogRef.afterClosed().subscribe(\n      (del) => {\n        if (del) {\n          // User confirmed deletion\n          this.dataService.mutations.deleteIssueComment(Math.random().toString(), this.issueId, this.commentId).then(() => {\n            this.notify.notifyInfo('Successfully deleted comment');\n          });\n        }\n      },\n      (error) => this.notify.notifyError('Failed to delete project!', error)\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      \n        \n        commented\n        \n          {{ this.timeFormatter.formatTimeDifference(comment.createdAt) }}\n        \n        \n          &sdot;\n          edited\n          \n            {{ this.timeFormatter.formatTimeDifference(comment.lastEditedAt) }}\n          \n        \n      \n\n      \n      \n      \n        Delete\n      \n      \n        Edit\n      \n    \n\n    \n    \n      \n    \n\n    \n    \n      \n      \n\n      \n        \n        Cancel\n        \n        \n          Save\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./comment.component.scss\n                \n                @import \"../issue-contents.component\";\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      commented                  {{ this.timeFormatter.formatTimeDifference(comment.createdAt) }}                          ⋅          edited                      {{ this.timeFormatter.formatTimeDifference(comment.lastEditedAt) }}                                                  Delete                    Edit                                                                      Cancel                          Save                    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CommentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ComponentContextMenuComponent.html":{"url":"components/ComponentContextMenuComponent.html","title":"component - ComponentContextMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ComponentContextMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/graphs/component-context-menu/component-context-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component manages the component context menu as well as its content\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                component-context-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./component-context-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                height\n                            \n                            \n                                nodeDetailsReady\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                updatePosition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ComponentContextMenuData, changeDetector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:136\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ComponentContextMenuData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:175\n                \n            \n\n\n            \n                \n                    Close the context menu\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePosition\n                        \n                    \n                \n            \n            \n                \nupdatePosition(x: number, y: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:166\n                \n            \n\n\n            \n                \n                    Update the position of the context menu\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The X offset of the top left menu corner relative to the top left corner of the parent\n\n                                    \n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Y offset of the top left menu corner relative to the top left corner of the parent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentContextMenuData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(COMPONENT_CONTEXT_MENU_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ComponentContextMenuComponent.LAST_HEIGHT\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:121\n                        \n                    \n\n            \n                \n                    Current height of the dialog\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeDetailsReady\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:123\n                        \n                    \n\n            \n                \n                    True if the node details component is loaded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ComponentContextMenuComponent.LAST_WIDTH\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:119\n                        \n                    \n\n            \n                \n                    Current width of the dialog\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  OnDestroy,\n  ViewChild\n} from '@angular/core';\nimport {ConnectedPosition, Overlay, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\nimport {IssueGraphComponent} from '@app/graphs/issue-graph/issue-graph.component';\nimport {NodeDetailsComponent, NodeDetailsType, NodeUpdatedCallbackFn} from '@app/node-details/node-details.component';\n\n/**\n * Interface specifying the data required for the component context menu.\n * Note that this should not be used directly, instead the ComponentContextMenuService should be used to open a context\n * menu.\n */\ninterface ComponentContextMenuData {\n  /** Reference to the overlay used to display the context menu */\n  overlayRef: OverlayRef;\n  /** The position of the overlay */\n  position: ConnectedPosition;\n  /** The project id string */\n  projectId: string;\n  /** The node id string */\n  nodeId: string;\n  /** The type of node, either interface or component. Controls the content shown in the context menu */\n  type: NodeDetailsType;\n  /** A reference to the issue graph */\n  graph: IssueGraphComponent;\n}\n\nconst COMPONENT_CONTEXT_MENU_DATA = new InjectionToken('COMPONENT_CONTEXT_MENU_DATA');\n\n/**\n * Use this service to create a {@link ComponentContextMenuComponent}.\n */\n@Injectable({providedIn: 'root'})\nexport class ComponentContextMenuService {\n  constructor(private overlay: Overlay, private injector: Injector) {}\n\n  /**\n   * Open a new component context menu\n   * @param parent The parent of the context menu\n   * @param x The X position relative to the top left corner of the parent\n   * @param y The Y position relative to the top left corner of the parent\n   * @param projectID The id of the project the node belongs to\n   * @param nodeID The id of the node\n   * @param nodeType The type of the node\n   * @param issueGraph A reference to the issue graph\n   * @return A reference to the context menu\n   */\n  open(\n    parent: Element,\n    x: number,\n    y: number,\n    projectID: string,\n    nodeID: string,\n    nodeType: NodeDetailsType,\n    issueGraph: IssueGraphComponent\n  ): ComponentContextMenuComponent {\n    const position = this.overlay.position().flexibleConnectedTo(parent);\n    const pos: ConnectedPosition = {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n      offsetX: x,\n      offsetY: y\n    };\n    position.withPositions([pos]);\n\n    const ref = this.overlay.create({\n      minWidth: 400,\n      minHeight: 200,\n      positionStrategy: position\n    });\n\n    const map = new WeakMap();\n    map.set(COMPONENT_CONTEXT_MENU_DATA, {\n      overlayRef: ref,\n      position: pos,\n      projectId: projectID,\n      nodeId: nodeID,\n      type: nodeType,\n      graph: issueGraph\n    });\n    const injector = new PortalInjector(this.injector, map);\n    return ref.attach(new ComponentPortal(ComponentContextMenuComponent, null, injector)).instance;\n  }\n}\n\n/**\n * This component manages the component context menu as well as its content\n */\n@Component({\n  styleUrls: ['component-context-menu.component.scss'],\n  templateUrl: './component-context-menu.component.html'\n})\nexport class ComponentContextMenuComponent implements AfterViewInit, OnDestroy {\n  /** @ignore */\n  private static MIN_WIDTH = 700;\n  /** @ignore */\n  private static MIN_HEIGHT = 400;\n  /** @ignore */\n  private static LAST_WIDTH = ComponentContextMenuComponent.MIN_WIDTH;\n  /** @ignore */\n  private static LAST_HEIGHT = ComponentContextMenuComponent.MIN_HEIGHT;\n  /** @ignore */\n  private resize = false;\n\n  /** Current width of the dialog */\n  width = ComponentContextMenuComponent.LAST_WIDTH;\n  /** Current height of the dialog */\n  height = ComponentContextMenuComponent.LAST_HEIGHT;\n  /** True if the node details component is loaded */\n  nodeDetailsReady: boolean;\n\n  /** @ignore */\n  @ViewChild('frame') frame: ElementRef;\n\n  /** @ignore */\n  @ViewChild('resizeCorner') set resizeCorner(content: ElementRef) {\n    if (content) {\n      content.nativeElement.addEventListener('mousedown', () => (this.resize = true));\n    }\n  }\n\n  /** @ignore */\n  @ViewChild(NodeDetailsComponent) nodeDetails: NodeDetailsComponent;\n\n  constructor(@Inject(COMPONENT_CONTEXT_MENU_DATA) public data: ComponentContextMenuData, private changeDetector: ChangeDetectorRef) {}\n\n  ngAfterViewInit() {\n    this.frame.nativeElement.style.minWidth = ComponentContextMenuComponent.MIN_WIDTH + 'px';\n    this.frame.nativeElement.style.minHeight = ComponentContextMenuComponent.MIN_HEIGHT + 'px';\n    this.nodeDetailsReady = true;\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy(): void {\n    // TODO: Save in local storage?\n    ComponentContextMenuComponent.LAST_WIDTH = this.width;\n    ComponentContextMenuComponent.LAST_HEIGHT = this.height;\n  }\n\n  /** @ignore */\n  detailsCallback: NodeUpdatedCallbackFn = (nodeDeleted: boolean): void => {\n    this.data.graph.reload();\n    if (nodeDeleted) {\n      this.close();\n    }\n  };\n\n  /**\n   * Update the position of the context menu\n   * @param x The X offset of the top left menu corner relative to the top left corner of the parent\n   * @param y The Y offset of the top left menu corner relative to the top left corner of the parent\n   */\n  updatePosition(x: number, y: number): void {\n    this.data.position.offsetX = x;\n    this.data.position.offsetY = y;\n    this.data.overlayRef.getConfig().positionStrategy.apply();\n  }\n\n  /**\n   * Close the context menu\n   */\n  close(): void {\n    this.data.overlayRef.dispose();\n  }\n\n  /** @ignore */\n  @HostListener('window:mouseup')\n  private onMouseUp() {\n    this.resize = false;\n  }\n\n  /** @ignore */\n  @HostListener('window:mousemove', ['$event'])\n  private onMouseMove(event: MouseEvent) {\n    if (!this.resize) {\n      return;\n    }\n\n    this.width = Math.max(this.width + event.movementX, ComponentContextMenuComponent.MIN_WIDTH);\n    this.height = Math.max(this.height + event.movementY, ComponentContextMenuComponent.MIN_HEIGHT);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ this.nodeDetails.getNodeName() }}\n    \n    \n      \n    \n  \n\n  \n    {{ this.data.nodeId }}\n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    component-context-menu.component.scss\n                \n                @import \"src/styles/variables\";\n\n.frame {\n  padding: 24px;\n  background-color: $background-controls;\n  border-radius: 4px;\n  box-shadow: 0 11px 15px -7px rgb(0 0 0 / 20%),\n    0 24px 38px 3px rgb(0 0 0 / 14%), 0 9px 46px 8px rgb(0 0 0 / 12%);\n}\n\n.node-title {\n  width: 100%;\n  text-align: center;\n  margin: 0 0 20px;\n}\n\n.container {\n  height: calc(100% - 50px);\n  overflow: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ this.nodeDetails.getNodeName() }}                          {{ this.data.nodeId }}                '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ComponentContextMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentContextMenuData.html":{"url":"interfaces/ComponentContextMenuData.html","title":"interface - ComponentContextMenuData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ComponentContextMenuData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/component-context-menu/component-context-menu.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface specifying the data required for the component context menu.\nNote that this should not be used directly, instead the ComponentContextMenuService should be used to open a context\nmenu.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            graph\n                                        \n                                \n                                \n                                        \n                                            nodeId\n                                        \n                                \n                                \n                                        \n                                            overlayRef\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        graph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graph:         IssueGraphComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IssueGraphComponent\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A reference to the issue graph\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The node id string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overlayRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overlayRef:     OverlayRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OverlayRef\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Reference to the overlay used to display the context menu\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         ConnectedPosition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConnectedPosition\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The position of the overlay\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The project id string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         NodeDetailsType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeDetailsType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of node, either interface or component. Controls the content shown in the context menu\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  OnDestroy,\n  ViewChild\n} from '@angular/core';\nimport {ConnectedPosition, Overlay, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\nimport {IssueGraphComponent} from '@app/graphs/issue-graph/issue-graph.component';\nimport {NodeDetailsComponent, NodeDetailsType, NodeUpdatedCallbackFn} from '@app/node-details/node-details.component';\n\n/**\n * Interface specifying the data required for the component context menu.\n * Note that this should not be used directly, instead the ComponentContextMenuService should be used to open a context\n * menu.\n */\ninterface ComponentContextMenuData {\n  /** Reference to the overlay used to display the context menu */\n  overlayRef: OverlayRef;\n  /** The position of the overlay */\n  position: ConnectedPosition;\n  /** The project id string */\n  projectId: string;\n  /** The node id string */\n  nodeId: string;\n  /** The type of node, either interface or component. Controls the content shown in the context menu */\n  type: NodeDetailsType;\n  /** A reference to the issue graph */\n  graph: IssueGraphComponent;\n}\n\nconst COMPONENT_CONTEXT_MENU_DATA = new InjectionToken('COMPONENT_CONTEXT_MENU_DATA');\n\n/**\n * Use this service to create a {@link ComponentContextMenuComponent}.\n */\n@Injectable({providedIn: 'root'})\nexport class ComponentContextMenuService {\n  constructor(private overlay: Overlay, private injector: Injector) {}\n\n  /**\n   * Open a new component context menu\n   * @param parent The parent of the context menu\n   * @param x The X position relative to the top left corner of the parent\n   * @param y The Y position relative to the top left corner of the parent\n   * @param projectID The id of the project the node belongs to\n   * @param nodeID The id of the node\n   * @param nodeType The type of the node\n   * @param issueGraph A reference to the issue graph\n   * @return A reference to the context menu\n   */\n  open(\n    parent: Element,\n    x: number,\n    y: number,\n    projectID: string,\n    nodeID: string,\n    nodeType: NodeDetailsType,\n    issueGraph: IssueGraphComponent\n  ): ComponentContextMenuComponent {\n    const position = this.overlay.position().flexibleConnectedTo(parent);\n    const pos: ConnectedPosition = {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n      offsetX: x,\n      offsetY: y\n    };\n    position.withPositions([pos]);\n\n    const ref = this.overlay.create({\n      minWidth: 400,\n      minHeight: 200,\n      positionStrategy: position\n    });\n\n    const map = new WeakMap();\n    map.set(COMPONENT_CONTEXT_MENU_DATA, {\n      overlayRef: ref,\n      position: pos,\n      projectId: projectID,\n      nodeId: nodeID,\n      type: nodeType,\n      graph: issueGraph\n    });\n    const injector = new PortalInjector(this.injector, map);\n    return ref.attach(new ComponentPortal(ComponentContextMenuComponent, null, injector)).instance;\n  }\n}\n\n/**\n * This component manages the component context menu as well as its content\n */\n@Component({\n  styleUrls: ['component-context-menu.component.scss'],\n  templateUrl: './component-context-menu.component.html'\n})\nexport class ComponentContextMenuComponent implements AfterViewInit, OnDestroy {\n  /** @ignore */\n  private static MIN_WIDTH = 700;\n  /** @ignore */\n  private static MIN_HEIGHT = 400;\n  /** @ignore */\n  private static LAST_WIDTH = ComponentContextMenuComponent.MIN_WIDTH;\n  /** @ignore */\n  private static LAST_HEIGHT = ComponentContextMenuComponent.MIN_HEIGHT;\n  /** @ignore */\n  private resize = false;\n\n  /** Current width of the dialog */\n  width = ComponentContextMenuComponent.LAST_WIDTH;\n  /** Current height of the dialog */\n  height = ComponentContextMenuComponent.LAST_HEIGHT;\n  /** True if the node details component is loaded */\n  nodeDetailsReady: boolean;\n\n  /** @ignore */\n  @ViewChild('frame') frame: ElementRef;\n\n  /** @ignore */\n  @ViewChild('resizeCorner') set resizeCorner(content: ElementRef) {\n    if (content) {\n      content.nativeElement.addEventListener('mousedown', () => (this.resize = true));\n    }\n  }\n\n  /** @ignore */\n  @ViewChild(NodeDetailsComponent) nodeDetails: NodeDetailsComponent;\n\n  constructor(@Inject(COMPONENT_CONTEXT_MENU_DATA) public data: ComponentContextMenuData, private changeDetector: ChangeDetectorRef) {}\n\n  ngAfterViewInit() {\n    this.frame.nativeElement.style.minWidth = ComponentContextMenuComponent.MIN_WIDTH + 'px';\n    this.frame.nativeElement.style.minHeight = ComponentContextMenuComponent.MIN_HEIGHT + 'px';\n    this.nodeDetailsReady = true;\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy(): void {\n    // TODO: Save in local storage?\n    ComponentContextMenuComponent.LAST_WIDTH = this.width;\n    ComponentContextMenuComponent.LAST_HEIGHT = this.height;\n  }\n\n  /** @ignore */\n  detailsCallback: NodeUpdatedCallbackFn = (nodeDeleted: boolean): void => {\n    this.data.graph.reload();\n    if (nodeDeleted) {\n      this.close();\n    }\n  };\n\n  /**\n   * Update the position of the context menu\n   * @param x The X offset of the top left menu corner relative to the top left corner of the parent\n   * @param y The Y offset of the top left menu corner relative to the top left corner of the parent\n   */\n  updatePosition(x: number, y: number): void {\n    this.data.position.offsetX = x;\n    this.data.position.offsetY = y;\n    this.data.overlayRef.getConfig().positionStrategy.apply();\n  }\n\n  /**\n   * Close the context menu\n   */\n  close(): void {\n    this.data.overlayRef.dispose();\n  }\n\n  /** @ignore */\n  @HostListener('window:mouseup')\n  private onMouseUp() {\n    this.resize = false;\n  }\n\n  /** @ignore */\n  @HostListener('window:mousemove', ['$event'])\n  private onMouseMove(event: MouseEvent) {\n    if (!this.resize) {\n      return;\n    }\n\n    this.width = Math.max(this.width + event.movementX, ComponentContextMenuComponent.MIN_WIDTH);\n    this.height = Math.max(this.height + event.movementY, ComponentContextMenuComponent.MIN_HEIGHT);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ComponentContextMenuService.html":{"url":"injectables/ComponentContextMenuService.html","title":"injectable - ComponentContextMenuService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ComponentContextMenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/component-context-menu/component-context-menu.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Use this service to create a ComponentContextMenuComponent.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(overlay: Overlay, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen(parent: Element, x: number, y: number, projectID: string, nodeID: string, nodeType: NodeDetailsType, issueGraph: IssueGraphComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:59\n                \n            \n\n\n            \n                \n                    Open a new component context menu\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The parent of the context menu\n\n                                    \n                                \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The X position relative to the top left corner of the parent\n\n                                    \n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Y position relative to the top left corner of the parent\n\n                                    \n                                \n                                \n                                    projectID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the project the node belongs to\n\n                                    \n                                \n                                \n                                    nodeID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the node\n\n                                    \n                                \n                                \n                                    nodeType\n                                    \n                                                NodeDetailsType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The type of the node\n\n                                    \n                                \n                                \n                                    issueGraph\n                                    \n                                                IssueGraphComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A reference to the issue graph\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ComponentContextMenuComponent\n\n                    \n                    \n                        A reference to the context menu\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  OnDestroy,\n  ViewChild\n} from '@angular/core';\nimport {ConnectedPosition, Overlay, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\nimport {IssueGraphComponent} from '@app/graphs/issue-graph/issue-graph.component';\nimport {NodeDetailsComponent, NodeDetailsType, NodeUpdatedCallbackFn} from '@app/node-details/node-details.component';\n\n/**\n * Interface specifying the data required for the component context menu.\n * Note that this should not be used directly, instead the ComponentContextMenuService should be used to open a context\n * menu.\n */\ninterface ComponentContextMenuData {\n  /** Reference to the overlay used to display the context menu */\n  overlayRef: OverlayRef;\n  /** The position of the overlay */\n  position: ConnectedPosition;\n  /** The project id string */\n  projectId: string;\n  /** The node id string */\n  nodeId: string;\n  /** The type of node, either interface or component. Controls the content shown in the context menu */\n  type: NodeDetailsType;\n  /** A reference to the issue graph */\n  graph: IssueGraphComponent;\n}\n\nconst COMPONENT_CONTEXT_MENU_DATA = new InjectionToken('COMPONENT_CONTEXT_MENU_DATA');\n\n/**\n * Use this service to create a {@link ComponentContextMenuComponent}.\n */\n@Injectable({providedIn: 'root'})\nexport class ComponentContextMenuService {\n  constructor(private overlay: Overlay, private injector: Injector) {}\n\n  /**\n   * Open a new component context menu\n   * @param parent The parent of the context menu\n   * @param x The X position relative to the top left corner of the parent\n   * @param y The Y position relative to the top left corner of the parent\n   * @param projectID The id of the project the node belongs to\n   * @param nodeID The id of the node\n   * @param nodeType The type of the node\n   * @param issueGraph A reference to the issue graph\n   * @return A reference to the context menu\n   */\n  open(\n    parent: Element,\n    x: number,\n    y: number,\n    projectID: string,\n    nodeID: string,\n    nodeType: NodeDetailsType,\n    issueGraph: IssueGraphComponent\n  ): ComponentContextMenuComponent {\n    const position = this.overlay.position().flexibleConnectedTo(parent);\n    const pos: ConnectedPosition = {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n      offsetX: x,\n      offsetY: y\n    };\n    position.withPositions([pos]);\n\n    const ref = this.overlay.create({\n      minWidth: 400,\n      minHeight: 200,\n      positionStrategy: position\n    });\n\n    const map = new WeakMap();\n    map.set(COMPONENT_CONTEXT_MENU_DATA, {\n      overlayRef: ref,\n      position: pos,\n      projectId: projectID,\n      nodeId: nodeID,\n      type: nodeType,\n      graph: issueGraph\n    });\n    const injector = new PortalInjector(this.injector, map);\n    return ref.attach(new ComponentPortal(ComponentContextMenuComponent, null, injector)).instance;\n  }\n}\n\n/**\n * This component manages the component context menu as well as its content\n */\n@Component({\n  styleUrls: ['component-context-menu.component.scss'],\n  templateUrl: './component-context-menu.component.html'\n})\nexport class ComponentContextMenuComponent implements AfterViewInit, OnDestroy {\n  /** @ignore */\n  private static MIN_WIDTH = 700;\n  /** @ignore */\n  private static MIN_HEIGHT = 400;\n  /** @ignore */\n  private static LAST_WIDTH = ComponentContextMenuComponent.MIN_WIDTH;\n  /** @ignore */\n  private static LAST_HEIGHT = ComponentContextMenuComponent.MIN_HEIGHT;\n  /** @ignore */\n  private resize = false;\n\n  /** Current width of the dialog */\n  width = ComponentContextMenuComponent.LAST_WIDTH;\n  /** Current height of the dialog */\n  height = ComponentContextMenuComponent.LAST_HEIGHT;\n  /** True if the node details component is loaded */\n  nodeDetailsReady: boolean;\n\n  /** @ignore */\n  @ViewChild('frame') frame: ElementRef;\n\n  /** @ignore */\n  @ViewChild('resizeCorner') set resizeCorner(content: ElementRef) {\n    if (content) {\n      content.nativeElement.addEventListener('mousedown', () => (this.resize = true));\n    }\n  }\n\n  /** @ignore */\n  @ViewChild(NodeDetailsComponent) nodeDetails: NodeDetailsComponent;\n\n  constructor(@Inject(COMPONENT_CONTEXT_MENU_DATA) public data: ComponentContextMenuData, private changeDetector: ChangeDetectorRef) {}\n\n  ngAfterViewInit() {\n    this.frame.nativeElement.style.minWidth = ComponentContextMenuComponent.MIN_WIDTH + 'px';\n    this.frame.nativeElement.style.minHeight = ComponentContextMenuComponent.MIN_HEIGHT + 'px';\n    this.nodeDetailsReady = true;\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy(): void {\n    // TODO: Save in local storage?\n    ComponentContextMenuComponent.LAST_WIDTH = this.width;\n    ComponentContextMenuComponent.LAST_HEIGHT = this.height;\n  }\n\n  /** @ignore */\n  detailsCallback: NodeUpdatedCallbackFn = (nodeDeleted: boolean): void => {\n    this.data.graph.reload();\n    if (nodeDeleted) {\n      this.close();\n    }\n  };\n\n  /**\n   * Update the position of the context menu\n   * @param x The X offset of the top left menu corner relative to the top left corner of the parent\n   * @param y The Y offset of the top left menu corner relative to the top left corner of the parent\n   */\n  updatePosition(x: number, y: number): void {\n    this.data.position.offsetX = x;\n    this.data.position.offsetY = y;\n    this.data.overlayRef.getConfig().positionStrategy.apply();\n  }\n\n  /**\n   * Close the context menu\n   */\n  close(): void {\n    this.data.overlayRef.dispose();\n  }\n\n  /** @ignore */\n  @HostListener('window:mouseup')\n  private onMouseUp() {\n    this.resize = false;\n  }\n\n  /** @ignore */\n  @HostListener('window:mousemove', ['$event'])\n  private onMouseMove(event: MouseEvent) {\n    if (!this.resize) {\n      return;\n    }\n\n    this.width = Math.max(this.width + event.movementX, ComponentContextMenuComponent.MIN_WIDTH);\n    this.height = Math.max(this.height + event.movementY, ComponentContextMenuComponent.MIN_HEIGHT);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentNode.html":{"url":"interfaces/ComponentNode.html","title":"interface - ComponentNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ComponentNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IssueNode\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         GraphComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphComponent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode,\n  ComponentNode,\n  InterfaceNode,\n  IssueGroupContainerNode,\n  RelationEdge,\n  createComponentNode,\n  createInterfaceNode,\n  createIssueGroupContainerNode,\n  createIssueFolderNode,\n  createRelationEdge,\n  createConsumptionEdge,\n  createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set()\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0\n    }\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: []\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ComponentStoreService.html":{"url":"injectables/ComponentStoreService.html","title":"injectable - ComponentStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ComponentStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/component/component-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Provides updating, deleting and retrieving components from the backend.\nObjects like updateComponentMutation are injected and were created by a codegenerator based on\nthe mutation UpdateComponent in the component.graphql file in this folder. The same hold for the\nother mutation and query objects.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createComponent\n                            \n                            \n                                deleteComponent\n                            \n                            \n                                getBasicComponent\n                            \n                            \n                                getComponentInterfaces\n                            \n                            \n                                getComponentLabels\n                            \n                            \n                                getFullComponent\n                            \n                            \n                                updateComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(updateComponentMutation: UpdateComponentGQL, deleteComponentMutation: DeleteComponentGQL, getFullComponentQuery: GetComponentGQL, createComponentMutation: CreateComponentGQL, getLabelsQuery: GetComponentLabelsGQL, getBasicComponentQuery: GetBasicComponentGQL, getComponentInterfacesQuery: GetComponentInterfacesGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/component/component-store.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        updateComponentMutation\n                                                  \n                                                        \n                                                                    UpdateComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteComponentMutation\n                                                  \n                                                        \n                                                                    DeleteComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getFullComponentQuery\n                                                  \n                                                        \n                                                                    GetComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createComponentMutation\n                                                  \n                                                        \n                                                                    CreateComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getLabelsQuery\n                                                  \n                                                        \n                                                                    GetComponentLabelsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getBasicComponentQuery\n                                                  \n                                                        \n                                                                    GetBasicComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getComponentInterfacesQuery\n                                                  \n                                                        \n                                                                    GetComponentInterfacesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createComponent\n                        \n                    \n                \n            \n            \n                \ncreateComponent(input: CreateComponentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            CreateComponentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteComponent\n                        \n                    \n                \n            \n            \n                \ndeleteComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBasicComponent\n                        \n                    \n                \n            \n            \n                \ngetBasicComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComponentInterfaces\n                        \n                    \n                \n            \n            \n                \ngetComponentInterfaces(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComponentLabels\n                        \n                    \n                \n            \n            \n                \ngetComponentLabels(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFullComponent\n                        \n                    \n                \n            \n            \n                \ngetFullComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateComponent\n                        \n                    \n                \n            \n            \n                \nupdateComponent(input: UpdateComponentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            UpdateComponentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {\n  CreateComponentGQL,\n  CreateComponentInput,\n  DeleteComponentGQL,\n  DeleteComponentInput,\n  GetBasicComponentGQL,\n  GetBasicComponentQuery,\n  GetComponentGQL,\n  GetComponentInterfacesGQL,\n  GetComponentInterfacesQuery,\n  GetComponentLabelsGQL,\n  GetComponentLabelsQuery,\n  GetComponentQuery,\n  UpdateComponentGQL,\n  UpdateComponentInput\n} from 'src/generated/graphql';\nimport {map} from 'rxjs/operators';\n\n/**\n * Provides updating, deleting and retrieving components from the backend.\n * Objects like updateComponentMutation are injected and were created by a codegenerator based on\n * the mutation UpdateComponent in the component.graphql file in this folder. The same hold for the\n * other mutation and query objects.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComponentStoreService {\n  constructor(\n    private updateComponentMutation: UpdateComponentGQL,\n    private deleteComponentMutation: DeleteComponentGQL,\n    private getFullComponentQuery: GetComponentGQL,\n    private createComponentMutation: CreateComponentGQL,\n    private getLabelsQuery: GetComponentLabelsGQL,\n    private getBasicComponentQuery: GetBasicComponentGQL,\n    private getComponentInterfacesQuery: GetComponentInterfacesGQL\n  ) {}\n\n  getComponentLabels(id: string): Observable {\n    return this.getLabelsQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getBasicComponent(id: string): Observable {\n    return this.getBasicComponentQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getFullComponent(id: string): Observable {\n    return this.getFullComponentQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getComponentInterfaces(id: string): Observable {\n    return this.getComponentInterfacesQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  deleteComponent(id: string) {\n    const input: DeleteComponentInput = {\n      component: id\n    };\n    return this.deleteComponentMutation.mutate({input});\n  }\n\n  createComponent(input: CreateComponentInput) {\n    return this.createComponentMutation.mutate({input});\n  }\n\n  updateComponent(input: UpdateComponentInput) {\n    return this.updateComponentMutation.mutate({input});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ComponentsService.html":{"url":"injectables/ComponentsService.html","title":"injectable - ComponentsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ComponentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/components.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getComponent\n                            \n                            \n                                getInterface\n                            \n                            \n                                listProjectComponents\n                            \n                            \n                                listProjectInterfaces\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(qListProjectComponents: ListProjectComponentsGQL, qListProjectInterfaces: ListProjectInterfacesGQL, qGetComponent: GetComponentGQL, qGetInterface: GetInterfaceGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/queries/components.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        qListProjectComponents\n                                                  \n                                                        \n                                                                    ListProjectComponentsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qListProjectInterfaces\n                                                  \n                                                        \n                                                                    ListProjectInterfacesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qGetComponent\n                                                  \n                                                        \n                                                                    GetComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qGetInterface\n                                                  \n                                                        \n                                                                    GetInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getComponent\n                        \n                    \n                \n            \n            \n                \ngetComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/components.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInterface\n                        \n                    \n                \n            \n            \n                \ngetInterface(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/components.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listProjectComponents\n                        \n                    \n                \n            \n            \n                \nlistProjectComponents(project: string, list: QueryListParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/components.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    list\n                                    \n                                            QueryListParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listProjectInterfaces\n                        \n                    \n                \n            \n            \n                \nlistProjectInterfaces(project: string, list: QueryListParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/components.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    list\n                                    \n                                            QueryListParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {\n  ComponentFilter,\n  ComponentInterfaceFilter,\n  GetComponentGQL,\n  GetInterfaceGQL,\n  ListProjectComponentsGQL,\n  ListProjectInterfacesGQL\n} from 'src/generated/graphql-dgql';\nimport {promisifyApolloFetch, QueryListParams} from '@app/data-dgql/queries/util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComponentsService {\n  constructor(\n    private qListProjectComponents: ListProjectComponentsGQL,\n    private qListProjectInterfaces: ListProjectInterfacesGQL,\n    private qGetComponent: GetComponentGQL,\n    private qGetInterface: GetInterfaceGQL\n  ) {}\n\n  listProjectComponents(project: string, list: QueryListParams) {\n    return promisifyApolloFetch(this.qListProjectComponents.fetch({project, ...list}));\n  }\n\n  listProjectInterfaces(project: string, list: QueryListParams) {\n    return promisifyApolloFetch(this.qListProjectInterfaces.fetch({project, ...list}));\n  }\n\n  getComponent(id: string) {\n    return promisifyApolloFetch(this.qGetComponent.fetch({id}));\n  }\n\n  getInterface(id: string) {\n    return promisifyApolloFetch(this.qGetInterface.fetch({id}));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateComponentData.html":{"url":"interfaces/CreateComponentData.html","title":"interface - CreateComponentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateComponentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/create-component-dialog/create-component-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, Input, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {CreateComponentInput, ImsType} from 'src/generated/graphql';\nimport {IssueGraphStateService} from '@app/data/issue-graph/issue-graph-state.service';\nimport {ComponentStoreService} from '@app/data/component/component-store.service';\nimport {CCIMSValidators} from '@app/utils/validators';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n@Component({\n  selector: 'app-create-component-dialog',\n  templateUrl: './create-component-dialog.component.html',\n  styleUrls: ['./create-component-dialog.component.scss']\n})\nexport class CreateComponentDialogComponent {\n  @Input() projectId: string;\n  @ViewChild(QueryComponent) queryComponent: QueryComponent;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: CreateComponentData,\n    private fb: FormBuilder,\n    private gs: IssueGraphStateService,\n    private componentStore: ComponentStoreService\n  ) {}\n\n  // define validations\n  validationName = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  validationUrl = new FormControl('', [CCIMSValidators.urlValidator, Validators.required]);\n  validationIMS = new FormControl('', [CCIMSValidators.urlValidator, Validators.required]);\n  validationProvider = new FormControl('', Validators.required);\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  // close dialog on cancel\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  // callback method for component creation\n  onOkClick(name: string, url: string, description: string, ims: string, provider: string): void {\n    // define the input for the database mutation - required fields are specified by the graphQL schema\n    // TODO: Add component to IMS?\n    const input: CreateComponentInput = {\n      name,\n      projects: [this.data.projectId],\n      description,\n      repositoryURL: url\n    };\n\n    this.queryComponent.listenTo(this.componentStore.createComponent(input), () => this.dialogRef.close());\n  }\n\n  checkImsType(returnFromSelect: string): ImsType {\n    if (returnFromSelect.localeCompare(ImsType.Github) === 0) {\n      return ImsType.Github;\n    }\n  }\n}\n\ninterface CreateComponentData {\n  projectId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateComponentDialogComponent.html":{"url":"components/CreateComponentDialogComponent.html","title":"component - CreateComponentDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateComponentDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-component-dialog/create-component-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-component-dialog\n            \n\n            \n                styleUrls\n                ./create-component-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-component-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                queryComponent\n                            \n                            \n                                validationDescription\n                            \n                            \n                                validationIMS\n                            \n                            \n                                validationName\n                            \n                            \n                                validationProvider\n                            \n                            \n                                validationUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkImsType\n                            \n                            \n                                onNoClick\n                            \n                            \n                                onOkClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: CreateComponentData, fb: FormBuilder, gs: IssueGraphStateService, componentStore: ComponentStoreService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        CreateComponentData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gs\n                                                  \n                                                        \n                                                                        IssueGraphStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentStore\n                                                  \n                                                        \n                                                                        ComponentStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkImsType\n                        \n                    \n                \n            \n            \n                \ncheckImsType(returnFromSelect: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    returnFromSelect\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ImsType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOkClick\n                        \n                    \n                \n            \n            \n                \nonOkClick(name: string, url: string, description: string, ims: string, provider: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ims\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateComponentData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(QueryComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationIMS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.urlValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', Validators.required)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.urlValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, Input, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {CreateComponentInput, ImsType} from 'src/generated/graphql';\nimport {IssueGraphStateService} from '@app/data/issue-graph/issue-graph-state.service';\nimport {ComponentStoreService} from '@app/data/component/component-store.service';\nimport {CCIMSValidators} from '@app/utils/validators';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n@Component({\n  selector: 'app-create-component-dialog',\n  templateUrl: './create-component-dialog.component.html',\n  styleUrls: ['./create-component-dialog.component.scss']\n})\nexport class CreateComponentDialogComponent {\n  @Input() projectId: string;\n  @ViewChild(QueryComponent) queryComponent: QueryComponent;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: CreateComponentData,\n    private fb: FormBuilder,\n    private gs: IssueGraphStateService,\n    private componentStore: ComponentStoreService\n  ) {}\n\n  // define validations\n  validationName = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  validationUrl = new FormControl('', [CCIMSValidators.urlValidator, Validators.required]);\n  validationIMS = new FormControl('', [CCIMSValidators.urlValidator, Validators.required]);\n  validationProvider = new FormControl('', Validators.required);\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  // close dialog on cancel\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  // callback method for component creation\n  onOkClick(name: string, url: string, description: string, ims: string, provider: string): void {\n    // define the input for the database mutation - required fields are specified by the graphQL schema\n    // TODO: Add component to IMS?\n    const input: CreateComponentInput = {\n      name,\n      projects: [this.data.projectId],\n      description,\n      repositoryURL: url\n    };\n\n    this.queryComponent.listenTo(this.componentStore.createComponent(input), () => this.dialogRef.close());\n  }\n\n  checkImsType(returnFromSelect: string): ImsType {\n    if (returnFromSelect.localeCompare(ImsType.Github) === 0) {\n      return ImsType.Github;\n    }\n  }\n}\n\ninterface CreateComponentData {\n  projectId: string;\n}\n\n    \n\n    \n        \n  Create Component\n  \n    \n      \n        Name\n        \n        Invalid component name\n      \n\n      \n        Repository-URL\n        \n        Enter a valid URL\n      \n\n      \n        Provider Type (IMS)\n        \n          GitHub\n        \n        Select the Provider\n      \n\n      \n        IMS-URL\n        \n        Enter a valid URL\n      \n\n      \n        Description\n        \n      \n    \n  \n  \n    Cancel\n    \n      \n        Create\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./create-component-dialog.component.scss\n                \n                @import \"src/styles/dialog\";\n\n.dialog-wrapper {\n  max-width: 600px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Create Component                    Name                Invalid component name                    Repository-URL                Enter a valid URL                    Provider Type (IMS)                  GitHub                Select the Provider                    IMS-URL                Enter a valid URL                    Description                          Cancel                  Create            '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateComponentDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateEditLabelDialogComponent.html":{"url":"components/CreateEditLabelDialogComponent.html","title":"component - CreateEditLabelDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateEditLabelDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This dialog creates or edits a label.\nSee CreateEditLabelDialogData for parameters.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-edit-label-dialog-component\n            \n\n            \n                styleUrls\n                ./create-edit-label-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-edit-label-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allComponentsList\n                            \n                            \n                                color\n                            \n                            \n                                componentList\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                loading\n                            \n                            \n                                validationLabelDescription\n                            \n                            \n                                validationLabelName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onConfirmClick\n                            \n                            \n                                onLabelCancelClick\n                            \n                            \n                                randomizeColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialogRef, dataService: DataService, data: CreateEditLabelDialogData, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        CreateEditLabelDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onConfirmClick\n                        \n                    \n                \n            \n            \n                \nonConfirmClick(name: string, description?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:128\n                \n            \n\n\n            \n                \n                    When the user confirms their changes, attempt to mutate and return with the label data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLabelCancelClick\n                        \n                    \n                \n            \n            \n                \nonLabelCancelClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:123\n                \n            \n\n\n            \n                \n                    When the user cancels label creation or editing, close and return with null.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomizeColor\n                        \n                    \n                \n            \n            \n                \nrandomizeColor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:164\n                \n            \n\n\n            \n                \n                    Randomizes the label color.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allComponentsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:43\n                        \n                    \n\n            \n                \n                    Source list of all components.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#000000'\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:36\n                        \n                    \n\n            \n                \n                    Color state.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NodeId[] | ListId\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:41\n                        \n                    \n\n            \n                \n                    Component list to be edited. For new labels, this is a list of node IDs. For existing labels, this is a ListId.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateEditLabelDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:38\n                        \n                    \n\n            \n                \n                    If true, the label that is to be edited is still loading.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationLabelDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:34\n                        \n                    \n\n            \n                \n                    Validator for the label description.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationLabelName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, Validators.maxLength(30)])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:32\n                        \n                    \n\n            \n                \n                    Validator for the label name.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from '@app/utils/validators';\nimport {encodeNodeId, ListId, ListType, NodeId} from '@app/data-dgql/id';\nimport DataService from '@app/data-dgql';\nimport {ComponentFilter, Label} from '../../../generated/graphql-dgql';\n\n/** Parameters for the create/edit label dialog component. */\nexport interface CreateEditLabelDialogData {\n  /** The raw project id. */\n  projectId: NodeId;\n  /** If set, will edit an existing label instead of creating a new one. */\n  editExisting?: NodeId;\n  /** If set, will select all components of this issue */\n  issueId?: NodeId[];\n}\n\n/**\n * This dialog creates or edits a label.\n *\n * See {@link CreateEditLabelDialogData} for parameters.\n */\n@Component({\n  selector: 'app-create-edit-label-dialog-component',\n  templateUrl: './create-edit-label-dialog.component.html',\n  styleUrls: ['./create-edit-label-dialog.component.scss']\n})\nexport class CreateEditLabelDialogComponent implements OnInit {\n  /** Validator for the label name. */\n  validationLabelName = new FormControl('', [Validators.required, Validators.maxLength(30)]);\n  /** Validator for the label description. */\n  validationLabelDescription = new FormControl('', CCIMSValidators.contentValidator);\n  /** Color state. */\n  color = '#000000';\n  /** If true, the label that is to be edited is still loading. */\n  loading = false;\n\n  /** Component list to be edited. For new labels, this is a list of node IDs. For existing labels, this is a ListId. */\n  componentList: NodeId[] | ListId = [];\n  /** Source list of all components. */\n  allComponentsList: ListId;\n\n  constructor(\n    private dialog: MatDialogRef,\n    private dataService: DataService,\n    @Inject(MAT_DIALOG_DATA) public data: CreateEditLabelDialogData,\n    private notify: UserNotifyService\n  ) {}\n\n  ngOnInit() {\n    if (this.data.editExisting) {\n      this.componentList = {\n        node: this.data.editExisting,\n        type: ListType.Components\n      };\n\n      this.loading = true;\n      const node = this.dataService.getNode(this.data.editExisting);\n      // reload data from source\n      node.invalidate();\n      node.load();\n      node\n        .dataAsPromise()\n        .then((data) => {\n          this.validationLabelName.setValue(data.name);\n          this.color = data.color;\n          this.validationLabelDescription.setValue(data.description);\n        })\n        .catch((error) => {\n          this.notify.notifyError('Could not load label data for editing');\n          this.dialog.close(null);\n        })\n        .finally(() => {\n          this.loading = false;\n        });\n    } else {\n      this.randomizeColor();\n\n      if (this.data.issueId) {\n        this.componentList = this.data.issueId;\n      }\n    }\n\n    this.allComponentsList = {\n      node: this.data.projectId,\n      type: ListType.Components\n    };\n  }\n\n  /** @ignore used for set editor */\n  makeComponentFilter(search): ComponentFilter {\n    return {name: search};\n  }\n  /** @ignore used for set editor */\n  applyComponentChangeset = async (additions: NodeId[], deletions: NodeId[]) => {\n    if (Array.isArray(this.componentList)) {\n      const keySet = new Set(this.componentList.map((id) => encodeNodeId(id)));\n      for (const item of additions) {\n        if (!keySet.has(encodeNodeId(item))) {\n          this.componentList.push(item);\n          keySet.add(encodeNodeId(item));\n        }\n      }\n      for (const item of deletions) {\n        if (keySet.has(encodeNodeId(item))) {\n          this.componentList.splice(this.componentList.indexOf(item), 1);\n          keySet.delete(encodeNodeId(item));\n        }\n      }\n    } else {\n      for (const item of additions) {\n        await this.dataService.mutations.addLabelToComponent(Math.random().toString(), this.data.editExisting, item);\n      }\n      for (const item of deletions) {\n        await this.dataService.mutations.removeLabelFromComponent(Math.random().toString(), this.data.editExisting, item);\n      }\n    }\n  };\n\n  /** When the user cancels label creation or editing, close and return with null. */\n  onLabelCancelClick(): void {\n    this.dialog.close(null);\n  }\n\n  /** When the user confirms their changes, attempt to mutate and return with the label data. */\n  onConfirmClick(name: string, description?: string) {\n    this.loading = true;\n\n    if (this.data.editExisting) {\n      this.dataService.mutations\n        .updateLabel(Math.random().toString(), this.data.editExisting, name, this.color, description)\n        .then(() => {\n          this.dialog.close({\n            id: this.data.editExisting.id,\n            name,\n            color: this.color,\n            description\n          } as Label);\n        })\n        .catch((error) => {\n          this.notify.notifyError('Failed to update label!', error);\n        })\n        .finally(() => {\n          this.loading = false;\n        });\n    } else {\n      this.dataService.mutations\n        .createLabel(Math.random().toString(), this.componentList as NodeId[], name, this.color, description)\n        .then((created) => {\n          this.dialog.close(created as Label);\n        })\n        .catch((error) => {\n          this.notify.notifyError('Failed to create label!', error);\n        })\n        .finally(() => {\n          this.loading = false;\n        });\n    }\n  }\n\n  /** Randomizes the label color. */\n  randomizeColor(): void {\n    const r = ('00' + (Math.random() * 0xff).toString(16)).slice(-2);\n    const g = ('00' + (Math.random() * 0xff).toString(16)).slice(-2);\n    const b = ('00' + (Math.random() * 0xff).toString(16)).slice(-2);\n\n    this.color = '#' + r + g + b;\n  }\n}\n\n    \n\n    \n        \n   Update label \n   Create a new label \n\n\n  \n    Components\n    Assign the label to a component\n    \n      {{ item.name }}\n    \n  \n\n  \n    Label Name\n    \n    Invalid name\n  \n\n  \n    Description\n    \n  \n\n  \n    Color\n    \n    \n      refresh\n    \n  \n\n\n\n  Cancel\n  \n     Apply \n     Create \n  \n\n\n    \n\n    \n                \n                    ./create-edit-label-dialog.component.scss\n                \n                .component-selector {\n  margin-bottom: 16px;\n}\n\n.new-label-input {\n  padding: 6px;\n  width: 100%;\n}\n\n.error-label-create {\n  background-color: rgb(204, 58, 58);\n  color: white;\n  margin-top: 5px;\n}\n\n.color-randomize-button {\n  margin-left: 4px;\n}\n\n.mat-success {\n  background-color: green;\n  color: #fff;\n}\n\n.actions {\n  float: right;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Update label    Create a new label       Components    Assign the label to a component          {{ item.name }}            Label Name        Invalid name        Description            Color              refresh        Cancel       Apply      Create   '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateEditLabelDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateEditLabelDialogData.html":{"url":"interfaces/CreateEditLabelDialogData.html","title":"interface - CreateEditLabelDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateEditLabelDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Parameters for the create/edit label dialog component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            editExisting\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            issueId\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editExisting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editExisting:         NodeId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, will edit an existing label instead of creating a new one.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueId:         NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, will select all components of this issue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         NodeId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The raw project id.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from '@app/utils/validators';\nimport {encodeNodeId, ListId, ListType, NodeId} from '@app/data-dgql/id';\nimport DataService from '@app/data-dgql';\nimport {ComponentFilter, Label} from '../../../generated/graphql-dgql';\n\n/** Parameters for the create/edit label dialog component. */\nexport interface CreateEditLabelDialogData {\n  /** The raw project id. */\n  projectId: NodeId;\n  /** If set, will edit an existing label instead of creating a new one. */\n  editExisting?: NodeId;\n  /** If set, will select all components of this issue */\n  issueId?: NodeId[];\n}\n\n/**\n * This dialog creates or edits a label.\n *\n * See {@link CreateEditLabelDialogData} for parameters.\n */\n@Component({\n  selector: 'app-create-edit-label-dialog-component',\n  templateUrl: './create-edit-label-dialog.component.html',\n  styleUrls: ['./create-edit-label-dialog.component.scss']\n})\nexport class CreateEditLabelDialogComponent implements OnInit {\n  /** Validator for the label name. */\n  validationLabelName = new FormControl('', [Validators.required, Validators.maxLength(30)]);\n  /** Validator for the label description. */\n  validationLabelDescription = new FormControl('', CCIMSValidators.contentValidator);\n  /** Color state. */\n  color = '#000000';\n  /** If true, the label that is to be edited is still loading. */\n  loading = false;\n\n  /** Component list to be edited. For new labels, this is a list of node IDs. For existing labels, this is a ListId. */\n  componentList: NodeId[] | ListId = [];\n  /** Source list of all components. */\n  allComponentsList: ListId;\n\n  constructor(\n    private dialog: MatDialogRef,\n    private dataService: DataService,\n    @Inject(MAT_DIALOG_DATA) public data: CreateEditLabelDialogData,\n    private notify: UserNotifyService\n  ) {}\n\n  ngOnInit() {\n    if (this.data.editExisting) {\n      this.componentList = {\n        node: this.data.editExisting,\n        type: ListType.Components\n      };\n\n      this.loading = true;\n      const node = this.dataService.getNode(this.data.editExisting);\n      // reload data from source\n      node.invalidate();\n      node.load();\n      node\n        .dataAsPromise()\n        .then((data) => {\n          this.validationLabelName.setValue(data.name);\n          this.color = data.color;\n          this.validationLabelDescription.setValue(data.description);\n        })\n        .catch((error) => {\n          this.notify.notifyError('Could not load label data for editing');\n          this.dialog.close(null);\n        })\n        .finally(() => {\n          this.loading = false;\n        });\n    } else {\n      this.randomizeColor();\n\n      if (this.data.issueId) {\n        this.componentList = this.data.issueId;\n      }\n    }\n\n    this.allComponentsList = {\n      node: this.data.projectId,\n      type: ListType.Components\n    };\n  }\n\n  /** @ignore used for set editor */\n  makeComponentFilter(search): ComponentFilter {\n    return {name: search};\n  }\n  /** @ignore used for set editor */\n  applyComponentChangeset = async (additions: NodeId[], deletions: NodeId[]) => {\n    if (Array.isArray(this.componentList)) {\n      const keySet = new Set(this.componentList.map((id) => encodeNodeId(id)));\n      for (const item of additions) {\n        if (!keySet.has(encodeNodeId(item))) {\n          this.componentList.push(item);\n          keySet.add(encodeNodeId(item));\n        }\n      }\n      for (const item of deletions) {\n        if (keySet.has(encodeNodeId(item))) {\n          this.componentList.splice(this.componentList.indexOf(item), 1);\n          keySet.delete(encodeNodeId(item));\n        }\n      }\n    } else {\n      for (const item of additions) {\n        await this.dataService.mutations.addLabelToComponent(Math.random().toString(), this.data.editExisting, item);\n      }\n      for (const item of deletions) {\n        await this.dataService.mutations.removeLabelFromComponent(Math.random().toString(), this.data.editExisting, item);\n      }\n    }\n  };\n\n  /** When the user cancels label creation or editing, close and return with null. */\n  onLabelCancelClick(): void {\n    this.dialog.close(null);\n  }\n\n  /** When the user confirms their changes, attempt to mutate and return with the label data. */\n  onConfirmClick(name: string, description?: string) {\n    this.loading = true;\n\n    if (this.data.editExisting) {\n      this.dataService.mutations\n        .updateLabel(Math.random().toString(), this.data.editExisting, name, this.color, description)\n        .then(() => {\n          this.dialog.close({\n            id: this.data.editExisting.id,\n            name,\n            color: this.color,\n            description\n          } as Label);\n        })\n        .catch((error) => {\n          this.notify.notifyError('Failed to update label!', error);\n        })\n        .finally(() => {\n          this.loading = false;\n        });\n    } else {\n      this.dataService.mutations\n        .createLabel(Math.random().toString(), this.componentList as NodeId[], name, this.color, description)\n        .then((created) => {\n          this.dialog.close(created as Label);\n        })\n        .catch((error) => {\n          this.notify.notifyError('Failed to create label!', error);\n        })\n        .finally(() => {\n          this.loading = false;\n        });\n    }\n  }\n\n  /** Randomizes the label color. */\n  randomizeColor(): void {\n    const r = ('00' + (Math.random() * 0xff).toString(16)).slice(-2);\n    const g = ('00' + (Math.random() * 0xff).toString(16)).slice(-2);\n    const b = ('00' + (Math.random() * 0xff).toString(16)).slice(-2);\n\n    this.color = '#' + r + g + b;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateInterfaceData.html":{"url":"interfaces/CreateInterfaceData.html","title":"interface - CreateInterfaceData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateInterfaceData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            offeredById\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        offeredById\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offeredById:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, Input} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {AuthenticationService} from '@app/auth/authentication.service';\nimport {IssueGraphStateService} from '@app/data/issue-graph/issue-graph-state.service';\nimport {InterfaceStoreService} from '@app/data/interface/interface-store.service';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from '@app/utils/validators';\n\n@Component({\n  selector: 'app-create-interface-dialog',\n  templateUrl: './create-interface-dialog.component.html',\n  styleUrls: ['./create-interface-dialog.component.scss']\n})\nexport class CreateInterfaceDialogComponent {\n  @Input()\n  projectId: string;\n\n  public loading: boolean;\n  public saveFailed: boolean;\n  validationName = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: CreateInterfaceData,\n    private fb: FormBuilder,\n    private gs: IssueGraphStateService,\n    private authService: AuthenticationService,\n    private interfaceStore: InterfaceStoreService,\n    private notify: UserNotifyService\n  ) {\n    this.loading = false;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onOkClick(name: string, description: string, type: string): void {\n    this.loading = true;\n\n    // db mutation to create an interface\n    this.interfaceStore.create(name, this.data.offeredById, description).subscribe(\n      ({data}) => {\n        this.loading = false;\n\n        // close dialog and return the interface id of the created dialog\n        this.dialogRef.close(data.createComponentInterface.componentInterface.id);\n      },\n      (error) => {\n        this.notify.notifyError('Failed to create interface!', error);\n        this.loading = false;\n        this.saveFailed = true;\n      }\n    );\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n}\n\nexport interface CreateInterfaceData {\n  position: {x: number; y: number};\n  offeredById: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateInterfaceDialogComponent.html":{"url":"components/CreateInterfaceDialogComponent.html","title":"component - CreateInterfaceDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateInterfaceDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-interface-dialog\n            \n\n            \n                styleUrls\n                ./create-interface-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-interface-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                saveFailed\n                            \n                            \n                                validationDescription\n                            \n                            \n                                validationName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterAlertClose\n                            \n                            \n                                onNoClick\n                            \n                            \n                                onOkClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: CreateInterfaceData, fb: FormBuilder, gs: IssueGraphStateService, authService: AuthenticationService, interfaceStore: InterfaceStoreService, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        CreateInterfaceData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gs\n                                                  \n                                                        \n                                                                        IssueGraphStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        interfaceStore\n                                                  \n                                                        \n                                                                        InterfaceStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterAlertClose\n                        \n                    \n                \n            \n            \n                \nafterAlertClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOkClick\n                        \n                    \n                \n            \n            \n                \nonOkClick(name: string, description: string, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateInterfaceData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveFailed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, Input} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {AuthenticationService} from '@app/auth/authentication.service';\nimport {IssueGraphStateService} from '@app/data/issue-graph/issue-graph-state.service';\nimport {InterfaceStoreService} from '@app/data/interface/interface-store.service';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from '@app/utils/validators';\n\n@Component({\n  selector: 'app-create-interface-dialog',\n  templateUrl: './create-interface-dialog.component.html',\n  styleUrls: ['./create-interface-dialog.component.scss']\n})\nexport class CreateInterfaceDialogComponent {\n  @Input()\n  projectId: string;\n\n  public loading: boolean;\n  public saveFailed: boolean;\n  validationName = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: CreateInterfaceData,\n    private fb: FormBuilder,\n    private gs: IssueGraphStateService,\n    private authService: AuthenticationService,\n    private interfaceStore: InterfaceStoreService,\n    private notify: UserNotifyService\n  ) {\n    this.loading = false;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onOkClick(name: string, description: string, type: string): void {\n    this.loading = true;\n\n    // db mutation to create an interface\n    this.interfaceStore.create(name, this.data.offeredById, description).subscribe(\n      ({data}) => {\n        this.loading = false;\n\n        // close dialog and return the interface id of the created dialog\n        this.dialogRef.close(data.createComponentInterface.componentInterface.id);\n      },\n      (error) => {\n        this.notify.notifyError('Failed to create interface!', error);\n        this.loading = false;\n        this.saveFailed = true;\n      }\n    );\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n}\n\nexport interface CreateInterfaceData {\n  position: {x: number; y: number};\n  offeredById: string;\n}\n\n    \n\n    \n        \n  Create Interface\n  \n    \n      \n        Name\n        \n        Invalid interface name\n      \n\n      \n        Interface-Type\n        \n      \n\n      \n        Description\n        \n      \n\n      \n    \n  \n  \n    Cancel\n    \n      Create\n    \n  \n\n\n    \n\n    \n                \n                    ./create-interface-dialog.component.scss\n                \n                @import \"src/styles/dialog\";\n\n.dialog-wrapper {\n  max-width: 600px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Create Interface                    Name                Invalid interface name                    Interface-Type                            Description                                Cancel          Create      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateInterfaceDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateIssueDialogComponent.html":{"url":"components/CreateIssueDialogComponent.html","title":"component - CreateIssueDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateIssueDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-issue-dialog\n            \n\n            \n                styleUrls\n                ./create-issue-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-issue-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                category\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                issueData\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                saveFailed\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterAlertClose\n                            \n                            \n                                onCreate\n                            \n                            \n                                onNoClick\n                            \n                            \n                                    Private\n                                updateSelectedItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialog: MatDialog, dataService: DataService, data: DialogData, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterAlertClose\n                        \n                    \n                \n            \n            \n                \nafterAlertClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCreate\n                        \n                    \n                \n            \n            \n                \nonCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick(showConfirmDialog: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    showConfirmDialog\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateSelectedItems\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSelectedItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:60\n                \n            \n\n\n            \n                \n                    Updates items to be selected in the Create Issue page,\nincluding 1) components and 2) locations.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('body')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalIssueData\n\n                    \n                \n                \n                    \n                        Default value : {\n    components: [],\n    locations: [],\n    labels: [],\n    assignees: [],\n    linksToIssues: []\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveFailed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.nameValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {FormControl, Validators} from '@angular/forms';\nimport {IssueCategory} from '../../../generated/graphql';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from '@app/utils/validators';\nimport {CreateIssueInput} from '../../../generated/graphql-dgql';\nimport {NodeId, NodeType} from '@app/data-dgql/id';\nimport DataService from '@app/data-dgql';\nimport {LocalIssueData} from '@app/issue-detail/issue-sidebar.component';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\n\n@Component({\n  selector: 'app-create-issue-dialog',\n  templateUrl: './create-issue-dialog.component.html',\n  styleUrls: ['./create-issue-dialog.component.scss']\n})\n/**\n * This component opens a dialog for the issue creation.\n */\nexport class CreateIssueDialogComponent implements OnInit {\n  @ViewChild('body') body;\n\n  public loading = false;\n  public saveFailed = false;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    private dialog: MatDialog,\n    private dataService: DataService,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private notify: UserNotifyService\n  ) {}\n\n  // form controls for the form fields\n  title = new FormControl('', [CCIMSValidators.nameValidator, Validators.required]);\n  category = new FormControl('', [Validators.required]);\n\n  public issueData: LocalIssueData = {\n    components: [],\n    locations: [],\n    labels: [],\n    assignees: [],\n    linksToIssues: []\n  };\n\n  ngOnInit(): void {\n    // sets up the issue category as Unclassified\n    this.category.setValue(IssueCategory.Unclassified);\n    this.dialogRef.disableClose = true;\n\n    // updates items to be selected\n    this.updateSelectedItems();\n  }\n\n  /**\n   * Updates items to be selected in the Create Issue page,\n   * including 1) components and 2) locations.\n   */\n  private updateSelectedItems() {\n    // updates components\n    for (const componentId of this.data.components) {\n      this.issueData.components.push(componentId);\n      this.issueData.locations.push(componentId);\n    }\n\n    if (this.data.locations) {\n      // updates locations\n      for (const componentId of this.data.locations) {\n        this.issueData.locations.push(componentId);\n      }\n    }\n  }\n\n  onNoClick(showConfirmDialog: boolean): void {\n    if (showConfirmDialog) {\n      this.dialog\n        .open(RemoveDialogComponent, {\n          data: {\n            title: 'Really discard issue?',\n            messages: ['Are you sure you want to discard this issue?'],\n            confirmButtonText: 'Confirm'\n          }\n        })\n        .afterClosed()\n        .subscribe((close) => {\n          if (close) {\n            this.dialogRef.close();\n          }\n        });\n    } else {\n      this.dialogRef.close();\n    }\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n\n  onCreate() {\n    const issueData: CreateIssueInput = {\n      title: this.title.value,\n      body: this.body.code,\n      category: this.category.value,\n      clientMutationID: Math.random().toString(36),\n      components: this.issueData.components.map((node) => node.id),\n      locations: this.issueData.locations.map((node) => node.id),\n      labels: this.issueData.labels.map((node) => node.id),\n      assignees: this.issueData.assignees.map((node) => node.id)\n    };\n    this.loading = true;\n    this.saveFailed = false;\n    this.dataService.mutations\n      .createIssue(issueData)\n      .then(async (result) => {\n        const issueId = {type: NodeType.Issue, id: result.id};\n        const promises = [];\n        for (const linked of this.issueData.linksToIssues) {\n          promises.push(\n            this.dataService.mutations.linkIssue(Math.random().toString(), issueId, linked).catch((err) => {\n              this.notify.notifyError('Failed to link issue!', err);\n              // aborting on this error would cause weird non-recoverable state so we won't rethrow it\n            })\n          );\n        }\n        await Promise.all(promises);\n\n        this.dialogRef.close(true);\n      })\n      .catch((err) => {\n        this.notify.notifyError('Failed to create issue!', err);\n        this.saveFailed = true;\n      })\n      .finally(() => {\n        this.loading = false;\n      });\n  }\n}\n\n/**\n * Interface that defines what data is injected to the dialog.\n */\nexport interface DialogData {\n  projectId: string;\n  // initial state of the issue's component list\n  components: NodeId[];\n  // initial state of the issue's location list\n  locations: NodeId[];\n}\n\n    \n\n    \n        \nCreate Issue\n\n\n\n  \n    \n    \n      Title\n      \n      Invalid issue title\n    \n\n    \n    \n\n    \n    \n      \n        \n        Unclassified\n      \n      \n        \n        Bug\n      \n      \n        \n        Feature Request\n      \n    \n\n    \n    \n\n    \n    \n  \n\n\n\n\n  \n   0 || title.value.length > 0)\">Cancel\n\n  \n  \n    Create\n  \n\n\n    \n\n    \n                \n                    ./create-issue-dialog.component.scss\n                \n                @import \"src/styles/dialog\";\n\n.category-selector {\n  width: 100%;\n  margin-bottom: 8px;\n\n  mat-button-toggle {\n    width: 100%;\n\n    ::ng-deep &.mat-button-toggle-checked {\n      font-weight: 600;\n    }\n  }\n}\n\n@keyframes spinner {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Create Issue                Title            Invalid issue title                                          Unclassified                            Bug                            Feature Request                                 0 || title.value.length > 0)\">Cancel        Create  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateIssueDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProjectDialogComponent.html":{"url":"components/CreateProjectDialogComponent.html","title":"component - CreateProjectDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateProjectDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-project-dialog/create-project-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component provides a dialog for the project creation\nThe user can set a name and description\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-project-dialog\n            \n\n            \n                styleUrls\n                ./create-project-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-project-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                descriptionValidator\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                nameValidator\n                            \n                            \n                                    Public\n                                saveFailed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterAlertClose\n                            \n                            \n                                onNoClick\n                            \n                            \n                                onOkClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, ps: ProjectStoreService, fb: FormBuilder, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ps\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterAlertClose\n                        \n                    \n                \n            \n            \n                \nafterAlertClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOkClick\n                        \n                    \n                \n            \n            \n                \nonOkClick(name: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        descriptionValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveFailed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {ProjectStoreService} from '@app/data/project/project-store.service';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from '@app/utils/validators';\n\n/**\n * This component provides a dialog for the project creation\n * The user can set a name and description\n *\n */\n@Component({\n  selector: 'app-create-project-dialog',\n  templateUrl: './create-project-dialog.component.html',\n  styleUrls: ['./create-project-dialog.component.scss']\n})\nexport class CreateProjectDialogComponent {\n  @Input() name: string;\n  @Input() description: string;\n  public loading: boolean;\n  public saveFailed: boolean;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    private ps: ProjectStoreService,\n    private fb: FormBuilder,\n    private notify: UserNotifyService\n  ) {\n    this.loading = false;\n  }\n\n  nameValidator = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  descriptionValidator = new FormControl('', CCIMSValidators.contentValidator);\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n\n  // after the user clicked on the create button the project creation mutation is fired\n  onOkClick(name: string, description: string): void {\n    this.loading = true;\n    this.ps.create(name, description).subscribe(\n      ({data}) => {\n        this.loading = false;\n        this.dialogRef.close({\n          createdProjectId: data.createProject.project.id\n        });\n      },\n      (error) => {\n        this.notify.notifyError('Failed to create project!', error);\n        this.loading = false;\n        this.saveFailed = true;\n      }\n    );\n  }\n}\n\n    \n\n    \n        \nCreate Project\n\n\n\n  \n    \n    \n      Name\n      \n       Invalid project name \n    \n\n    \n    \n      Description\n      \n      Invalid project description\n    \n\n    \n    \n  \n\n\n\n\n  \n  Cancel\n\n  \n  \n    Create\n  \n\n\n    \n\n    \n                \n                    ./create-project-dialog.component.scss\n                \n                @import \"src/styles/dialog\";\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Create Project                Name             Invalid project name                   Description            Invalid project description                  Cancel        Create  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateProjectDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CursorPaginatorComponent.html":{"url":"components/CursorPaginatorComponent.html","title":"component - CursorPaginatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CursorPaginatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/cursor-paginator/cursor-paginator.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component controls the cursor in a DataList using arrows and a page size selector.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cursor-paginator\n            \n\n            \n                styleUrls\n                ./cursor-paginator.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./cursor-paginator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                pageSizes\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n                \n                    \n                        Type :         DataList\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cursor-paginator/cursor-paginator.component.ts:14\n                            \n                        \n                \n                    \n                        The DataList that will be controlled.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pageSizes\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cursor-paginator/cursor-paginator.component.ts:16\n                            \n                        \n                \n                    \n                        Available page sizes; e.g. [10, 25, 100]\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {DataList} from '@app/data-dgql/query';\n\n/**\n * This component controls the cursor in a {@link DataList} using arrows and a page size selector.\n */\n@Component({\n  selector: 'app-cursor-paginator',\n  templateUrl: './cursor-paginator.component.html',\n  styleUrls: ['./cursor-paginator.component.scss']\n})\nexport class CursorPaginatorComponent {\n  /** The DataList that will be controlled. */\n  @Input() list: DataList;\n  /** Available page sizes; e.g. [10, 25, 100] */\n  @Input() pageSizes: number[];\n}\n\n    \n\n    \n        \n   1\">\n    Items per page:\n    \n      \n         {{ size }} \n      \n    \n  \n  \n    \n      first_page\n    \n    \n      chevron_left\n    \n    \n      chevron_right\n    \n  \n\n\n    \n\n    \n                \n                    ./cursor-paginator.component.scss\n                \n                .cursor-paginator {\n  display: flex;\n  justify-content: flex-end;\n  color: fade-in(black, 0.54);\n  padding: 8px 16px;\n\n  .page-size-control {\n    margin-right: 16px;\n\n    .page-size-label {\n      margin-right: 8px;\n      font-size: 12px;\n    }\n\n    .page-size-select {\n      width: 64px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   1\">    Items per page:                   {{ size }}                         first_page              chevron_left              chevron_right      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CursorPaginatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataNode.html":{"url":"classes/DataNode.html","title":"class - DataNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/query.ts\n        \n\n\n            \n                Description\n            \n            \n                A cacheable node with no parameters.\nSee DataQuery for more information, and DataService to obtain a DataNode.\nNodes are identified by a NodeId.\nExample\n\n  Is it loading? {{thing$.loading ? 'yes' : 'no'}}\n  Is the thing loaded? {{thing$.hasData ? 'yes' : 'no'}}\n  \n    Thing data: {{thing.something}}\n  \nclass ExampleComponent implements OnInit, OnDestroy {\n  @Input() thingId: NodeId;\n\n  public thing$: DataNode;\n  public thingSub: Subscription; // subscription to thing$\n\n  constructor(private dataService: DataService) {}}\n\n  ngOnInit() {\n    // obtain the DataNode from the data service\n    this.thing$ = this.dataService.getNode(this.thingId);\n\n    // subscribe to indicate that we want some data\n    this.thingSub = this.thing$.subscribe();\n  }\n\n  ngOnDestroy() {\n    // remember to unsubscribe!!\n    this.thingSub.unsubscribe();\n  }\n}\n            \n\n            \n                Extends\n            \n            \n                        DataQuery\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                interactive\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadIfNeeded\n                            \n                            \n                                dataAsPromise\n                            \n                            \n                                hydrateRaw\n                            \n                            \n                                invalidate\n                            \n                            \n                                load\n                            \n                            \n                                loadDebounced\n                            \n                            \n                                subscribeLazy\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    params\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     I\n\n                    \n                \n                        \n                            \n                                Inherited from         DataQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         DataQuery:48\n\n                        \n                    \n\n            \n                \n                    The ID of this data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interactive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         DataQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         DataQuery:137\n\n                        \n                    \n\n            \n                \n                    If true, will prolong debounce time a bit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         DataQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         DataQuery:49\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadIfNeeded\n                        \n                    \n                \n            \n            \n                \nloadIfNeeded()\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:385\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataAsPromise\n                        \n                    \n                \n            \n            \n                \ndataAsPromise()\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:171\n\n                \n            \n\n\n            \n                \n                    Returns the data as a promise, without having to create a subscription.\nIf cached data is available, this will return the data immediately; otherwise, this will\nload the data with an API request.\nExample\nconst node = dataService.getNode(someNodeId);\nnode.dataAsPromise().then(data => {\n  console.log('node data:', data);\n}).catch(error => console.error('oh no'));\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hydrateRaw\n                        \n                    \n                \n            \n            \n                \nhydrateRaw(preparedData: Promise)\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:231\n\n                \n            \n\n\n            \n                \n                    Use when data has not yet been loaded but is available from elsewhere.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    preparedData\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidate\n                        \n                    \n                \n            \n            \n                \ninvalidate()\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:264\n\n                \n            \n\n\n            \n                \n                    Deletes current data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload()\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:222\n\n                \n            \n\n\n            \n                \n                    Loads data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDebounced\n                        \n                    \n                \n            \n            \n                \nloadDebounced(interactive)\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:250\n\n                \n            \n\n\n            \n                \n                    Loads data after a short delay. Will debounce.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    interactive\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.interactive\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeLazy\n                        \n                    \n                \n            \n            \n                \nsubscribeLazy(...args: any[])\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:295\n\n                \n            \n\n\n            \n                \n                    Will subscribe to the data, but not cause a reload unless there is no data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        passed verbatim to #subscribe\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        params\n                    \n                \n\n\n                \n                    \n                        setparams(p)\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:381\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            p\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Observable, Subscriber} from 'rxjs';\nimport {decodeNodeId, encodeNodeId, ListId, ListParams, NodeId, NodeIdEnc, nodeTypeFromTypename} from './id';\nimport {QueriesService} from './queries/queries.service';\nimport {ListResult, queryList, queryNode} from './load';\nimport {PageInfo} from '../../generated/graphql-dgql';\n\n/** How long {@link DataQuery} will wait to debounce requests until actually sending a request, in milliseconds. */\nconst CACHE_FAST_DEBOUNCE_TIME_MS = 200;\n/** How long {@link DataQuery} will wait to debounce requests, if the {@link DataQuery#interactive} flag is set, in milliseconds. */\nconst CACHE_INTERACTIVE_DEBOUNCE_TIME_MS = 500;\n/** Number of milliseconds beyond which cached data will be considered stale, and will be reloaded if a new subscriber is added. */\nconst CACHE_STALE_TIME_MS = 5000;\n\n/**\n * A piece of observable data.\n *\n * DataQuery is a stateful interface for interacting with an API object.\n * Instead of calling a function to make an API request, DataQuery lets you declare the ID (like an endpoint) and\n * request parameters (in {@link #params}) of the data you want, and will automatically load the data when needed.\n * Data can then be accessed synchronously with the {@link #current} property.\n *\n * Upon adding a subscriber with [#subscribe]{@link Observable#subscribe}, data will loaded from the API and stored in the\n * cache. Subsequent viewers can then immediately access the cached data.\n *\n * - To check if data is loaded, use {@link #hasData},\n *   and to check if data is still loading, use {@link #loading}.\n * - To (re-)load the data from the API, use {@link #load}.\n *   This happens automatically upon subscription after a sufficient delay (see debounce time constants).\n * - To add a subscriber without triggering this behavior, use {@link #subscribeLazy}, which will\n *   only make an API request if the data is not cached.\n * - To invalidate (i.e. delete) the cached data, use {@link #invalidate}.\n * - If you only need the data right now and don't want to deal with subscriptions, use {@link #dataAsPromise}\n *   to access it as a promise that will either return cached data or load new data.\n *\n * When done using a DataQuery subscription, it *must* be manually destroyed by calling\n * [`sub.unsubscribe()`]{@link Subscription#unsubscribe} on the Subscription object returned by\n * [subscribe]{@link Observable#subscribe}, as it may leak memory otherwise.\n *\n * See {@link DataNode} and {@link DataList} for the two main types of data that use DataQuery.\n *\n * @typeParam I - ID type (e.g. NodeId or ListId)\n * @typeParam T - type of data accessible via .current\n * @typeParam R - type returned by innerQueryFn\n * @typeParam P - parameter type for innerQueryFn\n */\nexport abstract class DataQuery extends Observable {\n  /** The ID of this data. */\n  id: I;\n  loading = false; // TODO: maybe make this value observable too?\n  /**\n   * @ignore\n   * Private: this is the currently loaded data, externally accessible via .current.\n   */\n  protected currentData?: T;\n  /**\n   * @ignore\n   * Private: this is the time the data was last loaded, to compare against the cache invalidation\n   * timeout. This is a millisecond epoch timestamp from Date.now().\n   */\n  protected lastLoadTime = 0;\n  /**\n   * @ignore\n   * Private: this flag may be set by subclasses to avoid having writes to .params load any data.\n   */\n  protected pSetParamsNoUpdate = false;\n\n  /** Returns true if data is currently available. */\n  get hasData(): boolean {\n    return this.currentData !== undefined;\n  }\n\n  /** The currently loaded data. */\n  get current(): T {\n    return this.currentData;\n  }\n\n  /**\n   * @ignore\n   * The current query parameters, externally accessible via .params.\n   */\n  protected currentQueryParams?: P;\n  /**\n   * Parameters that will be passed to the request.\n   * Changing this property will automatically trigger a load.\n   */\n  get params(): P | undefined {\n    return this.currentQueryParams;\n  }\n  set params(p: P) {\n    this.currentQueryParams = p;\n    if (!this.pSetParamsNoUpdate) {\n      this.loadDebounced();\n    }\n  }\n\n  /**\n   * @ignore\n   * Private: set of all subscribers to this data. This set is used to send updates.\n   */\n  protected subscribers: Set> = new Set();\n  // FIXME: innerQuery/MapFn is a bit inelegant; it may be possible to refactor this\n  /**\n   * @ignore\n   * Private: this is the inner query function that actually loads the data, provided by a subclass.\n   */\n  protected innerQueryFn: (id: I, p: P) => Promise;\n  /**\n   * @ignore\n   * Private: this function maps data returned by the inner query into our format, if necessary.\n   */\n  protected innerMapFn: (r: R) => T;\n  /**\n   * @ignore\n   * Private: this is a simple counter used to determine whether the result of a load operation is\n   * still relevant.\n   */\n  protected stateLock = 0;\n  /**\n   * @ignore\n   * Private: this is a javascript timeout ID set when doing debounced loading.\n   */\n  protected loadTimeout = null;\n  /**\n   * @ignore\n   * Private: if true, the data will be hydrated (see {@link DataList#hydrateInitial}) and we should\n   * *not* trigger a load when a subscriber is added, until we have received the hydration.\n   */\n  protected hydrated = false;\n  /**\n   * @ignore\n   * Private: if true, the next call to subscribe will add a lazy subscriber.\n   * The flag will be reset automatically. Used in subscribeLazy.\n   */\n  protected isNextSubLazy = false;\n\n  /** If true, will prolong debounce time a bit. */\n  interactive = false;\n\n  /**\n   * @ignore\n   * Creates a new DataQuery (you should never need to use this directly)\n   *\n   * @param id an identifier for the data being loaded\n   * @param query the inner query function\n   * @param map maps returned data from the query R to usable data T\n   */\n  protected constructor(id: I, query: (id: I, p: P) => Promise, map: (r: R) => T) {\n    super((subscriber) => {\n      this.addSubscriber(subscriber, this.isNextSubLazy);\n      this.isNextSubLazy = false;\n    });\n    this.id = id;\n    this.innerQueryFn = query;\n    this.innerMapFn = map;\n  }\n\n  /**\n   * Returns the data as a promise, without having to create a subscription.\n   *\n   * If cached data is available, this will return the data immediately; otherwise, this will\n   * load the data with an API request.\n   *\n   * #### Example\n   * ```ts\n   * const node = dataService.getNode(someNodeId);\n   * node.dataAsPromise().then(data => {\n   *   console.log('node data:', data);\n   * }).catch(error => console.error('oh no'));\n   * ```\n   */\n  dataAsPromise(): Promise {\n    if (this.hasData) {\n      return Promise.resolve(this.current);\n    }\n    return new Promise((resolve, reject) => {\n      const sub = this.subscribe(\n        (data) => {\n          resolve(data);\n          sub.unsubscribe();\n        },\n        (error) => {\n          reject(error);\n          sub.unsubscribe();\n        }\n      );\n    });\n  }\n\n  /**\n   * @ignore\n   * Private: the actual implementation of the load function.\n   */\n  private loadImpl(fut: Promise) {\n    clearTimeout(this.loadTimeout);\n    this.loadTimeout = null;\n    this.lastLoadTime = Date.now();\n    this.loading = true;\n\n    // if load is called twice; only the newest load call will have an effect\n    const stateLock = ++this.stateLock;\n\n    fut\n      .then((data) => {\n        if (stateLock !== this.stateLock) {\n          return;\n        }\n        this.insertResult(data);\n        this.loading = false;\n        this.hydrated = false;\n      })\n      .catch((error) => {\n        if (stateLock !== this.stateLock) {\n          return;\n        }\n        this.emitErrorToAllSubscribers(error);\n        this.loading = false;\n        this.hydrated = false;\n      });\n  }\n\n  /** Loads data. */\n  load() {\n    this.hydrated = false;\n    this.loadImpl(this.innerQueryFn(this.id, this.currentQueryParams));\n  }\n\n  /**\n   * @internal\n   * Use when data has not yet been loaded but is available from elsewhere.\n   */\n  hydrateRaw(preparedData: Promise) {\n    if (this.hasData) {\n      return; // don't need hydration\n    }\n    this.hydrated = true;\n    this.loadImpl(preparedData);\n  }\n\n  /** Will load data if it's stale or not present. */\n  loadIfNeeded() {\n    if (this.loading) {\n      return;\n    }\n    if (!this.hasData || Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n\n  /** Loads data after a short delay. Will debounce. */\n  loadDebounced(interactive = this.interactive) {\n    if (this.loadTimeout) {\n      return;\n    }\n    this.loadTimeout = setTimeout(\n      () => {\n        this.loadTimeout = null;\n        this.load();\n      },\n      interactive ? CACHE_INTERACTIVE_DEBOUNCE_TIME_MS : CACHE_FAST_DEBOUNCE_TIME_MS\n    );\n  }\n\n  /** Deletes current data. */\n  invalidate() {\n    this.currentData = undefined;\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /**\n   * @ignore\n   * Private: callback for adding a new subscriber.\n   */\n  protected addSubscriber(subscriber: Subscriber, lazy: boolean) {\n    this.subscribers.add(subscriber);\n    if (this.current !== undefined) {\n      // data is available right now! emit current state\n      subscriber.next(this.current);\n    }\n\n    if (!this.hydrated && (!lazy || !this.hasData)) {\n      this.loadIfNeeded();\n    }\n\n    return {\n      unsubscribe: () => {\n        this.subscribers.delete(subscriber);\n      }\n    };\n  }\n\n  /**\n   * Will subscribe to the data, but not cause a reload unless there is no data.\n   * @param args passed verbatim to [#subscribe]{@link Observable#subscribe}\n   */\n  subscribeLazy(...args) {\n    this.isNextSubLazy = true;\n    return this.subscribe(...args);\n  }\n\n  /**\n   * @ignore\n   * Internal: will send an update with the current data (.current) to all subscribers.\n   */\n  emitUpdateToAllSubscribers() {\n    for (const sub of this.subscribers) {\n      sub.next(this.current);\n    }\n  }\n\n  /**\n   * @ignore\n   * Internal: will send the given error to all subscribers.\n   */\n  emitErrorToAllSubscribers(error: unknown) {\n    for (const sub of this.subscribers) {\n      sub.error(error);\n    }\n  }\n\n  /**\n   * @ignore\n   * Updates current data with a result from innerQueryFn, and emits an update.\n   */\n  insertResult(result: R) {\n    this.currentData = this.innerMapFn(result);\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** Returns the number of subscribers for this data. */\n  get subscriberCount(): number {\n    return this.subscribers.size;\n  }\n}\n\n/**\n * A cacheable node with no parameters.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataNode.\n * Nodes are identified by a {@link NodeId}.\n *\n * #### Example\n * ```html\n * \n *   Is it loading? {{thing$.loading ? 'yes' : 'no'}}\n *   Is the thing loaded? {{thing$.hasData ? 'yes' : 'no'}}\n *   \n *     Thing data: {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingId: NodeId;\n *\n *   public thing$: DataNode;\n *   public thingSub: Subscription; // subscription to thing$\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain the DataNode from the data service\n *     this.thing$ = this.dataService.getNode(this.thingId);\n *\n *     // subscribe to indicate that we want some data\n *     this.thingSub = this.thing$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataNode extends DataQuery {\n  /** @ignore */\n  constructor(queries: QueriesService, id: NodeId) {\n    super(id, queryNode(queries), (data) => data);\n  }\n\n  set params(p) {\n    throw new Error('parameters not available on nodes');\n  }\n\n  loadIfNeeded() {\n    if (!this.loading && Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n}\n\n/**\n * Provides a view into a list of items.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataList.\n * Lists are identified by a {@link ListId}.\n *\n * - To access list items, use {@link #currentItems}.\n * - If you need the IDs as well, use {@link #current} (note that the Map is ordered).\n *\n * The current view is defined by following properties:\n *\n * - {@link #cursor}: the current NodeId cursor (see backend API documentation for details)\n * - {@link #count}: number of items to load\n * - {@link #forward}: if true, will load items after the cursor. If false, will load items before.\n * - {@link #filter}: filter object (type parameter F)\n *\n * Changing any of these properties will reload the list (debounced).\n *\n * @typeParam T - list item type\n * @typeParam F - list filter type\n *\n * #### Example\n * ```html\n * \n *   \n *     a thing! {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingsListId: ListId;\n *\n *   things$: DataList; // filter type unknown because we're not using here\n *   thingsSub: Subscription;\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain a list view from the data service\n *     this.things$ = this.dataService.getList(this.thingsListId);\n *\n *     // subscribe to the list to indicate that we want some data\n *     this.thingsSub = this.things$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingsSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataList extends DataQuery, ListResult, ListParams> {\n  // these are all just the private versions of the corresponding list properties.\n  /** @ignore */\n  private pCursor?: NodeId;\n  /** @ignore */\n  private pCount = 10;\n  /** @ignore */\n  private pFilter?: F;\n  /** @ignore */\n  private pForward = true;\n\n  /**\n   * @ignore\n   * Private: page info for the currently loaded data.\n   */\n  private pageInfo?: PageInfo;\n  /**\n   * @ignore\n   * Private: accessible via .totalCount (read-only)\n   */\n  private pTotalCount?: number;\n  /**\n   * @ignore\n   * Private: used to correct hasPrevious/NextPage when receiving data.\n   */\n  private previouslyHadPageContents = false;\n  /**\n   * @ignore\n   * Private: pointer to the global node cache, used to insert results.\n   */\n  private pNodes: NodeCache;\n\n  /** @ignore */\n  constructor(queries: QueriesService, nodes: NodeCache, id: ListId) {\n    super(id, queryList(queries, nodes), (result) => {\n      this.pageInfo = result.pageInfo;\n      this.pTotalCount = result.totalCount;\n\n      // API *only* reports hasPreviousPage or hasNextPage correctly if we are navigating in that\n      // same direction. Hence, we need to amend pageInfo with prior knowledge.\n      if (this.forward) {\n        this.pageInfo.hasPreviousPage = this.previouslyHadPageContents;\n      } else {\n        this.pageInfo.hasNextPage = this.previouslyHadPageContents;\n      }\n      this.previouslyHadPageContents = !!result.items.size;\n\n      return result.items;\n    });\n    this.pNodes = nodes;\n    this.pSetParamsNoUpdate = true;\n    this.setParams();\n    this.pSetParamsNoUpdate = false;\n  }\n\n  /**\n   * @internal\n   * Updates the `params` value from list parameters\n   */\n  setParams() {\n    this.params = {\n      cursor: this.pCursor,\n      count: this.pCount,\n      forward: this.pForward,\n      filter: this.pFilter\n    };\n  }\n\n  /** Returns the total number of items. Null if not loaded. */\n  get totalCount() {\n    return this.pTotalCount;\n  }\n\n  /** Returns the currently loaded items in an array. */\n  get currentItems(): T[] {\n    if (!this.hasData) {\n      return [];\n    }\n    return [...this.current.values()];\n  }\n\n  /** Current list filter object. */\n  get filter(): F | undefined {\n    return this.pFilter;\n  }\n  set filter(f: F) {\n    this.pFilter = f;\n    this.setParams();\n  }\n\n  /** The current pagination cursor (a node relative to which items will be loaded). Nullable. */\n  get cursor(): NodeId {\n    return this.pCursor;\n  }\n  set cursor(c: NodeId) {\n    this.pCursor = c;\n    this.setParams();\n  }\n\n  /** The max amount of items to be loaded. */\n  get count(): number {\n    return this.pCount;\n  }\n  set count(c: number) {\n    this.pCount = c;\n    this.setParams();\n  }\n\n  /** Whether to load items after the cursor (true), or items before the cursor (false). */\n  get forward(): boolean {\n    return this.pForward;\n  }\n  set forward(f: boolean) {\n    this.pForward = f;\n    this.setParams();\n  }\n\n  /** Returns the node ID of the first item on the current page. */\n  get firstPageItemId(): NodeId | null {\n    const firstKey = this.current ? this.current.keys().next()?.value || null : null;\n    return firstKey ? decodeNodeId(firstKey) : null;\n  }\n\n  /** Returns the node ID of the last item on the current page. */\n  get lastPageItemId(): NodeId | null {\n    if (!this.current) {\n      return;\n    }\n    const keys = [...this.current.keys()];\n    return keys[keys.length - 1] ? decodeNodeId(keys[keys.length - 1]) : null;\n  }\n\n  /** Returns true if the current result contains the given node. */\n  currentHasNode(key: NodeId): boolean {\n    return this.current?.has(encodeNodeId(key));\n  }\n\n  get hasPrevPage() {\n    return !this.pageInfo || this.pageInfo.hasPreviousPage;\n  }\n  get hasNextPage() {\n    return !this.pageInfo || this.pageInfo.hasNextPage;\n  }\n\n  /** Moves the view to the first page. */\n  firstPage() {\n    this.cursor = null;\n    this.forward = true;\n    this.previouslyHadPageContents = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the previous page. */\n  prevPage() {\n    if (this.pageInfo && !this.pageInfo.hasPreviousPage) {\n      return false;\n    }\n    this.cursor = this.firstPageItemId;\n    this.forward = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the next page. */\n  nextPage() {\n    if (this.pageInfo && !this.pageInfo.hasNextPage) {\n      return false;\n    }\n    this.cursor = this.lastPageItemId;\n    this.forward = true;\n    this.invalidate();\n    return true;\n  }\n\n  /**\n   * Hydrates this list with initial data in the API format\n   *\n   * If you've already got data from the API that contains the first page of this list, you can use\n   * this method to insert that data directly and avoid triggering a redundant API request.\n   *\n   * @param data a promise that returns the API data\n   * @typeParam IdT - equivalent to T\n   */\n  hydrateInitial(data: Promise>) {\n    this.hydrateRaw(\n      data.then((value) => ({\n        totalCount: value.totalCount,\n        pageInfo: value.pageInfo,\n        items: this.pNodes.insertNodes(value.nodes || [])\n      }))\n    );\n  }\n}\n\n/** List hydration object (constructing this manually shouldn't be necessary as it mirrors the structure of GQL objects) */\nexport type HydrateList = {\n  totalCount: number;\n  pageInfo: PageInfo;\n  /** This is nullable because it's nullable in the GQL schema. In practice it should always exist */\n  nodes?: (T | null)[];\n};\n\n/** Keeps a cache of DataNodes such that each NodeId has at most one associated DataNode. */\nexport class NodeCache {\n  // TODO: garbage collection? (nodes with zero subscribers)\n  /**\n   * @internal\n   * Internal node storage. Do not use directly.\n   */\n  nodes: Map> = new Map();\n\n  constructor(private queries: QueriesService) {}\n\n  /** Creates a new node. */\n  private createNode(id: NodeId) {\n    const encodedId = encodeNodeId(id);\n    this.nodes.set(encodedId, new DataNode(this.queries, id));\n  }\n\n  /** Returns the DataNode for the given NodeId. */\n  getNode(id: NodeId): DataNode {\n    const encodedId = encodeNodeId(id);\n    if (!this.nodes.has(encodedId)) {\n      this.createNode(id);\n    }\n    return this.nodes.get(encodedId) as DataNode;\n  }\n\n  /**\n   * Inserts nodes into the cache and returns them as a map (in the same order).\n   *\n   * Note: the ID parameter of the node is only optional for type compatibility with the GQL schema.\n   * Nodes without an ID will be ignored.\n   */\n  insertNodes(nodes: T[]): Map {\n    const map = new Map();\n\n    for (const node of nodes) {\n      if (!node?.id) {\n        continue;\n      }\n      const type = nodeTypeFromTypename(node.__typename);\n      const id = {type, id: node.id};\n      const dataNode: DataNode = this.getNode(id);\n      if (!dataNode.hasData) {\n        // FIXME: different queries load different amounts of data, simple overwriting doesn't always have the desired effect\n        //  S1: distinguish between nodes and \"partial nodes\"?\n        //  S2: deep merge data?\n        dataNode.insertResult(node);\n      }\n      map.set(encodeNodeId(id), node);\n    }\n\n    return map;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataQuery.html":{"url":"classes/DataQuery.html","title":"class - DataQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/query.ts\n        \n\n\n            \n                Description\n            \n            \n                A piece of observable data.\nDataQuery is a stateful interface for interacting with an API object.\nInstead of calling a function to make an API request, DataQuery lets you declare the ID (like an endpoint) and\nrequest parameters (in #params) of the data you want, and will automatically load the data when needed.\nData can then be accessed synchronously with the #current property.\nUpon adding a subscriber with #subscribe, data will loaded from the API and stored in the\ncache. Subsequent viewers can then immediately access the cached data.\n\nTo check if data is loaded, use #hasData,\nand to check if data is still loading, use #loading.\nTo (re-)load the data from the API, use #load.\nThis happens automatically upon subscription after a sufficient delay (see debounce time constants).\nTo add a subscriber without triggering this behavior, use #subscribeLazy, which will\nonly make an API request if the data is not cached.\nTo invalidate (i.e. delete) the cached data, use #invalidate.\nIf you only need the data right now and don't want to deal with subscriptions, use #dataAsPromise\nto access it as a promise that will either return cached data or load new data.\n\nWhen done using a DataQuery subscription, it must be manually destroyed by calling\nsub.unsubscribe() on the Subscription object returned by\nsubscribe, as it may leak memory otherwise.\nSee DataNode and DataList for the two main types of data that use DataQuery.\n\n            \n\n            \n                Extends\n            \n            \n                    Observable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                interactive\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dataAsPromise\n                            \n                            \n                                hydrateRaw\n                            \n                            \n                                invalidate\n                            \n                            \n                                load\n                            \n                            \n                                loadDebounced\n                            \n                            \n                                loadIfNeeded\n                            \n                            \n                                subscribeLazy\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasData\n                                \n                                \n                                    current\n                                \n                                \n                                    params\n                                \n                                \n                                    subscriberCount\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     I\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/query.ts:48\n                        \n                    \n\n            \n                \n                    The ID of this data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interactive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/query.ts:137\n                        \n                    \n\n            \n                \n                    If true, will prolong debounce time a bit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/query.ts:49\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dataAsPromise\n                        \n                    \n                \n            \n            \n                \ndataAsPromise()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:171\n                \n            \n\n\n            \n                \n                    Returns the data as a promise, without having to create a subscription.\nIf cached data is available, this will return the data immediately; otherwise, this will\nload the data with an API request.\nExample\nconst node = dataService.getNode(someNodeId);\nnode.dataAsPromise().then(data => {\n  console.log('node data:', data);\n}).catch(error => console.error('oh no'));\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hydrateRaw\n                        \n                    \n                \n            \n            \n                \nhydrateRaw(preparedData: Promise)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:231\n                \n            \n\n\n            \n                \n                    Use when data has not yet been loaded but is available from elsewhere.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    preparedData\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidate\n                        \n                    \n                \n            \n            \n                \ninvalidate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:264\n                \n            \n\n\n            \n                \n                    Deletes current data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:222\n                \n            \n\n\n            \n                \n                    Loads data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDebounced\n                        \n                    \n                \n            \n            \n                \nloadDebounced(interactive)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:250\n                \n            \n\n\n            \n                \n                    Loads data after a short delay. Will debounce.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    interactive\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.interactive\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadIfNeeded\n                        \n                    \n                \n            \n            \n                \nloadIfNeeded()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:240\n                \n            \n\n\n            \n                \n                    Will load data if it's stale or not present.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeLazy\n                        \n                    \n                \n            \n            \n                \nsubscribeLazy(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:295\n                \n            \n\n\n            \n                \n                    Will subscribe to the data, but not cause a reload unless there is no data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        passed verbatim to #subscribe\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasData\n                    \n                \n\n                \n                    \n                        gethasData()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:68\n                                \n                            \n                    \n                        \n                                Returns true if data is currently available.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        current\n                    \n                \n\n                \n                    \n                        getcurrent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:73\n                                \n                            \n                    \n                        \n                                The currently loaded data.\n\n\n                                \n                                    Returns :     T\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        params\n                    \n                \n\n                \n                    \n                        getparams()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:86\n                                \n                            \n                    \n                        \n                                Parameters that will be passed to the request.\nChanging this property will automatically trigger a load.\n\n\n                                \n                                    Returns :     P | undefined\n\n                                \n                        \n                    \n\n                \n                    \n                        setparams(p: P)\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:89\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            p\n                                                    \n                                                            \n                                                                        P\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        subscriberCount\n                    \n                \n\n                \n                    \n                        getsubscriberCount()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:330\n                                \n                            \n                    \n                        \n                                Returns the number of subscribers for this data.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import {Observable, Subscriber} from 'rxjs';\nimport {decodeNodeId, encodeNodeId, ListId, ListParams, NodeId, NodeIdEnc, nodeTypeFromTypename} from './id';\nimport {QueriesService} from './queries/queries.service';\nimport {ListResult, queryList, queryNode} from './load';\nimport {PageInfo} from '../../generated/graphql-dgql';\n\n/** How long {@link DataQuery} will wait to debounce requests until actually sending a request, in milliseconds. */\nconst CACHE_FAST_DEBOUNCE_TIME_MS = 200;\n/** How long {@link DataQuery} will wait to debounce requests, if the {@link DataQuery#interactive} flag is set, in milliseconds. */\nconst CACHE_INTERACTIVE_DEBOUNCE_TIME_MS = 500;\n/** Number of milliseconds beyond which cached data will be considered stale, and will be reloaded if a new subscriber is added. */\nconst CACHE_STALE_TIME_MS = 5000;\n\n/**\n * A piece of observable data.\n *\n * DataQuery is a stateful interface for interacting with an API object.\n * Instead of calling a function to make an API request, DataQuery lets you declare the ID (like an endpoint) and\n * request parameters (in {@link #params}) of the data you want, and will automatically load the data when needed.\n * Data can then be accessed synchronously with the {@link #current} property.\n *\n * Upon adding a subscriber with [#subscribe]{@link Observable#subscribe}, data will loaded from the API and stored in the\n * cache. Subsequent viewers can then immediately access the cached data.\n *\n * - To check if data is loaded, use {@link #hasData},\n *   and to check if data is still loading, use {@link #loading}.\n * - To (re-)load the data from the API, use {@link #load}.\n *   This happens automatically upon subscription after a sufficient delay (see debounce time constants).\n * - To add a subscriber without triggering this behavior, use {@link #subscribeLazy}, which will\n *   only make an API request if the data is not cached.\n * - To invalidate (i.e. delete) the cached data, use {@link #invalidate}.\n * - If you only need the data right now and don't want to deal with subscriptions, use {@link #dataAsPromise}\n *   to access it as a promise that will either return cached data or load new data.\n *\n * When done using a DataQuery subscription, it *must* be manually destroyed by calling\n * [`sub.unsubscribe()`]{@link Subscription#unsubscribe} on the Subscription object returned by\n * [subscribe]{@link Observable#subscribe}, as it may leak memory otherwise.\n *\n * See {@link DataNode} and {@link DataList} for the two main types of data that use DataQuery.\n *\n * @typeParam I - ID type (e.g. NodeId or ListId)\n * @typeParam T - type of data accessible via .current\n * @typeParam R - type returned by innerQueryFn\n * @typeParam P - parameter type for innerQueryFn\n */\nexport abstract class DataQuery extends Observable {\n  /** The ID of this data. */\n  id: I;\n  loading = false; // TODO: maybe make this value observable too?\n  /**\n   * @ignore\n   * Private: this is the currently loaded data, externally accessible via .current.\n   */\n  protected currentData?: T;\n  /**\n   * @ignore\n   * Private: this is the time the data was last loaded, to compare against the cache invalidation\n   * timeout. This is a millisecond epoch timestamp from Date.now().\n   */\n  protected lastLoadTime = 0;\n  /**\n   * @ignore\n   * Private: this flag may be set by subclasses to avoid having writes to .params load any data.\n   */\n  protected pSetParamsNoUpdate = false;\n\n  /** Returns true if data is currently available. */\n  get hasData(): boolean {\n    return this.currentData !== undefined;\n  }\n\n  /** The currently loaded data. */\n  get current(): T {\n    return this.currentData;\n  }\n\n  /**\n   * @ignore\n   * The current query parameters, externally accessible via .params.\n   */\n  protected currentQueryParams?: P;\n  /**\n   * Parameters that will be passed to the request.\n   * Changing this property will automatically trigger a load.\n   */\n  get params(): P | undefined {\n    return this.currentQueryParams;\n  }\n  set params(p: P) {\n    this.currentQueryParams = p;\n    if (!this.pSetParamsNoUpdate) {\n      this.loadDebounced();\n    }\n  }\n\n  /**\n   * @ignore\n   * Private: set of all subscribers to this data. This set is used to send updates.\n   */\n  protected subscribers: Set> = new Set();\n  // FIXME: innerQuery/MapFn is a bit inelegant; it may be possible to refactor this\n  /**\n   * @ignore\n   * Private: this is the inner query function that actually loads the data, provided by a subclass.\n   */\n  protected innerQueryFn: (id: I, p: P) => Promise;\n  /**\n   * @ignore\n   * Private: this function maps data returned by the inner query into our format, if necessary.\n   */\n  protected innerMapFn: (r: R) => T;\n  /**\n   * @ignore\n   * Private: this is a simple counter used to determine whether the result of a load operation is\n   * still relevant.\n   */\n  protected stateLock = 0;\n  /**\n   * @ignore\n   * Private: this is a javascript timeout ID set when doing debounced loading.\n   */\n  protected loadTimeout = null;\n  /**\n   * @ignore\n   * Private: if true, the data will be hydrated (see {@link DataList#hydrateInitial}) and we should\n   * *not* trigger a load when a subscriber is added, until we have received the hydration.\n   */\n  protected hydrated = false;\n  /**\n   * @ignore\n   * Private: if true, the next call to subscribe will add a lazy subscriber.\n   * The flag will be reset automatically. Used in subscribeLazy.\n   */\n  protected isNextSubLazy = false;\n\n  /** If true, will prolong debounce time a bit. */\n  interactive = false;\n\n  /**\n   * @ignore\n   * Creates a new DataQuery (you should never need to use this directly)\n   *\n   * @param id an identifier for the data being loaded\n   * @param query the inner query function\n   * @param map maps returned data from the query R to usable data T\n   */\n  protected constructor(id: I, query: (id: I, p: P) => Promise, map: (r: R) => T) {\n    super((subscriber) => {\n      this.addSubscriber(subscriber, this.isNextSubLazy);\n      this.isNextSubLazy = false;\n    });\n    this.id = id;\n    this.innerQueryFn = query;\n    this.innerMapFn = map;\n  }\n\n  /**\n   * Returns the data as a promise, without having to create a subscription.\n   *\n   * If cached data is available, this will return the data immediately; otherwise, this will\n   * load the data with an API request.\n   *\n   * #### Example\n   * ```ts\n   * const node = dataService.getNode(someNodeId);\n   * node.dataAsPromise().then(data => {\n   *   console.log('node data:', data);\n   * }).catch(error => console.error('oh no'));\n   * ```\n   */\n  dataAsPromise(): Promise {\n    if (this.hasData) {\n      return Promise.resolve(this.current);\n    }\n    return new Promise((resolve, reject) => {\n      const sub = this.subscribe(\n        (data) => {\n          resolve(data);\n          sub.unsubscribe();\n        },\n        (error) => {\n          reject(error);\n          sub.unsubscribe();\n        }\n      );\n    });\n  }\n\n  /**\n   * @ignore\n   * Private: the actual implementation of the load function.\n   */\n  private loadImpl(fut: Promise) {\n    clearTimeout(this.loadTimeout);\n    this.loadTimeout = null;\n    this.lastLoadTime = Date.now();\n    this.loading = true;\n\n    // if load is called twice; only the newest load call will have an effect\n    const stateLock = ++this.stateLock;\n\n    fut\n      .then((data) => {\n        if (stateLock !== this.stateLock) {\n          return;\n        }\n        this.insertResult(data);\n        this.loading = false;\n        this.hydrated = false;\n      })\n      .catch((error) => {\n        if (stateLock !== this.stateLock) {\n          return;\n        }\n        this.emitErrorToAllSubscribers(error);\n        this.loading = false;\n        this.hydrated = false;\n      });\n  }\n\n  /** Loads data. */\n  load() {\n    this.hydrated = false;\n    this.loadImpl(this.innerQueryFn(this.id, this.currentQueryParams));\n  }\n\n  /**\n   * @internal\n   * Use when data has not yet been loaded but is available from elsewhere.\n   */\n  hydrateRaw(preparedData: Promise) {\n    if (this.hasData) {\n      return; // don't need hydration\n    }\n    this.hydrated = true;\n    this.loadImpl(preparedData);\n  }\n\n  /** Will load data if it's stale or not present. */\n  loadIfNeeded() {\n    if (this.loading) {\n      return;\n    }\n    if (!this.hasData || Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n\n  /** Loads data after a short delay. Will debounce. */\n  loadDebounced(interactive = this.interactive) {\n    if (this.loadTimeout) {\n      return;\n    }\n    this.loadTimeout = setTimeout(\n      () => {\n        this.loadTimeout = null;\n        this.load();\n      },\n      interactive ? CACHE_INTERACTIVE_DEBOUNCE_TIME_MS : CACHE_FAST_DEBOUNCE_TIME_MS\n    );\n  }\n\n  /** Deletes current data. */\n  invalidate() {\n    this.currentData = undefined;\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /**\n   * @ignore\n   * Private: callback for adding a new subscriber.\n   */\n  protected addSubscriber(subscriber: Subscriber, lazy: boolean) {\n    this.subscribers.add(subscriber);\n    if (this.current !== undefined) {\n      // data is available right now! emit current state\n      subscriber.next(this.current);\n    }\n\n    if (!this.hydrated && (!lazy || !this.hasData)) {\n      this.loadIfNeeded();\n    }\n\n    return {\n      unsubscribe: () => {\n        this.subscribers.delete(subscriber);\n      }\n    };\n  }\n\n  /**\n   * Will subscribe to the data, but not cause a reload unless there is no data.\n   * @param args passed verbatim to [#subscribe]{@link Observable#subscribe}\n   */\n  subscribeLazy(...args) {\n    this.isNextSubLazy = true;\n    return this.subscribe(...args);\n  }\n\n  /**\n   * @ignore\n   * Internal: will send an update with the current data (.current) to all subscribers.\n   */\n  emitUpdateToAllSubscribers() {\n    for (const sub of this.subscribers) {\n      sub.next(this.current);\n    }\n  }\n\n  /**\n   * @ignore\n   * Internal: will send the given error to all subscribers.\n   */\n  emitErrorToAllSubscribers(error: unknown) {\n    for (const sub of this.subscribers) {\n      sub.error(error);\n    }\n  }\n\n  /**\n   * @ignore\n   * Updates current data with a result from innerQueryFn, and emits an update.\n   */\n  insertResult(result: R) {\n    this.currentData = this.innerMapFn(result);\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** Returns the number of subscribers for this data. */\n  get subscriberCount(): number {\n    return this.subscribers.size;\n  }\n}\n\n/**\n * A cacheable node with no parameters.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataNode.\n * Nodes are identified by a {@link NodeId}.\n *\n * #### Example\n * ```html\n * \n *   Is it loading? {{thing$.loading ? 'yes' : 'no'}}\n *   Is the thing loaded? {{thing$.hasData ? 'yes' : 'no'}}\n *   \n *     Thing data: {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingId: NodeId;\n *\n *   public thing$: DataNode;\n *   public thingSub: Subscription; // subscription to thing$\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain the DataNode from the data service\n *     this.thing$ = this.dataService.getNode(this.thingId);\n *\n *     // subscribe to indicate that we want some data\n *     this.thingSub = this.thing$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataNode extends DataQuery {\n  /** @ignore */\n  constructor(queries: QueriesService, id: NodeId) {\n    super(id, queryNode(queries), (data) => data);\n  }\n\n  set params(p) {\n    throw new Error('parameters not available on nodes');\n  }\n\n  loadIfNeeded() {\n    if (!this.loading && Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n}\n\n/**\n * Provides a view into a list of items.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataList.\n * Lists are identified by a {@link ListId}.\n *\n * - To access list items, use {@link #currentItems}.\n * - If you need the IDs as well, use {@link #current} (note that the Map is ordered).\n *\n * The current view is defined by following properties:\n *\n * - {@link #cursor}: the current NodeId cursor (see backend API documentation for details)\n * - {@link #count}: number of items to load\n * - {@link #forward}: if true, will load items after the cursor. If false, will load items before.\n * - {@link #filter}: filter object (type parameter F)\n *\n * Changing any of these properties will reload the list (debounced).\n *\n * @typeParam T - list item type\n * @typeParam F - list filter type\n *\n * #### Example\n * ```html\n * \n *   \n *     a thing! {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingsListId: ListId;\n *\n *   things$: DataList; // filter type unknown because we're not using here\n *   thingsSub: Subscription;\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain a list view from the data service\n *     this.things$ = this.dataService.getList(this.thingsListId);\n *\n *     // subscribe to the list to indicate that we want some data\n *     this.thingsSub = this.things$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingsSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataList extends DataQuery, ListResult, ListParams> {\n  // these are all just the private versions of the corresponding list properties.\n  /** @ignore */\n  private pCursor?: NodeId;\n  /** @ignore */\n  private pCount = 10;\n  /** @ignore */\n  private pFilter?: F;\n  /** @ignore */\n  private pForward = true;\n\n  /**\n   * @ignore\n   * Private: page info for the currently loaded data.\n   */\n  private pageInfo?: PageInfo;\n  /**\n   * @ignore\n   * Private: accessible via .totalCount (read-only)\n   */\n  private pTotalCount?: number;\n  /**\n   * @ignore\n   * Private: used to correct hasPrevious/NextPage when receiving data.\n   */\n  private previouslyHadPageContents = false;\n  /**\n   * @ignore\n   * Private: pointer to the global node cache, used to insert results.\n   */\n  private pNodes: NodeCache;\n\n  /** @ignore */\n  constructor(queries: QueriesService, nodes: NodeCache, id: ListId) {\n    super(id, queryList(queries, nodes), (result) => {\n      this.pageInfo = result.pageInfo;\n      this.pTotalCount = result.totalCount;\n\n      // API *only* reports hasPreviousPage or hasNextPage correctly if we are navigating in that\n      // same direction. Hence, we need to amend pageInfo with prior knowledge.\n      if (this.forward) {\n        this.pageInfo.hasPreviousPage = this.previouslyHadPageContents;\n      } else {\n        this.pageInfo.hasNextPage = this.previouslyHadPageContents;\n      }\n      this.previouslyHadPageContents = !!result.items.size;\n\n      return result.items;\n    });\n    this.pNodes = nodes;\n    this.pSetParamsNoUpdate = true;\n    this.setParams();\n    this.pSetParamsNoUpdate = false;\n  }\n\n  /**\n   * @internal\n   * Updates the `params` value from list parameters\n   */\n  setParams() {\n    this.params = {\n      cursor: this.pCursor,\n      count: this.pCount,\n      forward: this.pForward,\n      filter: this.pFilter\n    };\n  }\n\n  /** Returns the total number of items. Null if not loaded. */\n  get totalCount() {\n    return this.pTotalCount;\n  }\n\n  /** Returns the currently loaded items in an array. */\n  get currentItems(): T[] {\n    if (!this.hasData) {\n      return [];\n    }\n    return [...this.current.values()];\n  }\n\n  /** Current list filter object. */\n  get filter(): F | undefined {\n    return this.pFilter;\n  }\n  set filter(f: F) {\n    this.pFilter = f;\n    this.setParams();\n  }\n\n  /** The current pagination cursor (a node relative to which items will be loaded). Nullable. */\n  get cursor(): NodeId {\n    return this.pCursor;\n  }\n  set cursor(c: NodeId) {\n    this.pCursor = c;\n    this.setParams();\n  }\n\n  /** The max amount of items to be loaded. */\n  get count(): number {\n    return this.pCount;\n  }\n  set count(c: number) {\n    this.pCount = c;\n    this.setParams();\n  }\n\n  /** Whether to load items after the cursor (true), or items before the cursor (false). */\n  get forward(): boolean {\n    return this.pForward;\n  }\n  set forward(f: boolean) {\n    this.pForward = f;\n    this.setParams();\n  }\n\n  /** Returns the node ID of the first item on the current page. */\n  get firstPageItemId(): NodeId | null {\n    const firstKey = this.current ? this.current.keys().next()?.value || null : null;\n    return firstKey ? decodeNodeId(firstKey) : null;\n  }\n\n  /** Returns the node ID of the last item on the current page. */\n  get lastPageItemId(): NodeId | null {\n    if (!this.current) {\n      return;\n    }\n    const keys = [...this.current.keys()];\n    return keys[keys.length - 1] ? decodeNodeId(keys[keys.length - 1]) : null;\n  }\n\n  /** Returns true if the current result contains the given node. */\n  currentHasNode(key: NodeId): boolean {\n    return this.current?.has(encodeNodeId(key));\n  }\n\n  get hasPrevPage() {\n    return !this.pageInfo || this.pageInfo.hasPreviousPage;\n  }\n  get hasNextPage() {\n    return !this.pageInfo || this.pageInfo.hasNextPage;\n  }\n\n  /** Moves the view to the first page. */\n  firstPage() {\n    this.cursor = null;\n    this.forward = true;\n    this.previouslyHadPageContents = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the previous page. */\n  prevPage() {\n    if (this.pageInfo && !this.pageInfo.hasPreviousPage) {\n      return false;\n    }\n    this.cursor = this.firstPageItemId;\n    this.forward = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the next page. */\n  nextPage() {\n    if (this.pageInfo && !this.pageInfo.hasNextPage) {\n      return false;\n    }\n    this.cursor = this.lastPageItemId;\n    this.forward = true;\n    this.invalidate();\n    return true;\n  }\n\n  /**\n   * Hydrates this list with initial data in the API format\n   *\n   * If you've already got data from the API that contains the first page of this list, you can use\n   * this method to insert that data directly and avoid triggering a redundant API request.\n   *\n   * @param data a promise that returns the API data\n   * @typeParam IdT - equivalent to T\n   */\n  hydrateInitial(data: Promise>) {\n    this.hydrateRaw(\n      data.then((value) => ({\n        totalCount: value.totalCount,\n        pageInfo: value.pageInfo,\n        items: this.pNodes.insertNodes(value.nodes || [])\n      }))\n    );\n  }\n}\n\n/** List hydration object (constructing this manually shouldn't be necessary as it mirrors the structure of GQL objects) */\nexport type HydrateList = {\n  totalCount: number;\n  pageInfo: PageInfo;\n  /** This is nullable because it's nullable in the GQL schema. In practice it should always exist */\n  nodes?: (T | null)[];\n};\n\n/** Keeps a cache of DataNodes such that each NodeId has at most one associated DataNode. */\nexport class NodeCache {\n  // TODO: garbage collection? (nodes with zero subscribers)\n  /**\n   * @internal\n   * Internal node storage. Do not use directly.\n   */\n  nodes: Map> = new Map();\n\n  constructor(private queries: QueriesService) {}\n\n  /** Creates a new node. */\n  private createNode(id: NodeId) {\n    const encodedId = encodeNodeId(id);\n    this.nodes.set(encodedId, new DataNode(this.queries, id));\n  }\n\n  /** Returns the DataNode for the given NodeId. */\n  getNode(id: NodeId): DataNode {\n    const encodedId = encodeNodeId(id);\n    if (!this.nodes.has(encodedId)) {\n      this.createNode(id);\n    }\n    return this.nodes.get(encodedId) as DataNode;\n  }\n\n  /**\n   * Inserts nodes into the cache and returns them as a map (in the same order).\n   *\n   * Note: the ID parameter of the node is only optional for type compatibility with the GQL schema.\n   * Nodes without an ID will be ignored.\n   */\n  insertNodes(nodes: T[]): Map {\n    const map = new Map();\n\n    for (const node of nodes) {\n      if (!node?.id) {\n        continue;\n      }\n      const type = nodeTypeFromTypename(node.__typename);\n      const id = {type, id: node.id};\n      const dataNode: DataNode = this.getNode(id);\n      if (!dataNode.hasData) {\n        // FIXME: different queries load different amounts of data, simple overwriting doesn't always have the desired effect\n        //  S1: distinguish between nodes and \"partial nodes\"?\n        //  S2: deep merge data?\n        dataNode.insertResult(node);\n      }\n      map.set(encodeNodeId(id), node);\n    }\n\n    return map;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/index.ts\n        \n\n\n            \n                Description\n            \n            \n                The data service provides access to the backend API.\nIt provides automatic caching of data to reducing unnecessary requests, and a mutation API that\nautomatically propagates updates to all observers of affected data.\nTo get data, use #getNode and #getList. To mutate data, use #mutations.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mutations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getList\n                            \n                            \n                                getNode\n                            \n                            \n                                invalidateLists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queries: QueriesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/index.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queries\n                                                  \n                                                        \n                                                                        QueriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getList\n                        \n                    \n                \n            \n            \n                \ngetList(id: ListId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/index.ts:71\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        F\n                    \n                \n            \n\n            \n                \n                    Returns a new DataList for the given ListId.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                ListId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNode\n                        \n                    \n                \n            \n            \n                \ngetNode(id: NodeId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/index.ts:38\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns the DataNode for the given NodeId.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                NodeId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidateLists\n                        \n                    \n                \n            \n            \n                \ninvalidateLists(selector: ListId | ListType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/index.ts:43\n                \n            \n\n\n            \n                \n                    Invalidates all lists with the given id or type.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                                ListId | ListType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mutations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Mutations\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/index.ts:30\n                        \n                    \n\n            \n                \n                    Data mutations.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import {NodeId, ListId, ListType, encodeListId, decodeListId, ListIdEnc} from './id';\nimport {Injectable} from '@angular/core';\nimport {QueriesService} from './queries/queries.service';\nimport {DataNode, DataList, NodeCache} from './query';\nimport {Mutations} from '@app/data-dgql/mutate';\n\n/**\n * The data service provides access to the backend API.\n * It provides automatic caching of data to reducing unnecessary requests, and a mutation API that\n * automatically propagates updates to all observers of affected data.\n *\n * To get data, use {@link #getNode} and {@link #getList}. To mutate data, use {@link #mutations}.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport default class DataService {\n  /**\n   * @ignore\n   * Internal: node cache. You probably do not need to use this directly.\n   */\n  nodes: NodeCache;\n  /**\n   * @ignore\n   * internal: list of all lists. You probably do not need to use this directly.\n   */\n  lists: Map>> = new Map();\n\n  /** Data mutations. */\n  mutations: Mutations;\n\n  constructor(private queries: QueriesService) {\n    this.nodes = new NodeCache(queries);\n    this.mutations = new Mutations(queries, this.nodes, this.invalidateLists.bind(this));\n  }\n\n  /** Returns the {@link DataNode} for the given {@link NodeId}. */\n  getNode(id: NodeId): DataNode {\n    return this.nodes.getNode(id);\n  }\n\n  /** Invalidates all lists with the given id or type. */\n  invalidateLists(selector: ListId | ListType) {\n    if (typeof selector === 'object') {\n      const id = encodeListId(selector);\n      if (!this.lists.has(id)) {\n        return;\n      }\n      const lists = this.lists.get(id);\n      for (const list of lists) {\n        if (list.subscriberCount) {\n          // invalidating the list causes layout changes we might not want (e.g. emptying a list)\n          // list.invalidate();\n          list.loadDebounced();\n        }\n      }\n    } else {\n      for (const [id, lists] of this.lists) {\n        if (decodeListId(id).type === selector) {\n          for (const list of lists) {\n            if (list.subscriberCount) {\n              list.loadDebounced();\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /** Returns a new {@link DataList} for the given {@link ListId}. */\n  getList(id: ListId): DataList {\n    const encodedId = encodeListId(id);\n    const list = new DataList(this.queries, this.nodes, id);\n    if (!this.lists.has(encodedId)) {\n      this.lists.set(encodedId, new Set());\n    }\n    this.lists.get(encodedId).add(list);\n    return list;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface that defines what data is injected to the dialog.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            components\n                                        \n                                \n                                \n                                        \n                                            locations\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        components\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        components:         NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        locations:         NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {FormControl, Validators} from '@angular/forms';\nimport {IssueCategory} from '../../../generated/graphql';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from '@app/utils/validators';\nimport {CreateIssueInput} from '../../../generated/graphql-dgql';\nimport {NodeId, NodeType} from '@app/data-dgql/id';\nimport DataService from '@app/data-dgql';\nimport {LocalIssueData} from '@app/issue-detail/issue-sidebar.component';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\n\n@Component({\n  selector: 'app-create-issue-dialog',\n  templateUrl: './create-issue-dialog.component.html',\n  styleUrls: ['./create-issue-dialog.component.scss']\n})\n/**\n * This component opens a dialog for the issue creation.\n */\nexport class CreateIssueDialogComponent implements OnInit {\n  @ViewChild('body') body;\n\n  public loading = false;\n  public saveFailed = false;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    private dialog: MatDialog,\n    private dataService: DataService,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private notify: UserNotifyService\n  ) {}\n\n  // form controls for the form fields\n  title = new FormControl('', [CCIMSValidators.nameValidator, Validators.required]);\n  category = new FormControl('', [Validators.required]);\n\n  public issueData: LocalIssueData = {\n    components: [],\n    locations: [],\n    labels: [],\n    assignees: [],\n    linksToIssues: []\n  };\n\n  ngOnInit(): void {\n    // sets up the issue category as Unclassified\n    this.category.setValue(IssueCategory.Unclassified);\n    this.dialogRef.disableClose = true;\n\n    // updates items to be selected\n    this.updateSelectedItems();\n  }\n\n  /**\n   * Updates items to be selected in the Create Issue page,\n   * including 1) components and 2) locations.\n   */\n  private updateSelectedItems() {\n    // updates components\n    for (const componentId of this.data.components) {\n      this.issueData.components.push(componentId);\n      this.issueData.locations.push(componentId);\n    }\n\n    if (this.data.locations) {\n      // updates locations\n      for (const componentId of this.data.locations) {\n        this.issueData.locations.push(componentId);\n      }\n    }\n  }\n\n  onNoClick(showConfirmDialog: boolean): void {\n    if (showConfirmDialog) {\n      this.dialog\n        .open(RemoveDialogComponent, {\n          data: {\n            title: 'Really discard issue?',\n            messages: ['Are you sure you want to discard this issue?'],\n            confirmButtonText: 'Confirm'\n          }\n        })\n        .afterClosed()\n        .subscribe((close) => {\n          if (close) {\n            this.dialogRef.close();\n          }\n        });\n    } else {\n      this.dialogRef.close();\n    }\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n\n  onCreate() {\n    const issueData: CreateIssueInput = {\n      title: this.title.value,\n      body: this.body.code,\n      category: this.category.value,\n      clientMutationID: Math.random().toString(36),\n      components: this.issueData.components.map((node) => node.id),\n      locations: this.issueData.locations.map((node) => node.id),\n      labels: this.issueData.labels.map((node) => node.id),\n      assignees: this.issueData.assignees.map((node) => node.id)\n    };\n    this.loading = true;\n    this.saveFailed = false;\n    this.dataService.mutations\n      .createIssue(issueData)\n      .then(async (result) => {\n        const issueId = {type: NodeType.Issue, id: result.id};\n        const promises = [];\n        for (const linked of this.issueData.linksToIssues) {\n          promises.push(\n            this.dataService.mutations.linkIssue(Math.random().toString(), issueId, linked).catch((err) => {\n              this.notify.notifyError('Failed to link issue!', err);\n              // aborting on this error would cause weird non-recoverable state so we won't rethrow it\n            })\n          );\n        }\n        await Promise.all(promises);\n\n        this.dialogRef.close(true);\n      })\n      .catch((err) => {\n        this.notify.notifyError('Failed to create issue!', err);\n        this.saveFailed = true;\n      })\n      .finally(() => {\n        this.loading = false;\n      });\n  }\n}\n\n/**\n * Interface that defines what data is injected to the dialog.\n */\nexport interface DialogData {\n  projectId: string;\n  // initial state of the issue's component list\n  components: NodeId[];\n  // initial state of the issue's location list\n  locations: NodeId[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData-1.html":{"url":"interfaces/DialogData-1.html","title":"interface - DialogData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/remove-dialog/remove-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            confirmButtonText\n                                        \n                                \n                                \n                                        \n                                            messages\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            verificationName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmButtonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmButtonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, shows this text as the text in the confirm button. If not set, button shows 'Delete'\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messages:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list of lines shown in the dialog. If a line starts with a space, the line will be indented\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verificationName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        verificationName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, shows a text box that forces the user to type the specified text before being able to click the confirm button\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormControl, ValidatorFn} from '@angular/forms';\n\n/**\n * This component is a confirmation dialog for anything that involves deleting\n *\n * #### Example\n * ```ts\n * // ...\n *\n * constructor(private dialog: MatDialog, ...)\n *\n * // ...\n *\n * const dialogRef = this.dialog.open(RemoveDialogComponent,\n * {\n *   data: {\n *     title: 'This is the title of the dialog',\n *     messages: ['Every entry is a new line',\n *                'This is the next line',\n *                ' Lines beginning with a space will be indented'],\n *     verificationName: 'In order for the user to be able to click the confirm button, this text has to be typed',\n *     confirmButtonText: 'This is the text of the confirm button'\n *   }\n * });\n *\n * dialogRef.afterClosed().subscribe(confirm => {\n *   if (confirm) {\n *     console.log('Deleted!');\n *   } else {\n *     console.log('Not deleted!');\n *   }\n * });\n * ```\n */\n@Component({\n  selector: 'app-remove-dialog',\n  templateUrl: './remove-dialog.component.html',\n  styleUrls: ['./remove-dialog.component.scss']\n})\nexport class RemoveDialogComponent implements OnInit {\n  matchValidator: ValidatorFn = (control) => {\n    return control.value === this.data.verificationName ? null : {\"Names don't match\": true};\n  };\n\n  verificationNameInput = new FormControl('', this.matchValidator);\n\n  constructor(public dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  ngOnInit(): void {\n    this.verificationNameInput.markAsTouched();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n\n  onDeleteClick(): void {\n    this.dialogRef.close(true);\n  }\n}\n\nexport interface DialogData {\n  title: string;\n  /** The list of lines shown in the dialog. If a line starts with a space, the line will be indented */\n  messages: Array;\n  /** If set, shows a text box that forces the user to type the specified text before being able to click the confirm button */\n  verificationName?: string;\n  /** If set, shows this text as the text in the confirm button. If not set, button shows 'Delete' */\n  confirmButtonText?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterSelection.html":{"url":"interfaces/FilterSelection.html","title":"interface - FilterSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/label-search/label-search.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            labels\n                                        \n                                \n                                \n                                        \n                                            texts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labels:         FilterLabel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FilterLabel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texts:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {concat, of, Subject, Observable, BehaviorSubject} from 'rxjs';\nimport {catchError, distinctUntilChanged, switchMap, tap} from 'rxjs/operators';\nimport {FilterLabel, isFilterLabel, LabelStoreService} from '../../data/label/label-store.service';\nimport {StateService} from '../../state.service';\n\n/**\n * This component is responsible for the display of the search bar above the graph.\n * It allows for filtering issues by multiple labels and text fragments.\n */\n@Component({\n  selector: 'app-label-search',\n  templateUrl: './label-search.component.html',\n  styleUrls: ['./label-search.component.scss']\n})\nexport class LabelSearchComponent implements OnInit {\n  public filterSelection$ = new BehaviorSubject({\n    labels: [],\n    texts: []\n  });\n\n  labels$: Observable;\n  labelsLoading = false;\n  labelsInput$ = new Subject();\n  selectedLabels: FilterElement[] = [];\n\n  constructor(private labelStore: LabelStoreService, private ss: StateService) {}\n\n  ngOnInit() {\n    this.loadLabels();\n  }\n\n  trackByFn(item: FilterLabel) {\n    return item.id;\n  }\n\n  /**\n   * Emit value representing label and text fragments in the search bar via this.filterSelection$\n   */\n  emitSelectedLabels() {\n    const selection: FilterSelection = {texts: [], labels: []};\n    // find out which elements in search bar correspond to an existing label on the backend and which to a text fragment\n    selection.texts = this.selectedLabels.filter((item) => !isFilterLabel(item)).map((item) => item.name);\n    selection.labels = this.selectedLabels.filter((label) => isFilterLabel(label)) as FilterLabel[];\n    this.filterSelection$.next(selection);\n  }\n\n  /**\n   * Load all labels from backend that match the currently typed in ng-select element\n   */\n  private loadLabels() {\n    this.labels$ = concat(\n      of([]), // default items\n      this.labelsInput$.pipe(\n        distinctUntilChanged(),\n        tap(() => (this.labelsLoading = true)),\n        switchMap((term) =>\n          this.labelStore.getMatchingLabels(this.ss.state.project.node.id, term).pipe(\n            catchError(() => of([])), // empty list on error\n            tap(() => (this.labelsLoading = false))\n          )\n        )\n      )\n    );\n  }\n}\n\n/**\n * The bar can contain elements standing for labels and elements for text fragments.\n */\ntype FilterElement = TextFragment | FilterLabel;\n\ninterface TextFragment {\n  name: string;\n}\n\nexport interface FilterSelection {\n  texts: string[];\n  labels: FilterLabel[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterState.html":{"url":"interfaces/FilterState.html","title":"interface - FilterState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/shared.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            selectedCategories\n                                        \n                                \n                                \n                                        \n                                            selectedFilter\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCategories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedCategories:         SelectedCategories\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SelectedCategories\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedFilter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedFilter:         FilterSelection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FilterSelection\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {IssueCategory} from 'src/generated/graphql';\nimport {FilterSelection} from './label-search/label-search.component';\n\ntype EnumDictionary = {\n  [K in T]: U;\n};\n\nexport type SelectedCategories = EnumDictionary;\n\nexport interface FilterState {\n  selectedCategories: SelectedCategories;\n  selectedFilter: FilterSelection;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameComponent.html":{"url":"components/FrameComponent.html","title":"component - FrameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FrameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/frame/frame.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component holds the 'frame' of the application\ncontaining the top bar, the side bar and the main container\ninto which individual views are rendered based on the url.\nIt also bridges between top bar and side menu:\n When the user clicks the menu icon in the topbar, this is communicated to\nthe navigation drawer via this.showDrawer\nThe component itself checks whether the user is currently in a project\nand passes this information down to the sidebar and topbar. It also checks the\ndisplay size and makes the side menu an overlay when on handset size.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-frame\n            \n\n            \n                styleUrls\n                ./frame.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./frame.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isHandset$\n                            \n                            \n                                    Public\n                                isProjectSet$\n                            \n                            \n                                    Public\n                                showDrawer\n                            \n                            \n                                    Public\n                                ss\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                prepareRoute\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, ss: StateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/frame/frame.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ss\n                                                  \n                                                        \n                                                                        StateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        prepareRoute\n                        \n                    \n                \n            \n            \n                \nprepareRoute(outlet: RouterOutlet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/frame/frame.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outlet\n                                    \n                                                RouterOutlet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/frame/frame.component.ts:42\n                \n            \n\n\n            \n                \n                    When user clicks sandwich this.showDrawer boolean changes value.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isHandset$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map((result) => result.matches),\n    shareReplay()\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/frame/frame.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isProjectSet$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/frame/frame.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showDrawer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/frame/frame.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StateService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/frame/frame.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {map, shareReplay} from 'rxjs/operators';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {Observable, BehaviorSubject} from 'rxjs';\nimport {StateService} from '@app/state.service';\nimport {RouterOutlet} from '@angular/router';\nimport {slider} from '../route-animations';\n\n/**\n * This component holds the 'frame' of the application\n * containing the top bar, the side bar and the main container\n * into which individual views are rendered based on the url.\n * It also bridges between top bar and side menu:\n *  When the user clicks the menu icon in the topbar, this is communicated to\n * the navigation drawer via this.showDrawer\n * The component itself checks whether the user is currently in a project\n * and passes this information down to the sidebar and topbar. It also checks the\n * display size and makes the side menu an overlay when on handset size.\n */\n@Component({\n  selector: 'app-frame',\n  templateUrl: './frame.component.html',\n  styleUrls: ['./frame.component.scss'],\n  animations: [slider]\n})\nexport class FrameComponent {\n  public isProjectSet$ = new BehaviorSubject(false);\n  public showDrawer = true;\n\n  isHandset$: Observable = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map((result) => result.matches),\n    shareReplay()\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver, public ss: StateService) {\n    ss.state$.pipe(map((state) => state.project != null)).subscribe(this.isProjectSet$);\n  }\n\n  /**\n   * When user clicks sandwich this.showDrawer boolean changes value.\n   */\n  toggleMenu(): void {\n    this.showDrawer = !this.showDrawer;\n  }\n\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData.animation;\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./frame.component.scss\n                \n                .sidenav-container {\n  height: 100%;\n  grid-column: 1 / 2;\n  grid-row: 2 / 3;\n}\n\n.sidenav {\n  width: 200px;\n}\n\n.sidenav .mat-toolbar {\n  background: inherit;\n}\n\n.sidenav-content {\n  display: flex;\n  flex-flow: column;\n  height: 100%;\n}\n\n.container {\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  flex: 1 1 auto;\n  overflow-y: auto;\n}\n\n.root {\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto 1fr;\n  height: 100%;\n  overflow-y: hidden;\n}\n\n.header {\n  grid-column: 1 / 2;\n  grid-row: 1 / 2;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'FrameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphComponent.html":{"url":"classes/GraphComponent.html","title":"class - GraphComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                issues\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromGQL\n                            \n                            \n                                    Static\n                                mapFromGQL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:137\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:135\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromGQL(gqlGraphComponent: GQLGraphComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:143\n                \n            \n\n\n            \n                \n                    Convert backend representation of graph component to frontend representation.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gqlGraphComponent\n                                    \n                                                GQLGraphComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        backend representation of component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphComponent\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapFromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapFromGQL(gqlGraphComponents: GQLGraphComponent[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gqlGraphComponents\n                                    \n                                                GQLGraphComponent[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface,\n  GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map((gqlIssue) => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components,\n      interfaces,\n      graphLocations,\n      relatedFolders,\n      linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(\n    locationIds.filter((locationId) => interfaces.has(locationId)).map((interfaceId) => interfaces.get(interfaceId).offeredBy)\n  );\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter((id) => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>>}>;\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount, gqlInterface.featureRequests.totalCount, gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map((component) => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map((gqlInterface) => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(\n      gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount\n    );\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map((gqlComponent) => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & {\n      locations?: {\n        nodes?: (Pick | Pick)[];\n      };\n    })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map((location) => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map((gqlPartialIssue) => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(\n  linkIssues: GraphIssue[],\n  interfaces: Map\n): DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map((locationId) => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map((locationId) => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach((folder) => relatedFolders.setValue(folder, relatedFolders.getValue(folder).concat(targetFolders)));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphData.html":{"url":"interfaces/GraphData.html","title":"interface - GraphData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GraphData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n            \n                Description\n            \n            \n                Describes data needed by IssueGraphComponent to draw the graph.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            components\n                                        \n                                \n                                \n                                        \n                                            graphLocations\n                                        \n                                \n                                \n                                        \n                                            interfaces\n                                        \n                                \n                                \n                                        \n                                            linkIssues\n                                        \n                                \n                                \n                                        \n                                            relatedFolders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        components\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        components:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        graphLocations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graphLocations:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interfaces\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interfaces:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        linkIssues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        linkIssues:         GraphIssue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphIssue[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relatedFolders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        relatedFolders:         DefaultDictionary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DefaultDictionary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface,\n  GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map((gqlIssue) => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components,\n      interfaces,\n      graphLocations,\n      relatedFolders,\n      linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(\n    locationIds.filter((locationId) => interfaces.has(locationId)).map((interfaceId) => interfaces.get(interfaceId).offeredBy)\n  );\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter((id) => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>>}>;\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount, gqlInterface.featureRequests.totalCount, gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map((component) => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map((gqlInterface) => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(\n      gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount\n    );\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map((gqlComponent) => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & {\n      locations?: {\n        nodes?: (Pick | Pick)[];\n      };\n    })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map((location) => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map((gqlPartialIssue) => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(\n  linkIssues: GraphIssue[],\n  interfaces: Map\n): DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map((locationId) => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map((locationId) => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach((folder) => relatedFolders.setValue(folder, relatedFolders.getValue(folder).concat(targetFolders)));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphDataFactory.html":{"url":"classes/GraphDataFactory.html","title":"class - GraphDataFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphDataFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                graphDataFromGQL\n                            \n                            \n                                    Static\n                                removeFilteredData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        graphDataFromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    graphDataFromGQL(data: GetIssueGraphDataQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:48\n                \n            \n\n\n            \n                \n                    Converts the data required for the graph from the format the backend delivers into a\nGraphData object as needed by the IssueGraphComponent for rendering.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetIssueGraphDataQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphData\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        removeFilteredData\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:37\n                \n            \n\n\n            \n                \n                    Removes the counts for issue categories which are filtered. This is a workaround\nneeded because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graphData\n                                    \n                                                GraphData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the data with the unnecessary counts\n\n                                    \n                                \n                                \n                                    activeCategories\n                                    \n                                            IssueCategory[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the categories corresponding to the activated toggles of the graph component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphData\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface,\n  GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map((gqlIssue) => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components,\n      interfaces,\n      graphLocations,\n      relatedFolders,\n      linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(\n    locationIds.filter((locationId) => interfaces.has(locationId)).map((interfaceId) => interfaces.get(interfaceId).offeredBy)\n  );\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter((id) => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>>}>;\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount, gqlInterface.featureRequests.totalCount, gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map((component) => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map((gqlInterface) => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(\n      gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount\n    );\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map((gqlComponent) => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & {\n      locations?: {\n        nodes?: (Pick | Pick)[];\n      };\n    })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map((location) => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map((gqlPartialIssue) => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(\n  linkIssues: GraphIssue[],\n  interfaces: Map\n): DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map((locationId) => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map((locationId) => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach((folder) => relatedFolders.setValue(folder, relatedFolders.getValue(folder).concat(targetFolders)));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphInterface.html":{"url":"classes/GraphInterface.html","title":"class - GraphInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                consumedBy\n                            \n                            \n                                id\n                            \n                            \n                                issues\n                            \n                            \n                                name\n                            \n                            \n                                offeredBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromGQL\n                            \n                            \n                                    Static\n                                mapFromGQL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        consumedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        offeredBy\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:106\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromGQL(gqlInterface: GQLInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gqlInterface\n                                    \n                                                GQLInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapFromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapFromGQL(gqlInterfaces: GQLInterface[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gqlInterfaces\n                                    \n                                                GQLInterface[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface,\n  GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map((gqlIssue) => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components,\n      interfaces,\n      graphLocations,\n      relatedFolders,\n      linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(\n    locationIds.filter((locationId) => interfaces.has(locationId)).map((interfaceId) => interfaces.get(interfaceId).offeredBy)\n  );\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter((id) => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>>}>;\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount, gqlInterface.featureRequests.totalCount, gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map((component) => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map((gqlInterface) => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(\n      gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount\n    );\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map((gqlComponent) => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & {\n      locations?: {\n        nodes?: (Pick | Pick)[];\n      };\n    })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map((location) => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map((gqlPartialIssue) => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(\n  linkIssues: GraphIssue[],\n  interfaces: Map\n): DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map((locationId) => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map((locationId) => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach((folder) => relatedFolders.setValue(folder, relatedFolders.getValue(folder).concat(targetFolders)));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphIssue.html":{"url":"classes/GraphIssue.html","title":"class - GraphIssue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphIssue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                linksIssues\n                            \n                            \n                                locations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromGQL\n                            \n                            \n                                    Static\n                                fromGQLNoLinks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IssueCategory\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:178\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:177\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        linksIssues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GraphIssue[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:180\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocationId[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:179\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromGQL(gqlIssue: GQLIssue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:198\n                \n            \n\n\n            \n                \n                    Convert issue from backend to frontend format ignoring links between issues\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gqlIssue\n                                    \n                                                GQLIssue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        backend representation of Issues\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphIssue\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromGQLNoLinks\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromGQLNoLinks(gqlPartialIssue: Pick)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:186\n                \n            \n\n\n            \n                \n                    Convert issue from backend to frontend format ignoring links between issues\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gqlPartialIssue\n                                    \n                                                Pick\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        backend representation of issue\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { id: any; category: any; locations: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface,\n  GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map((gqlIssue) => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components,\n      interfaces,\n      graphLocations,\n      relatedFolders,\n      linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(\n    locationIds.filter((locationId) => interfaces.has(locationId)).map((interfaceId) => interfaces.get(interfaceId).offeredBy)\n  );\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter((id) => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>>}>;\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount, gqlInterface.featureRequests.totalCount, gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map((component) => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map((gqlInterface) => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(\n      gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount\n    );\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map((gqlComponent) => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & {\n      locations?: {\n        nodes?: (Pick | Pick)[];\n      };\n    })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map((location) => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map((gqlPartialIssue) => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(\n  linkIssues: GraphIssue[],\n  interfaces: Map\n): DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map((locationId) => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map((locationId) => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach((folder) => relatedFolders.setValue(folder, relatedFolders.getValue(folder).concat(targetFolders)));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLModule.html":{"url":"modules/GraphQLModule.html","title":"module - GraphQLModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/graphql.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {APOLLO_NAMED_OPTIONS, APOLLO_OPTIONS, NamedOptions} from 'apollo-angular';\nimport {ApolloClientOptions, ApolloLink, InMemoryCache} from '@apollo/client/core';\nimport {HttpLink} from 'apollo-angular/http';\nimport {setContext} from '@apollo/link-context';\nimport {onError} from '@apollo/client/link/error';\nimport {HttpClientModule} from '@angular/common/http';\nimport {AuthenticationService} from './auth/authentication.service';\nimport {environment} from '@environments/environment';\nimport {IndividualConfig, ToastrModule, ToastrService} from 'ngx-toastr';\nimport {DefaultOptions} from '@apollo/client/core/ApolloClient';\n\n/**\n * This modules purpose is to provide define functions returning configurations\n * for the automatic creation of ApolloClients for graphql communication with the backend.\n * The key functions are providePublicApollo and provideDefaultApollo. The apollo instance\n * constructed from providePublicApollo is only used for registering.\n */\n\nconst defaultOptions: DefaultOptions = {\n  query: {\n    fetchPolicy: 'no-cache',\n    errorPolicy: 'all'\n  }\n};\n\n/**\n * Congiuration for network error toast on register page.\n */\nconst networkErrorToast: Partial = {\n  timeOut: 5000,\n  closeButton: true,\n  positionClass: 'toast-top-center',\n  enableHtml: true\n};\n\nconst basic = setContext((operation, context) => ({\n  headers: {\n    Accept: 'charset=utf-8'\n  }\n}));\n\nexport function createErrorLink(authService: AuthenticationService, toastr: ToastrService): ApolloLink {\n  const errorLink = onError(({graphQLErrors, networkError, operation, forward}) => {\n    if (graphQLErrors) {\n      const message = graphQLErrors.map((err) => err.message).join('');\n      console.log(`[Graphql errors]: ${message}`);\n      toastr.error(message, 'GraphQL error', networkErrorToast);\n    }\n\n    if (networkError) {\n      console.log(`[Network error]: ${networkError.name}\\n${networkError.message}\\n${networkError.stack}`);\n      // @ts-ignore\n      if (networkError.status === 401) {\n        authService.logout();\n      } else {\n        toastr.error(networkError.message, 'Server/Connection error', networkErrorToast);\n      }\n    }\n  });\n  return errorLink;\n}\n\n/**\n * Create Apollo instance where credentials from local storage are attached to requests\n * @param httpLink\n * @param authService\n * @param toastr\n */\nexport function provideDefaultApollo(\n  httpLink: HttpLink,\n  authService: AuthenticationService,\n  toastr: ToastrService\n): ApolloClientOptions {\n  const token = localStorage.getItem('token');\n  const auth = setContext((_, {headers}) => {\n    // get the authentication token from local storage if it exists\n    // return the headers to the context so httpLink can read them\n    return {\n      headers: {\n        ...headers,\n        Authorization: localStorage.getItem('token') ? `Bearer ${localStorage.getItem('token')}` : ''\n      }\n    };\n  });\n  const errorLink = createErrorLink(authService, toastr);\n  const link = ApolloLink.from([basic, errorLink, auth, httpLink.create({uri: environment.apiUrl})]);\n  const cache = new InMemoryCache();\n  return {link, cache, defaultOptions};\n}\n\n/**\n * Creates Apollo Client used for user registration with public endpoint. In contrast to\n * provideDefaultApollo no token is attached to reqeusts.\n * @param httpLink\n * @param authService\n * @param toastr\n */\nexport function providePublicApollo(httpLink: HttpLink, authService: AuthenticationService, toastr: ToastrService): NamedOptions {\n  const errorLink = createErrorLink(authService, toastr);\n  const link = ApolloLink.from([basic, errorLink, httpLink.create({uri: environment.signUpUrl})]);\n  const cache = new InMemoryCache();\n  return {\n    publicClient: {\n      link,\n      cache,\n      defaultOptions\n    }\n  };\n}\n\n@NgModule({\n  imports: [ToastrModule],\n  exports: [HttpClientModule],\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: provideDefaultApollo,\n      deps: [HttpLink, AuthenticationService, ToastrService]\n    },\n    {\n      provide: APOLLO_NAMED_OPTIONS,\n      useFactory: providePublicApollo,\n      deps: [HttpLink, AuthenticationService, ToastrService]\n    }\n  ]\n})\nexport class GraphQLModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphsModule.html":{"url":"modules/GraphsModule.html","title":"module - GraphsModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GraphsModule\n\n\n\ncluster_GraphsModule_declarations\n\n\n\ncluster_GraphsModule_exports\n\n\n\n\nAddProjectMemberDialogComponent\n\nAddProjectMemberDialogComponent\n\n\n\nGraphsModule\n\nGraphsModule\n\nGraphsModule -->\n\nAddProjectMemberDialogComponent->GraphsModule\n\n\n\n\n\nCacheNodeComponent\n\nCacheNodeComponent\n\nGraphsModule -->\n\nCacheNodeComponent->GraphsModule\n\n\n\n\n\nCursorPaginatorComponent\n\nCursorPaginatorComponent\n\nGraphsModule -->\n\nCursorPaginatorComponent->GraphsModule\n\n\n\n\n\nIssueCategoryComponent\n\nIssueCategoryComponent\n\nGraphsModule -->\n\nIssueCategoryComponent->GraphsModule\n\n\n\n\n\nIssueFilterComponent\n\nIssueFilterComponent\n\nGraphsModule -->\n\nIssueFilterComponent->GraphsModule\n\n\n\n\n\nIssueGraphComponent\n\nIssueGraphComponent\n\nGraphsModule -->\n\nIssueGraphComponent->GraphsModule\n\n\n\n\n\nIssueGraphControlsComponent\n\nIssueGraphControlsComponent\n\nGraphsModule -->\n\nIssueGraphControlsComponent->GraphsModule\n\n\n\n\n\nIssueIconComponent\n\nIssueIconComponent\n\nGraphsModule -->\n\nIssueIconComponent->GraphsModule\n\n\n\n\n\nIssueItemComponent\n\nIssueItemComponent\n\nGraphsModule -->\n\nIssueItemComponent->GraphsModule\n\n\n\n\n\nIssueLabelComponent\n\nIssueLabelComponent\n\nGraphsModule -->\n\nIssueLabelComponent->GraphsModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nGraphsModule -->\n\nIssueListComponent->GraphsModule\n\n\n\n\n\nIssueLocationComponent\n\nIssueLocationComponent\n\nGraphsModule -->\n\nIssueLocationComponent->GraphsModule\n\n\n\n\n\nIssueSidebarComponent\n\nIssueSidebarComponent\n\nGraphsModule -->\n\nIssueSidebarComponent->GraphsModule\n\n\n\n\n\nItemDirective\n\nItemDirective\n\nGraphsModule -->\n\nItemDirective->GraphsModule\n\n\n\n\n\nLabelSearchComponent\n\nLabelSearchComponent\n\nGraphsModule -->\n\nLabelSearchComponent->GraphsModule\n\n\n\n\n\nProjectHeaderComponent\n\nProjectHeaderComponent\n\nGraphsModule -->\n\nProjectHeaderComponent->GraphsModule\n\n\n\n\n\nProjectIssueListComponent\n\nProjectIssueListComponent\n\nGraphsModule -->\n\nProjectIssueListComponent->GraphsModule\n\n\n\n\n\nProjectMembersComponent\n\nProjectMembersComponent\n\nGraphsModule -->\n\nProjectMembersComponent->GraphsModule\n\n\n\n\n\nQueryBodyDirective\n\nQueryBodyDirective\n\nGraphsModule -->\n\nQueryBodyDirective->GraphsModule\n\n\n\n\n\nQueryButtonDirective\n\nQueryButtonDirective\n\nGraphsModule -->\n\nQueryButtonDirective->GraphsModule\n\n\n\n\n\nQueryComponent\n\nQueryComponent\n\nGraphsModule -->\n\nQueryComponent->GraphsModule\n\n\n\n\n\nSetEditorComponent\n\nSetEditorComponent\n\nGraphsModule -->\n\nSetEditorComponent->GraphsModule\n\n\n\n\n\nSetEditorDialogComponent\n\nSetEditorDialogComponent\n\nGraphsModule -->\n\nSetEditorDialogComponent->GraphsModule\n\n\n\n\n\nUserItemComponent\n\nUserItemComponent\n\nGraphsModule -->\n\nUserItemComponent->GraphsModule\n\n\n\n\n\nCursorPaginatorComponent \n\nCursorPaginatorComponent \n\nCursorPaginatorComponent  -->\n\nGraphsModule->CursorPaginatorComponent \n\n\n\n\n\nIssueCategoryComponent \n\nIssueCategoryComponent \n\nIssueCategoryComponent  -->\n\nGraphsModule->IssueCategoryComponent \n\n\n\n\n\nIssueGraphComponent \n\nIssueGraphComponent \n\nIssueGraphComponent  -->\n\nGraphsModule->IssueGraphComponent \n\n\n\n\n\nIssueGraphControlsComponent \n\nIssueGraphControlsComponent \n\nIssueGraphControlsComponent  -->\n\nGraphsModule->IssueGraphControlsComponent \n\n\n\n\n\nIssueIconComponent \n\nIssueIconComponent \n\nIssueIconComponent  -->\n\nGraphsModule->IssueIconComponent \n\n\n\n\n\nIssueItemComponent \n\nIssueItemComponent \n\nIssueItemComponent  -->\n\nGraphsModule->IssueItemComponent \n\n\n\n\n\nIssueLabelComponent \n\nIssueLabelComponent \n\nIssueLabelComponent  -->\n\nGraphsModule->IssueLabelComponent \n\n\n\n\n\nIssueListComponent \n\nIssueListComponent \n\nIssueListComponent  -->\n\nGraphsModule->IssueListComponent \n\n\n\n\n\nIssueLocationComponent \n\nIssueLocationComponent \n\nIssueLocationComponent  -->\n\nGraphsModule->IssueLocationComponent \n\n\n\n\n\nIssueSidebarComponent \n\nIssueSidebarComponent \n\nIssueSidebarComponent  -->\n\nGraphsModule->IssueSidebarComponent \n\n\n\n\n\nItemDirective \n\nItemDirective \n\nItemDirective  -->\n\nGraphsModule->ItemDirective \n\n\n\n\n\nProjectHeaderComponent \n\nProjectHeaderComponent \n\nProjectHeaderComponent  -->\n\nGraphsModule->ProjectHeaderComponent \n\n\n\n\n\nQueryBodyDirective \n\nQueryBodyDirective \n\nQueryBodyDirective  -->\n\nGraphsModule->QueryBodyDirective \n\n\n\n\n\nQueryButtonDirective \n\nQueryButtonDirective \n\nQueryButtonDirective  -->\n\nGraphsModule->QueryButtonDirective \n\n\n\n\n\nQueryComponent \n\nQueryComponent \n\nQueryComponent  -->\n\nGraphsModule->QueryComponent \n\n\n\n\n\nSetEditorComponent \n\nSetEditorComponent \n\nSetEditorComponent  -->\n\nGraphsModule->SetEditorComponent \n\n\n\n\n\nUserItemComponent \n\nUserItemComponent \n\nUserItemComponent  -->\n\nGraphsModule->UserItemComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/graphs/graphs.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The IssueGraphComponent and IssueGraphControlsComponent form their own module declared here\nand imported into the main app.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddProjectMemberDialogComponent\n                        \n                        \n                            CacheNodeComponent\n                        \n                        \n                            CursorPaginatorComponent\n                        \n                        \n                            IssueCategoryComponent\n                        \n                        \n                            IssueFilterComponent\n                        \n                        \n                            IssueGraphComponent\n                        \n                        \n                            IssueGraphControlsComponent\n                        \n                        \n                            IssueIconComponent\n                        \n                        \n                            IssueItemComponent\n                        \n                        \n                            IssueLabelComponent\n                        \n                        \n                            IssueListComponent\n                        \n                        \n                            IssueLocationComponent\n                        \n                        \n                            IssueSidebarComponent\n                        \n                        \n                            ItemDirective\n                        \n                        \n                            LabelSearchComponent\n                        \n                        \n                            ProjectHeaderComponent\n                        \n                        \n                            ProjectIssueListComponent\n                        \n                        \n                            ProjectMembersComponent\n                        \n                        \n                            QueryBodyDirective\n                        \n                        \n                            QueryButtonDirective\n                        \n                        \n                            QueryComponent\n                        \n                        \n                            SetEditorComponent\n                        \n                        \n                            SetEditorDialogComponent\n                        \n                        \n                            UserItemComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CursorPaginatorComponent\n                        \n                        \n                            IssueCategoryComponent\n                        \n                        \n                            IssueGraphComponent\n                        \n                        \n                            IssueGraphControlsComponent\n                        \n                        \n                            IssueIconComponent\n                        \n                        \n                            IssueItemComponent\n                        \n                        \n                            IssueLabelComponent\n                        \n                        \n                            IssueListComponent\n                        \n                        \n                            IssueLocationComponent\n                        \n                        \n                            IssueSidebarComponent\n                        \n                        \n                            ItemDirective\n                        \n                        \n                            ProjectHeaderComponent\n                        \n                        \n                            QueryBodyDirective\n                        \n                        \n                            QueryButtonDirective\n                        \n                        \n                            QueryComponent\n                        \n                        \n                            SetEditorComponent\n                        \n                        \n                            UserItemComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IssueGraphComponent} from './issue-graph/issue-graph.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatTableModule} from '@angular/material/table';\nimport '@ustutt/grapheditor-webcomponent/lib/index';\nimport {IssueGraphControlsComponent} from './issue-graph-controls/issue-graph-controls.component';\nimport {MAT_FORM_FIELD_DEFAULT_OPTIONS} from '@angular/material/form-field';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {IssueListComponent} from '@app/issue-list/issue-list.component';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatSortModule} from '@angular/material/sort';\nimport {LabelSearchComponent} from './label-search/label-search.component';\nimport {NgSelectModule} from '@ng-select/ng-select';\nimport {NgOptionHighlightModule} from '@ng-select/ng-option-highlight';\nimport {ProjectIssueListComponent} from '@app/project-issue-list/project-issue-list.component';\nimport {ProjectMembersComponent} from '@app/project-members/project-members.component';\nimport {AddProjectMemberDialogComponent} from '../dialogs/add-project-member-dialog/add-project-member-dialog.component';\nimport {CursorPaginatorComponent} from '@app/components/cursor-paginator/cursor-paginator.component';\nimport {SetEditorComponent} from '@app/components/set-editor/set-editor.component';\nimport {ItemDirective} from '@app/components/item.directive';\nimport {IssueLabelComponent} from '@app/components/issue-label/issue-label.component';\nimport {SetEditorDialogComponent} from '@app/components/set-editor/set-editor-dialog.component';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {IssueItemComponent} from '@app/components/issue-item/issue-item.component';\nimport {UserItemComponent} from '@app/components/user-item/user-item.component';\nimport {IssueIconComponent} from '@app/components/issue-icon/issue-icon.component';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {IssueSidebarComponent} from '@app/issue-detail/issue-sidebar.component';\nimport {CacheNodeComponent} from '@app/components/cache-node.component';\nimport {ProjectHeaderComponent} from '@app/project-header/project-header.component';\nimport {IssueFilterComponent} from '@app/issue-list/issue-filter.component';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {QueryBodyDirective, QueryButtonDirective, QueryComponent} from '@app/utils/query-component/query.component';\nimport {MatProgressSpinnerModule, MatSpinner} from '@angular/material/progress-spinner';\nimport {IssueLocationComponent} from '@app/components/issue-location/issue-location.component';\nimport {IssueCategoryComponent} from '@app/components/issue-category/issue-category.component';\n\n/**\n * The IssueGraphComponent and IssueGraphControlsComponent form their own module declared here\n * and imported into the main app.\n * @export\n * @class GraphsModule\n */\n@NgModule({\n  declarations: [\n    IssueGraphComponent,\n    IssueGraphControlsComponent,\n    IssueListComponent,\n    LabelSearchComponent,\n    ProjectIssueListComponent,\n    ProjectMembersComponent,\n    AddProjectMemberDialogComponent,\n    CursorPaginatorComponent,\n    SetEditorComponent,\n    ItemDirective,\n    IssueLabelComponent,\n    SetEditorDialogComponent,\n    IssueItemComponent,\n    UserItemComponent,\n    IssueIconComponent,\n    IssueSidebarComponent,\n    CacheNodeComponent,\n    ProjectHeaderComponent,\n    IssueFilterComponent,\n    QueryComponent,\n    QueryBodyDirective,\n    QueryButtonDirective,\n    IssueLocationComponent,\n    IssueCategoryComponent\n  ],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatSlideToggleModule,\n    MatDialogModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatSlideToggleModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatTabsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    NgSelectModule,\n    NgOptionHighlightModule,\n    MatCheckboxModule,\n    MatMenuModule,\n    MatButtonToggleModule,\n    MatTooltipModule,\n    MatProgressSpinnerModule\n  ],\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    IssueGraphComponent,\n    IssueGraphControlsComponent,\n    IssueListComponent,\n    SetEditorComponent,\n    ItemDirective,\n    IssueLabelComponent,\n    IssueItemComponent,\n    UserItemComponent,\n    IssueIconComponent,\n    IssueSidebarComponent,\n    CursorPaginatorComponent,\n    ProjectHeaderComponent,\n    QueryComponent,\n    QueryBodyDirective,\n    QueryButtonDirective,\n    IssueLocationComponent,\n    IssueCategoryComponent\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  providers: [\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: {appearance: 'fill'}\n    }\n  ]\n})\nexport class GraphsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InterfaceNode.html":{"url":"interfaces/InterfaceNode.html","title":"interface - InterfaceNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InterfaceNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IssueNode\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            offeredById\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        offeredById\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offeredById:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode,\n  ComponentNode,\n  InterfaceNode,\n  IssueGroupContainerNode,\n  RelationEdge,\n  createComponentNode,\n  createInterfaceNode,\n  createIssueGroupContainerNode,\n  createIssueFolderNode,\n  createRelationEdge,\n  createConsumptionEdge,\n  createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set()\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0\n    }\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: []\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InterfaceStoreService.html":{"url":"injectables/InterfaceStoreService.html","title":"injectable - InterfaceStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InterfaceStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/interface/interface-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service provides creation, retrievel, update and deletion of interfaces offered by components.\nThe GQL object are generated by the code generator based on interface.graphql in the same directory\nas this file.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                getConsumingComponents\n                            \n                            \n                                    Public\n                                getInterface\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createInterfaceMutation: CreateComponentInterfaceGQL, updateInterfaceMutation: UpdateComponentInterfaceGQL, deleteInterfaceMutation: DeleteComponentInterfaceGQL, getInterfaceQuery: GetInterfaceGQL, getConsumingComponentsQuery: GetConsumingComponentsGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/interface/interface-store.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createInterfaceMutation\n                                                  \n                                                        \n                                                                    CreateComponentInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateInterfaceMutation\n                                                  \n                                                        \n                                                                    UpdateComponentInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteInterfaceMutation\n                                                  \n                                                        \n                                                                    DeleteComponentInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getInterfaceQuery\n                                                  \n                                                        \n                                                                    GetInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getConsumingComponentsQuery\n                                                  \n                                                        \n                                                                    GetConsumingComponentsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(name: string, offeringComponentId: string, description?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    offeringComponentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getConsumingComponents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConsumingComponents(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getInterface\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInterface(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(input: UpdateComponentInterfaceInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            UpdateComponentInterfaceInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {\n  CreateComponentInterfaceGQL,\n  CreateComponentInterfaceInput,\n  DeleteComponentInterfaceGQL,\n  DeleteComponentInterfaceInput,\n  GetConsumingComponentsGQL,\n  GetConsumingComponentsQuery,\n  GetInterfaceGQL,\n  GetInterfaceQuery,\n  UpdateComponentInterfaceGQL,\n  UpdateComponentInterfaceInput\n} from '../../../generated/graphql';\nimport {map} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\n\n/**\n * This service provides creation, retrievel, update and deletion of interfaces offered by components.\n * The GQL object are generated by the code generator based on interface.graphql in the same directory\n * as this file.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterfaceStoreService {\n  constructor(\n    private createInterfaceMutation: CreateComponentInterfaceGQL,\n    private updateInterfaceMutation: UpdateComponentInterfaceGQL,\n    private deleteInterfaceMutation: DeleteComponentInterfaceGQL,\n    private getInterfaceQuery: GetInterfaceGQL,\n    private getConsumingComponentsQuery: GetConsumingComponentsGQL\n  ) {}\n\n  public create(name: string, offeringComponentId: string, description?: string) {\n    const input: CreateComponentInterfaceInput = {\n      name,\n      description,\n      component: offeringComponentId\n    };\n    return this.createInterfaceMutation.mutate({input});\n  }\n\n  public getInterface(id: string): Observable {\n    return this.getInterfaceQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  public getConsumingComponents(id: string): Observable {\n    return this.getConsumingComponentsQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  public update(input: UpdateComponentInterfaceInput) {\n    return this.updateInterfaceMutation.mutate({input});\n  }\n\n  public delete(id: string) {\n    const input: DeleteComponentInterfaceInput = {\n      componentInterface: id\n    };\n    return this.deleteInterfaceMutation.mutate({input});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueCategoryComponent.html":{"url":"components/IssueCategoryComponent.html","title":"component - IssueCategoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueCategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-category/issue-category.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-category\n            \n\n            \n                styleUrls\n                ./issue-category.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-category.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :     IssueCategory\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-category/issue-category.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {IssueCategory} from '../../../generated/graphql-dgql';\n\n@Component({\n  selector: 'app-issue-category',\n  templateUrl: './issue-category.component.html',\n  styleUrls: ['./issue-category.component.scss']\n})\nexport class IssueCategoryComponent {\n  @Input() category: IssueCategory;\n}\n\n    \n\n    \n        \n  \n    \n    Uncategorized\n  \n\n  \n    \n    Bug\n  \n\n  \n    \n    Feature Request\n  \n\n\n    \n\n    \n                \n                    ./issue-category.component.scss\n                \n                .category-icon {\n  vertical-align: middle;\n  margin-bottom: 3px;\n}\n\n.category-box {\n  background: rgba(0, 0, 0, 0.06);\n  border-radius: 8px;\n  align-items: center;\n  padding: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Uncategorized            Bug            Feature Request  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueCategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueContentsComponent.html":{"url":"components/IssueContentsComponent.html","title":"component - IssueContentsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueContentsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/issue-contents.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component renders the contents of the issue: the issue body, timeline, and comment box.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-contents\n            \n\n            \n                styleUrls\n                issue-contents.component.scss\n            \n\n\n\n            \n                templateUrl\n                issue-contents.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                commentEditor\n                            \n                            \n                                    Public\n                                savingComment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeIssue\n                            \n                            \n                                    Public\n                                commentIssue\n                            \n                            \n                                    Public\n                                reopenIssue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issue$\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/issue-contents.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issue$\n                    \n                \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/issue-contents.component.ts:19\n                            \n                        \n                \n                    \n                        The issue to be rendered.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/issue-contents.component.ts:21\n                            \n                        \n                \n                    \n                        The raw project ID.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeIssue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-contents.component.ts:56\n                \n            \n\n\n            \n                \n                    Closes the current issue.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        commentIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                    commentIssue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-contents.component.ts:66\n                \n            \n\n\n            \n                \n                    Adds a comment to the current issue with the data provided in the comment box.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        reopenIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                    reopenIssue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-contents.component.ts:61\n                \n            \n\n\n            \n                \n                    Reopens the currently closed issue.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        commentEditor\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('comment')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-contents.component.ts:35\n                        \n                    \n\n            \n                \n                    The comment editor (app-markdown-editor).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        savingComment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-contents.component.ts:33\n                        \n                    \n\n            \n                \n                    True if the issue comment is currently being saved.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {DataList, DataNode} from '@app/data-dgql/query';\nimport {Issue} from '../../generated/graphql';\nimport {Subscription} from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport {CURRENT_USER_NODE, ListType, NodeType} from '@app/data-dgql/id';\nimport {User} from '../../generated/graphql-dgql';\n\n/**\n * This component renders the contents of the issue: the issue body, timeline, and comment box.\n */\n@Component({\n  selector: 'app-issue-contents',\n  templateUrl: 'issue-contents.component.html',\n  styleUrls: ['issue-contents.component.scss']\n})\nexport class IssueContentsComponent implements OnInit, OnDestroy {\n  /** The issue to be rendered. */\n  @Input() issue$: DataNode;\n  /** The raw project ID. */\n  @Input() projectId: string;\n\n  /** @ignore */\n  public linkedIssues$: DataList;\n  /** @ignore */\n  public linkedIssueSub: Subscription;\n  /** @ignore */\n  public currentUser$: DataNode;\n  /** @ignore */\n  public currentUserSub: Subscription;\n\n  /** True if the issue comment is currently being saved. */\n  public savingComment = false;\n  /** The comment editor (app-markdown-editor). */\n  @ViewChild('comment') commentEditor;\n\n  constructor(private dataService: DataService) {}\n\n  ngOnInit() {\n    this.linkedIssues$ = this.dataService.getList({\n      node: this.issue$.id,\n      type: ListType.LinkedIssues\n    });\n    this.linkedIssueSub = this.linkedIssues$.subscribe();\n\n    this.currentUser$ = this.dataService.getNode(CURRENT_USER_NODE);\n    this.currentUserSub = this.currentUser$.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.linkedIssueSub.unsubscribe();\n    this.currentUserSub.unsubscribe();\n  }\n\n  /** Closes the current issue. */\n  public closeIssue(): void {\n    this.dataService.mutations.closeIssue(Math.random().toString(), this.issue$.id);\n  }\n\n  /** Reopens the currently closed issue. */\n  public reopenIssue(): void {\n    this.dataService.mutations.reopenIssue(Math.random().toString(), this.issue$.id);\n  }\n\n  /** Adds a comment to the current issue with the data provided in the comment box. */\n  public commentIssue(): void {\n    this.savingComment = true;\n    this.dataService.mutations\n      .addIssueComment(Math.random().toString(), this.issue$.id, this.commentEditor.code)\n      .then(() => {\n        // only clear if successful\n        this.commentEditor.code = '';\n      })\n      .finally(() => {\n        this.savingComment = false;\n      });\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n  \n   0\" class=\"timeline-item\">\n    \n      \n        link\n        \n          Linked Issues\n        \n      \n      \n        \n          \n            \n               \n            \n          \n        \n         10\" [list]=\"linkedIssues$\" [pageSizes]=\"[10]\">\n      \n    \n  \n\n  \n\n  \n\n  \n  \n    \n      \n        \n          Comment this issue as\n          \n        \n      \n      \n        \n        \n          Close Issue\n          Reopen Issue\n          \n            Comment\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    issue-contents.component.scss\n                \n                @import \"src/styles/spinner\";\n\n.timeline-item {\n  position: relative;\n  margin-left: 36px;\n  padding: 12px 0;\n\n  &:first-child {\n    padding-top: 0;\n  }\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: -1px;\n    bottom: 0;\n    width: 2px;\n    background: rgba(0, 0, 0, 0.12);\n  }\n\n  .item-box {\n    position: relative;\n    background: white;\n    border-radius: 4px;\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    margin-left: -36px;\n\n    .item-header {\n      background: rgba(0, 0, 0, 0.06);\n      border-bottom: rgba(0, 0, 0, 0.1);\n      border-radius: 4px 4px 0 0;\n      padding: 8px 16px;\n      display: flex;\n      align-items: center;\n\n      mat-icon {\n        margin-right: 8px;\n        margin-left: -8px;\n      }\n\n      .item-title {\n        flex: 1;\n        margin: 0 16px 0 0;\n        overflow: hidden;\n        font-size: inherit;\n        font-weight: inherit;\n\n        .item-edited {\n          opacity: 0.5;\n        }\n      }\n    }\n\n    .item-body {\n      padding: 16px;\n\n      &.is-editing {\n        padding: 8px;\n      }\n\n      .edit-body-buttons {\n        text-align: right;\n        margin-top: 5px;\n        margin-bottom: 3px;\n      }\n    }\n  }\n}\n\n.comment-form {\n  padding-bottom: 0;\n\n  .comment-buttons {\n    text-align: right;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         0\" class=\"timeline-item\">                  link                  Linked Issues                                                                                                        10\" [list]=\"linkedIssues$\" [pageSizes]=\"[10]\">                                                Comment this issue as                                                        Close Issue          Reopen Issue                      Comment                              '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueContentsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueDetailComponent.html":{"url":"components/IssueDetailComponent.html","title":"component - IssueDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/issue-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-detail\n            \n\n            \n                styleUrls\n                ./issue-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatedRoute\n                            \n                            \n                                category\n                            \n                            \n                                inputTitle\n                            \n                            \n                                    Public\n                                issue$\n                            \n                            \n                                    Public\n                                issueEditable\n                            \n                            \n                                    Public\n                                issueId\n                            \n                            \n                                    Public\n                                issueSub\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                savingChanges\n                            \n                            \n                                    Public\n                                timeFormatter\n                            \n                            \n                                    Public\n                                userCanEditIssue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beginEditing\n                            \n                            \n                                    Public\n                                finishEditing\n                            \n                            \n                                formatIssueOpenTime\n                            \n                            \n                                    Private\n                                saveChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/issue-detail.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        beginEditing\n                        \n                    \n                \n            \n            \n                \nbeginEditing()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-detail.component.ts:75\n                \n            \n\n\n            \n                \n                    Begins the editing process in which:\n\nthe issue title and\nthe issue category can be changed.\n\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        finishEditing\n                        \n                    \n                \n            \n            \n                \n                    \n                    finishEditing(save?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-detail.component.ts:91\n                \n            \n\n\n            \n                \n                    Finishes the editing process in which:\n\nthe issue title and\nthe issue category can be changed.\n\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    save\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nBoolean that indicates whether to save the new title.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatIssueOpenTime\n                        \n                    \n                \n            \n            \n                \nformatIssueOpenTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-detail.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        saveChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-detail.component.ts:110\n                \n            \n\n\n            \n                \n                    Saves all changes to the current issue.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('titleInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issue$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueEditable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        savingChanges\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        timeFormatter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TimeFormatter()\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userCanEditIssue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Issue} from 'src/generated/graphql-dgql';\nimport {Subscription} from 'rxjs';\nimport {NodeType} from '@app/data-dgql/id';\nimport {DataNode} from '@app/data-dgql/query';\nimport DataService from '@app/data-dgql';\nimport {TimeFormatter} from '@app/issue-detail/time-formatter';\nimport {FormControl, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-issue-detail',\n  templateUrl: './issue-detail.component.html',\n  styleUrls: ['./issue-detail.component.scss']\n})\n/**\n * This component provides detailed information about an issue.\n * It also lets the user edit properties of an issue.\n */\nexport class IssueDetailComponent implements OnInit, OnDestroy {\n  // current project id\n  public projectId: string;\n\n  // current issue id\n  public issueId: string;\n\n  // mark whether the current issue is editable\n  public issueEditable = false;\n\n  // mark whether changes to the current issue are being saved,\n  // used for the loading spinner of the Save button\n  public savingChanges = false;\n\n  // provides functions for time formatting\n  public timeFormatter = new TimeFormatter();\n\n  // FIXME: replace with issue$.current?.userCanEditIssue in HTML once that works\n  public userCanEditIssue = true;\n\n  public issue$: DataNode;\n  public issueSub: Subscription;\n\n  // new title of the current issue\n  @ViewChild('titleInput') inputTitle: ElementRef;\n\n  // new category of the current issue\n  category = new FormControl('', [Validators.required]);\n\n  constructor(private dataService: DataService, public activatedRoute: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.projectId = this.activatedRoute.snapshot.paramMap.get('id');\n    this.issueId = this.activatedRoute.snapshot.paramMap.get('issueId');\n    const issueNodeId = {type: NodeType.Issue, id: this.issueId};\n\n    this.issue$ = this.dataService.getNode(issueNodeId);\n    this.issueSub = this.issue$.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.issueSub.unsubscribe();\n  }\n\n  formatIssueOpenTime(): string {\n    if (this.issue$.hasData) {\n      return this.timeFormatter.formatTimeDifference(this.issue$.current.createdAt);\n    }\n  }\n\n  /**\n   * Begins the editing process in which:\n   * 1) the issue title and\n   * 2) the issue category can be changed.\n   */\n  beginEditing() {\n    // marks the issue as editable\n    this.issueEditable = true;\n\n    // sets up the issue category\n    this.issue$.dataAsPromise().then((data) => {\n      this.category.setValue(data.category);\n    });\n  }\n\n  /**\n   * Finishes the editing process in which:\n   * 1) the issue title and\n   * 2) the issue category can be changed.\n   * @param save - Boolean that indicates whether to save the new title.\n   */\n  public finishEditing(save?: boolean): void {\n    // case: the new changes are to be saved\n    if (save) {\n      // marks the saving process as started\n      this.savingChanges = true;\n\n      // saves all changes\n      this.saveChanges();\n    }\n\n    // case: the new changes are not to be saved\n    else {\n      this.issueEditable = false;\n    }\n  }\n\n  /**\n   * Saves all changes to the current issue.\n   */\n  private saveChanges() {\n    // 1) saves the new title\n    this.dataService.mutations.renameIssueTitle(Math.random().toString(), this.issue$.id, this.inputTitle.nativeElement.value);\n\n    // 2) saves the new category\n    this.dataService.mutations\n      .changeIssueCategory(Math.random().toString(), this.issue$.id, this.category.value)\n      .then(() => {\n        // marks the issue as uneditable\n        this.issueEditable = false;\n      })\n      .finally(() => {\n        // marks the saving process as finished\n        this.savingChanges = false;\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n    \n      \n      {{ issue.title }}\n\n      \n      \n        \n      \n\n      \n        \n        Edit\n\n        \n          \n          Cancel\n\n          &nbsp;\n\n          \n          Save\n        \n      \n    \n\n    \n    \n      \n      \n        \n          \n          Unclassified\n        \n        \n          \n          Bug\n        \n        \n          \n          Feature Request\n        \n      \n    \n\n    \n    \n      \n      \n        \n        \n          Open\n          Closed\n        \n      \n\n      \n      \n        \n        opened this issue\n        \n          {{ this.formatIssueOpenTime() }}\n        \n      \n\n      \n      &nbsp;&sdot; {{ this.timeFormatter.pluralize( issue.issueComments?.totalCount + 1, \"comment\" ) }}\n    \n  \n\n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./issue-detail.component.scss\n                \n                @import \"src/styles/variables.scss\";\n@import \"src/styles/spinner\";\n\n.category-selector {\n  width: 100%;\n  margin-bottom: 8px;\n\n  mat-button-toggle {\n    width: 100%;\n\n    ::ng-deep &.mat-button-toggle-checked {\n      font-weight: 600;\n    }\n  }\n}\n\n.issue-details {\n  padding: 16px;\n\n  .issue-header {\n    padding-bottom: 16px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.15);\n    margin-bottom: 16px;\n  }\n\n  .issue-page {\n    display: flex;\n\n    .issue-contents {\n      flex: 2;\n    }\n\n    .issue-sidebar {\n      flex: 1;\n      max-width: 300px;\n      margin-left: 16px;\n    }\n  }\n}\n\n@media (max-width: 600px) {\n  // put issue sidebar below on narrow displays\n  .issue-details .issue-page {\n    display: block;\n  }\n}\n\n.issue-header {\n  .issue-title {\n    display: flex;\n    align-items: center;\n    margin-bottom: 8px;\n\n    .title-text {\n      margin: 0;\n      margin-right: 16px;\n      flex: 1;\n    }\n\n    .title-input {\n      flex: 1;\n      margin-right: 16px;\n\n      ::ng-deep .mat-form-field-wrapper {\n        padding-bottom: 0;\n\n        .mat-form-field-infix {\n          border-top-width: 0.5em;\n        }\n      }\n    }\n  }\n\n  .issue-category {\n    display: flex;\n    align-items: center;\n    margin-bottom: 8px;\n  }\n\n  .issue-subheading {\n    display: flex;\n    align-items: center;\n\n    .issue-status {\n      display: inline-flex;\n      padding: 2px 8px 2px 4px;\n      border-radius: 100px;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      align-items: center;\n      font-weight: 500;\n      margin-right: 8px;\n\n      .status-icon {\n        margin-right: 2px;\n      }\n      .status-label {\n        display: block;\n      }\n\n      .status-icon ::ng-deep svg {\n        .state[fill] {\n          fill: white;\n        }\n        .state[stroke] {\n          stroke: white;\n        }\n        .arrow-in,\n        .arrow-out,\n        .assigned-star {\n          fill: rgba(255, 255, 255, 0.7);\n        }\n      }\n\n      &.is-open {\n        color: white;\n        background: #00ba39;\n      }\n      &.is-closed {\n        color: white;\n        background: #ff0036;\n      }\n    }\n\n    .issue-opened,\n    .issue-stats {\n      display: inline-block;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ issue.title }}                                                Edit                            Cancel                               Save                                                                  Unclassified                                    Bug                                    Feature Request                                                                Open          Closed                                          opened this issue                  {{ this.formatIssueOpenTime() }}                           ⋅ {{ this.timeFormatter.pluralize( issue.issueComments?.totalCount + 1, \"comment\" ) }}                    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueFilterComponent.html":{"url":"components/IssueFilterComponent.html","title":"component - IssueFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-list/issue-filter.component.ts\n\n\n\n    \n        Description\n    \n    \n        Edits an IssueFilter object.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-filter\n            \n\n            \n                styleUrls\n                ./issue-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activePredicates\n                            \n                            \n                                predicateCount\n                            \n                            \n                                predicates\n                            \n                            \n                                predicateValues\n                            \n                            \n                                searchQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPredicateAfter\n                            \n                            \n                                applyIdChangeset\n                            \n                            \n                                buildFilter\n                            \n                            \n                                getRemainingTypes\n                            \n                            \n                                removePredicateAt\n                            \n                            \n                                setInEnumArray\n                            \n                            \n                                setPredicateType\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allLabelsList\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        allLabelsList\n                    \n                \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-filter.component.ts:124\n                            \n                        \n                \n                    \n                        The list from which to source labels in the label picker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-filter.component.ts:122\n                            \n                        \n                \n                    \n                        Raw project ID.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filterChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-filter.component.ts:126\n                            \n                        \n                \n                    \n                        Emitted every time the filter is changed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPredicateAfter\n                        \n                    \n                \n            \n            \n                \naddPredicateAfter(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:173\n                \n            \n\n\n            \n                \n                    Adds a new predicate after the given index in activePredicates.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index in activePredicates\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyIdChangeset\n                        \n                    \n                \n            \n            \n                \napplyIdChangeset(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:201\n                \n            \n\n\n            \n                \n                    Returns a function that can be passed to an app-set-editor to apply the changeset to the\nvalue of the id predicate.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        predicate name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (added: any, removed: any) => any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildFilter\n                        \n                    \n                \n            \n            \n                \nbuildFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:216\n                \n            \n\n\n            \n                \n                    Builds an IssueFilter from the search query and selected filters.\n\n\n                    \n                        Returns :     IssueFilter\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRemainingTypes\n                        \n                    \n                \n            \n            \n                \ngetRemainingTypes(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:143\n                \n            \n\n\n            \n                \n                    Returns all types of predicates that were not taken in previous items.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index in activePredicates\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePredicateAt\n                        \n                    \n                \n            \n            \n                \nremovePredicateAt(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:163\n                \n            \n\n\n            \n                \n                    Removes the predicate at the given index in activePredicates.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index in activePredicates\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setInEnumArray\n                        \n                    \n                \n            \n            \n                \nsetInEnumArray(array, item, inArray)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:186\n                \n            \n\n\n            \n                \n                    Sets the presence of a value in an array of enum variants.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the array to mutate\n\n                                    \n                                \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the enum variant\n\n                                    \n                                \n                                \n                                    inArray\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        whether or not it should be in the array\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPredicateType\n                        \n                    \n                \n            \n            \n                \nsetPredicateType(index: number, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:153\n                \n            \n\n\n            \n                \n                    Sets the type of the predicate at index in activePredicates.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index in activePredicates\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new type (must be unique!)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:228\n                \n            \n\n\n            \n                \n                    Emits a change event.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activePredicates\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:133\n                        \n                    \n\n            \n                \n                    The names of currently active predicates.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        predicateCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys(PREDICATES).length\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        predicates\n                        \n                    \n                \n            \n                \n                    \n                        Default value : PREDICATES\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        predicateValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:135\n                        \n                    \n\n            \n                \n                    The values of currently active predicates.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:137\n                        \n                    \n\n            \n                \n                    Current search query.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {IssueCategory, IssueFilter} from '../../generated/graphql-dgql';\nimport {ListId, ListType, NodeType, ROOT_NODE} from '@app/data-dgql/id';\n\n/** Returns the ListId for listing all project issues. */\nconst listAllIssues = (self: IssueFilterComponent) => ({\n  node: {type: NodeType.Project, id: self.projectId},\n  type: ListType.Issues\n});\n\n/**\n * List of all possible issue filter predicates.\n *\n * Keyed by their name, each predicate has a type, label,\n * and possibly additional options depending on their type.\n */\nconst PREDICATES = {\n  isOpen: {type: 'bool', label: 'Is open'},\n  isDuplicate: {type: 'bool', label: 'Is duplicate'},\n  category: {\n    type: 'enum',\n    label: 'Category',\n    options: [\n      [IssueCategory.Unclassified, 'Unclassified'],\n      [IssueCategory.Bug, 'Bug'],\n      [IssueCategory.FeatureRequest, 'Feature Request']\n    ]\n  },\n  labels: {\n    type: 'ids',\n    label: 'Labels',\n    dataType: 'label',\n    scoreKeys: ['name'],\n    listAll: (self: IssueFilterComponent) => self.allLabelsList,\n    makeFilter: (query: string) => ({name: query}),\n    ifEmpty: 'No labels selected'\n  },\n  linksIssues: {type: 'bool', label: 'Has linked issues'},\n  linkedIssues: {\n    type: 'ids',\n    label: 'Linked issues',\n    dataType: 'issue',\n    scoreKeys: ['title'],\n    listAll: listAllIssues,\n    makeFilter: (query: string) => ({title: query}),\n    ifEmpty: 'No issues selected'\n  },\n  isLinkedByIssues: {type: 'bool', label: 'Is linked by issues'},\n  linkedByIssues: {\n    type: 'ids',\n    label: 'Linked by issues',\n    dataType: 'issue',\n    scoreKeys: ['title'],\n    listAll: listAllIssues,\n    makeFilter: (query: string) => ({title: query}),\n    ifEmpty: 'No issues selected'\n  },\n  participants: {\n    type: 'ids',\n    label: 'Participants',\n    dataType: 'user',\n    scoreKeys: ['username', 'displayName'],\n    listAll: () => ({node: ROOT_NODE, type: ListType.SearchUsers}),\n    makeFilter: (query: string) => ({username: query}),\n    ifEmpty: 'No users selected'\n  },\n  locations: {\n    type: 'ids',\n    label: 'Locations',\n    dataType: 'location',\n    scoreKeys: ['name'],\n    listAll: (self: IssueFilterComponent) => ({\n      staticSources: [\n        {\n          node: {type: NodeType.Project, id: self.projectId},\n          type: ListType.Components\n        },\n        {\n          node: {type: NodeType.Project, id: self.projectId},\n          type: ListType.ComponentInterfaces\n        }\n      ]\n    }),\n    makeFilter: (query: string) => ({title: query}),\n    ifEmpty: 'No locations selected'\n  }\n};\n\n/** Returns the default value for a predicate type. */\nfunction getDefaultForType(type: string) {\n  switch (type) {\n    case 'bool':\n      return true;\n    case 'enum':\n    case 'ids':\n      return [];\n    default:\n      throw new Error(`unknown type ${type}`);\n  }\n}\n\n/** Converts a predicate value into the backend representation for use in the filter. */\nfunction convertValueForFilter(type: string, value: any) {\n  switch (type) {\n    case 'ids':\n      return value.map((item) => item.id);\n    default:\n      return value;\n  }\n}\n\n/**\n * Edits an IssueFilter object.\n */\n@Component({\n  selector: 'app-issue-filter',\n  templateUrl: './issue-filter.component.html',\n  styleUrls: ['./issue-filter.component.scss']\n})\nexport class IssueFilterComponent {\n  /** Raw project ID. */\n  @Input() projectId: string;\n  /** The list from which to source labels in the label picker. */\n  @Input() allLabelsList: ListId;\n  /** Emitted every time the filter is changed. */\n  @Output() filterChange = new EventEmitter();\n\n  // constants as class properties because angular\n  predicates = PREDICATES;\n  predicateCount = Object.keys(PREDICATES).length;\n\n  /** The names of currently active predicates. */\n  activePredicates: string[] = [];\n  /** The values of currently active predicates. */\n  predicateValues: {[key: string]: any} = {};\n  /** Current search query. */\n  searchQuery = '';\n\n  /**\n   * Returns all types of predicates that were not taken in previous items.\n   * @param index index in activePredicates\n   */\n  getRemainingTypes(index: number): string[] {\n    const previousItems = this.activePredicates.slice(0, index);\n    return Object.keys(PREDICATES).filter((id) => !previousItems.includes(id));\n  }\n\n  /**\n   * Sets the type of the predicate at index in activePredicates.\n   * @param index index in activePredicates\n   * @param type new type (must be unique!)\n   */\n  setPredicateType(index: number, type: string) {\n    this.activePredicates[index] = type;\n    this.predicateValues[type] = getDefaultForType(PREDICATES[type].type);\n    this.update();\n  }\n\n  /**\n   * Removes the predicate at the given index in activePredicates.\n   * @param index index in activePredicates\n   */\n  removePredicateAt(index: number) {\n    const type = this.activePredicates.splice(index, 1)[0];\n    delete this.predicateValues[type];\n    this.update();\n  }\n\n  /**\n   * Adds a new predicate after the given index in activePredicates.\n   * @param index index in activePredicates\n   */\n  addPredicateAfter(index: number) {\n    const type = this.getRemainingTypes(index + 1)[0];\n    this.activePredicates.splice(index + 1, 0, type);\n    this.predicateValues[type] = getDefaultForType(PREDICATES[type].type);\n    this.update();\n  }\n\n  /**\n   * Sets the presence of a value in an array of enum variants.\n   * @param array the array to mutate\n   * @param item the enum variant\n   * @param inArray whether or not it should be in the array\n   */\n  setInEnumArray(array, item, inArray) {\n    if (inArray && !array.includes(item)) {\n      array.push(item);\n    }\n    if (!inArray && array.includes(item)) {\n      array.splice(array.indexOf(item), 1);\n    }\n    this.update();\n  }\n\n  /**\n   * Returns a function that can be passed to an app-set-editor to apply the changeset to the\n   * value of the id predicate.\n   * @param id predicate name\n   */\n  applyIdChangeset(id) {\n    return async (added, removed) => {\n      for (const item of added) {\n        this.predicateValues[id].push(item);\n      }\n      for (const item of removed) {\n        this.predicateValues[id].splice(this.predicateValues[id].indexOf(item), 1);\n      }\n      this.update();\n    };\n  }\n\n  /**\n   * Builds an IssueFilter from the search query and selected filters.\n   */\n  buildFilter(): IssueFilter {\n    const filter: IssueFilter = {};\n    if (this.searchQuery.trim()) {\n      filter.fullSearch = {text: this.searchQuery.trim()};\n    }\n    for (const id of this.activePredicates) {\n      filter[id] = convertValueForFilter(PREDICATES[id].type, this.predicateValues[id]);\n    }\n    return filter;\n  }\n\n  /** Emits a change event. */\n  update() {\n    this.filterChange.emit(this.buildFilter());\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Search\n      \n    \n    \n      filter_list\n    \n  \n\n  \n    Filter\n    \n      \n        \n          \n             {{ predicates[type].label }} \n          \n        \n      \n      \n        \n\n        \n          \n             Yes \n             No \n          \n        \n        \n          \n            \n              {{ entry[1] }}\n            \n          \n        \n        \n          \n            {{ predicates[id].label }}\n            {{ predicates[id].ifEmpty }}\n            \n              \n              \n              \n              \n                {{ item.name }}\n                \n                   {{ item.component.name }} › \n                  {{ item.name }}\n                \n              \n            \n          \n        \n\n        \n      \n      \n        \n          remove\n        \n        \n          add\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./issue-filter.component.scss\n                \n                .filter-box {\n  padding: 8px;\n\n  // we do not want the extra spacing around form fields\n  // (we wont be showing any helper text or errors anyway)\n  ::ng-deep .mat-form-field-wrapper {\n    padding-bottom: 0;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .pred-add,\n  .pred-remove {\n    min-width: 48px;\n    width: 48px;\n    padding: 0 8px;\n  }\n\n  .search-box {\n    display: flex;\n    align-items: center;\n\n    .search-field {\n      flex: 1;\n    }\n\n    .pred-add {\n      margin-left: 16px;\n    }\n  }\n\n  .filter-predicates {\n    margin-top: 8px;\n\n    .filter-title {\n      font-weight: bold;\n      padding-left: 8px;\n    }\n\n    .filter-predicate {\n      display: flex;\n      align-items: flex-start;\n\n      .predicate-type {\n        margin-right: 16px;\n      }\n      .predicate-value {\n        flex: 1;\n      }\n\n      .predicate-mgmt {\n        margin-left: 16px;\n        border: 1px solid rgba(0, 0, 0, 0.1);\n        border-radius: 4px;\n\n        .pred-add {\n          margin-left: 4px;\n        }\n      }\n\n      @media (max-width: 500px) {\n        display: block;\n        border-top: 1px solid rgba(0, 0, 0, 0.1);\n        padding: 8px 0;\n\n        .predicate-type {\n          margin-right: 0;\n          margin-bottom: 8px;\n\n          .predicate-type-selector {\n            width: 100%;\n          }\n        }\n        .predicate-value {\n          .bool-value {\n            width: 100%;\n            mat-button-toggle {\n              width: 100%;\n            }\n          }\n        }\n        .predicate-mgmt {\n          border: none;\n          margin-left: 0;\n          text-align: right;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Search                    filter_list            Filter                                         {{ predicates[type].label }}                                                                      Yes              No                                                               {{ entry[1] }}                                                            {{ predicates[id].label }}            {{ predicates[id].ifEmpty }}                                                                                    {{ item.name }}                                   {{ item.component.name }} ›                   {{ item.name }}                                                                                                  remove                          add                    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueFolderNode.html":{"url":"interfaces/IssueFolderNode.html","title":"interface - IssueFolderNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IssueFolderNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Node\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            issueCount\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        issueCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueCount:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     IssueCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IssueCategory\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode,\n  ComponentNode,\n  InterfaceNode,\n  IssueGroupContainerNode,\n  RelationEdge,\n  createComponentNode,\n  createInterfaceNode,\n  createIssueGroupContainerNode,\n  createIssueFolderNode,\n  createRelationEdge,\n  createConsumptionEdge,\n  createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set()\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0\n    }\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: []\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphApiService.html":{"url":"injectables/IssueGraphApiService.html","title":"injectable - IssueGraphApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/issue-graph-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Responsible for retrieval and conversion of data needed for graph rendering from backend.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConsumedInterface\n                            \n                            \n                                loadIssueGraphData\n                            \n                            \n                                removeConsumedInterface\n                            \n                            \n                                textsToRegex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(getFullIssueGraphDataQuery: GetIssueGraphDataGQL, addConsumedInterfaceMutation: AddConsumedInterfaceGQL, removeConsumedInterfaceMutation: RemoveConsumedInterfaceGQL, getSearchIssueGraphDataQuery: GetIssueGraphDataForSearchGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/issue-graph/issue-graph-api.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getFullIssueGraphDataQuery\n                                                  \n                                                        \n                                                                        GetIssueGraphDataGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addConsumedInterfaceMutation\n                                                  \n                                                        \n                                                                    AddConsumedInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        removeConsumedInterfaceMutation\n                                                  \n                                                        \n                                                                    RemoveConsumedInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getSearchIssueGraphDataQuery\n                                                  \n                                                        \n                                                                        GetIssueGraphDataForSearchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addConsumedInterface\n                        \n                    \n                \n            \n            \n                \naddConsumedInterface(component: string, componentInterface: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-api.service.ts:80\n                \n            \n\n\n            \n                \n                    Make the interface with interfaceId a consumed interface of the component with id componentId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    componentInterface\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadIssueGraphData\n                        \n                    \n                \n            \n            \n                \nloadIssueGraphData(projectId: string, categories: SelectedCategories, labels: FilterLabel[], texts: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-api.service.ts:42\n                \n            \n\n\n            \n                \n                    Queries backend for data needed to render graph when given parameters restricting what information is requested.\nThis method handels the construction of the parameters to the graphql query,\nand makes the query. To carry out the conversion from backend to frontend format,\nit invokes GraphDataFactory.graphDataFromGQL\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    categories\n                                    \n                                                SelectedCategories\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        describes which issue categories (e.g. BUG) are of interest\n\n                                    \n                                \n                                \n                                    labels\n                                    \n                                                FilterLabel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a list of issue labels the user has entered into the query bar\n\n                                    \n                                \n                                \n                                    texts\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a list of text fragments the user has entered into the query bar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeConsumedInterface\n                        \n                    \n                \n            \n            \n                \nremoveConsumedInterface(component: string, componentInterface: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-api.service.ts:91\n                \n            \n\n\n            \n                \n                    Remove the interface with interfaceId from consumed interfaces of the component with id componentId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    componentInterface\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textsToRegex\n                        \n                    \n                \n            \n            \n                \ntextsToRegex(texts: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-api.service.ts:68\n                \n            \n\n\n            \n                \n                    Creates a regular expression denoting a language of the union of the strings in texts\ntextsToRegex([\"newest issues\", \"test\"]) == \"(newest issues | test)\"\"\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    texts\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            textsToRegex([&quot;newest issues&quot;, &quot;test&quot;]) == &quot;(newest issues | test)&quot;&quot;\n                        \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {map} from 'rxjs/operators';\nimport {\n  AddConsumedInterfaceGQL,\n  GetIssueGraphDataForSearchGQL,\n  GetIssueGraphDataGQL,\n  IssueCategory,\n  RemoveConsumedInterfaceGQL\n} from 'src/generated/graphql';\nimport {GraphData, GraphDataFactory} from './graph-data';\nimport {Observable} from 'rxjs';\nimport {SelectedCategories} from '@app/graphs/shared';\nimport {FilterLabel} from '../label/label-store.service';\n\n/**\n * Responsible for retrieval and conversion of data needed for graph rendering from backend.\n *\n * @export\n * @class IssueGraphApiService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphApiService {\n  constructor(\n    private getFullIssueGraphDataQuery: GetIssueGraphDataGQL,\n    private addConsumedInterfaceMutation: AddConsumedInterfaceGQL,\n    private removeConsumedInterfaceMutation: RemoveConsumedInterfaceGQL,\n    private getSearchIssueGraphDataQuery: GetIssueGraphDataForSearchGQL\n  ) {}\n\n  /**\n   * Queries backend for data needed to render graph when given parameters restricting what information is requested.\n   * This method handels the construction of the parameters to the graphql query,\n   * and makes the query. To carry out the conversion from backend to frontend format,\n   * it invokes GraphDataFactory.graphDataFromGQL\n   * @param projectId\n   * @param categories describes which issue categories (e.g. BUG) are of interest\n   * @param labels a list of issue labels the user has entered into the query bar\n   * @param texts a list of text fragments the user has entered into the query bar\n   */\n  loadIssueGraphData(projectId: string, categories: SelectedCategories, labels: FilterLabel[], texts: string[]): Observable {\n    const activeCategories: IssueCategory[] = [];\n    for (const key of Object.values(IssueCategory)) {\n      if (categories[key]) {\n        activeCategories.push(key as IssueCategory);\n      }\n    }\n    if (labels.length === 0 && texts.length === 0) {\n      return this.getFullIssueGraphDataQuery\n        .fetch({projectId, activeCategories})\n        .pipe(map((result) => GraphDataFactory.removeFilteredData(GraphDataFactory.graphDataFromGQL(result.data), activeCategories)));\n    } else {\n      const selectedLabels: string[] = labels.map((label) => label.id);\n      const issueRegex = this.textsToRegex(texts);\n      return this.getSearchIssueGraphDataQuery\n        .fetch({projectId, activeCategories, selectedLabels, issueRegex})\n        .pipe(map((result) => GraphDataFactory.removeFilteredData(GraphDataFactory.graphDataFromGQL(result.data), activeCategories)));\n    }\n  }\n\n  /**\n   * Creates a regular expression denoting a language of the union of the strings in texts\n   * @param texts\n   * @example\n   * textsToRegex([\"newest issues\", \"test\"]) == \"(newest issues | test)\"\"\n   */\n  textsToRegex(texts: string[]): string {\n    if (texts.length === 0) {\n      return undefined;\n    }\n    return texts.map((text) => '(' + text + ')').join('|');\n  }\n\n  /**\n   * Make the interface with interfaceId a consumed interface of the component with id componentId\n   * @param component\n   * @param componentInterface\n   */\n  addConsumedInterface(component: string, componentInterface: string) {\n    return this.addConsumedInterfaceMutation.mutate({\n      input: {component, componentInterface}\n    });\n  }\n\n  /**\n   * Remove the interface with interfaceId from consumed interfaces of the component with id componentId\n   * @param component\n   * @param componentInterface\n   */\n  removeConsumedInterface(component: string, componentInterface: string) {\n    return this.removeConsumedInterfaceMutation.mutate({\n      input: {component, componentInterface}\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphClassSettersService.html":{"url":"injectables/IssueGraphClassSettersService.html","title":"injectable - IssueGraphClassSettersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphClassSettersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/class-setters/issue-graph-class-setters.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service is respoonsible for managing the class setters\nof a given GraphEditor instance.\nUsed in method initGraph of IssueGraphComponent.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                manageClassSetters\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        manageClassSetters\n                        \n                    \n                \n            \n            \n                \nmanageClassSetters(graph: GraphEditor, minimap: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/class-setters/issue-graph-class-setters.service.ts:23\n                \n            \n\n\n            \n                \n                    Manages node / edge class setters so that node / edge classes\nof given GraphEditor instances match their corresponding class names.\nThe setters return true if the class name is applied to the corresponding node / edge.\nThey are called on all nodes, pairs of edges and class names.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graph\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the graph that is handled.\n\n\n                                    \n                                \n                                \n                                    minimap\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the minimap that is handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\n\n/**\n * This service is respoonsible for managing the class setters\n * of a given GraphEditor instance.\n * Used in method initGraph of IssueGraphComponent.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphClassSettersService {\n  /**\n   * Manages node / edge class setters so that node / edge classes\n   * of given GraphEditor instances match their corresponding class names.\n   * The setters return true if the class name is applied to the corresponding node / edge.\n   * They are called on all nodes, pairs of edges and class names.\n   * @param  {GraphEditor} graph - Reference to the GraphEditor instance of the graph that is handled.\n   * @param  {GraphEditor} minimap - Reference to the GraphEditor instance of the minimap that is handled.\n   */\n  manageClassSetters(graph: GraphEditor, minimap: GraphEditor) {\n    // node class setter\n    const nodeClassSetter = (className: string, node: Node) => {\n      if (className === node.type) {\n        return true;\n      }\n      return false;\n    };\n\n    // applies noce class setter\n    graph.setNodeClass = nodeClassSetter;\n    minimap.setNodeClass = nodeClassSetter;\n\n    // edge class setter\n    const edgeClassSetter = (className: string, edge: Edge, sourceNode: Node, targetNode: Node) => {\n      if (className === edge.type) {\n        return true;\n      }\n      if (className === 'related-to' && edge.type === 'relatedTo') {\n        return true;\n      }\n      if (className === 'issue-relation' && (edge.type === 'relatedTo' || edge.type === 'duplicate' || edge.type === 'dependency')) {\n        return true;\n      }\n      return false;\n    };\n\n    // applies edge class setter\n    graph.setEdgeClass = edgeClassSetter;\n    minimap.setEdgeClass = edgeClassSetter;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueGraphControlsComponent.html":{"url":"components/IssueGraphControlsComponent.html","title":"component - IssueGraphControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueGraphControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component contains the graph toggles, the search bar and the button\nfor creating new components. Additionally it contains the actual graph component and feeds\ndata to it. This component collects the state of the search bar and graph toggles, combines it and emits it via this.filter$.\nAnother observable retrieved from the IssueGraphStateService maps these values into the graph\ndata matching the filters. Whenever new graph data arrives it is feed to the actual graph component. (see ngAfterViewInit)\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-graph-controls\n            \n\n            \n                styleUrls\n                ./issue-graph-controls.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-graph-controls.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bug\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                featureRequests\n                            \n                            \n                                filter$\n                            \n                            \n                                issueGraph\n                            \n                            \n                                labelSearch\n                            \n                            \n                                projectId\n                            \n                            \n                                    Public\n                                selectedCategories$\n                            \n                            \n                                showRelations\n                            \n                            \n                                unclassified\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getSelectedCategories\n                            \n                            \n                                layoutGraph\n                            \n                            \n                                setRelationVisibility\n                            \n                            \n                                    Public\n                                updateSelectedCategories\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, gs: IssueGraphStateService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gs\n                                                  \n                                                        \n                                                                        IssueGraphStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getSelectedCategories\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSelectedCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:65\n                \n            \n\n\n            \n                \n                    Gathers booleans indicating whether the toggle switches\ncoressponding to values in IssueCategory are turned on or off\n\n\n                    \n                        Returns :         SelectedCategories\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        layoutGraph\n                        \n                    \n                \n            \n            \n                \nlayoutGraph()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRelationVisibility\n                        \n                    \n                \n            \n            \n                \nsetRelationVisibility()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:111\n                \n            \n\n\n            \n                \n                    Tell the graph component whether to show issue relations or not.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateSelectedCategories\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSelectedCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:57\n                \n            \n\n\n            \n                \n                    Emit newly selected categories via this.selectedCategories$\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bug\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        featureRequests\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filter$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issueGraph\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IssueGraphComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(IssueGraphComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelSearch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LabelSearchComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(LabelSearchComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedCategories$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.getSelectedCategories())\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showRelations\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unclassified\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy, ViewChild} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ActivatedRoute} from '@angular/router';\nimport {IssueGraphComponent} from '../issue-graph/issue-graph.component';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {BehaviorSubject, combineLatest, ReplaySubject} from 'rxjs';\nimport {SelectedCategories} from '../shared';\nimport {IssueGraphStateService} from '../../data/issue-graph/issue-graph-state.service';\nimport {LabelSearchComponent} from '../label-search/label-search.component';\nimport {map, takeUntil} from 'rxjs/operators';\nimport {FilterState} from '@app/graphs/shared';\n\n/**\n * This component contains the graph toggles, the search bar and the button\n * for creating new components. Additionally it contains the actual graph component and feeds\n * data to it. This component collects the state of the search bar and graph toggles, combines it and emits it via this.filter$.\n * Another observable retrieved from the IssueGraphStateService maps these values into the graph\n * data matching the filters. Whenever new graph data arrives it is feed to the actual graph component. (see ngAfterViewInit)\n */\n@Component({\n  selector: 'app-issue-graph-controls',\n  templateUrl: './issue-graph-controls.component.html',\n  styleUrls: ['./issue-graph-controls.component.scss']\n})\nexport class IssueGraphControlsComponent implements AfterViewInit, OnDestroy {\n  @ViewChild(IssueGraphComponent) issueGraph: IssueGraphComponent;\n  @ViewChild(LabelSearchComponent) labelSearch: LabelSearchComponent;\n\n  projectId: string;\n\n  // these 3 booleans are bound to the issue category toggles via ngModel\n  featureRequests = true;\n  bug = true;\n  unclassified = true;\n\n  showRelations = true;\n  // emits state of toggles and search bar combined\n  filter$: BehaviorSubject;\n  private destroy$ = new ReplaySubject(1);\n\n  constructor(public dialog: MatDialog, private gs: IssueGraphStateService, private route: ActivatedRoute) {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.filter$ = new BehaviorSubject({\n      selectedCategories: this.getSelectedCategories(),\n      selectedFilter: {\n        labels: [],\n        texts: []\n      }\n    });\n  }\n\n  public selectedCategories$ = new BehaviorSubject(this.getSelectedCategories());\n\n  /**\n   * Emit newly selected categories via this.selectedCategories$\n   */\n  public updateSelectedCategories() {\n    this.selectedCategories$.next(this.getSelectedCategories());\n  }\n\n  /**\n   * Gathers booleans indicating whether the toggle switches\n   * coressponding to values in IssueCategory are turned on or off\n   */\n  private getSelectedCategories(): SelectedCategories {\n    return {\n      [IssueCategory.Bug]: this.bug,\n      [IssueCategory.FeatureRequest]: this.featureRequests,\n      [IssueCategory.Unclassified]: this.unclassified\n    };\n  }\n\n  layoutGraph(): void {\n    this.issueGraph.layoutGraph();\n    this.issueGraph.drawGraph();\n    this.issueGraph.fitGraphInView();\n  }\n\n  /**\n   * Setup this.filter$ and create subscription for observable returned from graphDataForFilter\n   */\n  ngAfterViewInit(): void {\n    // sets up emission of values representing the state of the graph toggles and the search bar via this.filter$\n    combineLatest([this.selectedCategories$, this.labelSearch.filterSelection$])\n      .pipe(\n        takeUntil(this.destroy$),\n        map(([selectedCategories, filterSelection]) => ({\n          selectedCategories,\n          selectedFilter: filterSelection\n        }))\n      )\n      .subscribe((filterState) => this.filter$.next(filterState));\n\n    // gets an obervable from GraphStateService that emits the matching graph state\n    // after this component emits values on this.filter$ or the IssueGraphComponent\n    // signals the need for a reload via this.issueGraph.reload$. Whenever new graph state\n    // arrives we pass it to the graph and issue a redraw on it.\n    this.gs\n      .graphDataForFilter(this.filter$, this.issueGraph.reload$, this.destroy$)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((graphData) => {\n        this.issueGraph.graphData = graphData;\n        this.issueGraph.drawGraph();\n      });\n  }\n\n  /**\n   * Tell the graph component whether to show issue relations or not.\n   *\n   */\n  setRelationVisibility(): void {\n    this.issueGraph.setRelationVisibility(this.showRelations);\n  }\n\n  /**\n   * Cancel subscriptions by emitting a value on this.destroy$\n   */\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n    \n      emoji_objects\n    \n\n    \n    \n      bug_report\n    \n\n    \n    \n      help\n    \n\n    \n    \n      \n    \n\n    \n    \n      center_focus_strong\n    \n\n    \n    \n      dashboard\n    \n\n    \n    \n\n    \n    \n      add\n    \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./issue-graph-controls.component.scss\n                \n                @import \"~@angular/material/theming\";\n@import \"variables\";\n\n.container {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n}\n.container app-issue-graph {\n  flex-grow: 1;\n}\n\n.controls {\n  display: flex;\n  flex-direction: row;\n  background-color: $background-controls;\n  border-bottom: 1px solid $border-color-controls;\n}\n\n.controls app-label-search {\n  display: inline-block;\n  height: 44px;\n  flex-grow: 1;\n  margin-left: 20px;\n}\n\n.slide-toggle {\n  margin-left: 20px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n.bug-report-icon {\n  color: red;\n}\n\n.feature-request-icon {\n  color: #005eff;\n}\n\n.feature-request-icon,\n.bug-report-icon,\n.notification-icon,\n.unclassified-icon {\n  margin-top: 7px;\n}\n\n.relation-edge-icon {\n  margin-top: 12px;\n}\n.create-component-button {\n  margin: 10px;\n  margin-left: 20px;\n  right: 10px;\n}\n\n.spacer {\n  flex: 1 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  emoji_objects                  bug_report                  help                                    center_focus_strong                  dashboard                          add          '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueGraphControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphDynamicTemplateRegistryService.html":{"url":"injectables/IssueGraphDynamicTemplateRegistryService.html","title":"injectable - IssueGraphDynamicTemplateRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphDynamicTemplateRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/dynamic-template-registry/issue-graph-dynamic-template-registry.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service is respoonsible for managing the dynamic template registry\nof a given GraphEditor instance.\nUsed in method initGraph of IssueGraphComponent.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                manageDynamicTemplateRegistry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        manageDynamicTemplateRegistry\n                        \n                    \n                \n            \n            \n                \nmanageDynamicTemplateRegistry(graph: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/dynamic-template-registry/issue-graph-dynamic-template-registry.service.ts:20\n                \n            \n\n\n            \n                \n                    Manages the dynamic template registry of given GraphEditor instance.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graph\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the graph that is handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as dynamicTemplate from '@ustutt/grapheditor-webcomponent/lib/dynamic-templates/dynamic-template';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {LinkHandle} from '@ustutt/grapheditor-webcomponent/lib/link-handle';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\n\n/**\n * This service is respoonsible for managing the dynamic template registry\n * of a given GraphEditor instance.\n * Used in method initGraph of IssueGraphComponent.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphDynamicTemplateRegistryService {\n  /**\n   * Manages the dynamic template registry of given GraphEditor instance.\n   * @param  {GraphEditor} graph - Reference to the GraphEditor instance of the graph that is handled.\n   */\n  manageDynamicTemplateRegistry(graph: GraphEditor) {\n    graph.dynamicTemplateRegistry.addDynamicTemplate('issue-group-container', {\n      renderInitialTemplate(g, grapheditor: GraphEditor, context: dynamicTemplate.DynamicTemplateContext): void {\n        // template is empty\n        g.append('circle').attr('x', 0).attr('y', 0).attr('r', 1).style('opacity', 0);\n      },\n      updateTemplate(g, grapheditor: GraphEditor, context: dynamicTemplate.DynamicTemplateContext): void {\n        // template is empty\n      },\n      getLinkHandles(g, grapheditor: GraphEditor): LinkHandle[] {\n        // template has no link handles\n        return [];\n      }\n    } as dynamicTemplate.DynamicNodeTemplate);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphLinkHandlesService.html":{"url":"injectables/IssueGraphLinkHandlesService.html","title":"injectable - IssueGraphLinkHandlesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphLinkHandlesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service is respoonsible for managing the link handles\nof a given GraphEditor instance.\nUsed in method initGraph of IssueGraphComponent.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateSourceHandles\n                            \n                            \n                                    Private\n                                calculateTargetHandles\n                            \n                            \n                                manageLinkHandles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        calculateSourceHandles\n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateSourceHandles(source: Node, handles: literal type, sourceHandles: LinkHandle[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts:62\n                \n            \n\n\n            \n                \n                    Calculates the source handles of a given edge.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nSource of the edge that is handled.\n\n\n                                    \n                                \n                                \n                                    handles\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nHandles of the edge.\n\n\n                                    \n                                \n                                \n                                    sourceHandles\n                                    \n                                            LinkHandle[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nSource handles of the edge.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        calculateTargetHandles\n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateTargetHandles(target: Node, handles: literal type, targetHandles: LinkHandle[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts:98\n                \n            \n\n\n            \n                \n                    Calculates the target handles of a given edge.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nTarget of the edge that is handled.\n\n\n                                    \n                                \n                                \n                                    handles\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nHandles of the edge.\n\n\n                                    \n                                \n                                \n                                    targetHandles\n                                    \n                                            LinkHandle[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nTarget handles of the edge.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        manageLinkHandles\n                        \n                    \n                \n            \n            \n                \nmanageLinkHandles(graph: GraphEditor, minimap: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts:21\n                \n            \n\n\n            \n                \n                    Manages calculation of the link handles of given GraphEditor instances.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graph\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the graph that is handled.\n\n\n                                    \n                                \n                                \n                                    minimap\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the minimap that is handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {DraggedEdge, Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {LinkHandle} from '@ustutt/grapheditor-webcomponent/lib/link-handle';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\n\n/**\n * This service is respoonsible for managing the link handles\n * of a given GraphEditor instance.\n * Used in method initGraph of IssueGraphComponent.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphLinkHandlesService {\n  /**\n   * Manages calculation of the link handles of given GraphEditor instances.\n   * @param  {GraphEditor} graph - Reference to the GraphEditor instance of the graph that is handled.\n   * @param  {GraphEditor} minimap - Reference to the GraphEditor instance of the minimap that is handled.\n   */\n  manageLinkHandles(graph: GraphEditor, minimap: GraphEditor) {\n    // calculation for link handles\n    const linkHandleCalculation = (\n      edge: Edge | DraggedEdge,\n      sourceHandles: LinkHandle[],\n      source: Node,\n      targetHandles: LinkHandle[],\n      target: Node\n    ) => {\n      // handles at the source / target of a given edge\n      const handles = {\n        sourceHandles,\n        targetHandles\n      };\n\n      // case: source of edge has allowed anchors\n      // => calculates source handles\n      if (source?.allowedAnchors != null) {\n        this.calculateSourceHandles(source, handles, sourceHandles);\n      }\n\n      // case: target of edge has allowed anchors\n      // => calculates target handles\n      if (target?.allowedAnchors != null) {\n        this.calculateTargetHandles(target, handles, targetHandles);\n      }\n\n      return handles;\n    };\n\n    // applies calculaiton for link handles\n    graph.calculateLinkHandlesForEdge = linkHandleCalculation;\n    minimap.calculateLinkHandlesForEdge = linkHandleCalculation;\n  }\n\n  /**\n   * Calculates the source handles of a given edge.\n   * @param  {Node} source - Source of the edge that is handled.\n   * @param  {{sourceHandles:LinkHandle[];targetHandles:LinkHandle[];}} handles - Handles of the edge.\n   * @param  {LinkHandle[]} sourceHandles - Source handles of the edge.\n   */\n  private calculateSourceHandles(\n    source: Node,\n    handles: {sourceHandles: LinkHandle[]; targetHandles: LinkHandle[]},\n    sourceHandles: LinkHandle[]\n  ) {\n    handles.sourceHandles = sourceHandles.filter((linkHandle) => {\n      // case: X coordinate of link handle further than the Y coordinate\n      if (Math.abs(linkHandle.x) > Math.abs(linkHandle.y)) {\n        if (linkHandle.x > 0 && source.allowedAnchors.has('right')) {\n          return true;\n        }\n        if (linkHandle.x  0 && source.allowedAnchors.has('bottom')) {\n          return true;\n        }\n        if (linkHandle.y  {\n      // case: X coordinate of link handle further than the Y coordinate\n      if (Math.abs(linkHandle.x) > Math.abs(linkHandle.y)) {\n        if (linkHandle.x > 0 && target.allowedAnchors.has('right')) {\n          return true;\n        }\n        if (linkHandle.x  0 && target.allowedAnchors.has('bottom')) {\n          return true;\n        }\n        if (linkHandle.y \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphStateService.html":{"url":"injectables/IssueGraphStateService.html","title":"injectable - IssueGraphStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/issue-graph-state.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                state$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConsumedInterface\n                            \n                            \n                                graphDataForFilter\n                            \n                            \n                                removeConsumedInterface\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: IssueGraphApiService, ss: StateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/issue-graph/issue-graph-state.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        IssueGraphApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ss\n                                                  \n                                                        \n                                                                        StateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addConsumedInterface\n                        \n                    \n                \n            \n            \n                \naddConsumedInterface(componentId: string, interfaceId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-state.service.ts:51\n                \n            \n\n\n            \n                \n                    Make the interface with interfaceId a consumed interface of the component with id componentId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interfaceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphDataForFilter\n                        \n                    \n                \n            \n            \n                \ngraphDataForFilter(filter$: BehaviorSubject, reload$: BehaviorSubject, destroy$: ReplaySubject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-state.service.ts:26\n                \n            \n\n\n            \n                \n                    Maps an observable of the state of the graph filters (toggles and queries in search bar) onto an observable\nemitting graph state for these filters retrieved from the backend.\nthe filter$ or reload$ observables emit a value.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter$\n                                    \n                                                BehaviorSubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an observable emitting a sequence of values describing the state of the filter bar above the graph\n\n                                    \n                                \n                                \n                                    reload$\n                                    \n                                            BehaviorSubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an observable emitting irrelevant values to signal a reload is required, after a manipulation of graph data\n\n                                    \n                                \n                                \n                                    destroy$\n                                    \n                                            ReplaySubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        used to signal that the caller is no longer interested. On emission the returned observable finishes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable emitting sequence of graph states containing e.g. components and interfaces. It will emit new values when\nthe filter$ or reload$ observables emit a value.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeConsumedInterface\n                        \n                    \n                \n            \n            \n                \nremoveConsumedInterface(componentId: string, interfaceId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-state.service.ts:58\n                \n            \n\n\n            \n                \n                    Remove the interface with interfaceId from consumed interfaces of the component with id componentId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interfaceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/issue-graph-state.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, ReplaySubject} from 'rxjs';\nimport {StateService} from '@app/state.service';\nimport {GraphData} from './graph-data';\nimport {filter, shareReplay, switchMap, takeUntil} from 'rxjs/operators';\nimport {IssueGraphApiService} from './issue-graph-api.service';\nimport {FilterState} from '@app/graphs/shared';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphStateService {\n  state$: Observable;\n\n  constructor(private apiService: IssueGraphApiService, private ss: StateService) {}\n\n  /**\n   * Maps an observable of the state of the graph filters (toggles and queries in search bar) onto an observable\n   * emitting graph state for these filters retrieved from the backend.\n   * @param filter$ an observable emitting a sequence of values describing the state of the filter bar above the graph\n   * @param reload$ an observable emitting irrelevant values to signal a reload is required, after a manipulation of graph data\n   * @param destroy$ used to signal that the caller is no longer interested. On emission the returned observable finishes.\n   * @returns observable emitting sequence of graph states containing e.g. components and interfaces. It will emit new values when\n   * the filter$ or reload$ observables emit a value.\n   */\n  graphDataForFilter(\n    filter$: BehaviorSubject,\n    reload$: BehaviorSubject,\n    destroy$: ReplaySubject\n  ): Observable {\n    // Whenever a new value arrives from reload$, loadIssueGraphData is executed\n    this.state$ = combineLatest([this.ss.state$, filter$, reload$]).pipe(\n      takeUntil(destroy$),\n      filter(([appState, _]) => appState.project?.node.id != null),\n      switchMap(([appState, filterState]) =>\n        this.apiService.loadIssueGraphData(\n          appState.project.node.id,\n          filterState.selectedCategories,\n          filterState.selectedFilter.labels,\n          filterState.selectedFilter.texts\n        )\n      ),\n      shareReplay(1)\n    );\n    return this.state$;\n  }\n\n  /**\n   * Make the interface with interfaceId a consumed interface of the component with id componentId\n   */\n  addConsumedInterface(componentId: string, interfaceId: string) {\n    return this.apiService.addConsumedInterface(componentId, interfaceId);\n  }\n\n  /**\n   * Remove the interface with interfaceId from consumed interfaces of the component with id componentId\n   */\n  removeConsumedInterface(componentId: string, interfaceId: string) {\n    return this.apiService.removeConsumedInterface(componentId, interfaceId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IssueGroupContainerBehaviour.html":{"url":"classes/IssueGroupContainerBehaviour.html","title":"class - IssueGroupContainerBehaviour","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IssueGroupContainerBehaviour\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/group-behaviours.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        GroupBehaviour\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                captureChildMovement\n                            \n                            \n                                childNodePositions\n                            \n                            \n                                moveChildrenAlongGoup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterNodeJoinedGroup\n                            \n                            \n                                afterNodeLeftGroup\n                            \n                            \n                                relativePositionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        captureChildMovement\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        childNodePositions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveChildrenAlongGoup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:92\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterNodeJoinedGroup\n                        \n                    \n                \n            \n            \n                \nafterNodeJoinedGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/group-behaviours.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupNode\n                                    \n                                                IssueGroupContainerNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    graphEditor\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterNodeLeftGroup\n                        \n                    \n                \n            \n            \n                \nafterNodeLeftGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/group-behaviours.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupNode\n                                    \n                                                IssueGroupContainerNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    graphEditor\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        relativePositionChanged\n                        \n                    \n                \n            \n            \n                \nrelativePositionChanged(group: string, groupNode: Node, graphEditor: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/group-behaviours.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    graphEditor\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {GroupBehaviour} from '@ustutt/grapheditor-webcomponent/lib/grouping';\nimport {Point} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {IssueGroupContainerNode, NodeType} from './issue-graph-nodes';\n\nfunction distance(x, y, x2, y2) {\n  return (x - x2) ** 2 + (y - y2) ** 2;\n}\n\n/**\n * See the graph_structure_documentation.png in the src/app/graphs folder for how\n * the two GroupBehaviour implementations interplay with the graph.\n */\n\nexport class IssueGroupContainerParentBehaviour implements GroupBehaviour {\n  moveChildrenAlongGoup = true;\n  childNodePositions = new Map();\n\n  constructor(private initialPosition: string) {}\n\n  beforeNodeMove(group: string, childGroup: string, groupNode: Node, childNode: Node, newPosition: Point, graphEditor: GraphEditor) {\n    // calculate groupNode (the parent node) dimensions\n    const width = groupNode.type === NodeType.Interface ? 10 : 100;\n    const height = groupNode.type === NodeType.Interface ? 10 : 60;\n    // find nearest side\n    let best = 'bottom';\n    if (newPosition != null && (newPosition.x !== 0 || newPosition.y !== 0)) {\n      let bestDistance = distance(newPosition.x, newPosition.y, groupNode.x, groupNode.y + height / 2 + 25);\n      const rightDistance = distance(newPosition.x, newPosition.y, groupNode.x + width / 2 + 30, groupNode.y);\n      const leftDistance = distance(newPosition.x, newPosition.y, groupNode.x - width / 2 - 30, groupNode.y);\n      const topDistance = distance(newPosition.x, newPosition.y, groupNode.x, groupNode.y - height / 2 - 25);\n      if (rightDistance  0 ? places / 2 : 0;\n    let xOffset = 0;\n    let yOffset = 0;\n\n    if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n      xOffset = startOffset * 45;\n    }\n    if (groupNode.position === 'right' || groupNode.position === 'left') {\n      yOffset = -startOffset * 35;\n    }\n\n    // order of sortedChildIds decides order of rendering\n    const sortedChildIds = Object.keys(IssueCategory)\n      .map((key) => `${parent}__${IssueCategory[key]}`)\n      .filter((childId) => children.has(childId));\n\n    // pre sorted list\n    /*\n    const sortedChildIds = [\n        `${parent}__undecided`,\n        `${parent}__bug`,\n        `${parent}__feature`,\n    ].filter(childId => children.has(childId));\n    */\n    sortedChildIds.forEach((childId, index) => {\n      this.childNodePositions.set(childId, {x: xOffset, y: yOffset});\n      const child = graphEditor.getNode(childId);\n      if (child != null) {\n        child.x = groupNode.x + xOffset;\n        child.y = groupNode.y + yOffset;\n      }\n      if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n        xOffset -= 45;\n      }\n      if (groupNode.position === 'right' || groupNode.position === 'left') {\n        yOffset += 35;\n      }\n      // set allowed link anchors\n      const allowedAnchors = new Set();\n      allowedAnchors.add(groupNode.position);\n      if (index === 0) {\n        if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n          allowedAnchors.add('right');\n        }\n        if (groupNode.position === 'right' || groupNode.position === 'left') {\n          allowedAnchors.add('top');\n        }\n      }\n      if (index === sortedChildIds.length - 1) {\n        if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n          allowedAnchors.add('left');\n        }\n        if (groupNode.position === 'right' || groupNode.position === 'left') {\n          allowedAnchors.add('bottom');\n        }\n      }\n      const childNode = graphEditor.getNode(childId);\n      if (childNode != null) {\n        childNode.allowedAnchors = allowedAnchors;\n      }\n    });\n  }\n\n  afterNodeJoinedGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor) {\n    this.relativePositionChanged(group, groupNode, graphEditor);\n    groupNode.issueGroupNodeIds.add(childGroup);\n  }\n\n  afterNodeLeftGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor) {\n    this.relativePositionChanged(group, groupNode, graphEditor);\n    groupNode.issueGroupNodeIds.delete(childGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueGroupContainerNode.html":{"url":"interfaces/IssueGroupContainerNode.html","title":"interface - IssueGroupContainerNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IssueGroupContainerNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Node\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            issueGroupNodeIds\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        issueGroupNodeIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueGroupNodeIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode,\n  ComponentNode,\n  InterfaceNode,\n  IssueGroupContainerNode,\n  RelationEdge,\n  createComponentNode,\n  createInterfaceNode,\n  createIssueGroupContainerNode,\n  createIssueFolderNode,\n  createRelationEdge,\n  createConsumptionEdge,\n  createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set()\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0\n    }\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: []\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IssueGroupContainerParentBehaviour.html":{"url":"classes/IssueGroupContainerParentBehaviour.html","title":"class - IssueGroupContainerParentBehaviour","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IssueGroupContainerParentBehaviour\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/group-behaviours.ts\n        \n\n\n            \n                Description\n            \n            \n                See the graph_structure_documentation.png in the src/app/graphs folder for how\nthe two GroupBehaviour implementations interplay with the graph.\n\n            \n\n\n            \n                Implements\n            \n            \n                        GroupBehaviour\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childNodePositions\n                            \n                            \n                                moveChildrenAlongGoup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beforeNodeMove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initialPosition: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initialPosition\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        childNodePositions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveChildrenAlongGoup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        beforeNodeMove\n                        \n                    \n                \n            \n            \n                \nbeforeNodeMove(group: string, childGroup: string, groupNode: Node, childNode: Node, newPosition: Point, graphEditor: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/group-behaviours.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newPosition\n                                    \n                                            Point\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    graphEditor\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {GroupBehaviour} from '@ustutt/grapheditor-webcomponent/lib/grouping';\nimport {Point} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {IssueGroupContainerNode, NodeType} from './issue-graph-nodes';\n\nfunction distance(x, y, x2, y2) {\n  return (x - x2) ** 2 + (y - y2) ** 2;\n}\n\n/**\n * See the graph_structure_documentation.png in the src/app/graphs folder for how\n * the two GroupBehaviour implementations interplay with the graph.\n */\n\nexport class IssueGroupContainerParentBehaviour implements GroupBehaviour {\n  moveChildrenAlongGoup = true;\n  childNodePositions = new Map();\n\n  constructor(private initialPosition: string) {}\n\n  beforeNodeMove(group: string, childGroup: string, groupNode: Node, childNode: Node, newPosition: Point, graphEditor: GraphEditor) {\n    // calculate groupNode (the parent node) dimensions\n    const width = groupNode.type === NodeType.Interface ? 10 : 100;\n    const height = groupNode.type === NodeType.Interface ? 10 : 60;\n    // find nearest side\n    let best = 'bottom';\n    if (newPosition != null && (newPosition.x !== 0 || newPosition.y !== 0)) {\n      let bestDistance = distance(newPosition.x, newPosition.y, groupNode.x, groupNode.y + height / 2 + 25);\n      const rightDistance = distance(newPosition.x, newPosition.y, groupNode.x + width / 2 + 30, groupNode.y);\n      const leftDistance = distance(newPosition.x, newPosition.y, groupNode.x - width / 2 - 30, groupNode.y);\n      const topDistance = distance(newPosition.x, newPosition.y, groupNode.x, groupNode.y - height / 2 - 25);\n      if (rightDistance  0 ? places / 2 : 0;\n    let xOffset = 0;\n    let yOffset = 0;\n\n    if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n      xOffset = startOffset * 45;\n    }\n    if (groupNode.position === 'right' || groupNode.position === 'left') {\n      yOffset = -startOffset * 35;\n    }\n\n    // order of sortedChildIds decides order of rendering\n    const sortedChildIds = Object.keys(IssueCategory)\n      .map((key) => `${parent}__${IssueCategory[key]}`)\n      .filter((childId) => children.has(childId));\n\n    // pre sorted list\n    /*\n    const sortedChildIds = [\n        `${parent}__undecided`,\n        `${parent}__bug`,\n        `${parent}__feature`,\n    ].filter(childId => children.has(childId));\n    */\n    sortedChildIds.forEach((childId, index) => {\n      this.childNodePositions.set(childId, {x: xOffset, y: yOffset});\n      const child = graphEditor.getNode(childId);\n      if (child != null) {\n        child.x = groupNode.x + xOffset;\n        child.y = groupNode.y + yOffset;\n      }\n      if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n        xOffset -= 45;\n      }\n      if (groupNode.position === 'right' || groupNode.position === 'left') {\n        yOffset += 35;\n      }\n      // set allowed link anchors\n      const allowedAnchors = new Set();\n      allowedAnchors.add(groupNode.position);\n      if (index === 0) {\n        if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n          allowedAnchors.add('right');\n        }\n        if (groupNode.position === 'right' || groupNode.position === 'left') {\n          allowedAnchors.add('top');\n        }\n      }\n      if (index === sortedChildIds.length - 1) {\n        if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n          allowedAnchors.add('left');\n        }\n        if (groupNode.position === 'right' || groupNode.position === 'left') {\n          allowedAnchors.add('bottom');\n        }\n      }\n      const childNode = graphEditor.getNode(childId);\n      if (childNode != null) {\n        childNode.allowedAnchors = allowedAnchors;\n      }\n    });\n  }\n\n  afterNodeJoinedGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor) {\n    this.relativePositionChanged(group, groupNode, graphEditor);\n    groupNode.issueGroupNodeIds.add(childGroup);\n  }\n\n  afterNodeLeftGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor) {\n    this.relativePositionChanged(group, groupNode, graphEditor);\n    groupNode.issueGroupNodeIds.delete(childGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueIconComponent.html":{"url":"components/IssueIconComponent.html","title":"component - IssueIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-icon/issue-icon.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component automatically displays the appropriate mat-icon for the given issue.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-icon\n            \n\n            \n                styleUrls\n                ./issue-icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIconLabel\n                            \n                            \n                                getIconName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issue\n                    \n                \n                \n                    \n                        Type :     Issue\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-icon/issue-icon.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getIconLabel\n                        \n                    \n                \n            \n            \n                \ngetIconLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-icon/issue-icon.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIconName\n                        \n                    \n                \n            \n            \n                \ngetIconName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-icon/issue-icon.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {Issue, IssueCategory} from 'src/generated/graphql-dgql';\n\n/**\n * This component automatically displays the appropriate mat-icon for the given issue.\n */\n@Component({\n  selector: 'app-issue-icon',\n  templateUrl: './issue-icon.component.html',\n  styleUrls: ['./issue-icon.component.scss']\n})\nexport class IssueIconComponent {\n  @Input() issue: Issue;\n\n  getIconName() {\n    let category;\n    if (this.issue.category === IssueCategory.Bug) {\n      category = 'bug';\n    } else if (this.issue.category === IssueCategory.FeatureRequest) {\n      category = 'feature';\n    } else {\n      category = 'uncategorized';\n    }\n    const closed = this.issue.isOpen ? null : '-closed';\n\n    const hasIn = this.issue.linkedByIssues?.totalCount;\n    const hasOut = this.issue.linksToIssues?.totalCount;\n    const edgeType = (hasIn ? 'in' : '') + (hasOut ? 'out' : '');\n\n    return ['issue-', category, closed, edgeType && '-', edgeType].filter((part) => part).join('');\n  }\n\n  getIconLabel() {\n    const category =\n      this.issue.category === IssueCategory.Bug ? 'bug' : this.issue.category === IssueCategory.FeatureRequest ? 'feature' : 'issue';\n    return this.issue.isOpen ? `Open ${category}` : `Closed ${category}`;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./issue-icon.component.scss\n                \n                :host {\n  display: inline-block;\n}\n\n:host > * {\n  // get rid of bottom space caused by line height\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueItemComponent.html":{"url":"components/IssueItemComponent.html","title":"component - IssueItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-item/issue-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays an issue (for use in e.g. a list).\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-item\n            \n\n            \n                styleUrls\n                ./issue-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extended\n                            \n                            \n                                interactive\n                            \n                            \n                                issue\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/issue-item/issue-item.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        extended\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-item/issue-item.component.ts:17\n                            \n                        \n                \n                    \n                        Whether to show extended info, such as the issue's locations.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        interactive\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-item/issue-item.component.ts:19\n                            \n                        \n                \n                    \n                        If true, this component will display a hyperlink.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        issue\n                    \n                \n                \n                    \n                        Type :     Issue\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-item/issue-item.component.ts:15\n                            \n                        \n                \n                    \n                        The issue object that will be displayed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-item/issue-item.component.ts:13\n                            \n                        \n                \n                    \n                        The raw project ID.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getIssueLink\n                        \n                    \n                \n            \n            \n                \ngetIssueLink()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-item/issue-item.component.ts:24\n                \n            \n\n\n            \n                \n                    Returns the link URL for the issue.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {Issue} from 'src/generated/graphql-dgql';\nimport {Router} from '@angular/router';\n\n/** This component displays an issue (for use in e.g. a list). */\n@Component({\n  selector: 'app-issue-item',\n  templateUrl: './issue-item.component.html',\n  styleUrls: ['./issue-item.component.scss']\n})\nexport class IssueItemComponent {\n  /** The raw project ID. */\n  @Input() projectId: string;\n  /** The issue object that will be displayed. */\n  @Input() issue: Issue;\n  /** Whether to show extended info, such as the issue's locations. */\n  @Input() extended = false;\n  /** If true, this component will display a hyperlink. */\n  @Input() interactive = false;\n\n  constructor(private router: Router) {}\n\n  /** Returns the link URL for the issue. */\n  getIssueLink() {\n    return this.router.serializeUrl(this.router.createUrlTree(['/projects', this.projectId, 'issues', this.issue.id]));\n  }\n}\n\n    \n\n    \n        \n  \n  {{ issue.title }}\n\n\n  \n  {{ issue.title }}\n\n\n   {{ component.name }} \n\n\n    \n\n    \n                \n                    ./issue-item.component.scss\n                \n                :host {\n  line-height: 1.4em;\n\n  .issue-icon {\n    vertical-align: middle;\n  }\n\n  .linked-issue-locations {\n    font-size: 0.8em;\n    font-weight: normal;\n\n    .inner-item {\n      display: inline-block;\n      line-height: 1.2em;\n      background: rgba(0, 0, 0, 0.2);\n      border-radius: 2px;\n      padding: 1px 2px;\n      margin-right: 2px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ issue.title }}    {{ issue.title }}   {{ component.name }} '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueLabelComponent.html":{"url":"components/IssueLabelComponent.html","title":"component - IssueLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-label/issue-label.component.ts\n\n\n\n    \n        Description\n    \n    \n        Renders an issue label.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-label\n            \n\n            \n                styleUrls\n                ./issue-label.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isColorDark\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :     Label\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-label/issue-label.component.ts:37\n                            \n                        \n                \n                    \n                        The label to display. Nullable. Should have properties name and color.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isColorDark\n                        \n                    \n                \n            \n            \n                \n                    \n                    isColorDark(color?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-label/issue-label.component.ts:44\n                \n            \n\n\n            \n                \n                    Determines whether the color is light or dark.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        label color - any CSS color string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {Label} from 'src/generated/graphql-dgql';\n\nconst colorTestCanvas = document.createElement('canvas');\ncolorTestCanvas.width = colorTestCanvas.height = 1;\nconst colorTestCtx = colorTestCanvas.getContext('2d');\n\n/**\n * Reads a CSS color into an RGB tuple.\n * Undefined behavior if the string is not a valid color.\n *\n * @param color a CSS color string\n * @return RGB tuple in the 0..255 range\n */\nfunction readCssColor(color: string): [number, number, number] {\n  try {\n    colorTestCtx.fillStyle = color;\n    colorTestCtx.fillRect(0, 0, 1, 1);\n    const imageData = colorTestCtx.getImageData(0, 0, 1, 1);\n    return [imageData.data[0], imageData.data[1], imageData.data[2]];\n  } catch {\n    // getImageData may fail in rare cases(?) so we'll simply return garbage\n    return [NaN, NaN, NaN];\n  }\n}\n\n/**\n * Renders an issue label.\n */\n@Component({\n  selector: 'app-issue-label',\n  templateUrl: './issue-label.component.html',\n  styleUrls: ['./issue-label.component.scss']\n})\nexport class IssueLabelComponent {\n  /** The label to display. Nullable. Should have properties `name` and `color`. */\n  @Input() label: Label;\n\n  /**\n   * Determines whether the color is light or dark.\n   *\n   * @param color label color - any CSS color string\n   */\n  public isColorDark(color?: string) {\n    if (!color) {\n      return false;\n    }\n\n    const [r, g, b] = readCssColor(color);\n\n    // HSP (Hue-Sat-Perceived-brightness) equation from http://alienryderflex.com/hsp.html\n    const hsp = Math.sqrt(0.299 * (r * r) + 0.587 * (g * g) + 0.114 * (b * b));\n\n    // Using the HSP value, determine whether the color is light or dark\n    // Compare against gamma-adjusted tipping point\n    return hsp > Math.sqrt(0.5) * 255;\n  }\n}\n\n    \n\n    \n        \n  {{ label?.name }}\n\n\n    \n\n    \n                \n                    ./issue-label.component.scss\n                \n                :host {\n  display: inline-block;\n}\n\n.inner-label {\n  display: inline-block;\n  color: white;\n  border-radius: 4px;\n  padding: 1px 2px;\n  margin: 1px;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n\n  &.is-dark-text {\n    color: black;\n    border: 1px solid rgba(0, 0, 0, 0.3);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label?.name }}'\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueListComponent.html":{"url":"components/IssueListComponent.html","title":"component - IssueListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-list/issue-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component shows all issues for a given component / interface.\nIt lets the user 1) filter through all the issues,\n2) create new issues and also 3) sort all issues in a separate table view.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-list\n            \n\n            \n                styleUrls\n                ./issue-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                allLabelsList\n                            \n                            \n                                    Public\n                                canCreateNewIssue\n                            \n                            \n                                columnsToDisplay\n                            \n                            \n                                    Public\n                                    Optional\n                                component$\n                            \n                            \n                                    Public\n                                    Optional\n                                componentInterface$\n                            \n                            \n                                    Public\n                                componentInterfaceProvider\n                            \n                            \n                                    Private\n                                    Optional\n                                componentInterfaceSub\n                            \n                            \n                                    Private\n                                    Optional\n                                componentSub\n                            \n                            \n                                dataSource\n                            \n                            \n                                    Public\n                                    Optional\n                                list$\n                            \n                            \n                                paginator\n                            \n                            \n                                query\n                            \n                            \n                                    Public\n                                queryParamFilter\n                            \n                            \n                                searchIssuesDataArray\n                            \n                            \n                                sort\n                            \n                            \n                                validationFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                clickedOnRow\n                            \n                            \n                                formatCategoryDescription\n                            \n                            \n                                formatCategoryIcon\n                            \n                            \n                                    Private\n                                getQueryParamFilter\n                            \n                            \n                                onAddClick\n                            \n                            \n                                    Private\n                                prepareIssueArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                listId\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, dialog: MatDialog, router: Router, dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-list/issue-list.component.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        listId\n                    \n                \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-list.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-list.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(filter: IssueFilter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:181\n                \n            \n\n\n            \n                \n                    Applies a given filter.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            IssueFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nGiven filter to be applied.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clickedOnRow\n                        \n                    \n                \n            \n            \n                \nclickedOnRow(row: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:190\n                \n            \n\n\n            \n                \n                    Gets activated when an issue is clicked.\nNavigates the user to the corresponding issue page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nIssue that is clicked.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatCategoryDescription\n                        \n                    \n                \n            \n            \n                \nformatCategoryDescription(category: IssueCategory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:86\n                \n            \n\n\n            \n                \n                    Determines issue description depending on the given categiry.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                            IssueCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe given issue category.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Issue description.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatCategoryIcon\n                        \n                    \n                \n            \n            \n                \nformatCategoryIcon(issue: Issue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:70\n                \n            \n\n\n            \n                \n                    Determines issue icon depending on the given category.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    issue\n                                    \n                                            Issue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe given issue.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Issue icon id.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getQueryParamFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    getQueryParamFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:158\n                \n            \n\n\n            \n                \n                    Gets the query param filter.\nIf it is set, the issue list shows only issues that match the given keyword.\nOtherwise all issues are displayed.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddClick\n                        \n                    \n                \n            \n            \n                \nonAddClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:237\n                \n            \n\n\n            \n                \n                    Opens a Create Issue dialog.\nAlso selects components and locations depending from which\nComponent / Interface page the Create Issue dialog was initiated.\nex. Interface I1 with Prvider Component C1 lead to an Interface Issue\nwith components: Component C1 and locations: Component C1, Interface I1\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        prepareIssueArray\n                        \n                    \n                \n            \n            \n                \n                    \n                    prepareIssueArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:200\n                \n            \n\n\n            \n                \n                    Prepares the issue array for the filter function.\nFor each issue a search string is defined.\nThe search string contains assignees, labels, and the author.\nThe filter funcion can search inside the string for keywords matching the given search string.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        allLabelsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        canCreateNewIssue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnsToDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['title', 'author', 'assignees', 'labels', 'category']\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        component$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        componentInterface$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        componentInterfaceProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        componentInterfaceSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        componentSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        list$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(QueryComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        queryParamFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchIssuesDataArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Subscription} from 'rxjs';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort, MatSortable} from '@angular/material/sort';\nimport {CreateIssueDialogComponent} from '@app/dialogs/create-issue-dialog/create-issue-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {FormControl} from '@angular/forms';\nimport DataService from '@app/data-dgql';\nimport {ListId, ListType, NodeId, NodeType} from '@app/data-dgql/id';\nimport {DataList, DataNode} from '@app/data-dgql/query';\nimport {Component as IComponent, ComponentInterface, Issue, IssueCategory, IssueFilter} from '../../generated/graphql-dgql';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n/**\n * This component shows all issues for a given component / interface.\n * It lets the user 1) filter through all the issues,\n * 2) create new issues and also 3) sort all issues in a separate table view.\n */\n@Component({\n  selector: 'app-issue-list',\n  templateUrl: './issue-list.component.html',\n  styleUrls: ['./issue-list.component.scss']\n})\nexport class IssueListComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input() listId: ListId;\n  @Input() projectId: string;\n  public queryParamFilter = '';\n  public list$?: DataList;\n\n  // component that is observed\n  public component$?: DataNode;\n  private componentSub?: Subscription;\n\n  // interface that is observed\n  public componentInterface$?: DataNode;\n  private componentInterfaceSub?: Subscription;\n\n  // provider of the interface that is observed\n  public componentInterfaceProvider: NodeId;\n\n  // determines whether one can create new issues from a given component / interface page\n  // FIXME remove and use proper logic instead\n  public canCreateNewIssue = false;\n\n  public allLabelsList: ListId;\n\n  dataSource: MatTableDataSource;\n  columnsToDisplay = ['title', 'author', 'assignees', 'labels', 'category'];\n  searchIssuesDataArray: any;\n  validationFilter = new FormControl('');\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(QueryComponent) query: QueryComponent;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private dialog: MatDialog,\n    private router: Router,\n    private dataService: DataService\n  ) {}\n\n  /**\n   * Determines issue icon depending on the given category.\n   * @param issue - The given issue.\n   * @returns Issue icon id.\n   */\n  formatCategoryIcon(issue: Issue): string {\n    switch (issue.category) {\n      case IssueCategory.Bug:\n        return issue.isOpen ? 'issue-bug' : 'issue-bug-closed';\n      case IssueCategory.FeatureRequest:\n        return issue.isOpen ? 'issue-feature' : 'issue-feature-closed';\n      case IssueCategory.Unclassified:\n        return issue.isOpen ? 'issue-uncategorized' : 'issue-uncategorized-closed';\n    }\n  }\n\n  /**\n   * Determines issue description depending on the given categiry.\n   * @param category - The given issue category.\n   * @returns Issue description.\n   */\n  formatCategoryDescription(category: IssueCategory): string {\n    switch (category) {\n      case IssueCategory.Bug:\n        return 'Bug';\n      case IssueCategory.FeatureRequest:\n        return 'Feature request';\n      case IssueCategory.Unclassified:\n        return 'Unclassified';\n    }\n  }\n\n  ngOnInit(): void {\n    this.allLabelsList = {\n      node: this.listId.node,\n      type: ListType.Labels\n    };\n\n    if (this.listId.node.type === NodeType.Component) {\n      this.canCreateNewIssue = true;\n      this.component$ = this.dataService.getNode(this.listId.node);\n      this.componentSub = this.component$.subscribe();\n    } else if (this.listId.node.type === NodeType.ComponentInterface) {\n      this.canCreateNewIssue = true;\n      this.componentInterface$ = this.dataService.getNode(this.listId.node);\n      this.componentInterfaceSub = this.componentInterface$.subscribe();\n\n      this.componentInterface$.dataAsPromise().then((data) => {\n        this.componentInterfaceProvider = {\n          type: NodeType.Component,\n          id: data.component.id\n        };\n      });\n    }\n\n    // FIXME: a hack to fix the labels list on interfaces\n    if (this.listId.node.type === NodeType.ComponentInterface) {\n      const interfaceNode = this.dataService.getNode(this.listId.node);\n      interfaceNode.dataAsPromise().then((data) => {\n        this.allLabelsList = {\n          node: {type: NodeType.Component, id: data.component.id},\n          type: ListType.Labels\n        };\n      });\n    }\n\n    this.list$ = this.dataService.getList(this.listId);\n    this.list$.count = 25;\n  }\n\n  ngAfterViewInit() {\n    this.query.listenTo(this.list$, (data) => {\n      this.dataSource = new MatTableDataSource(data ? [...data.values()] : []);\n      this.sort.sort({id: 'category', start: 'asc'} as MatSortable);\n      this.dataSource.sort = this.sort;\n      // FIXME use bespoke pagination/sorting/filtering\n      // this.dataSource.paginator = this.paginator;\n      this.dataSource.filter = this.getQueryParamFilter();\n      this.validationFilter.setValue(this.getQueryParamFilter());\n      this.prepareIssueArray();\n    });\n  }\n\n  ngOnDestroy() {\n    this.componentSub?.unsubscribe();\n    this.componentInterfaceSub?.unsubscribe();\n  }\n\n  /**\n   * Gets the query param filter.\n   * If it is set, the issue list shows only issues that match the given keyword.\n   * Otherwise all issues are displayed.\n   */\n  private getQueryParamFilter(): string {\n    let returnedFilter = '';\n    this.activatedRoute.queryParams.subscribe((params) => {\n      // case: query param filter is set\n      // => shows only matching issues\n      if (params.filter) {\n        this.queryParamFilter = params.filter;\n        returnedFilter = params.filter;\n      }\n\n      // case: query param filter is not set\n      // => shows all issues\n      else {\n        returnedFilter = '';\n      }\n    });\n    return returnedFilter;\n  }\n\n  /**\n   * Applies a given filter.\n   * @param filter - Given filter to be applied.\n   */\n  applyFilter(filter: IssueFilter) {\n    this.list$.filter = filter;\n  }\n\n  /**\n   * Gets activated when an issue is clicked.\n   * Navigates the user to the corresponding issue page.\n   * @param row - Issue that is clicked.\n   */\n  clickedOnRow(row: any) {\n    this.router.navigate(['/projects', this.projectId, 'issues', row.id]);\n  }\n\n  /**\n   * Prepares the issue array for the filter function.\n   * For each issue a search string is defined.\n   * The search string contains assignees, labels, and the author.\n   * The filter funcion can search inside the string for keywords matching the given search string.\n   */\n  private prepareIssueArray() {\n    // FIXME use API search\n    if (!this.list$.hasData) {\n      return;\n    }\n    this.searchIssuesDataArray = [...this.list$.current.values()];\n    for (const issue of this.searchIssuesDataArray) {\n      let additionalSearchString = '';\n      issue.assigneesString = '';\n      issue.labelsString = '';\n\n      // adds all assignees\n      for (const assignee of issue.assignees.nodes) {\n        additionalSearchString += ' ' + assignee.displayName;\n        issue.assigneesString += ' ' + assignee.displayName;\n      }\n\n      // adds all labels\n      for (const label of issue.labels.nodes) {\n        additionalSearchString += ' ' + label.name;\n        issue.labelsString += ' ' + label.name;\n      }\n\n      // adds the author\n      additionalSearchString += ' ' + issue.createdBy.displayName;\n\n      issue.search = additionalSearchString;\n    }\n  }\n\n  /**\n   * Opens a Create Issue dialog.\n   * Also selects components and locations depending from which\n   * Component / Interface page the Create Issue dialog was initiated.\n   * ex. Interface I1 with Prvider Component C1 lead to an Interface Issue\n   * with components: Component C1 and locations: Component C1, Interface I1\n   */\n  onAddClick() {\n    // FIXME move functionality so that the component can be reusable as a list\n\n    // case: node is a component\n    if (this.listId.node.type === NodeType.Component) {\n      this.dialog.open(CreateIssueDialogComponent, {\n        data: {\n          projectId: this.projectId,\n          components: [this.component$.id]\n        },\n        width: '600px'\n      });\n    }\n\n    // case: node is an interface\n    else if (this.listId.node.type === NodeType.ComponentInterface) {\n      this.dialog.open(CreateIssueDialogComponent, {\n        data: {\n          projectId: this.projectId,\n          components: [this.componentInterfaceProvider],\n          locations: [this.componentInterface$.id]\n        },\n        width: '600px'\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n       \n\n      \n      \n        \n          Create issue\n        \n      \n\n      \n      \n        \n          \n          \n            Title\n            {{ element.title }}\n          \n\n          \n          \n            Author\n            {{ element.createdBy.displayName }}\n          \n\n          \n          \n            Assignees\n            {{ element.assigneesString }}\n          \n\n          \n          \n            Labels\n            \n              \n                \n              \n            \n          \n\n          \n          \n            Category\n            \n              \n                 \n                {{ this.formatCategoryDescription(element.category) }}\n              \n            \n          \n          \n          \n        \n      \n\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./issue-list.component.scss\n                \n                .mat-row:hover {\n  box-shadow: inset 0 0 43px -17px rgba(201, 195, 201, 1);\n  cursor: pointer;\n}\n\n.table-container {\n  overflow: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                 Create issue                                                                  Title            {{ element.title }}                                          Author            {{ element.createdBy.displayName }}                                          Assignees            {{ element.assigneesString }}                                          Labels                                                                                                              Category                                                           {{ this.formatCategoryDescription(element.category) }}                                                                                        '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueLocationComponent.html":{"url":"components/IssueLocationComponent.html","title":"component - IssueLocationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueLocationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-location/issue-location.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays an issue location.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-location\n            \n\n            \n                styleUrls\n                ./issue-location.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-location.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToLocationDetails\n                            \n                            \n                                isComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                location\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/issue-location/issue-location.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        location\n                    \n                \n                \n                    \n                        Type :     IssueLocation\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-location/issue-location.component.ts:17\n                            \n                        \n                \n                    \n                        The location object that will be displayed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-location/issue-location.component.ts:15\n                            \n                        \n                \n                    \n                        The raw project ID.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToLocationDetails\n                        \n                    \n                \n            \n            \n                \ngoToLocationDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-location/issue-location.component.ts:27\n                \n            \n\n\n            \n                \n                    Navigates to the location's detail page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isComponent\n                        \n                    \n                \n            \n            \n                \nisComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-location/issue-location.component.ts:22\n                \n            \n\n\n            \n                \n                    Returns true if the location refers to a component.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {IssueLocation} from '../../../generated/graphql-dgql';\n\n/**\n * Displays an issue location.\n */\n@Component({\n  selector: 'app-issue-location',\n  styleUrls: ['./issue-location.component.scss'],\n  templateUrl: './issue-location.component.html'\n})\nexport class IssueLocationComponent {\n  /** The raw project ID. */\n  @Input() projectId: string;\n  /** The location object that will be displayed. */\n  @Input() location: IssueLocation;\n\n  constructor(private router: Router) {}\n\n  /** Returns true if the location refers to a component. */\n  isComponent(): boolean {\n    return (this.location as any).__typename === 'Component';\n  }\n\n  /** Navigates to the location's detail page. */\n  goToLocationDetails(): void {\n    if (this.isComponent()) {\n      this.router.navigate(['projects', this.projectId, 'component', this.location.id]);\n    } else {\n      this.router.navigate(['projects', this.projectId, 'interface', this.location.id]);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ location.name }}\n    \n  \n\n\n\n  \n    \n     {{ location.name }} \n  \n\n\n    \n\n    \n                \n                    ./issue-location.component.scss\n                \n                .dot {\n  height: 10px;\n  width: 10px;\n  background-color: black;\n  border-radius: 50%;\n  display: inline-block;\n}\n\n.interface-box {\n  background-color: rgb(0, 0, 0, 0.1);\n  border-radius: 5px;\n  text-align: center;\n  margin: 2px;\n  padding: 2px 4px 2px 4px;\n}\n\n.component-box {\n  background-color: rgb(9, 109, 217, 0.5);\n  border-color: black;\n  border-width: 2px;\n  border-style: solid;\n  border-radius: 5px 5px 5px 5px;\n  text-align: center;\n  margin: 2px;\n}\n\n.component-text {\n  font-size: 11pt;\n  font-family: \"Arial Narrow\", Arial, sans-serif;\n  color: black;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ location.name }}                 {{ location.name }}   '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueLocationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueNode.html":{"url":"interfaces/IssueNode.html","title":"interface - IssueNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IssueNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n            \n                Description\n            \n            \n                This file includes type definitions and creation functions (think constructors)\nfor nodes and edges that are added to the graph editor in order to visualize the project.\nSince the data that is stored with these differs based on what they represent (e.g.\ninterface vs component node) we give each their own type. We do this by extending\nthe Node class or the Edge class of the grapheditor. These classes are instantiated\nvia calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n\n            \n\n            \n                Extends\n            \n            \n                    Node\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            issueGroupContainer\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueGroupContainer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueGroupContainer:         IssueGroupContainerNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IssueGroupContainerNode\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode,\n  ComponentNode,\n  InterfaceNode,\n  IssueGroupContainerNode,\n  RelationEdge,\n  createComponentNode,\n  createInterfaceNode,\n  createIssueGroupContainerNode,\n  createIssueFolderNode,\n  createRelationEdge,\n  createConsumptionEdge,\n  createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set()\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0\n    }\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: []\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueStoreService.html":{"url":"injectables/IssueStoreService.html","title":"injectable - IssueStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue/issue-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service provides CRUD operations and linking for issues\nThe code for the mutations are automaticly generated by a code generator for the GraphQL schema\nbased on the definitions in the issue.graphql file in the same folder\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToLocation\n                            \n                            \n                                changeIssueCategory\n                            \n                            \n                                close\n                            \n                            \n                                commentIssue\n                            \n                            \n                                create\n                            \n                            \n                                deleteComment\n                            \n                            \n                                getAllTimelineItems\n                            \n                            \n                                getFullIssue\n                            \n                            \n                                link\n                            \n                            \n                                removeFromLocation\n                            \n                            \n                                rename\n                            \n                            \n                                reopen\n                            \n                            \n                                unlink\n                            \n                            \n                                updateComment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createIssue: CreateIssueGQL, linkIssue: LinkIssueGQL, getFullIssueQuery: GetIssueGQL, commentIssueMutation: CommentIssueGQL, deleteIssueCommentMutation: DeleteIssueCommentGQL, unlinkIssueMutation: UnlinkIssueGQL, closeIssueMutation: CloseIssueGQL, reopenIssueMutation: ReopenIssueGQL, renameIssueMutation: RenameIssueTitleGQL, changeIssueCategoryMutation: ChangeIssueCategoryGQL, addIssueToLocationMutation: AddIssueToLocationGQL, removeIssueFromLocationMutation: RemoveIssueFromLocationGQL, updateCommentMutation: UpdateCommentGQL, getAllTimelineItemsQuery: GetAllTimelineItemsGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/issue/issue-store.service.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createIssue\n                                                  \n                                                        \n                                                                    CreateIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        linkIssue\n                                                  \n                                                        \n                                                                    LinkIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getFullIssueQuery\n                                                  \n                                                        \n                                                                    GetIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commentIssueMutation\n                                                  \n                                                        \n                                                                    CommentIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteIssueCommentMutation\n                                                  \n                                                        \n                                                                    DeleteIssueCommentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unlinkIssueMutation\n                                                  \n                                                        \n                                                                    UnlinkIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        closeIssueMutation\n                                                  \n                                                        \n                                                                    CloseIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reopenIssueMutation\n                                                  \n                                                        \n                                                                    ReopenIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renameIssueMutation\n                                                  \n                                                        \n                                                                    RenameIssueTitleGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeIssueCategoryMutation\n                                                  \n                                                        \n                                                                    ChangeIssueCategoryGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addIssueToLocationMutation\n                                                  \n                                                        \n                                                                    AddIssueToLocationGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        removeIssueFromLocationMutation\n                                                  \n                                                        \n                                                                    RemoveIssueFromLocationGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateCommentMutation\n                                                  \n                                                        \n                                                                    UpdateCommentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getAllTimelineItemsQuery\n                                                  \n                                                        \n                                                                    GetAllTimelineItemsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToLocation\n                        \n                    \n                \n            \n            \n                \naddToLocation(addLocationInput: AddIssueToLocationInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    addLocationInput\n                                    \n                                            AddIssueToLocationInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeIssueCategory\n                        \n                    \n                \n            \n            \n                \nchangeIssueCategory(changeIssueCategoryInput: ChangeIssueCategoryInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changeIssueCategoryInput\n                                    \n                                            ChangeIssueCategoryInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose(closeInput: CloseIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    closeInput\n                                    \n                                            CloseIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commentIssue\n                        \n                    \n                \n            \n            \n                \ncommentIssue(commentIssueInput: AddIssueCommentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commentIssueInput\n                                    \n                                            AddIssueCommentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(issueInput: CreateIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    issueInput\n                                    \n                                            CreateIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteComment\n                        \n                    \n                \n            \n            \n                \ndeleteComment(deleteIssueCommentInput: DeleteIssueCommentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deleteIssueCommentInput\n                                    \n                                            DeleteIssueCommentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllTimelineItems\n                        \n                    \n                \n            \n            \n                \ngetAllTimelineItems(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFullIssue\n                        \n                    \n                \n            \n            \n                \ngetFullIssue(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        link\n                        \n                    \n                \n            \n            \n                \nlink(linkIssueInput: LinkIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    linkIssueInput\n                                    \n                                            LinkIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromLocation\n                        \n                    \n                \n            \n            \n                \nremoveFromLocation(removeLocationInput: RemoveIssueFromLocationInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    removeLocationInput\n                                    \n                                            RemoveIssueFromLocationInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rename\n                        \n                    \n                \n            \n            \n                \nrename(renameInput: RenameIssueTitleInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    renameInput\n                                    \n                                            RenameIssueTitleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reopen\n                        \n                    \n                \n            \n            \n                \nreopen(reopenInput: ReopenIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reopenInput\n                                    \n                                            ReopenIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlink\n                        \n                    \n                \n            \n            \n                \nunlink(unlinkIssueInput: UnlinkIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unlinkIssueInput\n                                    \n                                            UnlinkIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateComment\n                        \n                    \n                \n            \n            \n                \nupdateComment(updateCommentInput: UpdateCommentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateCommentInput\n                                    \n                                            UpdateCommentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {map} from 'rxjs/operators';\nimport {\n  AddIssueCommentInput,\n  CloseIssueGQL,\n  CommentIssueGQL,\n  CreateIssueGQL,\n  CreateIssueInput,\n  GetIssueGQL,\n  GetIssueQuery,\n  LinkIssueGQL,\n  LinkIssueInput,\n  UnlinkIssueGQL,\n  CloseIssueInput,\n  UnlinkIssueInput,\n  ReopenIssueGQL,\n  ReopenIssueInput,\n  RenameIssueTitleInput,\n  RenameIssueTitleGQL,\n  AddIssueToLocationInput,\n  RemoveIssueFromLocationInput,\n  AddIssueToLocationGQL,\n  RemoveIssueFromLocationGQL,\n  DeleteIssueCommentInput,\n  DeleteIssueCommentGQL,\n  UpdateCommentInput,\n  UpdateCommentGQL,\n  GetAllTimelineItemsGQL,\n  GetAllTimelineItemsQuery,\n  ChangeIssueCategoryGQL,\n  ChangeIssueCategoryInput\n} from 'src/generated/graphql';\nimport {Observable} from 'rxjs';\n/**\n * This service provides CRUD operations and linking for issues\n * The code for the mutations are automaticly generated by a code generator for the GraphQL schema\n * based on the definitions in the issue.graphql file in the same folder\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueStoreService {\n  constructor(\n    private createIssue: CreateIssueGQL,\n    private linkIssue: LinkIssueGQL,\n    private getFullIssueQuery: GetIssueGQL,\n    private commentIssueMutation: CommentIssueGQL,\n    private deleteIssueCommentMutation: DeleteIssueCommentGQL,\n    private unlinkIssueMutation: UnlinkIssueGQL,\n    private closeIssueMutation: CloseIssueGQL,\n    private reopenIssueMutation: ReopenIssueGQL,\n    private renameIssueMutation: RenameIssueTitleGQL,\n    private changeIssueCategoryMutation: ChangeIssueCategoryGQL,\n    private addIssueToLocationMutation: AddIssueToLocationGQL,\n    private removeIssueFromLocationMutation: RemoveIssueFromLocationGQL,\n    private updateCommentMutation: UpdateCommentGQL,\n    private getAllTimelineItemsQuery: GetAllTimelineItemsGQL\n  ) {}\n\n  create(issueInput: CreateIssueInput) {\n    return this.createIssue.mutate({input: issueInput});\n  }\n\n  link(linkIssueInput: LinkIssueInput) {\n    return this.linkIssue.mutate({input: linkIssueInput});\n  }\n\n  unlink(unlinkIssueInput: UnlinkIssueInput) {\n    return this.unlinkIssueMutation.mutate({input: unlinkIssueInput});\n  }\n\n  commentIssue(commentIssueInput: AddIssueCommentInput) {\n    return this.commentIssueMutation.mutate({input: commentIssueInput});\n  }\n\n  deleteComment(deleteIssueCommentInput: DeleteIssueCommentInput) {\n    return this.deleteIssueCommentMutation.mutate({\n      input: deleteIssueCommentInput\n    });\n  }\n\n  close(closeInput: CloseIssueInput) {\n    return this.closeIssueMutation.mutate({input: closeInput});\n  }\n\n  reopen(reopenInput: ReopenIssueInput) {\n    return this.reopenIssueMutation.mutate({input: reopenInput});\n  }\n\n  rename(renameInput: RenameIssueTitleInput) {\n    return this.renameIssueMutation.mutate({input: renameInput});\n  }\n\n  changeIssueCategory(changeIssueCategoryInput: ChangeIssueCategoryInput) {\n    return this.changeIssueCategoryMutation.mutate({\n      input: changeIssueCategoryInput\n    });\n  }\n\n  addToLocation(addLocationInput: AddIssueToLocationInput) {\n    return this.addIssueToLocationMutation.mutate({input: addLocationInput});\n  }\n\n  removeFromLocation(removeLocationInput: RemoveIssueFromLocationInput) {\n    return this.removeIssueFromLocationMutation.mutate({\n      input: removeLocationInput\n    });\n  }\n\n  updateComment(updateCommentInput: UpdateCommentInput) {\n    return this.updateCommentMutation.mutate({input: updateCommentInput});\n  }\n\n  getFullIssue(id: string): Observable {\n    return this.getFullIssueQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getAllTimelineItems(id: string): Observable {\n    return this.getAllTimelineItemsQuery.fetch({input: id}).pipe(map(({data}) => data));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ItemDirective.html":{"url":"directives/ItemDirective.html","title":"directive - ItemDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ItemDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/item.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Used in various components as an Angular structural directive to define item templates.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appItem]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Directive} from '@angular/core';\n\n/** Used in various components as an Angular structural directive to define item templates. */\n@Directive({\n  selector: '[appItem]'\n})\nexport class ItemDirective {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LabelSearchComponent.html":{"url":"components/LabelSearchComponent.html","title":"component - LabelSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LabelSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/graphs/label-search/label-search.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is responsible for the display of the search bar above the graph.\nIt allows for filtering issues by multiple labels and text fragments.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-label-search\n            \n\n            \n                styleUrls\n                ./label-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./label-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filterSelection$\n                            \n                            \n                                labels$\n                            \n                            \n                                labelsInput$\n                            \n                            \n                                labelsLoading\n                            \n                            \n                                selectedLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitSelectedLabels\n                            \n                            \n                                    Private\n                                loadLabels\n                            \n                            \n                                trackByFn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(labelStore: LabelStoreService, ss: StateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/label-search/label-search.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        labelStore\n                                                  \n                                                        \n                                                                        LabelStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ss\n                                                  \n                                                        \n                                                                        StateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emitSelectedLabels\n                        \n                    \n                \n            \n            \n                \nemitSelectedLabels()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/label-search/label-search.component.ts:40\n                \n            \n\n\n            \n                \n                    Emit value representing label and text fragments in the search bar via this.filterSelection$\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadLabels\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLabels()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/label-search/label-search.component.ts:51\n                \n            \n\n\n            \n                \n                    Load all labels from backend that match the currently typed in ng-select element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByFn\n                        \n                    \n                \n            \n            \n                \ntrackByFn(item: FilterLabel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/label-search/label-search.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                FilterLabel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filterSelection$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({\n    labels: [],\n    texts: []\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labels$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelsInput$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelsLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterElement[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {concat, of, Subject, Observable, BehaviorSubject} from 'rxjs';\nimport {catchError, distinctUntilChanged, switchMap, tap} from 'rxjs/operators';\nimport {FilterLabel, isFilterLabel, LabelStoreService} from '../../data/label/label-store.service';\nimport {StateService} from '../../state.service';\n\n/**\n * This component is responsible for the display of the search bar above the graph.\n * It allows for filtering issues by multiple labels and text fragments.\n */\n@Component({\n  selector: 'app-label-search',\n  templateUrl: './label-search.component.html',\n  styleUrls: ['./label-search.component.scss']\n})\nexport class LabelSearchComponent implements OnInit {\n  public filterSelection$ = new BehaviorSubject({\n    labels: [],\n    texts: []\n  });\n\n  labels$: Observable;\n  labelsLoading = false;\n  labelsInput$ = new Subject();\n  selectedLabels: FilterElement[] = [];\n\n  constructor(private labelStore: LabelStoreService, private ss: StateService) {}\n\n  ngOnInit() {\n    this.loadLabels();\n  }\n\n  trackByFn(item: FilterLabel) {\n    return item.id;\n  }\n\n  /**\n   * Emit value representing label and text fragments in the search bar via this.filterSelection$\n   */\n  emitSelectedLabels() {\n    const selection: FilterSelection = {texts: [], labels: []};\n    // find out which elements in search bar correspond to an existing label on the backend and which to a text fragment\n    selection.texts = this.selectedLabels.filter((item) => !isFilterLabel(item)).map((item) => item.name);\n    selection.labels = this.selectedLabels.filter((label) => isFilterLabel(label)) as FilterLabel[];\n    this.filterSelection$.next(selection);\n  }\n\n  /**\n   * Load all labels from backend that match the currently typed in ng-select element\n   */\n  private loadLabels() {\n    this.labels$ = concat(\n      of([]), // default items\n      this.labelsInput$.pipe(\n        distinctUntilChanged(),\n        tap(() => (this.labelsLoading = true)),\n        switchMap((term) =>\n          this.labelStore.getMatchingLabels(this.ss.state.project.node.id, term).pipe(\n            catchError(() => of([])), // empty list on error\n            tap(() => (this.labelsLoading = false))\n          )\n        )\n      )\n    );\n  }\n}\n\n/**\n * The bar can contain elements standing for labels and elements for text fragments.\n */\ntype FilterElement = TextFragment | FilterLabel;\n\ninterface TextFragment {\n  name: string;\n}\n\nexport interface FilterSelection {\n  texts: string[];\n  labels: FilterLabel[];\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./label-search.component.scss\n                \n                .ng-select.label-select ::ng-deep .ng-select-container {\n  min-height: 0;\n}\n\n.ng-select.label-select ::ng-deep .ng-value-container {\n  border-top: 7px solid transparent;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'LabelSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabelStoreService.html":{"url":"injectables/LabelStoreService.html","title":"injectable - LabelStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LabelStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/label/label-store.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAllFilter\n                            \n                            \n                                getMatchingLabels\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(getLabelsGQL: GetLabelsGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/label/label-store.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getLabelsGQL\n                                                  \n                                                        \n                                                                    GetLabelsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getAllFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllFilter(projectId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/label/label-store.service.ts:32\n                \n            \n\n\n            \n                \n                    Retrieve all labels from backend\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of current project\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMatchingLabels\n                        \n                    \n                \n            \n            \n                \ngetMatchingLabels(projectId: string, term: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/label/label-store.service.ts:19\n                \n            \n\n\n            \n                \n                    Retrieve labels matching term.\nwhoose name contains term\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        id of current project\n\n                                    \n                                \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        coming from search bar above graph\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable emitting objects standing for labels that exist on backend\nwhoose name contains term\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {map} from 'rxjs/operators';\nimport {GetLabelsGQL, Label} from '../../../generated/graphql';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LabelStoreService {\n  constructor(private getLabelsGQL: GetLabelsGQL) {}\n\n  /**\n   * Retrieve labels matching term.\n   * @param projectId id of current project\n   * @param term coming from search bar above graph\n   * @returns observable emitting objects standing for labels that exist on backend\n   * whoose name contains term\n   */\n  getMatchingLabels(projectId: string, term: string = null): Observable {\n    if (!term) {\n      return this.getAllFilter(projectId);\n    }\n    return this.getAllFilter(projectId).pipe(\n      map((items) => items.filter((x) => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1))\n    );\n  }\n\n  /**\n   * Retrieve all labels from backend\n   * @param projectId id of current project\n   */\n  private getAllFilter(projectId: string): Observable {\n    return this.getLabelsGQL.fetch({projectId}).pipe(map(({data}) => data.node.labels.nodes));\n  }\n}\n\nexport type FilterLabel = Pick;\n\nexport function isFilterLabel(label: any) {\n  return 'id' in label && 'name' in label && 'color' in label;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LayoutNode.html":{"url":"classes/LayoutNode.html","title":"class - LayoutNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LayoutNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/automatic-layout.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is an abstract representation of a node in a graph\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                connectedTo\n                            \n                            \n                                    Public\n                                fixed\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Static\n                                    Readonly\n                                MAX_DISTANCE_CONNECTED\n                            \n                            \n                                    Static\n                                    Readonly\n                                MIN_DISTANCE_CONNECTED\n                            \n                            \n                                    Static\n                                    Readonly\n                                MIN_DISTANCE_EDGE\n                            \n                            \n                                    Static\n                                    Readonly\n                                MIN_DISTANCE_NOT_CONNECTED\n                            \n                            \n                                    Readonly\n                                padding\n                            \n                            \n                                    Static\n                                    Readonly\n                                PADDING_COMPONENT\n                            \n                            \n                                    Static\n                                    Readonly\n                                PADDING_INTERFACE\n                            \n                            \n                                    Public\n                                position\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calculateMovement\n                            \n                            \n                                    Public\n                                connectTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string | number, positionX: number, positionY: number, nodeType: NodeType)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/automatic-layout.ts:175\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                    string | number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        positionX\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        positionY\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nodeType\n                                                  \n                                                        \n                                                                        NodeType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        connectedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:172\n                        \n                    \n\n            \n                \n                    Set of edges this node is connected to\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fixed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:169\n                        \n                    \n\n            \n                \n                    If true, this node will not move under any circumstance\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:163\n                        \n                    \n\n            \n                \n                    Node id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MAX_DISTANCE_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 80\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:148\n                        \n                    \n\n            \n                \n                    The maximum spacing between two nodes if they are connected by an edge\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MIN_DISTANCE_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:151\n                        \n                    \n\n            \n                \n                    The minimum spacing between two nodes if they are connected by an edge\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MIN_DISTANCE_EDGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:154\n                        \n                    \n\n            \n                \n                    The minimum spacing between a node and an edge\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MIN_DISTANCE_NOT_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 80\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:145\n                        \n                    \n\n            \n                \n                    The minimum spacing between two nodes if they are not connected by an edge\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        padding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:175\n                        \n                    \n\n            \n                \n                    Padding to be added to this node\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        PADDING_COMPONENT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:157\n                        \n                    \n\n            \n                \n                    The padding around a component node\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        PADDING_INTERFACE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:160\n                        \n                    \n\n            \n                \n                    The padding around an interface node\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vector\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:166\n                        \n                    \n\n            \n                \n                    Position of this node\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        calculateMovement\n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateMovement(allNodes: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:197\n                \n            \n\n\n            \n                \n                    Calculate the movement direction that this node should move in, based on all other nodes around it\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    allNodes\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        All nodes, can include this node as well\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        The direction in which this node wants to travel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        connectTo\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectTo(other: LayoutNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:188\n                \n            \n\n\n            \n                \n                    Create an edge between this node and another node.\nDoes not create a connection from the other node to this node!\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                LayoutNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other node\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {NodeType} from '@app/graphs/issue-graph/issue-graph-nodes';\n\n/**\n * A simple 2D vector class.\n * The value of this vector is essentially immutable, every operation returns a new vector!\n */\nclass Vector {\n  public x: number;\n  public y: number;\n\n  /**\n   * Vector constructor\n   * @param x X component, 0 by default\n   * @param y Y component, 0 by default\n   */\n  constructor(x: number = 0, y: number = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Check if the vector pointing from `source` to `point` is pointing away more than 90 degrees to the vector pointing\n   * from the `source` to the `target`.\n   * @param source The source point, as a vector\n   * @param target The target point, as a vector\n   * @param point The point to check, as a vector\n   * @return dot(target - source, point - source)  = new Set();\n\n  /** Padding to be added to this node */\n  readonly padding: number;\n\n  constructor(id: string | number, positionX: number, positionY: number, nodeType: NodeType) {\n    this.id = id;\n    this.padding = nodeType === NodeType.Component ? LayoutNode.PADDING_COMPONENT : LayoutNode.PADDING_INTERFACE;\n    this.position = new Vector(positionX, positionY);\n  }\n\n  /**\n   * Create an edge between this node and another node.\n   * Does **not** create a connection from the other node to this node!\n   * @param other The other node\n   */\n  public connectTo(other: LayoutNode): void {\n    this.connectedTo.add(other);\n  }\n\n  /**\n   * Calculate the movement direction that this node should move in, based on all other nodes around it\n   * @param allNodes All nodes, can include this node as well\n   * @returns The direction in which this node wants to travel\n   */\n  public calculateMovement(allNodes: Array): Vector {\n    if (this.fixed) {\n      return new Vector();\n    }\n\n    // Total force acting on this node\n    const result = new Vector();\n\n    // Keeps track of edges already visited\n    const otherNodesVisited = new Set();\n\n    for (const otherNode of allNodes) {\n      // Iterate over all other nodes\n      if (otherNode.id === this.id) {\n        continue;\n      }\n\n      // If both nodes are at an identical position, add a small randomized offset to this nodes position\n      let towardsOther = otherNode.position.subtract(this.position);\n      if (towardsOther.isZero()) {\n        this.position.x += Math.random() - 0.5;\n        this.position.y += Math.random() - 0.5;\n        towardsOther = otherNode.position.subtract(this.position);\n      }\n\n      const pad = this.padding + otherNode.padding;\n      const distance = Math.max(1, towardsOther.length() - pad);\n      towardsOther = towardsOther.scale(1 / distance);\n\n      // Move this node towards connected nodes, and away from non-connected nodes.\n      // Also make sure that a minimum spacing between nodes exists, regardless of connection.\n      let scale = 0;\n      if (this.connectedTo.has(otherNode)) {\n        if (distance ): void {\n  if (nodes.length === 0) {\n    return;\n  }\n\n  const directions = new Array(nodes.length);\n  // Fix an arbitrary node in place to prevent the graph from flying away\n  const firstNode = nodes[0];\n  firstNode.fixed = true;\n\n  // FIXME: This loop should stop early if no more (significant) changes happen\n  for (let v = 0; v \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LinkedIssueItemComponent.html":{"url":"components/LinkedIssueItemComponent.html","title":"component - LinkedIssueItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LinkedIssueItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/linked-issue-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays a linked issue in a list.\nBy default, only information from #issueStub will be displayed. When the user expands\nthe accordion card, the issue's body will be loaded separately.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-detail-linked-issue-item\n            \n\n            \n                styleUrls\n                linked-issue-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                linked-issue-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fullIssueLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                didOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issueStub\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/linked-issue-item.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issueStub\n                    \n                \n                \n                    \n                        Type :     Issue\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/linked-issue-item.component.ts:24\n                            \n                        \n                \n                    \n                        Cursory information about the linked issue.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/linked-issue-item.component.ts:22\n                            \n                        \n                \n                    \n                        The raw project ID.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        didOpen\n                        \n                    \n                \n            \n            \n                \ndidOpen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/linked-issue-item.component.ts:40\n                \n            \n\n\n            \n                \n                    Event handler for when the accordion is opened. Loads the full issue if it hasn't been loaded yet.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fullIssueLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/linked-issue-item.component.ts:27\n                        \n                    \n\n            \n                \n                    Link to the full issue page.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {Issue} from '../../generated/graphql-dgql';\nimport {DataNode} from '@app/data-dgql/query';\nimport DataService from '@app/data-dgql';\nimport {NodeType} from '@app/data-dgql/id';\nimport {Subscription} from 'rxjs';\nimport {Router} from '@angular/router';\n\n/**\n * Displays a linked issue in a list.\n *\n * By default, only information from {@link #issueStub} will be displayed. When the user expands\n * the accordion card, the issue's body will be loaded separately.\n */\n@Component({\n  selector: 'app-issue-detail-linked-issue-item',\n  templateUrl: 'linked-issue-item.component.html',\n  styleUrls: ['linked-issue-item.component.scss']\n})\nexport class LinkedIssueItemComponent implements OnInit, OnDestroy {\n  /** The raw project ID. */\n  @Input() projectId: string;\n  /** Cursory information about the linked issue. */\n  @Input() issueStub: Issue;\n\n  /** Link to the full issue page. */\n  public fullIssueLink: string;\n  /** @ignore */\n  public fullIssue?: DataNode;\n  /** @ignore */\n  private fullIssueSub: Subscription;\n\n  constructor(private dataService: DataService, private router: Router) {}\n\n  ngOnInit() {\n    this.fullIssueLink = this.router.serializeUrl(this.router.createUrlTree(['/projects', this.projectId, 'issues', this.issueStub.id]));\n  }\n\n  /** Event handler for when the accordion is opened. Loads the full issue if it hasn't been loaded yet. */\n  didOpen() {\n    if (!this.fullIssue) {\n      this.fullIssue = this.dataService.getNode({\n        type: NodeType.Issue,\n        id: this.issueStub.id\n      });\n      this.fullIssueSub = this.fullIssue.subscribe();\n    }\n  }\n\n  ngOnDestroy() {\n    this.fullIssueSub?.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n     {{ issueStub.title }} \n    \n      {{ component.name }}\n    \n  \n  Loading…\n  \n  \n    View Issue chevron_right\n  \n\n\n    \n\n    \n                \n                    linked-issue-item.component.scss\n                \n                .linked-issue-components {\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  .linked-issue-component {\n    &::after {\n      content: \",\";\n      margin-right: 0.3em;\n    }\n    &:last-child::after {\n      content: none;\n    }\n  }\n}\n\n.body-loading {\n  min-height: 56px; // some sort of body height so that the animation doesn't glitch out *too* badly\n  text-align: center;\n  opacity: 0.7;\n}\n\n.issue-buttons {\n  text-align: right;\n  margin-top: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ issueStub.title }}           {{ component.name }}        Loading…        View Issue chevron_right  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'LinkedIssueItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListId.html":{"url":"interfaces/ListId.html","title":"interface - ListId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/id.ts\n        \n\n\n            \n                Description\n            \n            \n                Uniquely identifies a list of items.\nLists are always attached to a specific node.\nFor example, a list of issues may be attached to a project or a component.\nLists that do not have a specific parent node in the backend API are attached to the\nROOT_NODE.\nExamples\nThe list of all issues on a component:\n{ node: { type: NodeType.Component, id: '...' }, type: ListType.Issues }The list of linked issues on an issue:\n{ node: { type: NodeType.Issue, id: '...' }, type: ListType.LinkedIssues }\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            node\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node:         NodeId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The parent node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ListType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of list.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type NodeIdEnc = string;\nexport type ListIdEnc = string;\n\n/**\n * Backend API node types.\n * The names should match the respective value of `__typename` in the GraphQL data for any given node.\n */\nexport enum NodeType {\n  Root,\n  Component,\n  ComponentInterface,\n  Issue,\n  IssueTimelineItem,\n  Label,\n  Project,\n  Artifact,\n  User,\n  IssueComment\n}\n\n/**\n * Returns the NodeType for a given `__typename` value.\n * `__typename` is a tag found in GraphQL data.\n *\n * @param typename the __typename value\n */\nexport function nodeTypeFromTypename(typename: string) {\n  return NodeType[typename] || null;\n}\n\n/**\n * Uniquely identifies a node.\n *\n * Node IDs are composed of a {@link #type} and an {@link #id}.\n * The {@link #id} corresponds to the ID used in the backend API.\n */\nexport interface NodeId {\n  /**\n   * The type of this node.\n   */\n  type: NodeType;\n  /**\n   * The ID of this node. This is the same as the node ID in the backend API.\n   */\n  id: string;\n}\n\n/**\n * See {@link encodeNodeId}.\n * @param id the encoded node ID\n */\nexport function decodeNodeId(id: NodeIdEnc): NodeId {\n  if (!id) {\n    throw new Error('Could not decode node ID: no id given');\n  }\n  const parts = id.split('/');\n  return {type: NodeType[parts[0]], id: parts[1]};\n}\n\n/**\n * Encodes a {@link NodeId} into a string.\n * This is due to a limitation in Javascript where objects cannot be `==` compared with each other\n * apart from identity. Encoding them as a string allows `NodeId`s to be used as object or `Map` keys.\n *\n * @param nd the node ID\n */\nexport function encodeNodeId(nd: NodeId): NodeIdEnc {\n  return NodeType[nd.type] + '/' + nd.id;\n}\n\n/** The ID of the root node. */\nexport const ROOT_NODE = {type: NodeType.Root, id: ''};\n\n/** The special ID of the current user node. */\nexport const CURRENT_USER_NODE = {type: NodeType.User, id: 'self'};\n\n/**\n * All list types represent their respective list queries in the backend API.\n */\nexport enum ListType {\n  Projects,\n  Components,\n  ComponentInterfaces,\n  Issues,\n  IssuesOnLocation,\n  IssueLocations,\n  TimelineItems,\n  Labels,\n  Artifacts,\n  Participants,\n  Assignees,\n  SearchUsers,\n  LinkedIssues,\n  LinkedByIssues\n}\n\n/**\n * Uniquely identifies a list of items.\n *\n * Lists are always attached to a specific node.\n * For example, a list of issues may be attached to a project or a component.\n *\n * Lists that do not have a specific parent node in the backend API are attached to the\n * {@link ROOT_NODE}.\n *\n * #### Examples\n * The list of all issues on a component:\n * ```ts\n * { node: { type: NodeType.Component, id: '...' }, type: ListType.Issues }\n * ```\n *\n * The list of linked issues on an issue:\n * ```ts\n * { node: { type: NodeType.Issue, id: '...' }, type: ListType.LinkedIssues }\n * ```\n */\nexport interface ListId {\n  /**\n   * The parent node.\n   */\n  node: NodeId;\n  /**\n   * The type of list.\n   */\n  type: ListType;\n}\n\n/** List cursor and filter. */\nexport interface ListParams {\n  /** Cursor node. */\n  cursor?: NodeId;\n  /** Max number of items to load. */\n  count: number;\n  /** Whether to look forward from the cursor, or backwards. */\n  forward: boolean;\n  /** The filter. */\n  filter?: F;\n}\n\n/**\n * See {@link decodeListId}.\n * @param id an encoded List ID\n */\nexport function decodeListId(id: ListIdEnc): ListId {\n  if (!id) {\n    throw new Error('Could not decode list ID: no id given');\n  }\n  const parts = id.split('#');\n  return {node: decodeNodeId(parts[0]), type: ListType[parts[1]]};\n}\n\n/**\n * Encodes a List ID into a string.\n *\n * See {@link encodeNodeId} for more details.\n * @param ld a List ID\n */\nexport function encodeListId(ld: ListId): ListIdEnc {\n  return encodeNodeId(ld.node) + '#' + ListType[ld.type];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListParams.html":{"url":"interfaces/ListParams.html","title":"interface - ListParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/id.ts\n        \n\n\n            \n                Description\n            \n            \n                List cursor and filter.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cursor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filter\n                                        \n                                \n                                \n                                        \n                                            forward\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Max number of items to load.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cursor:         NodeId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Cursor node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter:     F\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     F\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The filter.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forward\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forward:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to look forward from the cursor, or backwards.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type NodeIdEnc = string;\nexport type ListIdEnc = string;\n\n/**\n * Backend API node types.\n * The names should match the respective value of `__typename` in the GraphQL data for any given node.\n */\nexport enum NodeType {\n  Root,\n  Component,\n  ComponentInterface,\n  Issue,\n  IssueTimelineItem,\n  Label,\n  Project,\n  Artifact,\n  User,\n  IssueComment\n}\n\n/**\n * Returns the NodeType for a given `__typename` value.\n * `__typename` is a tag found in GraphQL data.\n *\n * @param typename the __typename value\n */\nexport function nodeTypeFromTypename(typename: string) {\n  return NodeType[typename] || null;\n}\n\n/**\n * Uniquely identifies a node.\n *\n * Node IDs are composed of a {@link #type} and an {@link #id}.\n * The {@link #id} corresponds to the ID used in the backend API.\n */\nexport interface NodeId {\n  /**\n   * The type of this node.\n   */\n  type: NodeType;\n  /**\n   * The ID of this node. This is the same as the node ID in the backend API.\n   */\n  id: string;\n}\n\n/**\n * See {@link encodeNodeId}.\n * @param id the encoded node ID\n */\nexport function decodeNodeId(id: NodeIdEnc): NodeId {\n  if (!id) {\n    throw new Error('Could not decode node ID: no id given');\n  }\n  const parts = id.split('/');\n  return {type: NodeType[parts[0]], id: parts[1]};\n}\n\n/**\n * Encodes a {@link NodeId} into a string.\n * This is due to a limitation in Javascript where objects cannot be `==` compared with each other\n * apart from identity. Encoding them as a string allows `NodeId`s to be used as object or `Map` keys.\n *\n * @param nd the node ID\n */\nexport function encodeNodeId(nd: NodeId): NodeIdEnc {\n  return NodeType[nd.type] + '/' + nd.id;\n}\n\n/** The ID of the root node. */\nexport const ROOT_NODE = {type: NodeType.Root, id: ''};\n\n/** The special ID of the current user node. */\nexport const CURRENT_USER_NODE = {type: NodeType.User, id: 'self'};\n\n/**\n * All list types represent their respective list queries in the backend API.\n */\nexport enum ListType {\n  Projects,\n  Components,\n  ComponentInterfaces,\n  Issues,\n  IssuesOnLocation,\n  IssueLocations,\n  TimelineItems,\n  Labels,\n  Artifacts,\n  Participants,\n  Assignees,\n  SearchUsers,\n  LinkedIssues,\n  LinkedByIssues\n}\n\n/**\n * Uniquely identifies a list of items.\n *\n * Lists are always attached to a specific node.\n * For example, a list of issues may be attached to a project or a component.\n *\n * Lists that do not have a specific parent node in the backend API are attached to the\n * {@link ROOT_NODE}.\n *\n * #### Examples\n * The list of all issues on a component:\n * ```ts\n * { node: { type: NodeType.Component, id: '...' }, type: ListType.Issues }\n * ```\n *\n * The list of linked issues on an issue:\n * ```ts\n * { node: { type: NodeType.Issue, id: '...' }, type: ListType.LinkedIssues }\n * ```\n */\nexport interface ListId {\n  /**\n   * The parent node.\n   */\n  node: NodeId;\n  /**\n   * The type of list.\n   */\n  type: ListType;\n}\n\n/** List cursor and filter. */\nexport interface ListParams {\n  /** Cursor node. */\n  cursor?: NodeId;\n  /** Max number of items to load. */\n  count: number;\n  /** Whether to look forward from the cursor, or backwards. */\n  forward: boolean;\n  /** The filter. */\n  filter?: F;\n}\n\n/**\n * See {@link decodeListId}.\n * @param id an encoded List ID\n */\nexport function decodeListId(id: ListIdEnc): ListId {\n  if (!id) {\n    throw new Error('Could not decode list ID: no id given');\n  }\n  const parts = id.split('#');\n  return {node: decodeNodeId(parts[0]), type: ListType[parts[1]]};\n}\n\n/**\n * Encodes a List ID into a string.\n *\n * See {@link encodeNodeId} for more details.\n * @param ld a List ID\n */\nexport function encodeListId(ld: ListId): ListIdEnc {\n  return encodeNodeId(ld.node) + '#' + ListType[ld.type];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is responsible for the login screen. It gather username and password\nand tries to login the user via the AuthenticationService.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                invalidCredentials\n                            \n                            \n                                isLoading\n                            \n                            \n                                returnUrl\n                            \n                            \n                                unknownError\n                            \n                            \n                                validateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, authService: AuthenticationService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:29\n                \n            \n\n\n            \n                \n                    Gather username and password from form and try login via AuthenticationService.\nIf successfull redirect to root url or to the redirectUrl the user originally wanted to access.\nIf login fails, set this.invalidCredentials so that gui shows error.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        invalidCredentials\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unknownError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {first} from 'rxjs/operators';\nimport {AuthenticationService} from '../auth/authentication.service';\nimport {HttpErrorResponse} from '@angular/common/http';\n\n/**\n * This component is responsible for the login screen. It gather username and password\n * and tries to login the user via the AuthenticationService.\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  validateForm!: FormGroup;\n  returnUrl: string;\n  isLoading = false;\n  invalidCredentials = false;\n  unknownError = false;\n\n  /**\n   * Gather username and password from form and try login via AuthenticationService.\n   * If successfull redirect to root url or to the redirectUrl the user originally wanted to access.\n   * If login fails, set this.invalidCredentials so that gui shows error.\n   */\n  submitForm(): void {\n    Object.keys(this.validateForm.controls).forEach((controlKey) => {\n      this.validateForm.controls[controlKey].markAsDirty();\n      this.validateForm.controls[controlKey].updateValueAndValidity();\n    });\n    this.isLoading = true;\n    this.authService\n      .login(this.validateForm.controls.userName.value, this.validateForm.controls.password.value)\n      .pipe(first())\n      .subscribe(\n        (data) => {\n          this.validateForm.controls.password.reset();\n          this.isLoading = false;\n          this.router.navigate([this.returnUrl]);\n        },\n        (error: HttpErrorResponse) => {\n          this.validateForm.controls.password.reset();\n          this.isLoading = false;\n          this.invalidCredentials = error.status === 401;\n          this.unknownError = error.status === 0;\n        }\n      );\n  }\n\n  constructor(private route: ActivatedRoute, private router: Router, private authService: AuthenticationService, private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.validateForm = this.fb.group({\n      userName: [null, [Validators.required]],\n      password: [null, [Validators.required]]\n    });\n    this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/';\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n      \n      Login\n    \n    \n      \n        \n          \n            \n          \n        \n      \n      \n        \n          \n            \n          \n        \n      \n      \n      \n      \n        Log in\n      \n      Or register!\n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .login-form {\n  max-width: 300px;\n  margin: auto;\n}\n\n.login-form-margin {\n  margin-bottom: 16px;\n}\n\n.login-form-forgot {\n  float: right;\n}\n\n.login-form-button {\n  width: 100%;\n}\n\n.error-message {\n  margin-bottom: 24px;\n}\n\n#register-link {\n  font-size: larger;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  Login                                                                                                                                                          Log in            Or register!      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MarkdownEditorComponent.html":{"url":"components/MarkdownEditorComponent.html","title":"component - MarkdownEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MarkdownEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/markdown/markdown-editor/markdown-editor.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component contains a monaco markdown editor with syntax highlighting\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-markdown-editor\n            \n\n            \n                styleUrls\n                ./markdown-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./markdown-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editorOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                codeDidChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                codeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        code\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/markdown/markdown-editor/markdown-editor.component.ts:19\n                            \n                        \n                \n                    \n                        This code is initially displayed in the editor\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        codeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/markdown/markdown-editor/markdown-editor.component.ts:23\n                            \n                        \n                \n                    \n                        Necessary for communicating changes to the parent when changes have been made to the code in the editor.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        codeDidChange\n                        \n                    \n                \n            \n            \n                \ncodeDidChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/markdown/markdown-editor/markdown-editor.component.ts:28\n                \n            \n\n\n            \n                \n                    Send changes in the editor to the parent component over the EventEmitter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editorOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {theme: 'vs', language: 'markdown'}\n                    \n                \n                    \n                        \n                                Defined in src/app/markdown/markdown-editor/markdown-editor.component.ts:15\n                        \n                    \n\n            \n                \n                    necessary options for usage of ngx-monaco-editor\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n/**\n * This component contains a monaco markdown editor with syntax highlighting\n */\n@Component({\n  selector: 'app-markdown-editor',\n  templateUrl: './markdown-editor.component.html',\n  styleUrls: ['./markdown-editor.component.scss']\n})\nexport class MarkdownEditorComponent {\n  /**\n   * necessary options for usage of ngx-monaco-editor\n   */\n  editorOptions = {theme: 'vs', language: 'markdown'};\n  /**\n   * This code is initially displayed in the editor\n   */\n  @Input() code: string;\n  /**\n   * Necessary for communicating changes to the parent when changes have been made to the code in the editor.\n   */\n  @Output() codeChange = new EventEmitter();\n\n  /**\n   * Send changes in the editor to the parent component over the EventEmitter\n   */\n  codeDidChange() {\n    this.codeChange.emit(this.code);\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./markdown-editor.component.scss\n                \n                .editorContainer {\n  margin-bottom: 20px;\n  border-color: #e6e6e6;\n  border-style: solid;\n  border-width: 1px;\n  border-radius: 6px;\n}\n\n.preview {\n  white-space: pre-wrap;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'MarkdownEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MarkdownPreviewComponent.html":{"url":"components/MarkdownPreviewComponent.html","title":"component - MarkdownPreviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MarkdownPreviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/markdown/markdown-preview/markdown-preview.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component renders and displays markdown\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                preserveWhitespaces\n                true\n            \n\n\n\n            \n                selector\n                app-markdown-preview\n            \n\n            \n                styleUrls\n                ./markdown-preview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./markdown-preview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayedCode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayedCode\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/markdown/markdown-preview/markdown-preview.component.ts:16\n                            \n                        \n                \n                    \n                        The markdown code as a string which will be rendered\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\n/**\n * This component renders and displays markdown\n */\n@Component({\n  selector: 'app-markdown-preview',\n  templateUrl: './markdown-preview.component.html',\n  styleUrls: ['./markdown-preview.component.scss'],\n  preserveWhitespaces: true\n})\nexport class MarkdownPreviewComponent implements OnInit {\n  /**\n   * The markdown code as a string which will be rendered\n   */\n  @Input() displayedCode: string;\n\n  /**\n   * @ignore (Keyword for compodoc documentation generator)\n   */\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./markdown-preview.component.scss\n                \n                :host {\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'MarkdownPreviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MultiSourceList.html":{"url":"classes/MultiSourceList.html","title":"class - MultiSourceList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MultiSourceList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/set-editor/set-editor-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasMore\n                            \n                            \n                                    Public\n                                limit\n                            \n                            \n                                    Public\n                                query\n                            \n                            \n                                    Public\n                                    Optional\n                                results\n                            \n                            \n                                    Public\n                                scoreKeys\n                            \n                            \n                                    Public\n                                    Optional\n                                sourceNodeList\n                            \n                            \n                                    Public\n                                sources\n                            \n                            \n                                    Public\n                                spec\n                            \n                            \n                                    Public\n                                    Optional\n                                staticSourceNodeList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromSingleList\n                            \n                            \n                                isLoading\n                            \n                            \n                                score\n                            \n                            \n                                setFilter\n                            \n                            \n                                unsubscribe\n                            \n                            \n                                update\n                            \n                            \n                                updateResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(spec: SetMultiSource, scoreKeys: string[], dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        spec\n                                                  \n                                                        \n                                                                        SetMultiSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scoreKeys\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hasMore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:60\n                        \n                    \n\n            \n                \n                    If true, there are more than limit items in the source data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:56\n                        \n                    \n\n            \n                \n                    Max number of items in results.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:65\n                        \n                    \n\n            \n                \n                    Current search query. Used to rank results by relevance.\nThe filters are computed separately! Use #setFilter to set both simultaneously.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        results\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:58\n                        \n                    \n\n            \n                \n                    Current results.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        scoreKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        sourceNodeList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:40\n                        \n                    \n\n            \n                \n                    A DataList that loads the value of sourceNodes, if it's a ListId.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sources\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:49\n                        \n                    \n\n            \n                \n                    List of all sources that will be included in the results.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        spec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SetMultiSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        staticSourceNodeList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeId[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:47\n                        \n                    \n\n            \n                \n                    The list of nodes specified in sourceNodes, if it's a NodeId[].\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromSingleList\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:78\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        F\n                    \n                \n            \n\n            \n                \n                    Creates a new MultiSourceList that actually just loads a single list.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                ListId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scoreKeys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataService\n                                    \n                                                DataService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MultiSourceList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n            \n                \nisLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:168\n                \n            \n\n\n            \n                \n                    If true, something is loading somewhere.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        score\n                        \n                    \n                \n            \n            \n                \nscore(item: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:125\n                \n            \n\n\n            \n                \n                    Scores an item for ranking in results.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFilter\n                        \n                    \n                \n            \n            \n                \nsetFilter(query: string, filter: F)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:117\n                \n            \n\n\n            \n                \n                    Sets a filter on all lists.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:182\n                \n            \n\n\n            \n                \n                    Unsubscribes from all subscriptions. This object should no longer be used afterwards.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:83\n                \n            \n\n\n            \n                \n                    Updates lists.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateResults\n                        \n                    \n                \n            \n            \n                \nupdateResults()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:144\n                \n            \n\n\n            \n                \n                    Updates the results array from loaded data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Component, Inject, OnDestroy, OnInit, TemplateRef} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {\n  decodeListId,\n  decodeNodeId,\n  encodeListId,\n  encodeNodeId,\n  ListId,\n  ListIdEnc,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename\n} from '@app/data-dgql/id';\nimport {DataList} from '@app/data-dgql/query';\nimport {Subscription} from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {quickScore} from 'quick-score';\n\n/**\n * This interface is used to source items from multiple sources in the set editor.\n *\n * staticSources specifies lists whose items will always be loaded.\n * sourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n */\nexport interface SetMultiSource {\n  /** A static list of source lists. */\n  staticSources: ListId[];\n  /** A list of nodes that will be passed to listFromNode. */\n  sourceNodes?: ListId | NodeId[];\n  /** Maps nodes from sourceNodes to lists from which items will be sourced. */\n  listFromNode?: (n: NodeId) => ListId;\n}\n\n/**\n * This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n */\nclass MultiSourceList {\n  /** A DataList that loads the value of sourceNodes, if it's a ListId. */\n  public sourceNodeList?: DataList;\n  /**\n   * @ignore\n   * Internal: subscription to the sourceNodeList.\n   */\n  private sourceNodeListSub?: Subscription;\n  /** The list of nodes specified in sourceNodes, if it's a NodeId[]. */\n  public staticSourceNodeList?: NodeId[];\n  /** List of all sources that will be included in the results. */\n  public sources: Map> = new Map();\n  /**\n   * @ignore\n   * Internal: subscriptions to all of the sources.\n   */\n  private sourceSubs: Map = new Map();\n  /** Max number of items in results. */\n  public limit = 10;\n  /** Current results. */\n  public results?: T[];\n  /** If true, there are more than `limit` items in the source data. */\n  public hasMore = false;\n  /**\n   * Current search query. Used to rank results by relevance.\n   * The filters are computed separately! Use {@link #setFilter} to set both simultaneously.\n   */\n  public query = '';\n\n  constructor(public spec: SetMultiSource, public scoreKeys: string[], private dataService: DataService) {\n    if (Array.isArray(spec.sourceNodes)) {\n      this.staticSourceNodeList = spec.sourceNodes;\n    } else if (typeof spec.sourceNodes === 'object') {\n      this.sourceNodeList = dataService.getList(spec.sourceNodes);\n      this.sourceNodeListSub = this.sourceNodeList.subscribe(() => this.update());\n    }\n    this.update();\n  }\n\n  /** Creates a new MultiSourceList that actually just loads a single list. */\n  static fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService) {\n    return new this({staticSources: [list]}, scoreKeys, dataService);\n  }\n\n  /** Updates lists. */\n  update() {\n    const newSourceSet = new Set();\n    for (const id of this.sourceNodeList?.current?.keys() || []) {\n      const nodeId = decodeNodeId(id);\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const nodeId of this.staticSourceNodeList || []) {\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const source of this.spec.staticSources) {\n      newSourceSet.add(encodeListId(source));\n    }\n\n    for (const source of newSourceSet) {\n      if (!this.sources.has(source)) {\n        const list = this.dataService.getList(decodeListId(source));\n        list.interactive = true;\n        this.sources.set(source, list);\n        this.sourceSubs.set(\n          source,\n          list.subscribe(() => this.updateResults())\n        );\n      }\n    }\n    for (const source of [...this.sources.keys()]) {\n      if (!newSourceSet.has(source)) {\n        this.sourceSubs.get(source).unsubscribe();\n        this.sourceSubs.delete(source);\n        this.sources.delete(source);\n      }\n    }\n  }\n\n  /** Sets a filter on all lists. */\n  setFilter(query: string, filter: F) {\n    this.query = query;\n    for (const source of this.sources.values()) {\n      source.filter = filter;\n    }\n  }\n\n  /** Scores an item for ranking in results. */\n  score(item: T) {\n    const matchStrings = [];\n    for (const key of this.scoreKeys) {\n      let cursor = item;\n      for (const objKey of key.split('.')) {\n        cursor = cursor[objKey];\n        if (!cursor) {\n          break;\n        }\n      }\n      if (cursor) {\n        matchStrings.push(cursor);\n      }\n    }\n\n    return quickScore(matchStrings.join(' '), this.query);\n  }\n\n  /** Updates the results array from loaded data. */\n  updateResults() {\n    const seenItems = new Set();\n    const items = [];\n    this.hasMore = false;\n    for (const source of this.sources.values()) {\n      if (!source.hasData) {\n        continue;\n      }\n      for (const [id, item] of source.current.entries()) {\n        if (!seenItems.has(id)) {\n          seenItems.add(id);\n          items.push(item);\n        }\n      }\n      this.hasMore = this.hasMore || source.current.size  this.score(a) - this.score(b));\n    items.splice(this.limit);\n\n    this.results = items;\n  }\n\n  /** If true, something is loading somewhere. */\n  isLoading() {\n    if (this.sourceNodeList?.loading) {\n      return true;\n    }\n    for (const source of this.sources.values()) {\n      if (source.loading) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** Unsubscribes from all subscriptions. This object should no longer be used afterwards. */\n  unsubscribe() {\n    this.sourceNodeListSub?.unsubscribe();\n    this.sourceSubs.forEach((sub) => sub.unsubscribe());\n  }\n}\n\n/** Types of item operations that may be made available. */\nexport type ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\nexport interface SetEditorDialogData {\n  title: string;\n  listSet: ListId | NodeId[];\n  listAll: ListId | SetMultiSource;\n  applyChangeset: (add: NodeId[], del: NodeId[]) => Promise;\n  itemTemplate: TemplateRef;\n  makeFilter: (query: string) => F;\n  scoreKeys: string[];\n  emptySuggestionsLabel: string;\n  emptyResultsLabel: string;\n  createItem?: () => Promise;\n  editItem?: ({id: NodeId, preview: T}) => void;\n  deleteItem?: ({id: NodeId, preview: T}) => void;\n}\n\n/** This is an internal component used in the set editor. */\n@Component({\n  selector: 'app-set-editor-dialog',\n  templateUrl: './set-editor-dialog.component.html',\n  styleUrls: ['./set-editor-dialog.component.scss']\n})\nexport class SetEditorDialogComponent implements OnInit, OnDestroy {\n  public isLocalSet = false;\n  public localSet: NodeIdEnc[] = [];\n  public listSet$: DataList;\n  public listAll: MultiSourceList;\n  private listSetSub: Subscription;\n  private additions: Set = new Set();\n  private deletions: Set = new Set();\n  public searchQuery = '';\n\n  constructor(\n    private dataService: DataService,\n    private notifyService: UserNotifyService,\n    private dialogRef: MatDialogRef>,\n    @Inject(MAT_DIALOG_DATA) public data: SetEditorDialogData\n  ) {}\n\n  ngOnInit() {\n    if (Array.isArray(this.data.listSet)) {\n      this.isLocalSet = true;\n      this.localSet = [...this.data.listSet].map((id) => encodeNodeId(id));\n    } else {\n      this.listSet$ = this.dataService.getList(this.data.listSet);\n    }\n    this.listAll =\n      'staticSources' in this.data.listAll\n        ? new MultiSourceList(this.data.listAll, this.data.scoreKeys, this.dataService)\n        : MultiSourceList.fromSingleList(this.data.listAll, this.data.scoreKeys, this.dataService);\n\n    if (this.listSet$) {\n      this.listSetSub = this.listSet$?.subscribe();\n      // TODO: is this a reasonable heuristic for the listSet count? we need to cover >= results from listAll\n      this.listSet$.count = 10;\n      this.listSet$.interactive = true;\n    }\n  }\n\n  searchQueryDidChange() {\n    if (this.listSet$) {\n      this.listSet$.filter = this.data.makeFilter(this.searchQuery);\n    }\n    this.listAll.setFilter(this.searchQuery, this.data.makeFilter(this.searchQuery));\n  }\n\n  getNodeId(item): NodeId {\n    const type = nodeTypeFromTypename(item.__typename);\n    return {type, id: item.id};\n  }\n\n  getEncodedId(item): NodeIdEnc {\n    return encodeNodeId(this.getNodeId(item));\n  }\n\n  isInSet(item): boolean {\n    const id = this.getEncodedId(item);\n    if (this.additions.has(id)) {\n      return true;\n    }\n    if (this.deletions.has(id)) {\n      return false;\n    }\n    if (this.isLocalSet) {\n      return this.localSet.includes(id);\n    }\n    return this.listSet$.current?.has(id) || false;\n  }\n\n  toggleInSet(item): void {\n    const id = this.getEncodedId(item);\n    if (this.isInSet(item)) {\n      this.additions.delete(id);\n      this.deletions.add(id);\n    } else {\n      this.deletions.delete(id);\n      this.additions.add(id);\n    }\n  }\n\n  apply() {\n    if (this.additions.size + this.deletions.size === 0) {\n      this.dialogRef.close(null);\n      return;\n    }\n\n    this.data\n      .applyChangeset([...this.additions].map(decodeNodeId), [...this.deletions].map(decodeNodeId))\n      .then(() => {\n        this.dialogRef.close(null);\n      })\n      .catch((error) => {\n        this.notifyService.notifyError('Failed to apply changes', error);\n      });\n  }\n\n  createItem() {\n    this.data.createItem().then((node) => {\n      if (node) {\n        this.additions.add(encodeNodeId(node));\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n    this.listAll.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NodeCache.html":{"url":"classes/NodeCache.html","title":"class - NodeCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NodeCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/query.ts\n        \n\n\n            \n                Description\n            \n            \n                Keeps a cache of DataNodes such that each NodeId has at most one associated DataNode.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createNode\n                            \n                            \n                                getNode\n                            \n                            \n                                insertNodes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queries: QueriesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/query.ts:655\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queries\n                                                  \n                                                        \n                                                                        QueriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/query.ts:655\n                        \n                    \n\n            \n                \n                    Internal node storage. Do not use directly.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createNode\n                        \n                    \n                \n            \n            \n                \n                    \n                    createNode(id: NodeId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:660\n                \n            \n\n\n            \n                \n                    Creates a new node.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                NodeId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNode\n                        \n                    \n                \n            \n            \n                \ngetNode(id: NodeId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:666\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns the DataNode for the given NodeId.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                NodeId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        insertNodes\n                        \n                    \n                \n            \n            \n                \ninsertNodes(nodes: T[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:680\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Inserts nodes into the cache and returns them as a map (in the same order).\nNote: the ID parameter of the node is only optional for type compatibility with the GQL schema.\nNodes without an ID will be ignored.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Observable, Subscriber} from 'rxjs';\nimport {decodeNodeId, encodeNodeId, ListId, ListParams, NodeId, NodeIdEnc, nodeTypeFromTypename} from './id';\nimport {QueriesService} from './queries/queries.service';\nimport {ListResult, queryList, queryNode} from './load';\nimport {PageInfo} from '../../generated/graphql-dgql';\n\n/** How long {@link DataQuery} will wait to debounce requests until actually sending a request, in milliseconds. */\nconst CACHE_FAST_DEBOUNCE_TIME_MS = 200;\n/** How long {@link DataQuery} will wait to debounce requests, if the {@link DataQuery#interactive} flag is set, in milliseconds. */\nconst CACHE_INTERACTIVE_DEBOUNCE_TIME_MS = 500;\n/** Number of milliseconds beyond which cached data will be considered stale, and will be reloaded if a new subscriber is added. */\nconst CACHE_STALE_TIME_MS = 5000;\n\n/**\n * A piece of observable data.\n *\n * DataQuery is a stateful interface for interacting with an API object.\n * Instead of calling a function to make an API request, DataQuery lets you declare the ID (like an endpoint) and\n * request parameters (in {@link #params}) of the data you want, and will automatically load the data when needed.\n * Data can then be accessed synchronously with the {@link #current} property.\n *\n * Upon adding a subscriber with [#subscribe]{@link Observable#subscribe}, data will loaded from the API and stored in the\n * cache. Subsequent viewers can then immediately access the cached data.\n *\n * - To check if data is loaded, use {@link #hasData},\n *   and to check if data is still loading, use {@link #loading}.\n * - To (re-)load the data from the API, use {@link #load}.\n *   This happens automatically upon subscription after a sufficient delay (see debounce time constants).\n * - To add a subscriber without triggering this behavior, use {@link #subscribeLazy}, which will\n *   only make an API request if the data is not cached.\n * - To invalidate (i.e. delete) the cached data, use {@link #invalidate}.\n * - If you only need the data right now and don't want to deal with subscriptions, use {@link #dataAsPromise}\n *   to access it as a promise that will either return cached data or load new data.\n *\n * When done using a DataQuery subscription, it *must* be manually destroyed by calling\n * [`sub.unsubscribe()`]{@link Subscription#unsubscribe} on the Subscription object returned by\n * [subscribe]{@link Observable#subscribe}, as it may leak memory otherwise.\n *\n * See {@link DataNode} and {@link DataList} for the two main types of data that use DataQuery.\n *\n * @typeParam I - ID type (e.g. NodeId or ListId)\n * @typeParam T - type of data accessible via .current\n * @typeParam R - type returned by innerQueryFn\n * @typeParam P - parameter type for innerQueryFn\n */\nexport abstract class DataQuery extends Observable {\n  /** The ID of this data. */\n  id: I;\n  loading = false; // TODO: maybe make this value observable too?\n  /**\n   * @ignore\n   * Private: this is the currently loaded data, externally accessible via .current.\n   */\n  protected currentData?: T;\n  /**\n   * @ignore\n   * Private: this is the time the data was last loaded, to compare against the cache invalidation\n   * timeout. This is a millisecond epoch timestamp from Date.now().\n   */\n  protected lastLoadTime = 0;\n  /**\n   * @ignore\n   * Private: this flag may be set by subclasses to avoid having writes to .params load any data.\n   */\n  protected pSetParamsNoUpdate = false;\n\n  /** Returns true if data is currently available. */\n  get hasData(): boolean {\n    return this.currentData !== undefined;\n  }\n\n  /** The currently loaded data. */\n  get current(): T {\n    return this.currentData;\n  }\n\n  /**\n   * @ignore\n   * The current query parameters, externally accessible via .params.\n   */\n  protected currentQueryParams?: P;\n  /**\n   * Parameters that will be passed to the request.\n   * Changing this property will automatically trigger a load.\n   */\n  get params(): P | undefined {\n    return this.currentQueryParams;\n  }\n  set params(p: P) {\n    this.currentQueryParams = p;\n    if (!this.pSetParamsNoUpdate) {\n      this.loadDebounced();\n    }\n  }\n\n  /**\n   * @ignore\n   * Private: set of all subscribers to this data. This set is used to send updates.\n   */\n  protected subscribers: Set> = new Set();\n  // FIXME: innerQuery/MapFn is a bit inelegant; it may be possible to refactor this\n  /**\n   * @ignore\n   * Private: this is the inner query function that actually loads the data, provided by a subclass.\n   */\n  protected innerQueryFn: (id: I, p: P) => Promise;\n  /**\n   * @ignore\n   * Private: this function maps data returned by the inner query into our format, if necessary.\n   */\n  protected innerMapFn: (r: R) => T;\n  /**\n   * @ignore\n   * Private: this is a simple counter used to determine whether the result of a load operation is\n   * still relevant.\n   */\n  protected stateLock = 0;\n  /**\n   * @ignore\n   * Private: this is a javascript timeout ID set when doing debounced loading.\n   */\n  protected loadTimeout = null;\n  /**\n   * @ignore\n   * Private: if true, the data will be hydrated (see {@link DataList#hydrateInitial}) and we should\n   * *not* trigger a load when a subscriber is added, until we have received the hydration.\n   */\n  protected hydrated = false;\n  /**\n   * @ignore\n   * Private: if true, the next call to subscribe will add a lazy subscriber.\n   * The flag will be reset automatically. Used in subscribeLazy.\n   */\n  protected isNextSubLazy = false;\n\n  /** If true, will prolong debounce time a bit. */\n  interactive = false;\n\n  /**\n   * @ignore\n   * Creates a new DataQuery (you should never need to use this directly)\n   *\n   * @param id an identifier for the data being loaded\n   * @param query the inner query function\n   * @param map maps returned data from the query R to usable data T\n   */\n  protected constructor(id: I, query: (id: I, p: P) => Promise, map: (r: R) => T) {\n    super((subscriber) => {\n      this.addSubscriber(subscriber, this.isNextSubLazy);\n      this.isNextSubLazy = false;\n    });\n    this.id = id;\n    this.innerQueryFn = query;\n    this.innerMapFn = map;\n  }\n\n  /**\n   * Returns the data as a promise, without having to create a subscription.\n   *\n   * If cached data is available, this will return the data immediately; otherwise, this will\n   * load the data with an API request.\n   *\n   * #### Example\n   * ```ts\n   * const node = dataService.getNode(someNodeId);\n   * node.dataAsPromise().then(data => {\n   *   console.log('node data:', data);\n   * }).catch(error => console.error('oh no'));\n   * ```\n   */\n  dataAsPromise(): Promise {\n    if (this.hasData) {\n      return Promise.resolve(this.current);\n    }\n    return new Promise((resolve, reject) => {\n      const sub = this.subscribe(\n        (data) => {\n          resolve(data);\n          sub.unsubscribe();\n        },\n        (error) => {\n          reject(error);\n          sub.unsubscribe();\n        }\n      );\n    });\n  }\n\n  /**\n   * @ignore\n   * Private: the actual implementation of the load function.\n   */\n  private loadImpl(fut: Promise) {\n    clearTimeout(this.loadTimeout);\n    this.loadTimeout = null;\n    this.lastLoadTime = Date.now();\n    this.loading = true;\n\n    // if load is called twice; only the newest load call will have an effect\n    const stateLock = ++this.stateLock;\n\n    fut\n      .then((data) => {\n        if (stateLock !== this.stateLock) {\n          return;\n        }\n        this.insertResult(data);\n        this.loading = false;\n        this.hydrated = false;\n      })\n      .catch((error) => {\n        if (stateLock !== this.stateLock) {\n          return;\n        }\n        this.emitErrorToAllSubscribers(error);\n        this.loading = false;\n        this.hydrated = false;\n      });\n  }\n\n  /** Loads data. */\n  load() {\n    this.hydrated = false;\n    this.loadImpl(this.innerQueryFn(this.id, this.currentQueryParams));\n  }\n\n  /**\n   * @internal\n   * Use when data has not yet been loaded but is available from elsewhere.\n   */\n  hydrateRaw(preparedData: Promise) {\n    if (this.hasData) {\n      return; // don't need hydration\n    }\n    this.hydrated = true;\n    this.loadImpl(preparedData);\n  }\n\n  /** Will load data if it's stale or not present. */\n  loadIfNeeded() {\n    if (this.loading) {\n      return;\n    }\n    if (!this.hasData || Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n\n  /** Loads data after a short delay. Will debounce. */\n  loadDebounced(interactive = this.interactive) {\n    if (this.loadTimeout) {\n      return;\n    }\n    this.loadTimeout = setTimeout(\n      () => {\n        this.loadTimeout = null;\n        this.load();\n      },\n      interactive ? CACHE_INTERACTIVE_DEBOUNCE_TIME_MS : CACHE_FAST_DEBOUNCE_TIME_MS\n    );\n  }\n\n  /** Deletes current data. */\n  invalidate() {\n    this.currentData = undefined;\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /**\n   * @ignore\n   * Private: callback for adding a new subscriber.\n   */\n  protected addSubscriber(subscriber: Subscriber, lazy: boolean) {\n    this.subscribers.add(subscriber);\n    if (this.current !== undefined) {\n      // data is available right now! emit current state\n      subscriber.next(this.current);\n    }\n\n    if (!this.hydrated && (!lazy || !this.hasData)) {\n      this.loadIfNeeded();\n    }\n\n    return {\n      unsubscribe: () => {\n        this.subscribers.delete(subscriber);\n      }\n    };\n  }\n\n  /**\n   * Will subscribe to the data, but not cause a reload unless there is no data.\n   * @param args passed verbatim to [#subscribe]{@link Observable#subscribe}\n   */\n  subscribeLazy(...args) {\n    this.isNextSubLazy = true;\n    return this.subscribe(...args);\n  }\n\n  /**\n   * @ignore\n   * Internal: will send an update with the current data (.current) to all subscribers.\n   */\n  emitUpdateToAllSubscribers() {\n    for (const sub of this.subscribers) {\n      sub.next(this.current);\n    }\n  }\n\n  /**\n   * @ignore\n   * Internal: will send the given error to all subscribers.\n   */\n  emitErrorToAllSubscribers(error: unknown) {\n    for (const sub of this.subscribers) {\n      sub.error(error);\n    }\n  }\n\n  /**\n   * @ignore\n   * Updates current data with a result from innerQueryFn, and emits an update.\n   */\n  insertResult(result: R) {\n    this.currentData = this.innerMapFn(result);\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** Returns the number of subscribers for this data. */\n  get subscriberCount(): number {\n    return this.subscribers.size;\n  }\n}\n\n/**\n * A cacheable node with no parameters.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataNode.\n * Nodes are identified by a {@link NodeId}.\n *\n * #### Example\n * ```html\n * \n *   Is it loading? {{thing$.loading ? 'yes' : 'no'}}\n *   Is the thing loaded? {{thing$.hasData ? 'yes' : 'no'}}\n *   \n *     Thing data: {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingId: NodeId;\n *\n *   public thing$: DataNode;\n *   public thingSub: Subscription; // subscription to thing$\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain the DataNode from the data service\n *     this.thing$ = this.dataService.getNode(this.thingId);\n *\n *     // subscribe to indicate that we want some data\n *     this.thingSub = this.thing$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataNode extends DataQuery {\n  /** @ignore */\n  constructor(queries: QueriesService, id: NodeId) {\n    super(id, queryNode(queries), (data) => data);\n  }\n\n  set params(p) {\n    throw new Error('parameters not available on nodes');\n  }\n\n  loadIfNeeded() {\n    if (!this.loading && Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n}\n\n/**\n * Provides a view into a list of items.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataList.\n * Lists are identified by a {@link ListId}.\n *\n * - To access list items, use {@link #currentItems}.\n * - If you need the IDs as well, use {@link #current} (note that the Map is ordered).\n *\n * The current view is defined by following properties:\n *\n * - {@link #cursor}: the current NodeId cursor (see backend API documentation for details)\n * - {@link #count}: number of items to load\n * - {@link #forward}: if true, will load items after the cursor. If false, will load items before.\n * - {@link #filter}: filter object (type parameter F)\n *\n * Changing any of these properties will reload the list (debounced).\n *\n * @typeParam T - list item type\n * @typeParam F - list filter type\n *\n * #### Example\n * ```html\n * \n *   \n *     a thing! {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingsListId: ListId;\n *\n *   things$: DataList; // filter type unknown because we're not using here\n *   thingsSub: Subscription;\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain a list view from the data service\n *     this.things$ = this.dataService.getList(this.thingsListId);\n *\n *     // subscribe to the list to indicate that we want some data\n *     this.thingsSub = this.things$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingsSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataList extends DataQuery, ListResult, ListParams> {\n  // these are all just the private versions of the corresponding list properties.\n  /** @ignore */\n  private pCursor?: NodeId;\n  /** @ignore */\n  private pCount = 10;\n  /** @ignore */\n  private pFilter?: F;\n  /** @ignore */\n  private pForward = true;\n\n  /**\n   * @ignore\n   * Private: page info for the currently loaded data.\n   */\n  private pageInfo?: PageInfo;\n  /**\n   * @ignore\n   * Private: accessible via .totalCount (read-only)\n   */\n  private pTotalCount?: number;\n  /**\n   * @ignore\n   * Private: used to correct hasPrevious/NextPage when receiving data.\n   */\n  private previouslyHadPageContents = false;\n  /**\n   * @ignore\n   * Private: pointer to the global node cache, used to insert results.\n   */\n  private pNodes: NodeCache;\n\n  /** @ignore */\n  constructor(queries: QueriesService, nodes: NodeCache, id: ListId) {\n    super(id, queryList(queries, nodes), (result) => {\n      this.pageInfo = result.pageInfo;\n      this.pTotalCount = result.totalCount;\n\n      // API *only* reports hasPreviousPage or hasNextPage correctly if we are navigating in that\n      // same direction. Hence, we need to amend pageInfo with prior knowledge.\n      if (this.forward) {\n        this.pageInfo.hasPreviousPage = this.previouslyHadPageContents;\n      } else {\n        this.pageInfo.hasNextPage = this.previouslyHadPageContents;\n      }\n      this.previouslyHadPageContents = !!result.items.size;\n\n      return result.items;\n    });\n    this.pNodes = nodes;\n    this.pSetParamsNoUpdate = true;\n    this.setParams();\n    this.pSetParamsNoUpdate = false;\n  }\n\n  /**\n   * @internal\n   * Updates the `params` value from list parameters\n   */\n  setParams() {\n    this.params = {\n      cursor: this.pCursor,\n      count: this.pCount,\n      forward: this.pForward,\n      filter: this.pFilter\n    };\n  }\n\n  /** Returns the total number of items. Null if not loaded. */\n  get totalCount() {\n    return this.pTotalCount;\n  }\n\n  /** Returns the currently loaded items in an array. */\n  get currentItems(): T[] {\n    if (!this.hasData) {\n      return [];\n    }\n    return [...this.current.values()];\n  }\n\n  /** Current list filter object. */\n  get filter(): F | undefined {\n    return this.pFilter;\n  }\n  set filter(f: F) {\n    this.pFilter = f;\n    this.setParams();\n  }\n\n  /** The current pagination cursor (a node relative to which items will be loaded). Nullable. */\n  get cursor(): NodeId {\n    return this.pCursor;\n  }\n  set cursor(c: NodeId) {\n    this.pCursor = c;\n    this.setParams();\n  }\n\n  /** The max amount of items to be loaded. */\n  get count(): number {\n    return this.pCount;\n  }\n  set count(c: number) {\n    this.pCount = c;\n    this.setParams();\n  }\n\n  /** Whether to load items after the cursor (true), or items before the cursor (false). */\n  get forward(): boolean {\n    return this.pForward;\n  }\n  set forward(f: boolean) {\n    this.pForward = f;\n    this.setParams();\n  }\n\n  /** Returns the node ID of the first item on the current page. */\n  get firstPageItemId(): NodeId | null {\n    const firstKey = this.current ? this.current.keys().next()?.value || null : null;\n    return firstKey ? decodeNodeId(firstKey) : null;\n  }\n\n  /** Returns the node ID of the last item on the current page. */\n  get lastPageItemId(): NodeId | null {\n    if (!this.current) {\n      return;\n    }\n    const keys = [...this.current.keys()];\n    return keys[keys.length - 1] ? decodeNodeId(keys[keys.length - 1]) : null;\n  }\n\n  /** Returns true if the current result contains the given node. */\n  currentHasNode(key: NodeId): boolean {\n    return this.current?.has(encodeNodeId(key));\n  }\n\n  get hasPrevPage() {\n    return !this.pageInfo || this.pageInfo.hasPreviousPage;\n  }\n  get hasNextPage() {\n    return !this.pageInfo || this.pageInfo.hasNextPage;\n  }\n\n  /** Moves the view to the first page. */\n  firstPage() {\n    this.cursor = null;\n    this.forward = true;\n    this.previouslyHadPageContents = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the previous page. */\n  prevPage() {\n    if (this.pageInfo && !this.pageInfo.hasPreviousPage) {\n      return false;\n    }\n    this.cursor = this.firstPageItemId;\n    this.forward = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the next page. */\n  nextPage() {\n    if (this.pageInfo && !this.pageInfo.hasNextPage) {\n      return false;\n    }\n    this.cursor = this.lastPageItemId;\n    this.forward = true;\n    this.invalidate();\n    return true;\n  }\n\n  /**\n   * Hydrates this list with initial data in the API format\n   *\n   * If you've already got data from the API that contains the first page of this list, you can use\n   * this method to insert that data directly and avoid triggering a redundant API request.\n   *\n   * @param data a promise that returns the API data\n   * @typeParam IdT - equivalent to T\n   */\n  hydrateInitial(data: Promise>) {\n    this.hydrateRaw(\n      data.then((value) => ({\n        totalCount: value.totalCount,\n        pageInfo: value.pageInfo,\n        items: this.pNodes.insertNodes(value.nodes || [])\n      }))\n    );\n  }\n}\n\n/** List hydration object (constructing this manually shouldn't be necessary as it mirrors the structure of GQL objects) */\nexport type HydrateList = {\n  totalCount: number;\n  pageInfo: PageInfo;\n  /** This is nullable because it's nullable in the GQL schema. In practice it should always exist */\n  nodes?: (T | null)[];\n};\n\n/** Keeps a cache of DataNodes such that each NodeId has at most one associated DataNode. */\nexport class NodeCache {\n  // TODO: garbage collection? (nodes with zero subscribers)\n  /**\n   * @internal\n   * Internal node storage. Do not use directly.\n   */\n  nodes: Map> = new Map();\n\n  constructor(private queries: QueriesService) {}\n\n  /** Creates a new node. */\n  private createNode(id: NodeId) {\n    const encodedId = encodeNodeId(id);\n    this.nodes.set(encodedId, new DataNode(this.queries, id));\n  }\n\n  /** Returns the DataNode for the given NodeId. */\n  getNode(id: NodeId): DataNode {\n    const encodedId = encodeNodeId(id);\n    if (!this.nodes.has(encodedId)) {\n      this.createNode(id);\n    }\n    return this.nodes.get(encodedId) as DataNode;\n  }\n\n  /**\n   * Inserts nodes into the cache and returns them as a map (in the same order).\n   *\n   * Note: the ID parameter of the node is only optional for type compatibility with the GQL schema.\n   * Nodes without an ID will be ignored.\n   */\n  insertNodes(nodes: T[]): Map {\n    const map = new Map();\n\n    for (const node of nodes) {\n      if (!node?.id) {\n        continue;\n      }\n      const type = nodeTypeFromTypename(node.__typename);\n      const id = {type, id: node.id};\n      const dataNode: DataNode = this.getNode(id);\n      if (!dataNode.hasData) {\n        // FIXME: different queries load different amounts of data, simple overwriting doesn't always have the desired effect\n        //  S1: distinguish between nodes and \"partial nodes\"?\n        //  S2: deep merge data?\n        dataNode.insertResult(node);\n      }\n      map.set(encodeNodeId(id), node);\n    }\n\n    return map;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NodeDetailsComponent.html":{"url":"components/NodeDetailsComponent.html","title":"component - NodeDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NodeDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/node-details/node-details.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component shows details of components or interfaces\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-node-details\n            \n\n            \n                styleUrls\n                ./node-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./node-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                editMode\n                            \n                            \n                                interface\n                            \n                            \n                                issueListId\n                            \n                            \n                                placeholder\n                            \n                            \n                                showName\n                            \n                            \n                                validationDescription\n                            \n                            \n                                validationIMS\n                            \n                            \n                                validationName\n                            \n                            \n                                validationProvider\n                            \n                            \n                                validationType\n                            \n                            \n                                validationUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getNodeName\n                            \n                            \n                                    Public\n                                getNodeTypeString\n                            \n                            \n                                    Public\n                                node\n                            \n                            \n                                    Public\n                                onCancelClick\n                            \n                            \n                                    Public\n                                onDeleteClick\n                            \n                            \n                                    Public\n                                onEditClick\n                            \n                            \n                                    Public\n                                onSaveClick\n                            \n                            \n                                    Private\n                                resetValues\n                            \n                            \n                                    Private\n                                showDeleteDialog\n                            \n                            \n                                    Private\n                                updateComponent\n                            \n                            \n                                    Private\n                                updateInterface\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                callback\n                            \n                            \n                                nodeId\n                            \n                            \n                                nodeType\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, componentStoreService: ComponentStoreService, interfaceStoreService: InterfaceStoreService, dialog: MatDialog, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/node-details/node-details.component.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentStoreService\n                                                  \n                                                        \n                                                                        ComponentStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        interfaceStoreService\n                                                  \n                                                        \n                                                                        InterfaceStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        callback\n                    \n                \n                \n                    \n                        Type :         NodeUpdatedCallbackFn\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/node-details/node-details.component.ts:54\n                            \n                        \n                \n                    \n                        Function to be called if a node was updated or deleted\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        nodeId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/node-details/node-details.component.ts:46\n                            \n                        \n                \n                    \n                        Id of the node\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        nodeType\n                    \n                \n                \n                    \n                        Type :         NodeDetailsType\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/node-details/node-details.component.ts:50\n                            \n                        \n                \n                    \n                        Either component or interface\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/node-details/node-details.component.ts:42\n                            \n                        \n                \n                    \n                        The project that contains the node\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getNodeName\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:132\n                \n            \n\n\n            \n                \n                    Get the name of the node, or an empty string if it has not been fetched yet\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getNodeTypeString\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeTypeString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:147\n                \n            \n\n\n            \n                \n                    Get the type of the node as a formatted string\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        node\n                        \n                    \n                \n            \n            \n                \n                    \n                    node()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:154\n                \n            \n\n\n            \n                \n                    Access the node\n\n\n                    \n                        Returns :     GetComponentQuery | GetInterfaceQuery\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onCancelClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onCancelClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeleteClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onEditClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onEditClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSaveClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSaveClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:252\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        resetValues\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:266\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        showDeleteDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    showDeleteDialog(affected: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    affected\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateComponent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:280\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateInterface\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:295\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GetBasicComponentQuery\n\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interface\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GetInterfaceQuery\n\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issueListId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        placeholder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'placeholder'\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationIMS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, CCIMSValidators.urlValidator])\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, CCIMSValidators.nameFormatValidator])\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, CCIMSValidators.urlValidator])\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, CCIMSValidators.urlValidator])\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:75\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {\n  GetBasicComponentQuery,\n  GetComponentQuery,\n  GetInterfaceQuery,\n  UpdateComponentInput,\n  UpdateComponentInterfaceInput\n} from '../../generated/graphql';\nimport {FormControl, Validators} from '@angular/forms';\nimport {ListId, ListType, NodeType} from '@app/data-dgql/id';\nimport {Router} from '@angular/router';\nimport {ComponentStoreService} from '@app/data/component/component-store.service';\nimport {InterfaceStoreService} from '@app/data/interface/interface-store.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\nimport {CCIMSValidators} from '@app/utils/validators';\n\n/**\n * A node shown in the details component can either be a component or an interface\n */\nexport enum NodeDetailsType {\n  Component,\n  Interface\n}\n\nexport declare type NodeUpdatedCallbackFn = (nodeDeleted: boolean) => void;\n\n/**\n * This component shows details of components or interfaces\n */\n@Component({\n  selector: 'app-node-details',\n  templateUrl: './node-details.component.html',\n  styleUrls: ['./node-details.component.scss']\n})\nexport class NodeDetailsComponent implements OnInit, AfterViewInit {\n  /**\n   * The project that contains the node\n   */\n  @Input() projectId: string;\n  /**\n   * Id of the node\n   */\n  @Input() nodeId: string;\n  /**\n   * Either component or interface\n   */\n  @Input() nodeType: NodeDetailsType;\n  /**\n   * Function to be called if a node was updated or deleted\n   */\n  @Input() callback?: NodeUpdatedCallbackFn;\n  /** @ignore */\n  @ViewChild('nodeQuery') nodeQuery: QueryComponent;\n  /** @ignore */\n  @ViewChild('deleteQuery') deleteQuery: QueryComponent;\n  /** @ignore */\n  @ViewChild('updateQuery') updateQuery: QueryComponent;\n\n  /** @ignore */\n  Type = NodeDetailsType;\n\n  issueListId: ListId;\n  component: GetBasicComponentQuery;\n  interface: GetInterfaceQuery;\n  editMode: boolean;\n  showName = false;\n  placeholder = 'placeholder';\n\n  // TODO: Validators\n  validationProvider = new FormControl('', [Validators.required, CCIMSValidators.urlValidator]);\n  validationName = new FormControl('', [Validators.required, CCIMSValidators.nameFormatValidator]);\n  validationUrl = new FormControl('', [Validators.required, CCIMSValidators.urlValidator]);\n  validationIMS = new FormControl('', [Validators.required, CCIMSValidators.urlValidator]);\n  validationType = new FormControl('');\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  constructor(\n    private router: Router,\n    private componentStoreService: ComponentStoreService,\n    private interfaceStoreService: InterfaceStoreService,\n    private dialog: MatDialog,\n    private notify: UserNotifyService\n  ) {}\n\n  ngOnInit(): void {\n    this.editMode = false;\n\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.issueListId = {\n        node: {type: NodeType.Component, id: this.nodeId},\n        type: ListType.Issues\n      };\n    } else {\n      this.issueListId = {\n        node: {type: NodeType.ComponentInterface, id: this.nodeId},\n        type: ListType.IssuesOnLocation\n      };\n    }\n\n    this.validationIMS.setValue('?');\n    this.validationUrl.setValue('?');\n  }\n\n  ngAfterViewInit() {\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.nodeQuery.listenTo(this.componentStoreService.getBasicComponent(this.nodeId), (component) => {\n        if (component.node) {\n          this.component = component;\n          this.validationIMS.setValue('This is a placeholder');\n          this.validationUrl.setValue(component.node.repositoryURL);\n        } else {\n          this.nodeQuery.setError();\n        }\n      });\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      this.nodeQuery.listenTo(this.interfaceStoreService.getInterface(this.nodeId), (int) => {\n        if (int.node) {\n          this.interface = int;\n        } else {\n          this.nodeQuery.setError();\n        }\n      });\n    }\n  }\n\n  /**\n   * Get the name of the node, or an empty string if it has not been fetched yet\n   */\n  public getNodeName(): string {\n    if (!this.nodeQuery) {\n      return '';\n    }\n\n    if (this.nodeQuery.ready()) {\n      return this.node().node.name;\n    }\n\n    return '';\n  }\n\n  /**\n   * Get the type of the node as a formatted string\n   */\n  public getNodeTypeString(): string {\n    return this.nodeType === NodeDetailsType.Interface ? 'Interface' : 'Component';\n  }\n\n  /**\n   * Access the node\n   */\n  public node(): GetComponentQuery | GetInterfaceQuery {\n    if (this.nodeType === NodeDetailsType.Component) {\n      return this.component;\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      return this.interface;\n    }\n  }\n\n  public onCancelClick() {\n    this.resetValues();\n    this.editMode = false;\n  }\n\n  public onEditClick() {\n    this.editMode = true;\n  }\n\n  public onDeleteClick(): void {\n    const affected: string[] = [];\n    // Collect affected interfaces and components, then show the delete dialog\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.deleteQuery.listenTo(this.componentStoreService.getComponentInterfaces(this.nodeId), (interfaces) => {\n        for (const i of interfaces.node.interfaces.nodes) {\n          let affectedInterface = 'Interface \"' + i.name + '\" will be deleted';\n          if (i.consumedBy.nodes.length > 0) {\n            affectedInterface += ', which will affect the following component(s):';\n          }\n\n          affected.push(affectedInterface);\n          for (const component of i.consumedBy.nodes) {\n            affected.push(' ' + component.name);\n          }\n        }\n\n        this.showDeleteDialog(affected);\n      });\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      this.deleteQuery.listenTo(this.interfaceStoreService.getConsumingComponents(this.nodeId), (components) => {\n        affected.push('Deleting this interface will affect the following component(s):');\n        affected.push(' ' + components.node.component.name);\n        for (const c of components.node.consumedBy.nodes) {\n          affected.push(' ' + c.name);\n        }\n\n        this.showDeleteDialog(affected);\n      });\n    }\n  }\n\n  private showDeleteDialog(affected: string[]): void {\n    if (this.nodeType === NodeDetailsType.Component) {\n      const confirmDeleteDialogRef = this.dialog.open(RemoveDialogComponent, {\n        data: {\n          title: 'Really delete component \"' + this.component.node.name + '\"?',\n          messages: [\n            'Are you sure you want to delete the component \"' + this.component.node.name + '\"?',\n            'This action cannot be undone!'\n          ].concat(affected),\n          verificationName: this.component.node.name\n        }\n      });\n\n      confirmDeleteDialogRef.afterClosed().subscribe((deleteData) => {\n        if (deleteData) {\n          this.deleteQuery.listenTo(this.componentStoreService.deleteComponent(this.nodeId), () => {\n            this.notify.notifyInfo('Successfully deleted component \"' + this.component.node.name + '\"\"');\n            if (this.callback) {\n              this.callback(true);\n            }\n          });\n        }\n      });\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      const confirmDeleteDialogRef = this.dialog.open(RemoveDialogComponent, {\n        data: {\n          title: 'Really delete interface \"' + this.interface.node.name + '\"?',\n          messages: [\n            'Are you sure you want to delete the interface \"' + this.interface.node.name + '\"?',\n            'This action cannot be undone!'\n          ].concat(affected),\n          verificationName: this.interface.node.name\n        }\n      });\n\n      confirmDeleteDialogRef.afterClosed().subscribe((deleteData) => {\n        // dialog returns if the deleting was successful\n        if (deleteData) {\n          this.deleteQuery.listenTo(this.interfaceStoreService.delete(this.nodeId), () => {\n            this.notify.notifyInfo('Successfully deleted interface \"' + this.interface.node.name + '\"');\n            if (this.callback) {\n              this.callback(true);\n            }\n          });\n        }\n      });\n    }\n  }\n\n  public onSaveClick(): void {\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.component.node.name = this.validationName.value;\n      // FIXME\n      // this.component.node.ims.imsType = this.validationProvider.value;\n      this.component.node.description = this.validationDescription.value;\n      this.updateComponent();\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      this.interface.node.name = this.validationName.value;\n      this.interface.node.description = this.validationDescription.value;\n      this.updateInterface();\n    }\n  }\n\n  private resetValues() {\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.validationName.setValue(this.component.node.name);\n      this.validationIMS.setValue('http://example.ims.com');\n      // FIXME\n      // this.validationProvider.setValue(this.component.node.ims.imsType);\n      this.validationUrl.setValue('http://example.repo.com');\n      this.validationDescription.setValue(this.component.node.description);\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      this.validationName.setValue(this.interface.node.name);\n      this.validationDescription.setValue(this.interface.node.description);\n    }\n  }\n\n  private updateComponent(): void {\n    const input: UpdateComponentInput = {\n      component: this.component.node.id,\n      name: this.component.node.name,\n      description: this.component.node.description\n    };\n\n    this.updateQuery.listenTo(this.componentStoreService.updateComponent(input), () => {\n      this.editMode = false;\n      if (this.callback) {\n        this.callback(false);\n      }\n    });\n  }\n\n  private updateInterface(): void {\n    const MutationinputData: UpdateComponentInterfaceInput = {\n      componentInterface: this.interface.node.id,\n      name: this.interface.node.name,\n      description: this.interface.node.description\n    };\n\n    this.updateQuery.listenTo(this.interfaceStoreService.update(MutationinputData), () => {\n      this.editMode = false;\n      if (this.callback) {\n        this.callback(false);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n      \n\n      \n        \n          \n            \n              \n                Name\n                \n                 Invalid component name \n              \n              \n                Repository-URL\n                \n                 Enter a valid URL \n              \n            \n\n            \n              \n                Provider Type\n                \n                 Enter a valid URL \n              \n              \n                Provider Type (IMS)\n                \n                  GitHub\n                \n                 Select the Provider \n              \n\n              \n                IMS-URL\n                \n                 Enter a valid URL \n              \n            \n\n            \n              \n                Description\n                \n              \n            \n          \n          \n            \n              \n                Name\n                \n                 Name your Interface \n              \n\n              \n                Interface Type\n                \n                 Enter a valid URL \n              \n            \n\n            \n              \n                Description\n                \n              \n            \n          \n\n          \n            \n              edit\n              Edit {{ getNodeTypeString().toLowerCase() }}\n            \n\n            \n              \n                \n                  save\n                  Save changes\n                \n              \n            \n\n            \n              cancel\n              Discard changes\n            \n\n            \n              \n                delete\n                Delete {{ getNodeTypeString().toLowerCase() }}\n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./node-details.component.scss\n                \n                .description-field {\n  min-height: 50px;\n}\n\n.row {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n}\n\n.row > * {\n  margin-right: 4px;\n  flex-grow: 1;\n}\n\n.row > *:last-child {\n  margin-right: 0;\n  flex-grow: 1;\n}\n\n:host ::ng-deep .mat-tab-body-wrapper {\n  height: 100%;\n}\n\n:host ::ng-deep .mat-tab-body.mat-tab-body-active {\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                              Name                                 Invalid component name                                             Repository-URL                                 Enter a valid URL                                                                     Provider Type                                 Enter a valid URL                                             Provider Type (IMS)                                  GitHub                                 Select the Provider                                             IMS-URL                                 Enter a valid URL                                                                     Description                                                                                                        Name                                 Name your Interface                                             Interface Type                                 Enter a valid URL                                                                     Description                                                                                        edit              Edit {{ getNodeTypeString().toLowerCase() }}                                                                        save                  Save changes                                                                    cancel              Discard changes                                                      delete                Delete {{ getNodeTypeString().toLowerCase() }}                                                        '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'NodeDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NodeDetailsPageComponent.html":{"url":"components/NodeDetailsPageComponent.html","title":"component - NodeDetailsPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NodeDetailsPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/node-details-page/node-details-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./node-details-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./node-details-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nodeId\n                            \n                            \n                                nodeType\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNodeUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, changeDetector: ChangeDetectorRef, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/node-details-page/node-details-page.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onNodeUpdate\n                        \n                    \n                \n            \n            \n                \nonNodeUpdate(deleted: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details-page/node-details-page.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deleted\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nodeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details-page/node-details-page.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeDetailsType\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details-page/node-details-page.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details-page/node-details-page.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {NodeDetailsType} from '@app/node-details/node-details.component';\n\n@Component({\n  templateUrl: './node-details-page.component.html',\n  styleUrls: ['./node-details-page.component.scss']\n})\nexport class NodeDetailsPageComponent implements OnInit {\n  nodeType: NodeDetailsType = null;\n  nodeId: string = null;\n  projectId: string = null;\n\n  constructor(private route: ActivatedRoute, private changeDetector: ChangeDetectorRef, private router: Router) {}\n\n  ngOnInit() {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    const componentId = this.route.snapshot.paramMap.get('componentId');\n    const interfaceId = this.route.snapshot.paramMap.get('interfaceId');\n\n    if (componentId !== null) {\n      this.nodeId = componentId;\n      this.nodeType = NodeDetailsType.Component;\n    } else if (interfaceId !== null) {\n      this.nodeId = interfaceId;\n      this.nodeType = NodeDetailsType.Interface;\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  onNodeUpdate(deleted: boolean): void {\n    if (deleted) {\n      this.router.navigate(['/projects/' + this.projectId + '/graph']);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./node-details-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'NodeDetailsPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NodeId.html":{"url":"interfaces/NodeId.html","title":"interface - NodeId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NodeId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/id.ts\n        \n\n\n            \n                Description\n            \n            \n                Uniquely identifies a node.\nNode IDs are composed of a #type and an #id.\nThe #id corresponds to the ID used in the backend API.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of this node. This is the same as the node ID in the backend API.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         NodeType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of this node.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type NodeIdEnc = string;\nexport type ListIdEnc = string;\n\n/**\n * Backend API node types.\n * The names should match the respective value of `__typename` in the GraphQL data for any given node.\n */\nexport enum NodeType {\n  Root,\n  Component,\n  ComponentInterface,\n  Issue,\n  IssueTimelineItem,\n  Label,\n  Project,\n  Artifact,\n  User,\n  IssueComment\n}\n\n/**\n * Returns the NodeType for a given `__typename` value.\n * `__typename` is a tag found in GraphQL data.\n *\n * @param typename the __typename value\n */\nexport function nodeTypeFromTypename(typename: string) {\n  return NodeType[typename] || null;\n}\n\n/**\n * Uniquely identifies a node.\n *\n * Node IDs are composed of a {@link #type} and an {@link #id}.\n * The {@link #id} corresponds to the ID used in the backend API.\n */\nexport interface NodeId {\n  /**\n   * The type of this node.\n   */\n  type: NodeType;\n  /**\n   * The ID of this node. This is the same as the node ID in the backend API.\n   */\n  id: string;\n}\n\n/**\n * See {@link encodeNodeId}.\n * @param id the encoded node ID\n */\nexport function decodeNodeId(id: NodeIdEnc): NodeId {\n  if (!id) {\n    throw new Error('Could not decode node ID: no id given');\n  }\n  const parts = id.split('/');\n  return {type: NodeType[parts[0]], id: parts[1]};\n}\n\n/**\n * Encodes a {@link NodeId} into a string.\n * This is due to a limitation in Javascript where objects cannot be `==` compared with each other\n * apart from identity. Encoding them as a string allows `NodeId`s to be used as object or `Map` keys.\n *\n * @param nd the node ID\n */\nexport function encodeNodeId(nd: NodeId): NodeIdEnc {\n  return NodeType[nd.type] + '/' + nd.id;\n}\n\n/** The ID of the root node. */\nexport const ROOT_NODE = {type: NodeType.Root, id: ''};\n\n/** The special ID of the current user node. */\nexport const CURRENT_USER_NODE = {type: NodeType.User, id: 'self'};\n\n/**\n * All list types represent their respective list queries in the backend API.\n */\nexport enum ListType {\n  Projects,\n  Components,\n  ComponentInterfaces,\n  Issues,\n  IssuesOnLocation,\n  IssueLocations,\n  TimelineItems,\n  Labels,\n  Artifacts,\n  Participants,\n  Assignees,\n  SearchUsers,\n  LinkedIssues,\n  LinkedByIssues\n}\n\n/**\n * Uniquely identifies a list of items.\n *\n * Lists are always attached to a specific node.\n * For example, a list of issues may be attached to a project or a component.\n *\n * Lists that do not have a specific parent node in the backend API are attached to the\n * {@link ROOT_NODE}.\n *\n * #### Examples\n * The list of all issues on a component:\n * ```ts\n * { node: { type: NodeType.Component, id: '...' }, type: ListType.Issues }\n * ```\n *\n * The list of linked issues on an issue:\n * ```ts\n * { node: { type: NodeType.Issue, id: '...' }, type: ListType.LinkedIssues }\n * ```\n */\nexport interface ListId {\n  /**\n   * The parent node.\n   */\n  node: NodeId;\n  /**\n   * The type of list.\n   */\n  type: ListType;\n}\n\n/** List cursor and filter. */\nexport interface ListParams {\n  /** Cursor node. */\n  cursor?: NodeId;\n  /** Max number of items to load. */\n  count: number;\n  /** Whether to look forward from the cursor, or backwards. */\n  forward: boolean;\n  /** The filter. */\n  filter?: F;\n}\n\n/**\n * See {@link decodeListId}.\n * @param id an encoded List ID\n */\nexport function decodeListId(id: ListIdEnc): ListId {\n  if (!id) {\n    throw new Error('Could not decode list ID: no id given');\n  }\n  const parts = id.split('#');\n  return {node: decodeNodeId(parts[0]), type: ListType[parts[1]]};\n}\n\n/**\n * Encodes a List ID into a string.\n *\n * See {@link encodeNodeId} for more details.\n * @param ld a List ID\n */\nexport function encodeListId(ld: ListId): ListIdEnc {\n  return encodeNodeId(ld.node) + '#' + ListType[ld.type];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Position.html":{"url":"interfaces/Position.html","title":"interface - Position","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Position\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode,\n  ComponentNode,\n  InterfaceNode,\n  IssueGroupContainerNode,\n  RelationEdge,\n  createComponentNode,\n  createInterfaceNode,\n  createIssueGroupContainerNode,\n  createIssueFolderNode,\n  createRelationEdge,\n  createConsumptionEdge,\n  createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set()\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0\n    }\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: []\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Positions.html":{"url":"interfaces/Positions.html","title":"interface - Positions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Positions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface specifying the content of the graph component local storage\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            issueGroups\n                                        \n                                \n                                \n                                        \n                                            nodes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        issueGroups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueGroups:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Positions (north, south, east, west) of the issue groups\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Positions of the nodes as the user arranged them\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {AfterViewInit, Component, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {DraggedEdge, Edge, Point} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Rect} from '@ustutt/grapheditor-webcomponent/lib/util';\nimport {BehaviorSubject, ReplaySubject, Subject} from 'rxjs';\nimport {debounceTime, takeUntil} from 'rxjs/operators';\nimport {IssueGraphStateService} from '../../data/issue-graph/issue-graph-state.service';\nimport {IssueGroupContainerBehaviour, IssueGroupContainerParentBehaviour} from './group-behaviours';\nimport {CreateInterfaceDialogComponent} from '@app/dialogs/create-interface-dialog/create-interface-dialog.component';\nimport {StateService} from '@app/state.service';\nimport {CreateInterfaceData} from '../../dialogs/create-interface-dialog/create-interface-dialog.component';\nimport {GraphData} from '../../data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport * as issueGraphNodes from './issue-graph-nodes';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CreateComponentDialogComponent} from '@app/dialogs/create-component-dialog/create-component-dialog.component';\nimport {ComponentStoreService} from '@app/data/component/component-store.service';\nimport {InterfaceStoreService} from '@app/data/interface/interface-store.service';\nimport * as componentContextMenuComponent from '@app/graphs/component-context-menu/component-context-menu.component';\nimport {NodeDetailsType} from '@app/node-details/node-details.component';\nimport {doGraphLayout, LayoutNode} from '@app/graphs/automatic-layout';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {IssueGraphClassSettersService} from './class-setters/issue-graph-class-setters.service';\nimport {IssueGraphLinkHandlesService} from './link-handles/issue-graph-link-handles.service';\nimport {IssueGraphDynamicTemplateRegistryService} from './dynamic-template-registry/issue-graph-dynamic-template-registry.service';\n\n/**\n * Interface specifying the content of the graph component local storage\n */\ninterface Positions {\n  /** Positions of the nodes as the user arranged them */\n  nodes: {[prop: string]: Point};\n  /** Positions (north, south, east, west) of the issue groups */\n  issueGroups: {[node: string]: string};\n}\n\n/**\n * This component creates nodes and edges in the embedded MICO GraphEditor\n * (html tag: ) to reflect the data for the current project.\n * This data consists of the project's interfaces, components, issues and their relations and\n * is stored in this.graphData. The key method for this purpose is drawGraph().\n * This component is also responsible for registering event listeners with the GraphEditor.\n */\n@Component({\n  selector: 'app-issue-graph',\n  templateUrl: './issue-graph.component.html',\n  styleUrls: ['./issue-graph.component.css']\n})\nexport class IssueGraphComponent implements OnInit, OnDestroy, AfterViewInit {\n  constructor(\n    private dialog: MatDialog,\n    private gs: IssueGraphStateService,\n    private ss: StateService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private componentStoreService: ComponentStoreService,\n    private interfaceStoreService: InterfaceStoreService,\n    private componentContextMenuService: componentContextMenuComponent.ComponentContextMenuService,\n    private breakPointObserver: BreakpointObserver,\n    private issueGraphClassSettersService: IssueGraphClassSettersService,\n    private issueGraphLinkHandlesService: IssueGraphLinkHandlesService,\n    private issueGraphDynamicTemplateRegistryService: IssueGraphDynamicTemplateRegistryService\n  ) {}\n\n  // references the graph template\n  @ViewChild('graph', {static: true}) graphWrapper: {\n    nativeElement: GraphEditor;\n  };\n\n  // references the minimap template\n  @ViewChild('minimap', {static: true}) minimap: {\n    nativeElement: GraphEditor;\n  };\n\n  currentVisibleArea: Rect = {x: 0, y: 0, width: 1, height: 1};\n  @Input() projectId: string;\n\n  readonly zeroPosition = {x: 0, y: 0};\n\n  private componentContextMenu: componentContextMenuComponent.ComponentContextMenuComponent;\n  private componentContextMenuNodeId: number | string;\n  private destroy$ = new ReplaySubject(1);\n\n  // reference to the GraphEditor instance of the graph\n  private graph: GraphEditor;\n\n  // contains all data about the projects interfaces, components, issues and their relations\n  // that is needed in order to create nodes and edges in the grapheditor to visualize the project\n  public graphData: GraphData;\n  private graphFirstRender = true;\n\n  // indicates whether graph is initialized\n  private graphInitialized = false;\n  private isHandset = false;\n\n  // contains nodes representing interfaces and components which utilize node groups for display of issue folders\n  private issueGroupParents: Node[] = [];\n\n  // local storage key for positions of graph elements\n  private projectStorageKey: string;\n\n  // The component details page moves the graph sometimes a bit,\n  // so dont move back when closing the component details page\n  private redrawByCloseOfComponentDetails = false;\n\n  // when a new graph state arrives it is passed to the graph\n  // and a graph redraw is issued\n  // (check IssueGraphControlsComponents ngAfterViewInit for more information)\n  public reload$: BehaviorSubject = new BehaviorSubject(null);\n  private reloadOnMouseUp = false;\n\n  // Saved positions of the nodes and the issue groups\n  private savedPositions: Positions = {nodes: {}, issueGroups: {}};\n  // Responsible for saving the node positions to local storage\n  private savePositionsSubject = new Subject();\n\n  // used in the drawGraph method true on first draw and after component creation, effects a zoom to bounding box\n  private zoomOnRedraw = true;\n\n  /**\n   * Gets reference to the MICO GraphEditor instance of the graph and initializes it.\n   */\n  ngAfterViewInit(): void {\n    this.graph = this.graphWrapper.nativeElement;\n    this.initGraph();\n  }\n\n  /**\n   * Sets up a local storage key for graph element positions.\n   */\n  ngOnInit() {\n    this.projectStorageKey = `CCIMS-Project_${this.projectId}`;\n    this.breakPointObserver.observe(Breakpoints.Handset).subscribe((r) => (this.isHandset = r.matches));\n  }\n\n  /**\n   * Cancels all subscriptions on component destruction.\n   */\n  ngOnDestroy() {\n    // saves the current zoom details of the graph for when the user comes back to the graph\n    localStorage.setItem(`zoomTransform_${this.projectStorageKey}`, JSON.stringify(this.graph.currentZoomTransform));\n\n    // saves the current bounding box of the graph for when the user comes back to the graph\n    localStorage.setItem(`zoomBoundingBox_${this.projectStorageKey}`, JSON.stringify(this.graph.currentViewWindow));\n\n    this.destroy$.next();\n    this.closeComponentActions();\n  }\n\n  /**\n   * 1) Sets up a subscription for node positions\n   * 2) and initializes the graph.\n   * Also manages:\n   * 3) class setters with the graph editor\n   * that apply css classes based on the edge and node types,\n   * 4) the link handle calculation,\n   * 5) the edge drag behaviour,\n   * 6) the dynamic template registry.\n   * 7) and various event listeners on the graph.\n   */\n  initGraph() {\n    // case: graph already initialized\n    if (this.graphInitialized) {\n      return;\n    }\n\n    // loads saved positions\n    this.savedPositions = this.loadSavedPositions();\n\n    // 1) subscribes to the subject emitting node positions\n    this.subscribeToSubject();\n\n    // 2) initializes the graph\n    this.graphInitialized = true;\n\n    // references to the GraphEditor instance of the graph / minimap\n    const graph: GraphEditor = this.graphWrapper.nativeElement;\n    const minimap: GraphEditor = this.minimap.nativeElement;\n\n    // 3) manages the node / edge class setters\n    this.issueGraphClassSettersService.manageClassSetters(graph, minimap);\n\n    // 4) manages the edge link handles\n    this.issueGraphLinkHandlesService.manageLinkHandles(graph, minimap);\n\n    // 5) manages the edge drag behaviour\n    this.manageDragBehaviour(graph);\n\n    // 6) manages the dynamic template registry\n    this.issueGraphDynamicTemplateRegistryService.manageDynamicTemplateRegistry(graph);\n\n    // 7) manages the event listeners\n    this.manageEventListeners(graph, minimap);\n  }\n\n  /**\n   * Loads positions of graph elements from the local storage.\n   * @returns Parsed positions\n   */\n  private loadSavedPositions(): Positions {\n    // gets data from the local storage\n    const data = localStorage.getItem(this.projectStorageKey);\n\n    // case: there is no data\n    if (data == null) {\n      return {nodes: {}, issueGroups: {}};\n    }\n\n    return JSON.parse(data);\n  }\n\n  /**\n   * Subscribes to the subject emitting node positions.\n   */\n  private subscribeToSubject() {\n    this.savePositionsSubject.pipe(takeUntil(this.destroy$), debounceTime(300)).subscribe(() => {\n      console.log('Setting: ', this.projectStorageKey);\n\n      // case: there are saved positions\n      if (this.savedPositions != null) {\n        const newData = JSON.stringify(this.savedPositions);\n        localStorage.setItem(this.projectStorageKey, newData);\n      }\n    });\n  }\n\n  /**\n   * Manages the edge drag behaviour of given GraphEditor instance.\n   * @param graph Reference to the GraphEditor instance of the graph that is handled.\n   */\n  private manageDragBehaviour(graph: GraphEditor) {\n    // applies functionality for when an edge is created\n    graph.onCreateDraggedEdge = this.onCreateEdge;\n\n    // applies functionality for when an edge is dragged (and its target is changed)\n    graph.onDraggedEdgeTargetChange = this.onDraggedEdgeTargetChanged;\n\n    // applies functionality for when an edge is added\n    graph.addEventListener('edgeadd', this.onEdgeAdd);\n\n    // applies functionality for when an edge is removed\n    graph.addEventListener('edgeremove', this.onEdgeRemove);\n\n    // applies functionality for when an edge is dropped\n    graph.addEventListener('edgedrop', this.onEdgeDrop);\n  }\n\n  /**\n   * Method gets triggered after an edge gets created,\n   * it can either be of type provider or consumer.\n   * @param edge Edge that is handled.\n   */\n  private onCreateEdge = (edge: DraggedEdge) => {\n    const graph: GraphEditor = this.graphWrapper.nativeElement;\n    const sourceNode = graph.getNode(edge.source);\n\n    // case: edge created from an existing edge\n    // => allows deletion or dropping at the same node\n    if (edge.createdFrom != null) {\n      const original = graph.getEdge(edge.createdFrom);\n      edge.validTargets.clear();\n      edge.validTargets.add(original.target.toString());\n      return edge;\n    }\n\n    // case: edge originates from a component\n    if (sourceNode.type === issueGraphNodes.NodeType.Component) {\n      // updates edge properties (no drag handles)\n      edge.type = issueGraphNodes.NodeType.Interface;\n      edge.dragHandles = [];\n\n      // updates valid targets\n      edge.validTargets.clear();\n\n      // updates marker at the end of the edge\n      edge.markerEnd = {\n        template: 'interface-connector-initial',\n        relativeRotation: 0,\n        absoluteRotation: 0\n      };\n\n      // allows only interfaces as targets\n      graph.nodeList.forEach((node) => {\n        if (node.type === issueGraphNodes.NodeType.Interface) {\n          edge.validTargets.add(node.id.toString());\n        }\n      });\n\n      // allows only new targets\n      graph.getEdgesBySource(sourceNode.id).forEach((existingEdge) => {\n        edge.validTargets.delete(existingEdge.target.toString());\n      });\n    }\n\n    return edge;\n  };\n\n  /**\n   * Method gets triggered after an edge gets dragged\n   * and its target is changed:\n   * ex. consumer edge gets moved away from the provider edge.\n   * @param edge Edge that is handled.\n   * @param sourceNode Source of the handled edge.\n   * @param targetNode Target of the handled edge.\n   * @returns Edge that is handled.\n   */\n  private onDraggedEdgeTargetChanged = (edge: DraggedEdge, sourceNode: Node, targetNode: Node) => {\n    // case: edge originates from a component\n    if (sourceNode.type === issueGraphNodes.NodeType.Component) {\n      // case: target of edge is an interface\n      // => handles edge as of type consumer\n      if (targetNode?.type === issueGraphNodes.NodeType.Interface) {\n        // updates edge properties (default drag handle)\n        edge.type = issueGraphNodes.NodeType.InterfaceConsumer;\n        delete edge.dragHandles;\n\n        // updates marker at the end of the edge\n        edge.markerEnd = {\n          template: 'interface-connector',\n          relativeRotation: 0\n        };\n      }\n      // case: target of edge is not an interface (aka. null)\n      // => handles edge as of type provider\n      else {\n        // updates edge properties (no drag handles)\n        edge.type = issueGraphNodes.NodeType.Interface;\n        edge.dragHandles = [];\n\n        // updates marker at the end of the edge\n        // ? delete edge.markerEnd; ?\n        edge.markerEnd = {\n          template: 'interface-connector-initial',\n          relativeRotation: 0,\n          absoluteRotation: 0\n        };\n      }\n    }\n\n    return edge;\n  };\n\n  /**\n   * Method gets triggered after an edge gets added.\n   * @param event Event that is handled.\n   */\n  private onEdgeAdd = (event: CustomEvent) => {\n    const edge: Edge = event.detail.edge;\n\n    // case: source of event is the API\n    if (event.detail.eventSource === 'API') {\n      return;\n    }\n\n    // case: edge of type interface consumer\n    if (edge.type === issueGraphNodes.NodeType.InterfaceConsumer) {\n      // cancels edge creation\n      event.preventDefault();\n\n      // updates the graph via the API\n      const sourceNode = this.graph.getNode(edge.source);\n      const targetNode = this.graph.getNode(edge.target);\n\n      // case: edge has source and target\n      // => adds edge of type interface provider\n      if (sourceNode != null && targetNode != null) {\n        this.gs.addConsumedInterface(sourceNode.id.toString(), targetNode.id.toString()).subscribe(() => this.reload$.next(null));\n      }\n    }\n  };\n\n  /**\n   * Method gets triggered after an edge gets dropped.\n   * @param event Event that is handled.\n   */\n  private onEdgeDrop = (event: CustomEvent) => {\n    const edge: DraggedEdge = event.detail.edge;\n\n    // case: source of event is the API\n    if (event.detail.eventSource === 'API') {\n      return;\n    }\n\n    // case: edge created from an existing edge\n    if (edge.createdFrom != null) {\n      return;\n    }\n\n    // case: edge of type interface\n    // => opens the interface creation dialog\n    if (edge.type === issueGraphNodes.NodeType.Interface) {\n      this.addInterfaceToComponent(event.detail.sourceNode.id, event.detail.dropPosition);\n    }\n  };\n\n  /**\n   * Opens the interface creation dialog. If the user actually creates the interface\n   * it is added to the providing component at the position\n   * where the dragged edge was dropped by the user (before opening the interface creation dialog).\n   * @param offeredById Id of the component that will provide the interface.\n   * @param position Position of the interface.\n   */\n  private addInterfaceToComponent(offeredById: string, position: issueGraphNodes.Position) {\n    // interface data\n    const data: CreateInterfaceData = {\n      position,\n      offeredById\n    };\n\n    // interface dialog reference\n    const createInterfaceDialogRef = this.dialog.open(CreateInterfaceDialogComponent, {\n      data\n    });\n\n    // subscribes ...\n    createInterfaceDialogRef.afterClosed().subscribe((interfaceId) => {\n      this.savedPositions.nodes[interfaceId] = {\n        x: position.x,\n        y: position.y\n      };\n      this.savePositionsSubject.next();\n      this.reload$.next(null);\n    });\n  }\n\n  /**\n   * Method gets triggered after an edge gets removed.\n   * @param event Event that is handled.\n   */\n  private onEdgeRemove = (event: CustomEvent) => {\n    const edge: Edge = event.detail.edge;\n\n    // case: source of event is the API\n    if (event.detail.eventSource === 'API') {\n      return;\n    }\n\n    // case: edge of type interface consumer\n    if (edge.type === issueGraphNodes.NodeType.InterfaceConsumer) {\n      // cancels edge deletion\n      event.preventDefault();\n\n      // updates the graph via the API\n      const graph: GraphEditor = this.graphWrapper.nativeElement;\n      const sourceNode = graph.getNode(edge.source);\n      const targetNode = graph.getNode(edge.target);\n\n      // case: edge has source and target\n      // => removes edge of type interface provider\n      if (sourceNode != null && targetNode != null) {\n        this.gs.removeConsumedInterface(sourceNode.id.toString(), targetNode.id.toString()).subscribe(() => this.reload$.next(null));\n      }\n    }\n  };\n\n  /**\n   * Adds event listeners to a given GraphEditor instance.\n   * @param graph Reference to the GraphEditor instance of the graph that is handled.\n   * @param minimap Reference to the GraphEditor instance of the minimap that is handled.\n   */\n  private manageEventListeners(graph: GraphEditor, minimap: GraphEditor) {\n    // applies functionality for when a node is clicked\n    graph.addEventListener('nodeclick', this.onNodeClick);\n\n    // applies functionality for when the position of a node is changed\n    graph.addEventListener('nodepositionchange', (e: CustomEvent) => {\n      if (this.closeComponentActions(false)) {\n        this.reloadOnMouseUp = true;\n      }\n    });\n\n    // TODO: document and extract\n    graph.addEventListener('nodedragend', (event: CustomEvent) => {\n      const node = event.detail.node;\n      if (node.type === issueGraphNodes.NodeType.IssueGroupContainer) {\n        this.savedPositions.issueGroups[node.id] = node.position;\n      }\n\n      // store node positioning information\n      this.savedPositions.nodes[node.id] = {\n        x: node.x,\n        y: node.y\n      };\n      this.savePositionsSubject.next();\n      if (this.reloadOnMouseUp) {\n        this.reloadOnMouseUp = false;\n        this.zoomOnRedraw = false;\n        this.reload();\n      }\n    });\n\n    // applies functionality for when a node is added to the minimap\n    graph.addEventListener('nodeadd', (event: CustomEvent) => {\n      if (event.detail.node.type === issueGraphNodes.NodeType.IssueGroupContainer) {\n        return;\n      }\n      const node = event.detail.node;\n      minimap.addNode(node);\n    });\n\n    // applies functionality for when a node is removed from the minimap\n    graph.addEventListener('noderemove', (event: CustomEvent) => {\n      const node = event.detail.node;\n      if (event.detail.node.type !== issueGraphNodes.NodeType.IssueGroupContainer) {\n        minimap.removeNode(node);\n      }\n    });\n\n    // applies functionality for when an edge is added to the minimap\n    graph.addEventListener('edgeadd', (event: CustomEvent) => {\n      minimap.addEdge(event.detail.edge);\n    });\n\n    // applies functionality for when an edge is removed from the minimap\n    graph.addEventListener('edgeremove', (event: CustomEvent) => {\n      minimap.removeEdge(event.detail.edge);\n    });\n\n    // applies functionality for when the minimap is rendered\n    graph.addEventListener('render', this.onMinimapRender(minimap));\n\n    // Close the component context menu when clicking anywhere in the graph\n    graph.addEventListener('click', (e) => this.closeComponentActions());\n\n    // applies functionality for when the zoom is changed\n    graph.addEventListener('zoomchange', (event: CustomEvent) => {\n      this.currentVisibleArea = event.detail.currentViewWindow;\n      if (!this.componentContextMenu) {\n        return;\n      }\n\n      // Update component context menu position when zoom changed\n      const node = this.graph.getNode(this.componentContextMenuNodeId);\n      const [x, y] = this.graph.currentZoomTransform.apply([node.x, node.y]);\n      this.componentContextMenu.updatePosition(Math.max(x, 0), Math.max(y, 0));\n    });\n  }\n\n  /**\n   * Method gets triggered after a node is clicked.\n   * @param event Event that is handled.\n   */\n  private onNodeClick = (event: CustomEvent) => {\n    // cancels node selection\n    event.preventDefault();\n\n    const node: Node = event.detail.node;\n\n    // Close existing context menu if the user clicked twice on the same node\n    if (this.componentContextMenu && this.componentContextMenu.data.nodeId === node.id) {\n      this.closeComponentActions();\n      return;\n    }\n\n    // Close context menu if one is already open\n    this.closeComponentActions();\n\n    // doesn't allow the view of the graph to change after the Details page has been closed\n    this.redrawByCloseOfComponentDetails = true;\n\n    // Open the details in a new page if a phone is used or if shift is pressed\n    if (event.detail.sourceEvent.shiftKey || this.isHandset) {\n      // case: node of type Component\n      // => opens View Component page\n      if (node.type === issueGraphNodes.NodeType.Component) {\n        this.router.navigate(['./component/', node.id], {\n          relativeTo: this.activatedRoute.parent\n        });\n        return;\n      }\n\n      // case: node of type Interface\n      // => opens View Interface page\n      if (node.type === issueGraphNodes.NodeType.Interface) {\n        this.router.navigate(['./interface/', node.id], {\n          relativeTo: this.activatedRoute.parent\n        });\n        return;\n      }\n    } else {\n      // sets the context menu type\n      const contextMenuType = this.contextMenuTypeForNodeType(node);\n\n      // case: context menu has a type\n      if (contextMenuType != null) {\n        this.nodeClickContextMenuHasType(node, event, contextMenuType);\n        return;\n      }\n    }\n\n    // case: clicked issue folder\n    // => determines issue count, opens corresponding issue page\n    this.nodeClickIssueFolder(node);\n  };\n\n  /**\n   * Sets the context menu type.\n   * @param node Node that is handled.\n   */\n  private contextMenuTypeForNodeType(node: Node): NodeDetailsType {\n    // case: node of type Component\n    // => sets the context menu type as Component\n    if (node.type === issueGraphNodes.NodeType.Component) {\n      return NodeDetailsType.Component;\n    }\n\n    // case: node of type Interface\n    // => sets the context menu type as Interface\n    if (node.type === issueGraphNodes.NodeType.Interface) {\n      return NodeDetailsType.Interface;\n    }\n\n    return null;\n  }\n\n  /**\n   * Open the component context menu\n   * @param node Node that is handled\n   * @param event Event that is handled\n   * @param contextMenuType Type of the context menu that is handled\n   */\n  private nodeClickContextMenuHasType(node: Node, event: CustomEvent, contextMenuType: NodeDetailsType) {\n    // Transform the node graph coordinates to screen coordinates\n    const [x, y] = this.graph.currentZoomTransform.apply([node.x, node.y]);\n\n    // Only open the dialog if it will fit into view\n    if (x >= 0 && y >= 0) {\n      this.componentContextMenuNodeId = node.id;\n\n      // Cancel the click event that would otherwise close the dialog again\n      event.detail.sourceEvent.stopImmediatePropagation();\n\n      this.componentContextMenu = this.componentContextMenuService.open(\n        this.graphWrapper.nativeElement,\n        x,\n        y,\n        this.projectId,\n        node.id.toString(),\n        contextMenuType,\n        this\n      );\n\n      // Make sure that the context menu is visible if it extends over the right/bottom edge\n      const visible = this.graph.currentViewWindow;\n      const scale = this.graph.currentZoomTransform.k;\n      // FIXME: this isn't ideal, as the padding is somewhat dependent on the aspect ratio\n      const padding = 85 / scale;\n      const edgeX = visible.width * scale;\n      const edgeY = visible.height * scale;\n      const moveX = Math.max(0, this.componentContextMenu.width + x - edgeX) / scale;\n      const moveY = Math.max(0, this.componentContextMenu.height + y - edgeY) / scale;\n\n      // case: Zoom has to change to make overlay visible\n      if (moveX || moveY) {\n        this.graph.zoomToBox({\n          x: visible.x + moveX + padding,\n          y: visible.y + moveY + padding,\n          width: visible.width - 2 * padding,\n          height: visible.height - 2 * padding\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles the case in which an issue folder is clicked.\n   * Determines the number of issues in the issue folder\n   * and opens the corresponding issue page.\n   * @param node Issue folder that is handled.\n   */\n  private nodeClickIssueFolder(node: Node) {\n    // case: clicked issue folder\n    // => determines issue count, opens corresponding issue page\n    if (node.type === 'BUG' || node.type === 'UNCLASSIFIED' || node.type === 'FEATURE_REQUEST') {\n      // reference to the GraphEditor instance of the graph, the root ID and the root node\n      const graph: GraphEditor = this.graphWrapper.nativeElement;\n      const rootId = graph.groupingManager.getTreeRootOf(node.id);\n      const rootNode = graph.getNode(rootId);\n\n      // case: only one issue inside the clicked issue folder\n      // => opens Issue Details page\n      if (node.issueCount === 1) {\n        this.nodeClickOneIssue(rootId, rootNode, node);\n        return;\n      }\n\n      // case: many issues inside the clicked issue folder\n      // => opens Component Issues / Interface Issues page\n      else {\n        this.nodeClickManyIssues(rootNode);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Handles the case in which the clicked issue folder contains only one issues.\n   * @param rootNode Root node that is handled.\n   * @param rootId Root id that is handled.\n   * @param node Clicked node that is handled.\n   */\n  private nodeClickOneIssue(rootId: string, rootNode: Node, node: Node) {\n    // case: root node of type Component\n    // => handles a single component issue, opens its Issue Details page\n    if (rootNode.type === issueGraphNodes.NodeType.Component) {\n      this.componentStoreService.getFullComponent(rootId).subscribe((component) => {\n        const currentIssueId = this.extractIssueId(component.node.issues.nodes, node.type);\n        this.router.navigate(['./', 'issues', currentIssueId], {\n          relativeTo: this.activatedRoute.parent\n        });\n      });\n    }\n\n    // case: root node of type Interface\n    // => handles a single interface issue, opens its Issue Details page\n    else if (rootNode.type === issueGraphNodes.NodeType.Interface) {\n      this.interfaceStoreService.getInterface(rootId).subscribe((interfaceComponent) => {\n        const currentIssueId = this.extractIssueId(interfaceComponent.node.issuesOnLocation.nodes, node.type);\n        this.router.navigate(['./', 'issues', currentIssueId], {\n          relativeTo: this.activatedRoute.parent\n        });\n      });\n    }\n  }\n\n  /**\n   * Extracts the id of an issue in a given issue list.\n   * @param issueList Ids of the issues that are handled.\n   * @param category Category of issues that are handled.\n   * @returns Id of the first issue (in the issue list) with matching category.\n   */\n  private extractIssueId(issueList, category: string): string {\n    for (const issue of issueList) {\n      if (issue.category === category) {\n        return issue.id;\n      }\n    }\n  }\n\n  /**\n   * Handles the case in which the clicked issue folder contains many issues.\n   * @param rootNode Root node that is handled.\n   */\n  private nodeClickManyIssues(rootNode: Node) {\n    // case: root node of type Component\n    // => handles many component issues, opens their Component Issues page\n    if (rootNode.type === issueGraphNodes.NodeType.Component) {\n      this.router.navigate(['./component/', rootNode.id], {\n        relativeTo: this.activatedRoute.parent\n      });\n    }\n\n    // case: root node of type Interface\n    // => handles many interface issues, opens their Interface Issues page\n    if (rootNode.type === issueGraphNodes.NodeType.Interface) {\n      this.router.navigate(['./interface/', rootNode.id], {\n        relativeTo: this.activatedRoute.parent\n      });\n    }\n  }\n\n  /**\n   * Closes the component context menu, if one is open\n   * @param reload If true, reloads the graph if a context menu was closed\n   */\n  private closeComponentActions(reload: boolean = true): boolean {\n    // case: there are actions to close\n    if (this.componentContextMenu) {\n      // case: redraw of the graph needed\n      // => issues redraw\n      if (reload) {\n        this.reload();\n      }\n\n      // cancels component actions\n      this.componentContextMenu.close();\n      this.componentContextMenu = null;\n      this.componentContextMenuNodeId = null;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Issues a redraw of the graph. ?\n   */\n  public reload(): void {\n    this.reload$.next(null);\n  }\n\n  /**\n   * Method gets triggered when the minimap renders.\n   * @param minimap Minimap that is handled.\n   */\n  private onMinimapRender(minimap: GraphEditor): EventListenerOrEventListenerObject {\n    return (event: CustomEvent) => {\n      // case: renders the minimap completely\n      if (event.detail.rendered === 'complete') {\n        minimap.completeRender();\n        minimap.zoomToBoundingBox();\n      }\n\n      // case: renders texts\n      else if (event.detail.rendered === 'text') {\n        // irrelevant for the minimap\n      }\n\n      // case: renders node classes\n      else if (event.detail.rendered === 'classes') {\n        minimap.updateNodeClasses();\n      }\n\n      // case: renders node positions\n      else if (event.detail.rendered === 'positions') {\n        minimap.updateGraphPositions();\n        minimap.zoomToBoundingBox();\n      }\n    };\n  }\n\n  /**\n   * Responsible for drawing the graph based on this.graphData.\n   * Takes care of adding interfaces and components, and their connections.\n   * Additionally adds issue folders attached to each component and the dashed edges\n   * between them based on this.graphData.relatedFolders\n   */\n  drawGraph() {\n    const boundingBox = this.calculateBoundingBox();\n    // reset graph and remove all elements, gives us clean slate\n    this.resetGraph();\n\n    const layoutGraph = Object.keys(this.savedPositions.nodes).length === 0;\n    // create nodes corresponding to the components and interfaces of the project\n    const componentNodes = Array.from(this.graphData.components.values()).map((component) =>\n      issueGraphNodes.createComponentNode(component, this.findIdealComponentPosition(component.id, boundingBox))\n    );\n    const interfaceNodes = Array.from(this.graphData.interfaces.values()).map((intrface) =>\n      issueGraphNodes.createInterfaceNode(intrface, this.savedPositions.nodes[intrface.id])\n    );\n    // issueNodes contains BOTH componentNodes and interfaceNodes\n    const issueNodes = (componentNodes as issueGraphNodes.IssueNode[]).concat(interfaceNodes as issueGraphNodes.IssueNode[]);\n    // For components AND interfaces: add the edges, issue folders and relations between folders\n    issueNodes.forEach((node) => {\n      this.graph.addNode(node);\n      this.addIssueFolders(node);\n      this.drawFolderRelations(node);\n    });\n    // ONLY for interfaces: create edges connecting interface to offering component and consuming components to interface\n    interfaceNodes.forEach((interfaceNode) => {\n      this.connectToOfferingComponent(interfaceNode);\n      this.connectConsumingComponents(interfaceNode);\n    });\n\n    // render all changes\n    this.graph.completeRender();\n    this.setGraphToLastView();\n    if (layoutGraph && issueNodes.length > 0) {\n      this.layoutGraph();\n      this.drawGraph();\n    }\n  }\n\n  /**\n   * Resets graph state. Called at start of draw(). Enables logic in draw()\n   * to assume a 'blank sheet' state avoiding complex updating logic.\n   */\n  resetGraph() {\n    this.graph.edgeList = [];\n    this.graph.nodeList = [];\n    this.issueGroupParents = [];\n    this.graph.groupingManager.clearAllGroups();\n  }\n\n  /**\n   * Finds the ideal component position if none is saved.\n   * @param id Id of component that is handled.\n   * @param boundingBox Bounding box of the component that is handled.\n   */\n  findIdealComponentPosition(id: string, boundingBox: Rect): Point {\n    // saved position\n    const saved = this.savedPositions.nodes[id];\n\n    // case: there is a saved position\n    // => return it\n    if (saved) {\n      return saved;\n    }\n\n    // calculates the ideal position\n    const point = {x: 0, y: 0};\n    if (boundingBox) {\n      point.x = boundingBox.x + boundingBox.width + 60;\n      point.y = boundingBox.y + boundingBox.height / 2;\n    }\n\n    // saves the ideal position\n    this.savedPositions.nodes[id] = point;\n\n    return point;\n  }\n\n  /**\n   * Creates and adds an edge between the node representing a component\n   * an the node representing the interface itself.\n   * @param node - Interface that is handled.\n   */\n  connectToOfferingComponent(node: issueGraphNodes.InterfaceNode) {\n    this.graph.addEdge(issueGraphNodes.createInterfaceProvisionEdge(node.offeredById, node.id));\n  }\n\n  /**\n   * Adds an edge from each connected component to the interface.\n   * @param interfaceNode - Interface (visualized by lollipop notation) that is handled.\n   */\n  connectConsumingComponents(interfaceNode: issueGraphNodes.InterfaceNode) {\n    for (const consumerId of this.graphData.interfaces.get(interfaceNode.id).consumedBy) {\n      this.graph.addEdge(issueGraphNodes.createConsumptionEdge(consumerId, interfaceNode.id));\n    }\n  }\n\n  /**\n   * Adds the issue folders with counts for each IssueCategory (currently 3)\n   * to the component or interface represented by node. The first methods call\n   * sets up invisible nodes in the graph to make the folders display properly.\n   * The second method takes care of actually adding the visible folders with\n   * the correct counts.\n   * @param node - Interface / component that is handled.\n   */\n  private addIssueFolders(node: issueGraphNodes.IssueNode) {\n    this.addIssueGroupContainer(node);\n    this.addIssueFolderNodes(node);\n  }\n\n  /**\n   * Creates the node groups necessary for displaying issue folders attached to a node.\n   * A Node represents a component or an interface.\n   * It also gets an issue group of IssueGroupContainerParentBehaviour,\n   * issueGroupContainerNode with IssueGroupContainerBehaviour gets added to it.\n   * This corresponds to the 4 'Grouping Manager' object\n   * on the upper two levels in the graph_structure_documentation.png.\n   * @param node - Node (component or interface) which can have issue folders attached.\n   */\n  private addIssueGroupContainer(node: issueGraphNodes.IssueNode) {\n    const gm = this.graph.groupingManager;\n    gm.markAsTreeRoot(node.id);\n    const issueGroupContainerNode = issueGraphNodes.createIssueGroupContainerNode(node);\n    const initialPosition = this.savedPositions.issueGroups[issueGroupContainerNode.id];\n    gm.setGroupBehaviourOf(node.id, new IssueGroupContainerParentBehaviour(initialPosition));\n\n    // the issueGroupContainerNode has no visual representation but contains the visible issue folders\n    node.issueGroupContainer = issueGroupContainerNode;\n    this.graph.addNode(issueGroupContainerNode);\n    gm.addNodeToGroup(node.id, issueGroupContainerNode.id);\n    gm.setGroupBehaviourOf(issueGroupContainerNode.id, new IssueGroupContainerBehaviour());\n    this.issueGroupParents.push(node);\n  }\n\n  /**\n   * This method presumes that node has the 4 'Grouping Manager Objects'\n   * depicted on the the upper levels in the graph_structure_documentation.png.\n   * correctly setup.\n   * @param node Interface / component that is handled.\n   */\n  private addIssueFolderNodes(node: issueGraphNodes.IssueNode) {\n    // get mapping from IssueCategory to number for the component or interface represented by node\n    const issueCounts = this.graphData.graphLocations.get(node.id).issues;\n    // iterate over issue categories and create a node if there is at least one issue of it\n    Object.keys(IssueCategory).forEach((key) => {\n      const issueCategory = IssueCategory[key];\n      if (issueCounts.has(issueCategory)) {\n        const count = issueCounts.get(issueCategory);\n        // only show folders for issue categories with at least one issue\n        if (count > 0) {\n          const issueFolderNode = issueGraphNodes.createIssueFolderNode(node, issueCategory, count.toString());\n          this.graph.addNode(issueFolderNode);\n          this.graph.groupingManager.addNodeToGroup(node.issueGroupContainer.id, issueFolderNode.id);\n        }\n      }\n    });\n  }\n\n  /**\n   * Draws folder relations originating from the issue folder represented by node.\n   * @param node - Issue folder (for issues of a certain type) that is handled.\n   */\n  private drawFolderRelations(node: issueGraphNodes.IssueNode) {\n    // @ts-ignore\n    const folderNodes: IssueFolderNode[] = Array.from(node.issueGroupContainer.issueGroupNodeIds).map((id: string) =>\n      this.graph.getNode(id)\n    );\n    for (const folderNode of folderNodes) {\n      const relatedFolders = this.graphData.relatedFolders.getValue([node.id.toString(), folderNode.type]);\n      for (const relatedFolder of relatedFolders) {\n        const [issueNodeId, category] = relatedFolder;\n        const edge = issueGraphNodes.createRelationEdge(folderNode.id, issueGraphNodes.getIssueFolderId(issueNodeId, category));\n        this.graph.addEdge(edge);\n      }\n    }\n  }\n\n  /**\n   * Sets the view and the bounding box of the graph to how it was when the user left the graph with the help of localStorage.\n   * When theres no previous session available set the view to the optimized bounding box for the graph.\n   */\n  private setGraphToLastView() {\n    // The previous currentViewWindow of the graph as JSON string\n    const previousBoundingBoxAsString = localStorage.getItem(`zoomBoundingBox_${this.projectStorageKey}`);\n    // The previous zoomTransform of the graph as JSON string\n    const zoomTransformAsString = localStorage.getItem(`zoomTransform_${this.projectStorageKey}`);\n    // Only set the bounding box to the optimized bounding box for the graph when creating the first component\n    const firstComponent = this.graphData.components.size === 1 ? true : false;\n\n    // Set the bounding box to the bounding box of the last session or to the optimized bounding box if there wasnt a last session\n    if (\n      JSON.parse(previousBoundingBoxAsString) !== null &&\n      JSON.parse(zoomTransformAsString) !== null &&\n      this.graphFirstRender &&\n      !this.redrawByCloseOfComponentDetails &&\n      !firstComponent\n    ) {\n      const previousBoundingBox = JSON.parse(previousBoundingBoxAsString);\n      /* These calculations are necessary because of how GraphEditor.zoomToBox(box: Rect) works. GraphEditor.zoomToBox zooms to\n      the given box and adds some padding.These calculations get rid of the padding. Otherwise the padding would be added to the graph\n       with every execution of the setGraphToLastView() method. */\n      previousBoundingBox.width = previousBoundingBox.width * 0.9;\n      previousBoundingBox.height = previousBoundingBox.height * 0.9;\n      // Difference between Rect.x that is given into the GraphEdit.zoomToBox(box: Rect) method and the resulting Rect.x\n      const paddingX = 57.75 / JSON.parse(zoomTransformAsString).k;\n      // Difference between Rect.y that is given into the GraphEdit.zoomToBox(box: Rect) method and the resulting Rect.y\n      const paddingY = 17.2 / JSON.parse(zoomTransformAsString).k;\n      previousBoundingBox.x = previousBoundingBox.x + paddingX;\n      previousBoundingBox.y = previousBoundingBox.y + paddingY;\n      this.graph.zoomToBox(previousBoundingBox);\n      this.graphFirstRender = false;\n    }\n    // Zoom to the optimized bounding box if no graph view is stored from the last session or when the first component is created\n    else if ((this.zoomOnRedraw && !this.redrawByCloseOfComponentDetails) || firstComponent) {\n      this.fitGraphInView();\n      this.zoomOnRedraw = false;\n    }\n  }\n\n  /**\n   * Fits the graph into view.\n   */\n  fitGraphInView(): void {\n    // calculates the bounding box of the view\n    const rect = this.calculateBoundingBox();\n\n    // case: bounding box is calculated\n    // => zoom to bounding box\n    if (rect) {\n      this.graph.zoomToBox(rect);\n    }\n  }\n\n  /**\n   * Calculates the bounding box of the view.\n   * @returns The calculated bounding box.\n   */\n  calculateBoundingBox(): Rect {\n    const componentSize = {width: 100, height: 60};\n    const interfaceSize = {width: 14, height: 14};\n    const issueContainerSize = {width: 40, height: 30};\n\n    // calculates bounding box\n    let rect = null;\n    for (const node of this.graph.nodeList) {\n      let size;\n      if (node.type === issueGraphNodes.NodeType.Component) {\n        size = componentSize;\n      } else if (node.type === issueGraphNodes.NodeType.Interface || node.type === issueGraphNodes.NodeType.InterfaceConsumer) {\n        size = interfaceSize;\n      } else if (node.type === issueGraphNodes.NodeType.IssueGroupContainer) {\n        if (node.issueGroupNodeIds.size === 0) {\n          // irrelevant for empty issue group containers\n          continue;\n        }\n\n        size = issueContainerSize;\n      } else {\n        continue;\n      }\n\n      const nodeX = node.x - size.width / 2;\n      const nodeY = node.y - size.height / 2;\n\n      if (rect === null) {\n        rect = {\n          xMin: nodeX,\n          yMin: nodeY,\n          xMax: nodeX + size.width,\n          yMax: nodeY + size.height\n        };\n      } else {\n        rect.xMin = Math.min(nodeX, rect.xMin);\n        rect.yMin = Math.min(nodeY, rect.yMin);\n\n        rect.xMax = Math.max(nodeX + size.width, rect.xMax);\n        rect.yMax = Math.max(nodeY + size.height, rect.yMax);\n      }\n    }\n\n    return rect\n      ? {\n          x: rect.xMin,\n          y: rect.yMin,\n          width: rect.xMax - rect.xMin,\n          height: rect.yMax - rect.yMin\n        }\n      : null;\n  }\n\n  /**\n   * Handles the layour graph.\n   */\n  layoutGraph(): void {\n    const nodes = new Map();\n\n    for (const node of this.graph.nodeList) {\n      if (node.type === issueGraphNodes.NodeType.Component || node.type === issueGraphNodes.NodeType.Interface) {\n        nodes.set(node.id, new LayoutNode(node.id, node.x, node.y, node.type));\n      }\n    }\n\n    for (const edge of this.graph.edgeList) {\n      if (nodes.has(edge.source) && nodes.has(edge.target)) {\n        nodes.get(edge.source).connectTo(nodes.get(edge.target));\n        nodes.get(edge.target).connectTo(nodes.get(edge.source));\n      }\n    }\n\n    const nodeList = Array.from(nodes.values());\n    doGraphLayout(nodeList);\n\n    for (const node of nodeList) {\n      const layoutNode = nodes.get(node.id);\n      this.savedPositions.nodes[layoutNode.id] = {\n        x: layoutNode.position.x,\n        y: layoutNode.position.y\n      };\n    }\n\n    this.savePositionsSubject.next();\n  }\n\n  /**\n   * Sets --show-relations css variable to initial or none. It is the value\n   * of the display attribute of the edges. If we set it to none the edges disappear.\n   * @param showRelations - Boolean derived from the setting of the switch slider for relation edges above the graph.\n   */\n  setRelationVisibility(showRelations: boolean) {\n    this.graph.getSVG().style('--show-relations', showRelations ? 'initial' : 'none');\n  }\n\n  /**\n   * Opens create component dialog and triggers reload of data after the dialog is closed.\n   */\n  public openCreateComponentDialog(): void {\n    const createComponentDialogRef = this.dialog.open(CreateComponentDialogComponent, {\n      data: {projectId: this.projectId}\n    });\n    createComponentDialogRef.afterClosed().subscribe((componentInformation) => {\n      this.zoomOnRedraw = false;\n      this.reload$.next(null);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileSettingsDialogComponent.html":{"url":"components/ProfileSettingsDialogComponent.html","title":"component - ProfileSettingsDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileSettingsDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile-settings-dialog\n            \n\n            \n                styleUrls\n                ./profile-settings-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile-settings-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                hide\n                            \n                            \n                                updatePasswordFieldsShown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                changePassword\n                            \n                            \n                                    Public\n                                closeDialog\n                            \n                            \n                                projectNameEdited\n                            \n                            \n                                    Public\n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancel\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectNameEdited\n                        \n                    \n                \n            \n            \n                \nprojectNameEdited(saved: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saved\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePasswordFieldsShown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-profile-settings-dialog',\n  templateUrl: './profile-settings-dialog.component.html',\n  styleUrls: ['./profile-settings-dialog.component.scss']\n})\nexport class ProfileSettingsDialogComponent implements OnInit {\n  hide = true;\n  updatePasswordFieldsShown = false;\n  description = '';\n\n  constructor(public dialogRef: MatDialogRef, private dialog: MatDialog) {}\n\n  ngOnInit(): void {}\n\n  //close profile settings dialog\n  public closeDialog() {\n    this.dialogRef.close();\n  }\n\n  //TODO\n  public changePassword() {\n    this.updatePasswordFieldsShown = true;\n  }\n\n  //TODO\n  public cancel() {\n    this.updatePasswordFieldsShown = false;\n  }\n\n  //TODO\n  public updatePassword() {\n    this.updatePasswordFieldsShown = false;\n  }\n\n  projectNameEdited(saved: boolean): void {\n    if (!saved) {\n      return;\n    }\n\n    alert('TODO: Save');\n  }\n}\n\n    \n\n    \n        \n  \n    close_ios\n  \n  Profile Settings\n\n  \n\n  \n\n  \n\n  Change Password\n\n  \n\n  \n  \n    \n    \n      Enter old password\n      \n      \n        {{ hide ? \"visibility_off\" : \"visibility\" }}\n      \n    \n\n    \n    \n      Enter new password\n      \n      \n        {{ hide ? \"visibility_off\" : \"visibility\" }}\n      \n    \n\n    Update Password\n\n    Cancel\n  \n\n\n    \n\n    \n                \n                    ./profile-settings-dialog.component.scss\n                \n                .dialog {\n  width: 500px;\n}\n\n.new-item-button {\n  float: right;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      close_ios    Profile Settings        Change Password                    Enter old password                    {{ hide ? \"visibility_off\" : \"visibility\" }}                        Enter new password                    {{ hide ? \"visibility_off\" : \"visibility\" }}              Update Password    Cancel  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileSettingsDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectHeaderComponent.html":{"url":"components/ProjectHeaderComponent.html","title":"component - ProjectHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-header/project-header.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays the name and the id of a project\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-header\n            \n\n            \n                styleUrls\n                ./project-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                            \n                                projectName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-header/project-header.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-header/project-header.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n/**\n * This component displays the name and the id of a project\n */\n@Component({\n  selector: 'app-project-header',\n  templateUrl: './project-header.component.html',\n  styleUrls: ['./project-header.component.scss']\n})\nexport class ProjectHeaderComponent {\n  @Input() projectName: string;\n  @Input() projectId: string;\n}\n\n    \n\n    \n        \n  \n  \n\n  \n    {{ projectName }}\n    Project ID: {{ projectId }}\n  \n\n\n    \n\n    \n                \n                    ./project-header.component.scss\n                \n                .project-title-row {\n  align-items: center;\n  width: fit-content;\n}\n\n.icon {\n  float: left;\n  vertical-align: top;\n  margin-right: 5px;\n  max-height: 64px;\n  max-width: 64px;\n}\n\n.content {\n  float: left;\n}\n\n.title,\n.sub-title {\n  margin: 0;\n  padding: 3px 10px 3px 0;\n}\n\n.title {\n  font-size: 17px;\n  font-weight: bold;\n}\n\n.sub-title {\n  font-weight: bold;\n  color: #3f3f3f;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ projectName }}    Project ID: {{ projectId }}  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectIssueListComponent.html":{"url":"components/ProjectIssueListComponent.html","title":"component - ProjectIssueListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectIssueListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-issue-list/project-issue-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is displayed when clicking on issues on the sidebar.\nIt contains the IssueHeaderComponent and the IssueListComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-issue-list\n            \n\n            \n                styleUrls\n                ./project-issue-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-issue-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                issueListId\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-issue-list/project-issue-list.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for retrieving the id of the project through the url\n\n                                                        \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for connection to API\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueListId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-issue-list/project-issue-list.component.ts:23\n                        \n                    \n\n            \n                \n                    ID of the list which is shown in the IssueListComponent\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-issue-list/project-issue-list.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-issue-list/project-issue-list.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ListId, ListType, NodeType} from '@app/data-dgql/id';\nimport {DataNode} from '@app/data-dgql/query';\nimport {Project} from '../../generated/graphql-dgql';\nimport DataService from '@app/data-dgql';\n\n/**\n * This component is displayed when clicking on issues on the sidebar.\n * It contains the IssueHeaderComponent and the IssueListComponent.\n */\n@Component({\n  selector: 'app-project-issue-list',\n  templateUrl: './project-issue-list.component.html',\n  styleUrls: ['./project-issue-list.component.scss']\n})\nexport class ProjectIssueListComponent implements OnInit {\n  public projectId: string;\n  public project$: DataNode;\n  /**\n   * ID of the list which is shown in the IssueListComponent\n   */\n  public issueListId: ListId;\n\n  /**\n   * @param route for retrieving the id of the project through the url\n   * @param dataService for connection to API\n   */\n  constructor(private route: ActivatedRoute, private dataService: DataService) {}\n\n  ngOnInit(): void {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    const node = {type: NodeType.Project, id: this.projectId};\n    this.project$ = this.dataService.getNode(node);\n    this.issueListId = {node, type: ListType.Issues};\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./project-issue-list.component.scss\n                \n                .center-horizontal {\n  width: 100%;\n  text-align: center;\n  margin-top: 15px;\n}\n.project-title-row {\n  width: 100%;\n  margin-bottom: 12px;\n  align-items: center;\n  height: 85px;\n}\n.box {\n  float: left;\n  //display: inline-block;\n  vertical-align: top;\n  width: 85px;\n  height: auto;\n  margin-right: 5px;\n}\n.content {\n  //display: inline-block;\n  float: left;\n}\n.title,\n.sub-title {\n  margin: 0;\n  padding: 3px 10px 3px 0;\n}\n.title {\n  font-size: 17px;\n  font-weight: bold;\n}\n.sub-title {\n  font-weight: bold;\n  color: #3f3f3f;\n}\n\nimg {\n  width: 100%;\n}\n\n.pagefill {\n  width: 100%;\n  height: 300px;\n}\n.margin-left-top {\n  margin-top: 3px;\n  margin-left: 3px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectIssueListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectListComponent.html":{"url":"components/ProjectListComponent.html","title":"component - ProjectListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-list-component/project-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is the landing page for the user after loggin in to the system\nIt shows a list of all projects the user can access\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-list\n            \n\n            \n                styleUrls\n                ./project-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lastQueriedProjectName\n                            \n                            \n                                loading\n                            \n                            \n                                pendingCreate\n                            \n                            \n                                projectName\n                            \n                            \n                                projects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeColour\n                            \n                            \n                                    Public\n                                nothing\n                            \n                            \n                                    Public\n                                openCreateProjectDialog\n                            \n                            \n                                    Public\n                                reloadProjects\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectStore: ProjectStoreService, dialog: MatDialog, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-list-component/project-list.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectStore\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        changeColour\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeColour()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-list-component/project-list.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        nothing\n                        \n                    \n                \n            \n            \n                \n                    \n                    nothing(e: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-list-component/project-list.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openCreateProjectDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openCreateProjectDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-list-component/project-list.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        reloadProjects\n                        \n                    \n                \n            \n            \n                \n                    \n                    reloadProjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-list-component/project-list.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lastQueriedProjectName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pendingCreate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Pick[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateProjectDialogComponent} from 'src/app/dialogs/create-project-dialog/create-project-dialog.component';\nimport {Project} from 'src/generated/graphql';\nimport {ProjectStoreService} from '../data/project/project-store.service';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\n\n/**\n * This component is the landing page for the user after loggin in to the system\n * It shows a list of all projects the user can access\n */\n@Component({\n  selector: 'app-project-list',\n  templateUrl: './project-list.component.html',\n  styleUrls: ['./project-list.component.scss']\n})\nexport class ProjectListComponent implements OnInit {\n  pendingCreate = false;\n  projectName = '';\n  lastQueriedProjectName: string;\n  projects: Pick[] = [];\n  loading: boolean;\n\n  constructor(private projectStore: ProjectStoreService, private dialog: MatDialog, private notify: UserNotifyService) {}\n\n  ngOnInit(): void {\n    // get all projects from the database\n    this.reloadProjects();\n  }\n\n  public reloadProjects(): void {\n    if (this.lastQueriedProjectName === this.projectName && this.lastQueriedProjectName) {\n      return;\n    }\n\n    this.loading = true;\n    this.projectStore.getAll(this.projectName).subscribe(\n      (projects) => {\n        this.loading = false;\n        this.projects = projects;\n        this.lastQueriedProjectName = this.projectName;\n      },\n      (error) => {\n        this.loading = false;\n        this.notify.notifyError('Failed to load projects', error);\n      }\n    );\n  }\n\n  public openCreateProjectDialog(): void {\n    const createProjectDialogRef = this.dialog.open(CreateProjectDialogComponent);\n    createProjectDialogRef.afterClosed().subscribe((result) => {\n      this.changeColour();\n      if (result?.createdProjectId) {\n        this.projectName = '';\n        this.reloadProjects();\n      }\n    });\n  }\n\n  // remove the focus from the create project button after the project is created\n  private changeColour(): void {\n    const b = document.querySelector('#buttonCreateProject') as HTMLElement;\n    b.blur();\n  }\n\n  // if the shortcut icon to the graph view of a project is clicked the list view fires a event that a row was clicked\n  // and the user jumps to the project overview. This method prevents the default event and enable the shortcut button\n  // to perform its action\n  public nothing(e: Event): void {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n}\n\n    \n\n    \n        \n  My Projects\n\n\n  Project-List\n  \n    Create Project\n  \n  \n  Create Demo Project-->\n  -->\n\n\n\n\n  \n    \n  \n  \n  \n    \n      \n    \n  \n\n  \n  \n  \n    \n      \n      {{ project.name }}\n      \n        account_tree\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./project-list.component.scss\n                \n                @import \"~@angular/material/theming\";\n@import \"variables\";\n@import \"src/styles/spinner\";\n\nspan[matLine] {\n  padding-left: 16px;\n}\n\n.nz-input-group {\n  max-width: 100%;\n}\n.nz-input-group {\n  max-width: 100%;\n}\n.listWrapper {\n  max-width: 50%;\n  //background-color: black;\n  -webkit-box-shadow: 2px 3px 18px -6px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 2px 3px 18px -6px rgba(0, 0, 0, 0.75);\n  box-shadow: 2px 3px 18px -6px rgba(0, 0, 0, 0.75);\n  margin-top: 15px;\n  margin-left: auto;\n  margin-right: auto;\n}\n.centered-headline {\n  margin: auto;\n}\n\n.mat-nav-list-padding-removed {\n  padding-top: 0;\n}\n.floating-button {\n  float: right;\n}\n.list-header {\n  max-width: 50%;\n  margin-left: auto;\n  margin-right: auto;\n  height: 36px;\n  margin-bottom: 5px;\n}\n.list-h2 {\n  max-width: 50%;\n  float: left;\n  margin-bottom: 0;\n}\n\n.graph-icon {\n  color: $icon-gray;\n}\n\n#buttonDeleteProject {\n  margin: 5px;\n}\n\n#buttonCreateProject {\n  margin: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  My Projects  Project-List      Create Project      Create Demo Project-->  -->                                                  {{ project.name }}              account_tree                  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectMembersComponent.html":{"url":"components/ProjectMembersComponent.html","title":"component - ProjectMembersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectMembersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-members/project-members.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is an example for the manage members view\nAll users are displayed in a paginated list. The list can be filtered.\nThe members are hardcoded\nIf the backend offers an interface to get all users the mockUsers list schould be replaced\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-members\n            \n\n            \n                styleUrls\n                ./project-members.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-members.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addableUsers\n                            \n                            \n                                columnsToDisplay\n                            \n                            \n                                dataSource\n                            \n                            \n                                mockUsers\n                            \n                            \n                                paginator\n                            \n                            \n                                paginatorModule\n                            \n                            \n                                    Public\n                                project\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                sort\n                            \n                            \n                                validationFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                clickedOnRow\n                            \n                            \n                                onAddClick\n                            \n                            \n                                onDeleteClick\n                            \n                            \n                                onPageChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, projectStore: ProjectStoreService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-members/project-members.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectStore\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(filterValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clickedOnRow\n                        \n                    \n                \n            \n            \n                \nclickedOnRow(rowData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rowData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddClick\n                        \n                    \n                \n            \n            \n                \nonAddClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \nonDeleteClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPageChange\n                        \n                    \n                \n            \n            \n                \nonPageChange(event: PageEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            PageEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addableUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : [\n    {id: '7', displayName: 'AddedUser1', email: 'AddedUser1.de'},\n    {id: '8', displayName: 'AddedUser2', email: 'AddedUser2.de'},\n    {id: '9', displayName: 'AddedUser3', email: 'AddedUser3.de'}\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnsToDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Name', 'Role', 'email']\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : [\n    {id: '1', displayName: 'User1', email: 'User1.de'},\n    {id: '2', displayName: 'User2', email: 'User2.de'},\n    {id: '3', displayName: 'User3', email: 'User3.de'},\n    {id: '4', displayName: 'User4', email: 'User4.de'},\n    {id: '5', displayName: 'User5', email: 'User5.de'},\n    {id: '6', displayName: 'User6', email: 'User6.de'}\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginatorModule\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginatorModule\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginatorModule)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GetFullProjectQuery\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ProjectStoreService} from '@app/data/project/project-store.service';\nimport {GetFullProjectQuery} from 'src/generated/graphql';\nimport {Observable} from 'rxjs';\nimport {FormControl} from '@angular/forms';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSort, MatSortable} from '@angular/material/sort';\nimport {MatPaginator, MatPaginatorModule, PageEvent} from '@angular/material/paginator';\nimport {AddProjectMemberDialogComponent} from '@app/dialogs/add-project-member-dialog/add-project-member-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {RemoveProjectMemberComponentComponent} from '@app/dialogs/remove-project-member-component/remove-project-member-component.component';\n\n/**\n * This component is an example for the manage members view\n * All users are displayed in a paginated list. The list can be filtered.\n * The members are hardcoded\n * If the backend offers an interface to get all users the mockUsers list schould be replaced\n */\n@Component({\n  selector: 'app-project-members',\n  templateUrl: './project-members.component.html',\n  styleUrls: ['./project-members.component.scss']\n})\nexport class ProjectMembersComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatPaginatorModule) paginatorModule: MatPaginatorModule;\n  @ViewChild(MatSort) sort: MatSort;\n  public projectId: string;\n  public project$: Observable;\n  public project: GetFullProjectQuery;\n  validationFilter = new FormControl('');\n\n  columnsToDisplay = ['Name', 'Role', 'email'];\n  dataSource: MatTableDataSource;\n\n  //users\n  mockUsers: Array = [\n    {id: '1', displayName: 'User1', email: 'User1.de'},\n    {id: '2', displayName: 'User2', email: 'User2.de'},\n    {id: '3', displayName: 'User3', email: 'User3.de'},\n    {id: '4', displayName: 'User4', email: 'User4.de'},\n    {id: '5', displayName: 'User5', email: 'User5.de'},\n    {id: '6', displayName: 'User6', email: 'User6.de'}\n  ];\n\n  // list of users who can be added to the project\n  //hardcoded\n  addableUsers: Array = [\n    {id: '7', displayName: 'AddedUser1', email: 'AddedUser1.de'},\n    {id: '8', displayName: 'AddedUser2', email: 'AddedUser2.de'},\n    {id: '9', displayName: 'AddedUser3', email: 'AddedUser3.de'}\n  ];\n\n  constructor(private dialog: MatDialog, private projectStore: ProjectStoreService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.project$ = this.projectStore.getFullProject(this.projectId);\n    this.project$.subscribe((project) => {\n      this.project = project;\n      // MOCK DATA for table\n      // FIXME Api change\n      // project.node.users.nodes.forEach(u => this.mockUsers.push(u));\n      this.dataSource = new MatTableDataSource(this.mockUsers);\n\n      // sort data in table\n      this.sort.sort({id: 'Name', start: 'asc'} as MatSortable);\n      this.dataSource.sort = this.sort;\n\n      //paginator\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  // This method adds a user to the project members list without processing a task in the back-end\n  onAddClick() {\n    const addMemberDialogRef = this.dialog.open(AddProjectMemberDialogComponent, {\n      data: {addableMembers: this.addableUsers, projectId: this.projectId}\n    });\n    addMemberDialogRef.afterClosed().subscribe((data) => {\n      if (data) {\n        for (const user of data.usersToAdd) {\n          this.addableUsers.forEach((addableUser) => {\n            if (addableUser.id == user) {\n              this.mockUsers.push(addableUser);\n            }\n          });\n        }\n        this.dataSource = new MatTableDataSource(this.mockUsers);\n      }\n    });\n  }\n\n  // This method deletes a user to the project members list without processing a task in the back-end\n  onDeleteClick() {\n    const deleteMemberDialogRef = this.dialog.open(RemoveProjectMemberComponentComponent, {\n      data: {mockMembers: this.mockUsers, projectId: this.projectId}\n    });\n    deleteMemberDialogRef.afterClosed().subscribe((data) => {\n      if (data) {\n        for (const user of data.usersToDelete) {\n          for (let i = 0; i (this.mockUsers);\n      }\n    });\n  }\n\n  //change pages\n  onPageChange(event: PageEvent) {}\n\n  // on every key pressed in the filter-field this method is triggered and reduces the shown users in the list (table)\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  clickedOnRow(rowData) {\n    // there schould be the code when a user is selected\n    // TODO jump to the user information page\n  }\n}\n\n// defines the structure of a user\nexport interface userMock {\n  id: string;\n  displayName?: string;\n  username?: string;\n  email?: string;\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      \n        add\n      \n\n      \n        remove\n      \n\n      \n        \n          Filter\n          \n        \n      \n\n      \n        \n        \n          \n          \n            Name\n            {{ element.displayName }}\n          \n\n          \n          \n            Role\n            Administrator\n          \n\n          \n          \n            Email\n            {{ element.email }}\n          \n\n          \n          \n        \n      \n\n      \n      \n      \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./project-members.component.scss\n                \n                .project-title-row {\n  width: 100%;\n  margin-bottom: 12px;\n  align-items: center;\n  height: 85px;\n}\n.box {\n  float: left;\n  //display: inline-block;\n  vertical-align: top;\n  width: 85px;\n  height: auto;\n  margin-right: 5px;\n}\n.content {\n  //display: inline-block;\n  float: left;\n}\n.title,\n.sub-title {\n  margin: 0;\n  padding: 3px 10px 3px 0;\n}\n.title {\n  font-size: 17px;\n  font-weight: bold;\n}\n.sub-title {\n  font-weight: bold;\n  color: #3f3f3f;\n}\n\nimg {\n  width: 100%;\n}\n\n.pagefill {\n  width: 100%;\n  height: 300px;\n}\n.margin-left-top {\n  margin-top: 3px;\n  margin-left: 3px;\n}\n.text-left {\n  text-align: left;\n}\n.mat-row:hover {\n  box-shadow: inset 0 0 43px -17px rgba(201, 195, 201, 1);\n  cursor: pointer;\n}\n.button-add {\n  margin: 10px 5px 10px 10px;\n  float: left;\n}\n\n.button-remove {\n  margin: 10px 15px 10px 5px;\n  float: left;\n}\n\n.table-container {\n  max-height: 500px;\n  overflow: auto;\n}\n.center-horizontal {\n  width: 100%;\n  text-align: center;\n  margin-top: 15px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            add                    remove                              Filter                                                                              Name            {{ element.displayName }}                                          Role            Administrator                                          Email            {{ element.email }}                                                                        '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectMembersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectOverviewComponent.html":{"url":"components/ProjectOverviewComponent.html","title":"component - ProjectOverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectOverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-overview/project-overview.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component offers a view showing the project name,\nowner, id and description.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-overview\n            \n\n            \n                styleUrls\n                ./project-overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-overview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Public\n                                project\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                queryComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProject\n                            \n                            \n                                projectNameEdited\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, projectStore: ProjectStoreService, route: ActivatedRoute, router: Router, changeDetector: ChangeDetectorRef, dialog: MatDialog, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-overview/project-overview.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectStore\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProject\n                        \n                    \n                \n            \n            \n                \ndeleteProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-overview/project-overview.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectNameEdited\n                        \n                    \n                \n            \n            \n                \nprojectNameEdited(saved: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-overview/project-overview.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saved\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/project-overview/project-overview.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-overview/project-overview.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-overview/project-overview.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(QueryComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/project-overview/project-overview.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ProjectStoreService} from '@app/data/project/project-store.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\nimport {DataNode} from '@app/data-dgql/query';\nimport {Project} from '../../generated/graphql-dgql';\nimport DataService from '@app/data-dgql';\nimport {NodeType} from '@app/data-dgql/id';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n/**\n * This component offers a view showing the project name,\n * owner, id and description.\n */\n@Component({\n  selector: 'app-project-overview',\n  templateUrl: './project-overview.component.html',\n  styleUrls: ['./project-overview.component.scss']\n})\nexport class ProjectOverviewComponent implements OnInit, AfterViewInit {\n  @ViewChild(QueryComponent) queryComponent: QueryComponent;\n\n  public projectId: string;\n  public project: DataNode;\n  description = '';\n\n  constructor(\n    private dataService: DataService,\n    private projectStore: ProjectStoreService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private changeDetector: ChangeDetectorRef,\n    private dialog: MatDialog,\n    private notify: UserNotifyService\n  ) {}\n\n  ngOnInit(): void {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.project = this.dataService.getNode({\n      type: NodeType.Project,\n      id: this.projectId\n    });\n  }\n\n  ngAfterViewInit() {\n    this.queryComponent.listenTo(this.project, (project) => (this.description = project.description));\n  }\n\n  projectNameEdited(saved: boolean): void {\n    if (!saved) {\n      return;\n    }\n\n    alert('TODO: Save');\n  }\n\n  deleteProject(): void {\n    const confirmDeleteDialogRef = this.dialog.open(RemoveDialogComponent, {\n      data: {\n        title: 'Really delete project \"' + this.project.current.name + '\"?',\n        messages: ['Are you sure you want to delete the project \"' + this.project.current.name + '\"?', 'This action cannot be undone!'],\n        verificationName: this.project.current.name\n      }\n    });\n    confirmDeleteDialogRef.afterClosed().subscribe((del) => {\n      if (del) {\n        this.projectStore.delete(this.projectId).subscribe(\n          () => {\n            this.notify.notifyInfo('Successfully deleted project \"' + this.project.current.name + '\"');\n            this.router.navigate(['/']);\n          },\n          (error) => this.notify.notifyError('Failed to delete project!', error)\n        );\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n         \n        \n\n        \n        Delete\n      \n\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./project-overview.component.scss\n                \n                .delete-button-container {\n  width: 100%;\n  display: flex;\n  align-items: center;\n}\n\n.project-overview-container {\n  margin: 4px;\n}\n\n#button {\n  margin: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                             Delete                  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectOverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectStoreService.html":{"url":"injectables/ProjectStoreService.html","title":"injectable - ProjectStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProjectStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/project/project-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service provides get, create and delete operations for projects\nWith the get-method only the id and name of one project, specified by the id, will be fetched\nThe getFulProject method fetches all the information of a project the database provides\nThe getAll method fetches the name and id for all projects. This is used to reduce\ntransfered data while showing the projects list\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getBasicProject\n                            \n                            \n                                getFullProject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, getAllQuery: GetAllProjectsGQL, getBasicProjectQuery: GetBasicProjectGQL, getFullQuery: GetFullProjectGQL, createProject: CreateProjectGQL, deleteProject: DeleteProjectGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/project/project-store.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getAllQuery\n                                                  \n                                                        \n                                                                    GetAllProjectsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getBasicProjectQuery\n                                                  \n                                                        \n                                                                    GetBasicProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getFullQuery\n                                                  \n                                                        \n                                                                    GetFullProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createProject\n                                                  \n                                                        \n                                                                    CreateProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteProject\n                                                  \n                                                        \n                                                                    DeleteProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(name: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(filterText: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBasicProject\n                        \n                    \n                \n            \n            \n                \ngetBasicProject(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFullProject\n                        \n                    \n                \n            \n            \n                \ngetFullProject(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {map} from 'rxjs/operators';\nimport {\n  CreateProjectGQL,\n  CreateProjectInput,\n  DeleteProjectGQL,\n  DeleteProjectInput,\n  GetAllProjectsGQL,\n  GetBasicProjectGQL,\n  GetBasicProjectQuery,\n  GetFullProjectGQL,\n  GetFullProjectQuery,\n  Project,\n  ProjectFilter\n} from 'src/generated/graphql';\nimport {Observable} from 'rxjs';\nimport {AuthenticationService} from '@app/auth/authentication.service';\n\n/**\n * This service provides get, create and delete operations for projects\n * With the get-method only the id and name of one project, specified by the id, will be fetched\n * The getFulProject method fetches all the information of a project the database provides\n * The getAll method fetches the name and id for all projects. This is used to reduce\n * transfered data while showing the projects list\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectStoreService {\n  constructor(\n    private authService: AuthenticationService,\n    private getAllQuery: GetAllProjectsGQL,\n    private getBasicProjectQuery: GetBasicProjectGQL,\n    private getFullQuery: GetFullProjectGQL,\n    private createProject: CreateProjectGQL,\n    private deleteProject: DeleteProjectGQL\n  ) {}\n\n  create(name: string, description: string) {\n    const input: CreateProjectInput = {\n      name,\n      description\n    };\n    return this.createProject.mutate({input});\n  }\n\n  delete(id: string) {\n    const input: DeleteProjectInput = {\n      project: id\n    };\n    return this.deleteProject.mutate({input});\n  }\n\n  getBasicProject(id: string): Observable {\n    return this.getBasicProjectQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getFullProject(id: string): Observable {\n    return this.getFullQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getAll(filterText: string): Observable[]> {\n    const filter: ProjectFilter = {\n      name: filterText\n    };\n    return this.getAllQuery.fetch({filter}).pipe(map(({data}) => data.projects.edges.map((edge) => edge.node)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectsService.html":{"url":"injectables/ProjectsService.html","title":"injectable - ProjectsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProjectsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/projects.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProject\n                            \n                            \n                                listProjects\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(qListProjects: ListProjectsGQL, qGetProject: GetProjectGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/queries/projects.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        qListProjects\n                                                  \n                                                        \n                                                                    ListProjectsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qGetProject\n                                                  \n                                                        \n                                                                    GetProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProject\n                        \n                    \n                \n            \n            \n                \ngetProject(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/projects.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listProjects\n                        \n                    \n                \n            \n            \n                \nlistProjects(list: QueryListParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/projects.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                            QueryListParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {GetProjectGQL, ListProjectsGQL, ProjectFilter} from 'src/generated/graphql-dgql';\nimport {promisifyApolloFetch, QueryListParams} from '@app/data-dgql/queries/util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n  constructor(private qListProjects: ListProjectsGQL, private qGetProject: GetProjectGQL) {}\n\n  listProjects(list: QueryListParams) {\n    return promisifyApolloFetch(this.qListProjects.fetch({...list}));\n  }\n\n  getProject(id: string) {\n    return promisifyApolloFetch(this.qGetProject.fetch({id}));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueriesService.html":{"url":"injectables/QueriesService.html","title":"injectable - QueriesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/queries.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                components\n                            \n                            \n                                    Public\n                                issues\n                            \n                            \n                                    Public\n                                projects\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(components: ComponentsService, issues: IssuesService, projects: ProjectsService, users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/queries/queries.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        components\n                                                  \n                                                        \n                                                                        ComponentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        issues\n                                                  \n                                                        \n                                                                        IssuesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projects\n                                                  \n                                                        \n                                                                        ProjectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/queries/queries.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IssuesService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/queries/queries.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/queries/queries.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsersService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/queries/queries.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {IssuesService} from './issues.service';\nimport {ProjectsService} from './projects.service';\nimport {ComponentsService} from './components.service';\nimport {UsersService} from './users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueriesService {\n  constructor(\n    public components: ComponentsService,\n    public issues: IssuesService,\n    public projects: ProjectsService,\n    public users: UsersService\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryBodyDirective.html":{"url":"directives/QueryBodyDirective.html","title":"directive - QueryBodyDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryBodyDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query-component/query.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used on an ng-template, to indicate that the contents of it should be shown once\nthe query finished successfully\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appQueryBody]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef<>)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/query-component/query.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, ContentChild, Directive, Input, OnDestroy, TemplateRef} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {MatButton} from '@angular/material/button';\n\n/**\n * The current state of the query\n */\nexport enum QueryComponentState {\n  /** The query was executed successfully */\n  Ready,\n  /** The query has not yet finished */\n  Loading,\n  /** The query returned an error */\n  Error\n}\n\n/**\n * This directive is used on an `ng-template`, to indicate that the contents of it should be shown once\n * the query finished successfully\n */\n@Directive({\n  selector: '[appQueryBody]'\n})\nexport class QueryBodyDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n/**\n * This directive is used on a `button`, to inidcate that the {@link QueryComponent} should manage the state of this\n * button\n */\n@Directive({\n  selector: '[appQueryButton]'\n})\nexport class QueryButtonDirective {\n  constructor(public element: MatButton) {}\n}\n\n/**\n * This component is intended to be used in combination with an `Observable`.\n * The component expects that either an `ng-template` or a `MatButton` is in the body and that the appropriate directive\n * is used on it ({@link QueryBodyDirective} with `ng-template`, {@link QueryButtonDirective} with `button`).\n * Once the appropriate function is called, the component subscribes to the observable, showing the user a loading\n * indication and, if applicable, disables the `button`.\n * Once the query finished, the content in the `ng-template` is shown or the button is enabled again.\n * If the subscription yielded an error, a message is shown instead of the `ng-template`, or the button is re-enabled.\n * Note that no verification has to be made if the query was successful, when using an `ng-template`.\n * The content of the `ng-template` is only executed once the {@link #queryState} is `Ready`.\n *\n * #### Example 1: Using `ng-template`\n * This example will show, instead of the content directly, a loading indicator as soon as the page is loaded.\n * ```html\n * \n *   \n *     This will only be shown if the query was successful!\n *      Not required! -->\n *     Result is: {{this.data}}\n *      -->\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * ngAfterViewInit() {\n *   // Have to use ngAfterViewInit, otherwise query will be undefined!\n *\n *   this.query.listenTo(this.someObservable,\n *     result => {\n *       this.data = result;\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n *\n * #### Example 2: Using `button`\n * This example will subscribe to the observable as soon as the button is clicked.\n * The button is disabled and a loading indicator is shown as long as the subscription has not yielded a result.\n * ```html\n * \n *   \n *     Do something that takes a while...\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * onClick() {\n *   this.query.listenTo(this.somethingThatTakesAWhile,\n *     result => {\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n */\n@Component({\n  templateUrl: 'query.component.html',\n  selector: 'app-query-component',\n  styleUrls: ['query.component.scss']\n})\nexport class QueryComponent implements OnDestroy, AfterViewInit {\n  /** Error message to be shown if the subscription failed */\n  @Input() errorMessage = 'Failed to run query!';\n  @ContentChild(QueryBodyDirective) body: QueryBodyDirective;\n  @ContentChild(QueryButtonDirective) button: QueryButtonDirective;\n\n  /** @ignore */\n  readonly State = QueryComponentState;\n  /** The current state of the query */\n  queryState: QueryComponentState = QueryComponentState.Loading;\n  private subscription?: Subscription;\n  /** If true, a button is in the query body, not a template*/\n  buttonMode: boolean;\n\n  constructor(private notify: UserNotifyService, private changeDetector: ChangeDetectorRef) {}\n\n  ngAfterViewInit() {\n    this.buttonMode = !this.body && !!this.button;\n    if (this.buttonMode) {\n      this.queryState = QueryComponentState.Ready;\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n\n  /** Quick way of checking if `this.query.queryState === QueryComponentState.Ready` */\n  public ready(): boolean {\n    return this.queryState === QueryComponentState.Ready;\n  }\n\n  /**\n   * Subscribe the query component to the observable\n   * @param query The observable\n   * @param success The function to be called if the query was successful\n   * @param error The function to be called if the query had an error\n   */\n  public listenTo(query: Observable, success?: (value: T) => void, error?: (error: any) => void): void {\n    this.queryState = QueryComponentState.Loading;\n    this.changeDetector.detectChanges();\n    this.subscription?.unsubscribe();\n    this.updateButton();\n\n    this.subscription = query.subscribe(\n      (value: T) => {\n        if (success) {\n          success(value);\n\n          // Check if the callback changed the query state, e.g. by calling setError()\n          if (this.queryState === QueryComponentState.Error) {\n            return;\n          }\n        }\n\n        this.queryState = QueryComponentState.Ready;\n        this.changeDetector.detectChanges();\n        this.updateButton();\n      },\n      (err) => {\n        if (error) {\n          error(err);\n        }\n\n        this.setError();\n        this.notify.notifyError(this.errorMessage, err);\n      }\n    );\n  }\n\n  /**\n   * Manually sets this query component to the error state.\n   * This may be useful if e.g. the query ran successfully, the contained data in it however is not valid.\n   */\n  public setError(): void {\n    this.queryState = QueryComponentState.Error;\n    this.changeDetector.detectChanges();\n    this.updateButton();\n  }\n\n  private updateButton(): void {\n    if (!this.buttonMode) {\n      return;\n    }\n\n    this.button.element.disabled = this.queryState === QueryComponentState.Loading;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryButtonDirective.html":{"url":"directives/QueryButtonDirective.html","title":"directive - QueryButtonDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryButtonDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query-component/query.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used on a button, to inidcate that the QueryComponent should manage the state of this\nbutton\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appQueryButton]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                element\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: MatButton)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/query-component/query.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    MatButton\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatButton\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, ContentChild, Directive, Input, OnDestroy, TemplateRef} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {MatButton} from '@angular/material/button';\n\n/**\n * The current state of the query\n */\nexport enum QueryComponentState {\n  /** The query was executed successfully */\n  Ready,\n  /** The query has not yet finished */\n  Loading,\n  /** The query returned an error */\n  Error\n}\n\n/**\n * This directive is used on an `ng-template`, to indicate that the contents of it should be shown once\n * the query finished successfully\n */\n@Directive({\n  selector: '[appQueryBody]'\n})\nexport class QueryBodyDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n/**\n * This directive is used on a `button`, to inidcate that the {@link QueryComponent} should manage the state of this\n * button\n */\n@Directive({\n  selector: '[appQueryButton]'\n})\nexport class QueryButtonDirective {\n  constructor(public element: MatButton) {}\n}\n\n/**\n * This component is intended to be used in combination with an `Observable`.\n * The component expects that either an `ng-template` or a `MatButton` is in the body and that the appropriate directive\n * is used on it ({@link QueryBodyDirective} with `ng-template`, {@link QueryButtonDirective} with `button`).\n * Once the appropriate function is called, the component subscribes to the observable, showing the user a loading\n * indication and, if applicable, disables the `button`.\n * Once the query finished, the content in the `ng-template` is shown or the button is enabled again.\n * If the subscription yielded an error, a message is shown instead of the `ng-template`, or the button is re-enabled.\n * Note that no verification has to be made if the query was successful, when using an `ng-template`.\n * The content of the `ng-template` is only executed once the {@link #queryState} is `Ready`.\n *\n * #### Example 1: Using `ng-template`\n * This example will show, instead of the content directly, a loading indicator as soon as the page is loaded.\n * ```html\n * \n *   \n *     This will only be shown if the query was successful!\n *      Not required! -->\n *     Result is: {{this.data}}\n *      -->\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * ngAfterViewInit() {\n *   // Have to use ngAfterViewInit, otherwise query will be undefined!\n *\n *   this.query.listenTo(this.someObservable,\n *     result => {\n *       this.data = result;\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n *\n * #### Example 2: Using `button`\n * This example will subscribe to the observable as soon as the button is clicked.\n * The button is disabled and a loading indicator is shown as long as the subscription has not yielded a result.\n * ```html\n * \n *   \n *     Do something that takes a while...\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * onClick() {\n *   this.query.listenTo(this.somethingThatTakesAWhile,\n *     result => {\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n */\n@Component({\n  templateUrl: 'query.component.html',\n  selector: 'app-query-component',\n  styleUrls: ['query.component.scss']\n})\nexport class QueryComponent implements OnDestroy, AfterViewInit {\n  /** Error message to be shown if the subscription failed */\n  @Input() errorMessage = 'Failed to run query!';\n  @ContentChild(QueryBodyDirective) body: QueryBodyDirective;\n  @ContentChild(QueryButtonDirective) button: QueryButtonDirective;\n\n  /** @ignore */\n  readonly State = QueryComponentState;\n  /** The current state of the query */\n  queryState: QueryComponentState = QueryComponentState.Loading;\n  private subscription?: Subscription;\n  /** If true, a button is in the query body, not a template*/\n  buttonMode: boolean;\n\n  constructor(private notify: UserNotifyService, private changeDetector: ChangeDetectorRef) {}\n\n  ngAfterViewInit() {\n    this.buttonMode = !this.body && !!this.button;\n    if (this.buttonMode) {\n      this.queryState = QueryComponentState.Ready;\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n\n  /** Quick way of checking if `this.query.queryState === QueryComponentState.Ready` */\n  public ready(): boolean {\n    return this.queryState === QueryComponentState.Ready;\n  }\n\n  /**\n   * Subscribe the query component to the observable\n   * @param query The observable\n   * @param success The function to be called if the query was successful\n   * @param error The function to be called if the query had an error\n   */\n  public listenTo(query: Observable, success?: (value: T) => void, error?: (error: any) => void): void {\n    this.queryState = QueryComponentState.Loading;\n    this.changeDetector.detectChanges();\n    this.subscription?.unsubscribe();\n    this.updateButton();\n\n    this.subscription = query.subscribe(\n      (value: T) => {\n        if (success) {\n          success(value);\n\n          // Check if the callback changed the query state, e.g. by calling setError()\n          if (this.queryState === QueryComponentState.Error) {\n            return;\n          }\n        }\n\n        this.queryState = QueryComponentState.Ready;\n        this.changeDetector.detectChanges();\n        this.updateButton();\n      },\n      (err) => {\n        if (error) {\n          error(err);\n        }\n\n        this.setError();\n        this.notify.notifyError(this.errorMessage, err);\n      }\n    );\n  }\n\n  /**\n   * Manually sets this query component to the error state.\n   * This may be useful if e.g. the query ran successfully, the contained data in it however is not valid.\n   */\n  public setError(): void {\n    this.queryState = QueryComponentState.Error;\n    this.changeDetector.detectChanges();\n    this.updateButton();\n  }\n\n  private updateButton(): void {\n    if (!this.buttonMode) {\n      return;\n    }\n\n    this.button.element.disabled = this.queryState === QueryComponentState.Loading;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QueryComponent.html":{"url":"components/QueryComponent.html","title":"component - QueryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QueryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/utils/query-component/query.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is intended to be used in combination with an Observable.\nThe component expects that either an ng-template or a MatButton is in the body and that the appropriate directive\nis used on it (QueryBodyDirective with ng-template, QueryButtonDirective with button).\nOnce the appropriate function is called, the component subscribes to the observable, showing the user a loading\nindication and, if applicable, disables the button.\nOnce the query finished, the content in the ng-template is shown or the button is enabled again.\nIf the subscription yielded an error, a message is shown instead of the ng-template, or the button is re-enabled.\nNote that no verification has to be made if the query was successful, when using an ng-template.\nThe content of the ng-template is only executed once the #queryState is Ready.\nExample 1: Using ng-template\nThis example will show, instead of the content directly, a loading indicator as soon as the page is loaded.\n\n  \n    This will only be shown if the query was successful!\n     Not required! -->\n    Result is: {{this.data}}\n     -->\n  \n// ...\n\n@ViewChild(QueryComponent) query: QueryComponent;\n\n// ...\n\nngAfterViewInit() {\n  // Have to use ngAfterViewInit, otherwise query will be undefined!\n\n  this.query.listenTo(this.someObservable,\n    result => {\n      this.data = result;\n      console.log('Result callback');\n    },\n    error => {\n      console.log('Error callback');\n    }\n  );\n}Example 2: Using button\nThis example will subscribe to the observable as soon as the button is clicked.\nThe button is disabled and a loading indicator is shown as long as the subscription has not yielded a result.\n\n  \n    Do something that takes a while...\n  \n// ...\n\n@ViewChild(QueryComponent) query: QueryComponent;\n\n// ...\n\nonClick() {\n  this.query.listenTo(this.somethingThatTakesAWhile,\n    result => {\n      console.log('Result callback');\n    },\n    error => {\n      console.log('Error callback');\n    }\n  );\n}\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-query-component\n            \n\n            \n                styleUrls\n                query.component.scss\n            \n\n\n\n            \n                templateUrl\n                query.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                button\n                            \n                            \n                                buttonMode\n                            \n                            \n                                queryState\n                            \n                            \n                                    Private\n                                    Optional\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                listenTo\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                    Public\n                                setError\n                            \n                            \n                                    Private\n                                updateButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notify: UserNotifyService, changeDetector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/query-component/query.component.ts:133\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Failed to run query!'\n                    \n                \n                        \n                            \n                                    Defined in src/app/utils/query-component/query.component.ts:123\n                            \n                        \n                \n                    \n                        Error message to be shown if the subscription failed\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        listenTo\n                        \n                    \n                \n            \n            \n                \n                    \n                    listenTo(query: Observable, success?: (value?: T) => void, error?: (error?: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/query-component/query.component.ts:160\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Subscribe the query component to the observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The observable\n\n                                    \n                                \n                                \n                                    success\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The function to be called if the query was successful\n\n                                    \n                                \n                                \n                                    error\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The function to be called if the query had an error\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ready\n                        \n                    \n                \n            \n            \n                \n                    \n                    ready()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/query-component/query.component.ts:150\n                \n            \n\n\n            \n                \n                    Quick way of checking if this.query.queryState === QueryComponentState.Ready\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setError\n                        \n                    \n                \n            \n            \n                \n                    \n                    setError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/query-component/query.component.ts:196\n                \n            \n\n\n            \n                \n                    Manually sets this query component to the error state.\nThis may be useful if e.g. the query ran successfully, the contained data in it however is not valid.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/query-component/query.component.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryBodyDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(QueryBodyDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        button\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryButtonDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(QueryButtonDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:133\n                        \n                    \n\n            \n                \n                    If true, a button is in the query body, not a template\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryComponentState\n\n                    \n                \n                \n                    \n                        Default value : QueryComponentState.Loading\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:130\n                        \n                    \n\n            \n                \n                    The current state of the query\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:131\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, ContentChild, Directive, Input, OnDestroy, TemplateRef} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {MatButton} from '@angular/material/button';\n\n/**\n * The current state of the query\n */\nexport enum QueryComponentState {\n  /** The query was executed successfully */\n  Ready,\n  /** The query has not yet finished */\n  Loading,\n  /** The query returned an error */\n  Error\n}\n\n/**\n * This directive is used on an `ng-template`, to indicate that the contents of it should be shown once\n * the query finished successfully\n */\n@Directive({\n  selector: '[appQueryBody]'\n})\nexport class QueryBodyDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n/**\n * This directive is used on a `button`, to inidcate that the {@link QueryComponent} should manage the state of this\n * button\n */\n@Directive({\n  selector: '[appQueryButton]'\n})\nexport class QueryButtonDirective {\n  constructor(public element: MatButton) {}\n}\n\n/**\n * This component is intended to be used in combination with an `Observable`.\n * The component expects that either an `ng-template` or a `MatButton` is in the body and that the appropriate directive\n * is used on it ({@link QueryBodyDirective} with `ng-template`, {@link QueryButtonDirective} with `button`).\n * Once the appropriate function is called, the component subscribes to the observable, showing the user a loading\n * indication and, if applicable, disables the `button`.\n * Once the query finished, the content in the `ng-template` is shown or the button is enabled again.\n * If the subscription yielded an error, a message is shown instead of the `ng-template`, or the button is re-enabled.\n * Note that no verification has to be made if the query was successful, when using an `ng-template`.\n * The content of the `ng-template` is only executed once the {@link #queryState} is `Ready`.\n *\n * #### Example 1: Using `ng-template`\n * This example will show, instead of the content directly, a loading indicator as soon as the page is loaded.\n * ```html\n * \n *   \n *     This will only be shown if the query was successful!\n *      Not required! -->\n *     Result is: {{this.data}}\n *      -->\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * ngAfterViewInit() {\n *   // Have to use ngAfterViewInit, otherwise query will be undefined!\n *\n *   this.query.listenTo(this.someObservable,\n *     result => {\n *       this.data = result;\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n *\n * #### Example 2: Using `button`\n * This example will subscribe to the observable as soon as the button is clicked.\n * The button is disabled and a loading indicator is shown as long as the subscription has not yielded a result.\n * ```html\n * \n *   \n *     Do something that takes a while...\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * onClick() {\n *   this.query.listenTo(this.somethingThatTakesAWhile,\n *     result => {\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n */\n@Component({\n  templateUrl: 'query.component.html',\n  selector: 'app-query-component',\n  styleUrls: ['query.component.scss']\n})\nexport class QueryComponent implements OnDestroy, AfterViewInit {\n  /** Error message to be shown if the subscription failed */\n  @Input() errorMessage = 'Failed to run query!';\n  @ContentChild(QueryBodyDirective) body: QueryBodyDirective;\n  @ContentChild(QueryButtonDirective) button: QueryButtonDirective;\n\n  /** @ignore */\n  readonly State = QueryComponentState;\n  /** The current state of the query */\n  queryState: QueryComponentState = QueryComponentState.Loading;\n  private subscription?: Subscription;\n  /** If true, a button is in the query body, not a template*/\n  buttonMode: boolean;\n\n  constructor(private notify: UserNotifyService, private changeDetector: ChangeDetectorRef) {}\n\n  ngAfterViewInit() {\n    this.buttonMode = !this.body && !!this.button;\n    if (this.buttonMode) {\n      this.queryState = QueryComponentState.Ready;\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n\n  /** Quick way of checking if `this.query.queryState === QueryComponentState.Ready` */\n  public ready(): boolean {\n    return this.queryState === QueryComponentState.Ready;\n  }\n\n  /**\n   * Subscribe the query component to the observable\n   * @param query The observable\n   * @param success The function to be called if the query was successful\n   * @param error The function to be called if the query had an error\n   */\n  public listenTo(query: Observable, success?: (value: T) => void, error?: (error: any) => void): void {\n    this.queryState = QueryComponentState.Loading;\n    this.changeDetector.detectChanges();\n    this.subscription?.unsubscribe();\n    this.updateButton();\n\n    this.subscription = query.subscribe(\n      (value: T) => {\n        if (success) {\n          success(value);\n\n          // Check if the callback changed the query state, e.g. by calling setError()\n          if (this.queryState === QueryComponentState.Error) {\n            return;\n          }\n        }\n\n        this.queryState = QueryComponentState.Ready;\n        this.changeDetector.detectChanges();\n        this.updateButton();\n      },\n      (err) => {\n        if (error) {\n          error(err);\n        }\n\n        this.setError();\n        this.notify.notifyError(this.errorMessage, err);\n      }\n    );\n  }\n\n  /**\n   * Manually sets this query component to the error state.\n   * This may be useful if e.g. the query ran successfully, the contained data in it however is not valid.\n   */\n  public setError(): void {\n    this.queryState = QueryComponentState.Error;\n    this.changeDetector.detectChanges();\n    this.updateButton();\n  }\n\n  private updateButton(): void {\n    if (!this.buttonMode) {\n      return;\n    }\n\n    this.button.element.disabled = this.queryState === QueryComponentState.Loading;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n    \n  \n\n\n\n  \n    \n  \n\n  \n    \n      {{ errorMessage }}\n    \n  \n\n  \n    \n      \n      Loading...\n    \n  \n\n\n    \n\n    \n                \n                    query.component.scss\n                \n                .container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  margin: 10px;\n}\n\n.error {\n  border: red 1px solid;\n  border-radius: 10px;\n  padding: 18px;\n  width: fit-content;\n  background-color: rgba(255, 0, 0, 0.1);\n}\n\n.load-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: fit-content;\n  height: fit-content;\n  background-color: #ababab;\n  padding: 10px 16px 10px 16px;\n  border-radius: 100px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  font-weight: 500;\n  color: whitesmoke;\n}\n\n.error-text {\n  color: red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ errorMessage }}                        Loading...      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'QueryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryListParams.html":{"url":"interfaces/QueryListParams.html","title":"interface - QueryListParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueryListParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/util.ts\n        \n\n\n            \n                Description\n            \n            \n                Generic interface for backend list parameters.\nThis represents the actual data sent in the request, as our representation in the frontend\ndiffers slightly (see ListParams).\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            after\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            before\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filterBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            first\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            last\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        after\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        after:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        before\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        before:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterBy:     F\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     F\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\n\n/**\n * Apollo's GraphQL fetch method returns an Observable even though we only ever see one update\n * emitted from it.\n *\n * Hence, we just convert it to a promise here.\n *\n * @param f the observable\n * @return a promise that resolves as soon as the observable emits an update\n */\nexport function promisifyApolloFetch(f: Observable): Promise {\n  return new Promise((resolve, reject) => {\n    f.subscribe(\n      ({data}) => resolve(data),\n      (error) => reject(error)\n    );\n  });\n}\n\n/**\n * Generic interface for backend list parameters.\n * This represents the actual data sent in the request, as our representation in the frontend\n * differs slightly (see {@link ListParams}).\n */\nexport interface QueryListParams {\n  after?: string;\n  before?: string;\n  filterBy?: F;\n  first?: number;\n  last?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n    \n        Description\n    \n    \n        Allows the user to register for a Gropius account.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmValidator\n                            \n                            \n                                isLoading\n                            \n                            \n                                publicClientName\n                            \n                            \n                                userNameAsyncValidator\n                            \n                            \n                                validateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backToLogin\n                            \n                            \n                                resetForm\n                            \n                            \n                                submitForm\n                            \n                            \n                                validateConfirmPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, apollo: Apollo, router: Router, registerUserMutation: RegisterUserGQL, userAvailablyQuery: CheckUsernameGQL, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apollo\n                                                  \n                                                        \n                                                                    Apollo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        registerUserMutation\n                                                  \n                                                        \n                                                                        RegisterUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAvailablyQuery\n                                                  \n                                                        \n                                                                        CheckUsernameGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        backToLogin\n                        \n                    \n                \n            \n            \n                \nbackToLogin(e: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:139\n                \n            \n\n\n            \n                \n                    Loads the login page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nEvent affecting the form reset.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm(e: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:126\n                \n            \n\n\n            \n                \n                    Resets form fields and marks all controls as pristine.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nEvent affecting the form reset.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm(value: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:100\n                \n            \n\n\n            \n                \n                    Given data needed for account creation\nand carries out the creation by issuing a mutation to the backend.\nIf successfull, the user is redirected to the Login page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nData (from the register form) that is handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateConfirmPassword\n                        \n                    \n                \n            \n            \n                \nvalidateConfirmPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:90\n                \n            \n\n\n            \n                \n                    Recalculates the value and validation status of the password confirmation field.\nThis is triggered whenever the user changes the password in the register form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:73\n                        \n                    \n\n            \n                \n                    Checks that the password in the Confirm Password field\nmatches the password in the Password field.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    control\n                                                    \n                                                            Password that is handled.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publicClientName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.publicClientName\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userNameAsyncValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:48\n                        \n                    \n\n            \n                \n                    Checks with backend to ensure that entered username is valid.\nA username is invalid when its taken or contains symbols like '*', etc.\ncontrol is not a valid username. Emits null when username is valid\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    control\n                                                    \n                                                            \nUsername that is handled.\n\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, ValidationErrors, Validators} from '@angular/forms';\nimport {Apollo} from 'apollo-angular';\nimport {Observable, Observer} from 'rxjs';\nimport {environment} from '@environments/environment';\nimport {CheckUsernameGQL, RegisterUserGQL, RegisterUserInput} from 'src/generated/public-graphql';\nimport {Router} from '@angular/router';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\n\n/**\n * Allows the user to register for a Gropius account.\n */\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  validateForm: FormGroup;\n  isLoading = false;\n  publicClientName = environment.publicClientName;\n\n  constructor(\n    private fb: FormBuilder,\n    private apollo: Apollo,\n    private router: Router,\n    private registerUserMutation: RegisterUserGQL,\n    private userAvailablyQuery: CheckUsernameGQL,\n    private notify: UserNotifyService\n  ) {\n    this.registerUserMutation.client = this.publicClientName;\n    this.userAvailablyQuery.client = this.publicClientName;\n    this.validateForm = this.fb.group({\n      username: ['', [Validators.required], [this.userNameAsyncValidator]],\n      email: ['', [Validators.email, Validators.required]],\n      password: ['', [Validators.required]],\n      confirm: ['', [this.confirmValidator]]\n    });\n  }\n\n  /**\n   * Checks with backend to ensure that entered username is valid.\n   * A username is invalid when its taken or contains symbols like '*', etc.\n   * @param control - Username that is handled.\n   * @returns Observable emitting values indicating error when string entered in\n   * control is not a valid username. Emits null when username is valid\n   */\n  userNameAsyncValidator = (control: FormControl) =>\n    new Observable((observer: Observer) => {\n      this.userAvailablyQuery.fetch({username: control.value}).subscribe(\n        ({data}) => {\n          // case: username already taken\n          // => marks event as error\n          if (!data.checkUsername) {\n            // returns `{error: true}` to mark event as an error\n            observer.next({error: true, duplicated: true});\n          } else {\n            observer.next(null);\n          }\n          observer.complete();\n        },\n        (error) => {\n          this.notify.notifyError('Failed to verify user name!', error);\n        }\n      );\n    });\n\n  /**\n   * Checks that the password in the Confirm Password field\n   * matches the password in the Password field.\n   * @param control Password that is handled.\n   */\n  confirmValidator = (control: FormControl): {[s: string]: boolean} => {\n    // case: no password given\n    if (!control.value) {\n      return {error: true, required: true};\n    }\n\n    // case: password does not match\n    else if (control.value !== this.validateForm.controls.password.value) {\n      return {confirm: true, error: true};\n    }\n    return {};\n  };\n\n  /**\n   * Recalculates the value and validation status of the password confirmation field.\n   * This is triggered whenever the user changes the password in the register form.\n   */\n  validateConfirmPassword(): void {\n    setTimeout(() => this.validateForm.controls.confirm.updateValueAndValidity());\n  }\n\n  /**\n   * Given data needed for account creation\n   * and carries out the creation by issuing a mutation to the backend.\n   * If successfull, the user is redirected to the Login page.\n   * @param value - Data (from the register form) that is handled.\n   */\n  submitForm(value: {username: string; email: string; password: string; confirm: string}): void {\n    for (const key of Object.keys(this.validateForm.controls)) {\n      this.validateForm.controls[key].markAsDirty();\n      this.validateForm.controls[key].updateValueAndValidity();\n    }\n    const input: RegisterUserInput = {\n      username: value.username,\n      displayName: value.username,\n      password: value.password,\n      email: value.email\n    };\n\n    this.registerUserMutation.mutate({input}).subscribe(\n      ({data}) => {\n        this.router.navigate(['login']);\n      },\n      (error) => {\n        this.notify.notifyError('Failed to register the user!', error);\n      }\n    );\n  }\n\n  /**\n   * Resets form fields and marks all controls as pristine.\n   * @param e - Event affecting the form reset.\n   */\n  resetForm(e: MouseEvent): void {\n    e.preventDefault();\n    this.validateForm.reset();\n    for (const key of Object.keys(this.validateForm.controls)) {\n      this.validateForm.controls[key].markAsPristine();\n      this.validateForm.controls[key].updateValueAndValidity();\n    }\n  }\n\n  /**\n   * Loads the login page.\n   * @param e - Event affecting the form reset.\n   */\n  backToLogin(e: MouseEvent): void {\n    e.preventDefault();\n    this.router.navigate(['login']);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      \n        \n          \n        \n      \n\n      \n      \n        Register\n      \n    \n\n    \n      \n      \n        \n         Username \n\n        \n        \n          \n          \n             Please enter a Username! \n             This Username is taken! \n          \n        \n      \n\n      \n      \n        \n         Email \n\n        \n        \n          \n          \n             Please enter a valid Email! \n             Please enter your Email! \n          \n        \n      \n\n      \n      \n        \n         Password \n\n        \n        \n          \n        \n      \n\n      \n      \n        \n         Confirm Password \n\n        \n        \n          \n          \n             Please enter your Password! \n             Passwords do not match! \n          \n        \n      \n\n      \n      \n        \n        \n          \n          Register\n\n          \n          Reset\n\n          \n          Back\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                [nz-form] {\n  max-width: 600px;\n}\n\nbutton {\n  margin-left: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                      Register                                           Username                                                  Please enter a Username!              This Username is taken!                                                      Email                                                  Please enter a valid Email!              Please enter your Email!                                                      Password                                                                      Confirm Password                                                  Please enter your Password!              Passwords do not match!                                                                         Register                    Reset                    Back                    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RelationEdge.html":{"url":"interfaces/RelationEdge.html","title":"interface - RelationEdge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RelationEdge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Edge\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sourceIssues\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sourceIssues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceIssues:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode,\n  ComponentNode,\n  InterfaceNode,\n  IssueGroupContainerNode,\n  RelationEdge,\n  createComponentNode,\n  createInterfaceNode,\n  createIssueGroupContainerNode,\n  createIssueFolderNode,\n  createRelationEdge,\n  createConsumptionEdge,\n  createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set()\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0\n    }\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: []\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RemoveDialogComponent.html":{"url":"components/RemoveDialogComponent.html","title":"component - RemoveDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RemoveDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/remove-dialog/remove-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is a confirmation dialog for anything that involves deleting\nExample\n// ...\n\nconstructor(private dialog: MatDialog, ...)\n\n// ...\n\nconst dialogRef = this.dialog.open(RemoveDialogComponent,\n{\n  data: {\n    title: 'This is the title of the dialog',\n    messages: ['Every entry is a new line',\n               'This is the next line',\n               ' Lines beginning with a space will be indented'],\n    verificationName: 'In order for the user to be able to click the confirm button, this text has to be typed',\n    confirmButtonText: 'This is the text of the confirm button'\n  }\n});\n\ndialogRef.afterClosed().subscribe(confirm => {\n  if (confirm) {\n    console.log('Deleted!');\n  } else {\n    console.log('Not deleted!');\n  }\n});\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-remove-dialog\n            \n\n            \n                styleUrls\n                ./remove-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./remove-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                matchValidator\n                            \n                            \n                                verificationNameInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDeleteClick\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \nonDeleteClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        matchValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verificationNameInput\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', this.matchValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormControl, ValidatorFn} from '@angular/forms';\n\n/**\n * This component is a confirmation dialog for anything that involves deleting\n *\n * #### Example\n * ```ts\n * // ...\n *\n * constructor(private dialog: MatDialog, ...)\n *\n * // ...\n *\n * const dialogRef = this.dialog.open(RemoveDialogComponent,\n * {\n *   data: {\n *     title: 'This is the title of the dialog',\n *     messages: ['Every entry is a new line',\n *                'This is the next line',\n *                ' Lines beginning with a space will be indented'],\n *     verificationName: 'In order for the user to be able to click the confirm button, this text has to be typed',\n *     confirmButtonText: 'This is the text of the confirm button'\n *   }\n * });\n *\n * dialogRef.afterClosed().subscribe(confirm => {\n *   if (confirm) {\n *     console.log('Deleted!');\n *   } else {\n *     console.log('Not deleted!');\n *   }\n * });\n * ```\n */\n@Component({\n  selector: 'app-remove-dialog',\n  templateUrl: './remove-dialog.component.html',\n  styleUrls: ['./remove-dialog.component.scss']\n})\nexport class RemoveDialogComponent implements OnInit {\n  matchValidator: ValidatorFn = (control) => {\n    return control.value === this.data.verificationName ? null : {\"Names don't match\": true};\n  };\n\n  verificationNameInput = new FormControl('', this.matchValidator);\n\n  constructor(public dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  ngOnInit(): void {\n    this.verificationNameInput.markAsTouched();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n\n  onDeleteClick(): void {\n    this.dialogRef.close(true);\n  }\n}\n\nexport interface DialogData {\n  title: string;\n  /** The list of lines shown in the dialog. If a line starts with a space, the line will be indented */\n  messages: Array;\n  /** If set, shows a text box that forces the user to type the specified text before being able to click the confirm button */\n  verificationName?: string;\n  /** If set, shows this text as the text in the confirm button. If not set, button shows 'Delete' */\n  confirmButtonText?: string;\n}\n\n    \n\n    \n        \n  delete\n  {{ data.title }}\n\n\n\n  \n    \n      &nbsp;&nbsp;&nbsp;&nbsp;\n      {{ message.startsWith(\" \") ? message.substring(1) : message }}\n    \n  \n  \n    \n      Type &quot;{{ data.verificationName }}&quot; to confirm:\n      \n        Confirm name\n        \n        Names don't match!\n      \n    \n\n    \n      \n    \n  \n\n\n\n  Cancel\n  \n    {{ this.data.confirmButtonText ? this.data.confirmButtonText : \"Delete\" }}\n  \n\n\n    \n\n    \n                \n                    ./remove-dialog.component.scss\n                \n                .mat-dialog-content {\n  display: flex;\n  flex-direction: column;\n}\n\n.content {\n  display: inline-block;\n  align-self: center;\n  place-self: center;\n  vertical-align: middle;\n  border-top: lightgray;\n  border-top-style: solid;\n  border-bottom: lightgray;\n  border-bottom-style: solid;\n  font-weight: bold;\n  font-size: 1.1em;\n  padding: 8px;\n  margin: 0;\n  width: 100%;\n  overflow: auto;\n  flex: 1 1 auto;\n  white-space: nowrap;\n}\n\n.title {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.delete-icon {\n  flex: 0 0 auto;\n}\n\n.mat-success {\n  background-color: green;\n  color: #fff;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  delete  {{ data.title }}                      {{ message.startsWith(\" \") ? message.substring(1) : message }}                  Type \"{{ data.verificationName }}\" to confirm:              Confirm name                Names don\\'t match!                            Cancel      {{ this.data.confirmButtonText ? this.data.confirmButtonText : \"Delete\" }}  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'RemoveDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RemoveProjectMemberComponentComponent.html":{"url":"components/RemoveProjectMemberComponentComponent.html","title":"component - RemoveProjectMemberComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RemoveProjectMemberComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-remove-project-member-component\n            \n\n            \n                styleUrls\n                ./remove-project-member-component.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./remove-project-member-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                selectedUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDeleteClick\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \nonDeleteClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Inject} from '@angular/core';\nimport {Component, OnInit} from '@angular/core';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-remove-project-member-component',\n  templateUrl: './remove-project-member-component.component.html',\n  styleUrls: ['./remove-project-member-component.component.scss']\n})\nexport class RemoveProjectMemberComponentComponent implements OnInit {\n  constructor(public dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data) {}\n\n  //users selected in the dialog to be deleted\n  selectedUsers = [];\n\n  ngOnInit(): void {}\n\n  onNoClick() {\n    this.dialogRef.close();\n  }\n\n  onDeleteClick() {\n    const data = {usersToDelete: this.selectedUsers};\n    this.dialogRef.close(data);\n  }\n}\n\n    \n\n    \n        Remove Project Member\n\n\n\n  \n    \n     {{ user.displayName }} \n  \n\n\n  Cancel\n  Delete User\n\n\n    \n\n    \n                \n                    ./remove-project-member-component.component.scss\n                \n                .dialog-content {\n  min-height: 400px;\n  min-width: 400px;\n  max-width: 600px;\n}\n.actions {\n  float: right;\n}\n.stretch {\n  width: 100%;\n}\n\n.mat-success {\n  background-color: green;\n  color: #fff;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Remove Project Member           {{ user.displayName }}     Cancel  Delete User'\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'RemoveProjectMemberComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SetEditorComponent.html":{"url":"components/SetEditorComponent.html","title":"component - SetEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SetEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/set-editor/set-editor.component.ts\n\n\n\n    \n        Description\n    \n    \n        The set editor displays and edits a list of items (used in the issue detail sidebar).\n\nThe list of selected items listSet may be either a local array of IDs or a ListId.\nWhen editing, items may be selected from a list of all available items #listAll.\nThe list of items may be searched using a search box (#makeFilter and #scoreKeys).\nUpon closing the edit dialog, a changeset of additions and deletions is passed to a callback (#applyChangeset).\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-set-editor\n            \n\n            \n                styleUrls\n                ./set-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./set-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beginEditing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                applyChangeset\n                            \n                            \n                                createItem\n                            \n                            \n                                editable\n                            \n                            \n                                emptyResultsLabel\n                            \n                            \n                                emptySuggestionsLabel\n                            \n                            \n                                hydrate\n                            \n                            \n                                itemOps\n                            \n                            \n                                listAll\n                            \n                            \n                                listSet\n                            \n                            \n                                makeFilter\n                            \n                            \n                                scoreKeys\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteItem\n                            \n                            \n                                editItem\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    totalCount\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, dialogService: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/set-editor/set-editor.component.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        applyChangeset\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:44\n                            \n                        \n                \n                    \n                        Callback for applying a changeset to the listSet.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        createItem\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:61\n                            \n                        \n                \n                    \n                        Callback to create a new item (enabled using itemOps). If the promise returns a node ID, it will be added to the set.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:50\n                            \n                        \n                \n                    \n                        Set editable to false to just display items in the set, without being able to edit them.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emptyResultsLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'No results'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:54\n                            \n                        \n                \n                    \n                        Set to override the “no results” text in the dialog. Appears when there is a search query.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emptySuggestionsLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'No suggestions'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:52\n                            \n                        \n                \n                    \n                        Set to override the “no results” text in the dialog. Appears only when there is no search query.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hydrate\n                    \n                \n                \n                    \n                        Type :         Promise>\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:56\n                            \n                        \n                \n                    \n                        Pass a HydrateList object to load the listSet with existing data instead of sending a request to the server.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        itemOps\n                    \n                \n                \n                    \n                        Type :         ItemOps\n\n                    \n                \n                \n                    \n                        Default value : 'none'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:58\n                            \n                        \n                \n                    \n                        Additional operations available from the set editor.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        listAll\n                    \n                \n                \n                    \n                        Type :     ListId | SetMultiSource\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:42\n                            \n                        \n                \n                    \n                        The list of all possible items. Should be a superset of listSet, as otherwise the user may not be able to deselect items.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        listSet\n                    \n                \n                \n                    \n                        Type :     ListId | NodeId[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:40\n                            \n                        \n                \n                    \n                        The list that contains all nodes that are part of the set. string[] is treated as local state.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        makeFilter\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:46\n                            \n                        \n                \n                    \n                        Callback for making a filter for the given search query.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        scoreKeys\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:48\n                            \n                        \n                \n                    \n                        Object keys used for scoring a search result. (e.g. 'title') Should correspond to fields searched in makeFilter.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteItem\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:65\n                            \n                        \n                \n                    \n                        Callback to delete an item.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editItem\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:63\n                            \n                        \n                \n                    \n                        Callback to edit an item.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        beginEditing\n                        \n                    \n                \n            \n            \n                \nbeginEditing()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor.component.ts:170\n                \n            \n\n\n            \n                \n                    Opens the editor dialog.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        totalCount\n                    \n                \n\n                \n                    \n                        gettotalCount()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:141\n                                \n                            \n                    \n                        \n                                Returns the number of selected items.\nMay be NaN if it hasn't been loaded yet.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport {ListId, NodeId} from '@app/data-dgql/id';\nimport {DataList, HydrateList} from '@app/data-dgql/query';\nimport DataService from '@app/data-dgql';\nimport {Subscription} from 'rxjs';\nimport {ItemDirective} from '@app/components/item.directive';\nimport {MatDialog} from '@angular/material/dialog';\nimport {SetEditorDialogComponent, SetEditorDialogData, SetMultiSource} from './set-editor-dialog.component';\n\ntype ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\n/**\n * The set editor displays and edits a list of items (used in the issue detail sidebar).\n *\n * - The list of selected items {@link listSet} may be either a local array of IDs or a {@link ListId}.\n * - When editing, items may be selected from a list of all available items {@link #listAll}.\n * - The list of items may be searched using a search box ({@link #makeFilter} and {@link #scoreKeys}).\n * - Upon closing the edit dialog, a changeset of additions and deletions is passed to a callback ({@link #applyChangeset}).\n */\n@Component({\n  selector: 'app-set-editor',\n  templateUrl: './set-editor.component.html',\n  styleUrls: ['./set-editor.component.scss']\n})\nexport class SetEditorComponent implements OnInit, OnChanges, OnDestroy {\n  /** The list that contains all nodes that are part of the set. string[] is treated as local state. */\n  @Input() listSet: ListId | NodeId[];\n  /** The list of all possible items. Should be a superset of listSet, as otherwise the user may not be able to deselect items. */\n  @Input() listAll: ListId | SetMultiSource;\n  /** Callback for applying a changeset to the listSet. */\n  @Input() applyChangeset: (additions: NodeId[], deletions: NodeId[]) => Promise;\n  /** Callback for making a filter for the given search query. */\n  @Input() makeFilter: (searchQuery: string) => F;\n  /** Object keys used for scoring a search result. (e.g. 'title') Should correspond to fields searched in makeFilter. */\n  @Input() scoreKeys: string[];\n  /** Set editable to false to just display items in the set, without being able to edit them. */\n  @Input() editable = true;\n  /** Set to override the “no results” text in the dialog. Appears only when there is no search query. */\n  @Input() emptySuggestionsLabel = 'No suggestions';\n  /** Set to override the “no results” text in the dialog. Appears when there is a search query. */\n  @Input() emptyResultsLabel = 'No results';\n  /** Pass a HydrateList object to load the listSet with existing data instead of sending a request to the server. */\n  @Input() hydrate: Promise>;\n  /** Additional operations available from the set editor. */\n  @Input() itemOps: ItemOps = 'none';\n\n  /** Callback to create a new item (enabled using itemOps). If the promise returns a node ID, it will be added to the set. */\n  @Input() createItem: () => Promise;\n  /** Callback to edit an item. */\n  @Output() editItem = new EventEmitter();\n  /** Callback to delete an item. */\n  @Output() deleteItem = new EventEmitter();\n\n  /**\n   * @ignore\n   * Pointer to the title text element. Used to read the title, because we can't read angular components directly.\n   */\n  @ViewChild('titleText') titleText: ElementRef;\n  /**\n   * @ignore\n   * Pointer to the *appItem directive. Used to instantiate list items.\n   */\n  @ContentChild(ItemDirective, {read: TemplateRef}) itemTemplate;\n\n  /**\n   * @ignore\n   * List that fetches the first few items of the list of items in the set.\n   */\n  public listSet$: DataList;\n  /**\n   * @ignore\n   * The subscription to listSet$.\n   */\n  private listSetSub: Subscription;\n\n  /**\n   * @ignore\n   * If true, the listSet$ variable is null and listSet contains an array of node IDs.\n   */\n  public isLocalSet = false;\n\n  constructor(private dataService: DataService, private dialogService: MatDialog) {}\n\n  /**\n   * @ignore\n   * Internal: (re-)loads the subscription to whatever the user put in listSet.\n   */\n  private reloadListSet() {\n    if (Array.isArray(this.listSet)) {\n      this.isLocalSet = true;\n      if (this.listSet$) {\n        this.listSetSub.unsubscribe();\n        this.listSet$ = null;\n      }\n    } else {\n      this.isLocalSet = false;\n      this.listSetSub?.unsubscribe();\n      this.listSet$ = this.dataService.getList(this.listSet);\n      this.listSetSub = this.listSet$.subscribe();\n    }\n  }\n\n  ngOnInit() {\n    this.reloadListSet();\n    if (this.hydrate && this.listSet$) {\n      this.listSet$.hydrateInitial(this.hydrate);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.listSet) {\n      const newValue = changes.listSet.currentValue;\n      if (this.isLocalSet !== (typeof newValue !== 'string')) {\n        this.reloadListSet();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n  }\n\n  /**\n   * Returns the number of selected items.\n   *\n   * May be NaN if it hasn't been loaded yet.\n   */\n  get totalCount(): number {\n    if (this.isLocalSet) {\n      return (this.listSet as NodeId[]).length;\n    } else {\n      if (this.listSet$.loading) {\n        return NaN;\n      }\n      return this.listSet$.totalCount;\n    }\n  }\n\n  // Callbacks for the set editor dialog.\n  // They all forward to the user-provided function.\n  // We do not pass the user-provided function directly because they may change while the dialog is open.\n  /** @ignore */\n  private onDialogApplyChangeset = (additions: NodeId[], deletions: NodeId[]): Promise => {\n    return this.applyChangeset(additions, deletions);\n  };\n  /** @ignore */\n  private onDialogCreateItem = () => this.createItem();\n  /** @ignore */\n  private onDialogEditItem = (item) => this.editItem.emit(item);\n  /** @ignore */\n  private onDialogDeleteItem = (item) => this.deleteItem.emit(item);\n\n  /**\n   * @internal\n   * Opens the editor dialog.\n   */\n  beginEditing() {\n    this.dialogService.open>(SetEditorDialogComponent, {\n      width: '400px',\n      data: {\n        title: this.titleText?.nativeElement.textContent || '',\n        listSet: this.listSet,\n        listAll: this.listAll,\n        itemTemplate: this.itemTemplate,\n        applyChangeset: this.onDialogApplyChangeset,\n        makeFilter: this.makeFilter,\n        scoreKeys: this.scoreKeys,\n        emptySuggestionsLabel: this.emptySuggestionsLabel,\n        emptyResultsLabel: this.emptyResultsLabel,\n        createItem: this.itemOps.includes('create') ? this.onDialogCreateItem : null,\n        editItem: this.itemOps.includes('edit') ? this.onDialogEditItem : null,\n        deleteItem: this.itemOps.includes('delete') ? this.onDialogDeleteItem : null\n      } as SetEditorDialogData\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      settings\n    \n  \n  \n    \n      \n        \n          \n            \n          \n        \n      \n    \n    \n      \n        \n      \n      ...\n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./set-editor.component.scss\n                \n                :host {\n  display: block;\n}\n\n.app-set-editor {\n  .set-editor-title {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    min-height: 36px;\n\n    .title-text-container {\n      font-weight: bold;\n      line-height: 1.5;\n    }\n  }\n\n  .items-empty {\n    opacity: 0.5;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          settings                                                                                                          ...                    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'SetEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SetEditorDialogComponent.html":{"url":"components/SetEditorDialogComponent.html","title":"component - SetEditorDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SetEditorDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/set-editor/set-editor-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This is an internal component used in the set editor.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-set-editor-dialog\n            \n\n            \n                styleUrls\n                ./set-editor-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./set-editor-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                additions\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Private\n                                deletions\n                            \n                            \n                                    Public\n                                isLocalSet\n                            \n                            \n                                    Public\n                                listAll\n                            \n                            \n                                    Public\n                                listSet$\n                            \n                            \n                                    Private\n                                listSetSub\n                            \n                            \n                                    Public\n                                localSet\n                            \n                            \n                                    Public\n                                searchQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apply\n                            \n                            \n                                createItem\n                            \n                            \n                                getEncodedId\n                            \n                            \n                                getNodeId\n                            \n                            \n                                isInSet\n                            \n                            \n                                searchQueryDidChange\n                            \n                            \n                                toggleInSet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, notifyService: UserNotifyService, dialogRef: MatDialogRef>, data: SetEditorDialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:220\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifyService\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    SetEditorDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:290\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createItem\n                        \n                    \n                \n            \n            \n                \ncreateItem()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:306\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEncodedId\n                        \n                    \n                \n            \n            \n                \ngetEncodedId(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:261\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NodeIdEnc\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNodeId\n                        \n                    \n                \n            \n            \n                \ngetNodeId(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NodeId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInSet\n                        \n                    \n                \n            \n            \n                \nisInSet(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:265\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchQueryDidChange\n                        \n                    \n                \n            \n            \n                \nsearchQueryDidChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:249\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleInSet\n                        \n                    \n                \n            \n            \n                \ntoggleInSet(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:279\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        additions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:218\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SetEditorDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:226\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deletions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:219\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLocalSet\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:213\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        listAll\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MultiSourceList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:216\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        listSet$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:215\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        listSetSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:217\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        localSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeIdEnc[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:214\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:220\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, OnDestroy, OnInit, TemplateRef} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {\n  decodeListId,\n  decodeNodeId,\n  encodeListId,\n  encodeNodeId,\n  ListId,\n  ListIdEnc,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename\n} from '@app/data-dgql/id';\nimport {DataList} from '@app/data-dgql/query';\nimport {Subscription} from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {quickScore} from 'quick-score';\n\n/**\n * This interface is used to source items from multiple sources in the set editor.\n *\n * staticSources specifies lists whose items will always be loaded.\n * sourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n */\nexport interface SetMultiSource {\n  /** A static list of source lists. */\n  staticSources: ListId[];\n  /** A list of nodes that will be passed to listFromNode. */\n  sourceNodes?: ListId | NodeId[];\n  /** Maps nodes from sourceNodes to lists from which items will be sourced. */\n  listFromNode?: (n: NodeId) => ListId;\n}\n\n/**\n * This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n */\nclass MultiSourceList {\n  /** A DataList that loads the value of sourceNodes, if it's a ListId. */\n  public sourceNodeList?: DataList;\n  /**\n   * @ignore\n   * Internal: subscription to the sourceNodeList.\n   */\n  private sourceNodeListSub?: Subscription;\n  /** The list of nodes specified in sourceNodes, if it's a NodeId[]. */\n  public staticSourceNodeList?: NodeId[];\n  /** List of all sources that will be included in the results. */\n  public sources: Map> = new Map();\n  /**\n   * @ignore\n   * Internal: subscriptions to all of the sources.\n   */\n  private sourceSubs: Map = new Map();\n  /** Max number of items in results. */\n  public limit = 10;\n  /** Current results. */\n  public results?: T[];\n  /** If true, there are more than `limit` items in the source data. */\n  public hasMore = false;\n  /**\n   * Current search query. Used to rank results by relevance.\n   * The filters are computed separately! Use {@link #setFilter} to set both simultaneously.\n   */\n  public query = '';\n\n  constructor(public spec: SetMultiSource, public scoreKeys: string[], private dataService: DataService) {\n    if (Array.isArray(spec.sourceNodes)) {\n      this.staticSourceNodeList = spec.sourceNodes;\n    } else if (typeof spec.sourceNodes === 'object') {\n      this.sourceNodeList = dataService.getList(spec.sourceNodes);\n      this.sourceNodeListSub = this.sourceNodeList.subscribe(() => this.update());\n    }\n    this.update();\n  }\n\n  /** Creates a new MultiSourceList that actually just loads a single list. */\n  static fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService) {\n    return new this({staticSources: [list]}, scoreKeys, dataService);\n  }\n\n  /** Updates lists. */\n  update() {\n    const newSourceSet = new Set();\n    for (const id of this.sourceNodeList?.current?.keys() || []) {\n      const nodeId = decodeNodeId(id);\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const nodeId of this.staticSourceNodeList || []) {\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const source of this.spec.staticSources) {\n      newSourceSet.add(encodeListId(source));\n    }\n\n    for (const source of newSourceSet) {\n      if (!this.sources.has(source)) {\n        const list = this.dataService.getList(decodeListId(source));\n        list.interactive = true;\n        this.sources.set(source, list);\n        this.sourceSubs.set(\n          source,\n          list.subscribe(() => this.updateResults())\n        );\n      }\n    }\n    for (const source of [...this.sources.keys()]) {\n      if (!newSourceSet.has(source)) {\n        this.sourceSubs.get(source).unsubscribe();\n        this.sourceSubs.delete(source);\n        this.sources.delete(source);\n      }\n    }\n  }\n\n  /** Sets a filter on all lists. */\n  setFilter(query: string, filter: F) {\n    this.query = query;\n    for (const source of this.sources.values()) {\n      source.filter = filter;\n    }\n  }\n\n  /** Scores an item for ranking in results. */\n  score(item: T) {\n    const matchStrings = [];\n    for (const key of this.scoreKeys) {\n      let cursor = item;\n      for (const objKey of key.split('.')) {\n        cursor = cursor[objKey];\n        if (!cursor) {\n          break;\n        }\n      }\n      if (cursor) {\n        matchStrings.push(cursor);\n      }\n    }\n\n    return quickScore(matchStrings.join(' '), this.query);\n  }\n\n  /** Updates the results array from loaded data. */\n  updateResults() {\n    const seenItems = new Set();\n    const items = [];\n    this.hasMore = false;\n    for (const source of this.sources.values()) {\n      if (!source.hasData) {\n        continue;\n      }\n      for (const [id, item] of source.current.entries()) {\n        if (!seenItems.has(id)) {\n          seenItems.add(id);\n          items.push(item);\n        }\n      }\n      this.hasMore = this.hasMore || source.current.size  this.score(a) - this.score(b));\n    items.splice(this.limit);\n\n    this.results = items;\n  }\n\n  /** If true, something is loading somewhere. */\n  isLoading() {\n    if (this.sourceNodeList?.loading) {\n      return true;\n    }\n    for (const source of this.sources.values()) {\n      if (source.loading) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** Unsubscribes from all subscriptions. This object should no longer be used afterwards. */\n  unsubscribe() {\n    this.sourceNodeListSub?.unsubscribe();\n    this.sourceSubs.forEach((sub) => sub.unsubscribe());\n  }\n}\n\n/** Types of item operations that may be made available. */\nexport type ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\nexport interface SetEditorDialogData {\n  title: string;\n  listSet: ListId | NodeId[];\n  listAll: ListId | SetMultiSource;\n  applyChangeset: (add: NodeId[], del: NodeId[]) => Promise;\n  itemTemplate: TemplateRef;\n  makeFilter: (query: string) => F;\n  scoreKeys: string[];\n  emptySuggestionsLabel: string;\n  emptyResultsLabel: string;\n  createItem?: () => Promise;\n  editItem?: ({id: NodeId, preview: T}) => void;\n  deleteItem?: ({id: NodeId, preview: T}) => void;\n}\n\n/** This is an internal component used in the set editor. */\n@Component({\n  selector: 'app-set-editor-dialog',\n  templateUrl: './set-editor-dialog.component.html',\n  styleUrls: ['./set-editor-dialog.component.scss']\n})\nexport class SetEditorDialogComponent implements OnInit, OnDestroy {\n  public isLocalSet = false;\n  public localSet: NodeIdEnc[] = [];\n  public listSet$: DataList;\n  public listAll: MultiSourceList;\n  private listSetSub: Subscription;\n  private additions: Set = new Set();\n  private deletions: Set = new Set();\n  public searchQuery = '';\n\n  constructor(\n    private dataService: DataService,\n    private notifyService: UserNotifyService,\n    private dialogRef: MatDialogRef>,\n    @Inject(MAT_DIALOG_DATA) public data: SetEditorDialogData\n  ) {}\n\n  ngOnInit() {\n    if (Array.isArray(this.data.listSet)) {\n      this.isLocalSet = true;\n      this.localSet = [...this.data.listSet].map((id) => encodeNodeId(id));\n    } else {\n      this.listSet$ = this.dataService.getList(this.data.listSet);\n    }\n    this.listAll =\n      'staticSources' in this.data.listAll\n        ? new MultiSourceList(this.data.listAll, this.data.scoreKeys, this.dataService)\n        : MultiSourceList.fromSingleList(this.data.listAll, this.data.scoreKeys, this.dataService);\n\n    if (this.listSet$) {\n      this.listSetSub = this.listSet$?.subscribe();\n      // TODO: is this a reasonable heuristic for the listSet count? we need to cover >= results from listAll\n      this.listSet$.count = 10;\n      this.listSet$.interactive = true;\n    }\n  }\n\n  searchQueryDidChange() {\n    if (this.listSet$) {\n      this.listSet$.filter = this.data.makeFilter(this.searchQuery);\n    }\n    this.listAll.setFilter(this.searchQuery, this.data.makeFilter(this.searchQuery));\n  }\n\n  getNodeId(item): NodeId {\n    const type = nodeTypeFromTypename(item.__typename);\n    return {type, id: item.id};\n  }\n\n  getEncodedId(item): NodeIdEnc {\n    return encodeNodeId(this.getNodeId(item));\n  }\n\n  isInSet(item): boolean {\n    const id = this.getEncodedId(item);\n    if (this.additions.has(id)) {\n      return true;\n    }\n    if (this.deletions.has(id)) {\n      return false;\n    }\n    if (this.isLocalSet) {\n      return this.localSet.includes(id);\n    }\n    return this.listSet$.current?.has(id) || false;\n  }\n\n  toggleInSet(item): void {\n    const id = this.getEncodedId(item);\n    if (this.isInSet(item)) {\n      this.additions.delete(id);\n      this.deletions.add(id);\n    } else {\n      this.deletions.delete(id);\n      this.additions.add(id);\n    }\n  }\n\n  apply() {\n    if (this.additions.size + this.deletions.size === 0) {\n      this.dialogRef.close(null);\n      return;\n    }\n\n    this.data\n      .applyChangeset([...this.additions].map(decodeNodeId), [...this.deletions].map(decodeNodeId))\n      .then(() => {\n        this.dialogRef.close(null);\n      })\n      .catch((error) => {\n        this.notifyService.notifyError('Failed to apply changes', error);\n      });\n  }\n\n  createItem() {\n    this.data.createItem().then((node) => {\n      if (node) {\n        this.additions.add(encodeNodeId(node));\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n    this.listAll.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  {{ data.title }}\n  \n    \n      \n        Search\n        search\n        \n      \n    \n    \n      \n        \n          \n            \n          \n\n          \n            \n              \n                \n                  Edit\n                \n                \n                  Delete\n                \n              \n            \n            \n              more_vert\n            \n          \n        \n      \n      \n        \n          \n          \n          \n          \n        \n        Use search to find more items\n      \n      \n         {{ data.emptyResultsLabel }} \n         {{ data.emptySuggestionsLabel }} \n      \n      \n        \n          add\n          Create new\n        \n      \n    \n  \n  \n    Cancel\n    Apply\n  \n\n\n    \n\n    \n                \n                    ./set-editor-dialog.component.scss\n                \n                .set-editor-dialog {\n  .dialog-search {\n    .search-field {\n      width: 100%;\n    }\n  }\n\n  .dialog-items {\n    margin-bottom: 16px;\n\n    .selectable-item {\n      border-top: 1px solid rgba(0, 0, 0, 0.2);\n      display: flex;\n\n      &:first-child {\n        border-top: none;\n      }\n\n      .inner-checkbox {\n        display: block;\n        flex: 1;\n        padding: 8px 16px;\n      }\n    }\n\n    .items-more {\n      text-align: center;\n      opacity: 0.7;\n      font-size: smaller;\n\n      .more-dots {\n        display: block;\n        margin-bottom: 4px;\n\n        .dot {\n          display: block;\n          width: 4px;\n          height: 4px;\n          border-radius: 2px;\n          background: currentColor;\n          margin: 0 auto 3px auto;\n\n          &:nth-child(2) {\n            opacity: 0.6;\n          }\n          &:nth-child(3) {\n            opacity: 0.27;\n          }\n          &:nth-child(4) {\n            opacity: 0.08;\n          }\n        }\n      }\n    }\n\n    .items-empty {\n      text-align: center;\n      opacity: 0.5;\n    }\n\n    .items-create {\n      text-align: center;\n      margin-top: 16px;\n      margin-bottom: 8px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ data.title }}                    Search        search                                                                                                                                          Edit                                                  Delete                                                                    more_vert                                                                                                          Use search to find more items                     {{ data.emptyResultsLabel }}          {{ data.emptySuggestionsLabel }}                               add          Create new                          Cancel    Apply  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'SetEditorDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SetEditorDialogData.html":{"url":"interfaces/SetEditorDialogData.html","title":"interface - SetEditorDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SetEditorDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/set-editor/set-editor-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            applyChangeset\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createItem\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            deleteItem\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            editItem\n                                        \n                                \n                                \n                                        \n                                            emptyResultsLabel\n                                        \n                                \n                                \n                                        \n                                            emptySuggestionsLabel\n                                        \n                                \n                                \n                                        \n                                            itemTemplate\n                                        \n                                \n                                \n                                        \n                                            listAll\n                                        \n                                \n                                \n                                        \n                                            listSet\n                                        \n                                \n                                \n                                        \n                                            makeFilter\n                                        \n                                \n                                \n                                        \n                                            scoreKeys\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        applyChangeset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        applyChangeset:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleteItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleteItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptyResultsLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emptyResultsLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptySuggestionsLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emptySuggestionsLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemTemplate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemTemplate:     TemplateRef<>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TemplateRef<>\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listAll\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listAll:     ListId | SetMultiSource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ListId | SetMultiSource\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listSet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listSet:     ListId | NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ListId | NodeId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        makeFilter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        makeFilter:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scoreKeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scoreKeys:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, OnDestroy, OnInit, TemplateRef} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {\n  decodeListId,\n  decodeNodeId,\n  encodeListId,\n  encodeNodeId,\n  ListId,\n  ListIdEnc,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename\n} from '@app/data-dgql/id';\nimport {DataList} from '@app/data-dgql/query';\nimport {Subscription} from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {quickScore} from 'quick-score';\n\n/**\n * This interface is used to source items from multiple sources in the set editor.\n *\n * staticSources specifies lists whose items will always be loaded.\n * sourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n */\nexport interface SetMultiSource {\n  /** A static list of source lists. */\n  staticSources: ListId[];\n  /** A list of nodes that will be passed to listFromNode. */\n  sourceNodes?: ListId | NodeId[];\n  /** Maps nodes from sourceNodes to lists from which items will be sourced. */\n  listFromNode?: (n: NodeId) => ListId;\n}\n\n/**\n * This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n */\nclass MultiSourceList {\n  /** A DataList that loads the value of sourceNodes, if it's a ListId. */\n  public sourceNodeList?: DataList;\n  /**\n   * @ignore\n   * Internal: subscription to the sourceNodeList.\n   */\n  private sourceNodeListSub?: Subscription;\n  /** The list of nodes specified in sourceNodes, if it's a NodeId[]. */\n  public staticSourceNodeList?: NodeId[];\n  /** List of all sources that will be included in the results. */\n  public sources: Map> = new Map();\n  /**\n   * @ignore\n   * Internal: subscriptions to all of the sources.\n   */\n  private sourceSubs: Map = new Map();\n  /** Max number of items in results. */\n  public limit = 10;\n  /** Current results. */\n  public results?: T[];\n  /** If true, there are more than `limit` items in the source data. */\n  public hasMore = false;\n  /**\n   * Current search query. Used to rank results by relevance.\n   * The filters are computed separately! Use {@link #setFilter} to set both simultaneously.\n   */\n  public query = '';\n\n  constructor(public spec: SetMultiSource, public scoreKeys: string[], private dataService: DataService) {\n    if (Array.isArray(spec.sourceNodes)) {\n      this.staticSourceNodeList = spec.sourceNodes;\n    } else if (typeof spec.sourceNodes === 'object') {\n      this.sourceNodeList = dataService.getList(spec.sourceNodes);\n      this.sourceNodeListSub = this.sourceNodeList.subscribe(() => this.update());\n    }\n    this.update();\n  }\n\n  /** Creates a new MultiSourceList that actually just loads a single list. */\n  static fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService) {\n    return new this({staticSources: [list]}, scoreKeys, dataService);\n  }\n\n  /** Updates lists. */\n  update() {\n    const newSourceSet = new Set();\n    for (const id of this.sourceNodeList?.current?.keys() || []) {\n      const nodeId = decodeNodeId(id);\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const nodeId of this.staticSourceNodeList || []) {\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const source of this.spec.staticSources) {\n      newSourceSet.add(encodeListId(source));\n    }\n\n    for (const source of newSourceSet) {\n      if (!this.sources.has(source)) {\n        const list = this.dataService.getList(decodeListId(source));\n        list.interactive = true;\n        this.sources.set(source, list);\n        this.sourceSubs.set(\n          source,\n          list.subscribe(() => this.updateResults())\n        );\n      }\n    }\n    for (const source of [...this.sources.keys()]) {\n      if (!newSourceSet.has(source)) {\n        this.sourceSubs.get(source).unsubscribe();\n        this.sourceSubs.delete(source);\n        this.sources.delete(source);\n      }\n    }\n  }\n\n  /** Sets a filter on all lists. */\n  setFilter(query: string, filter: F) {\n    this.query = query;\n    for (const source of this.sources.values()) {\n      source.filter = filter;\n    }\n  }\n\n  /** Scores an item for ranking in results. */\n  score(item: T) {\n    const matchStrings = [];\n    for (const key of this.scoreKeys) {\n      let cursor = item;\n      for (const objKey of key.split('.')) {\n        cursor = cursor[objKey];\n        if (!cursor) {\n          break;\n        }\n      }\n      if (cursor) {\n        matchStrings.push(cursor);\n      }\n    }\n\n    return quickScore(matchStrings.join(' '), this.query);\n  }\n\n  /** Updates the results array from loaded data. */\n  updateResults() {\n    const seenItems = new Set();\n    const items = [];\n    this.hasMore = false;\n    for (const source of this.sources.values()) {\n      if (!source.hasData) {\n        continue;\n      }\n      for (const [id, item] of source.current.entries()) {\n        if (!seenItems.has(id)) {\n          seenItems.add(id);\n          items.push(item);\n        }\n      }\n      this.hasMore = this.hasMore || source.current.size  this.score(a) - this.score(b));\n    items.splice(this.limit);\n\n    this.results = items;\n  }\n\n  /** If true, something is loading somewhere. */\n  isLoading() {\n    if (this.sourceNodeList?.loading) {\n      return true;\n    }\n    for (const source of this.sources.values()) {\n      if (source.loading) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** Unsubscribes from all subscriptions. This object should no longer be used afterwards. */\n  unsubscribe() {\n    this.sourceNodeListSub?.unsubscribe();\n    this.sourceSubs.forEach((sub) => sub.unsubscribe());\n  }\n}\n\n/** Types of item operations that may be made available. */\nexport type ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\nexport interface SetEditorDialogData {\n  title: string;\n  listSet: ListId | NodeId[];\n  listAll: ListId | SetMultiSource;\n  applyChangeset: (add: NodeId[], del: NodeId[]) => Promise;\n  itemTemplate: TemplateRef;\n  makeFilter: (query: string) => F;\n  scoreKeys: string[];\n  emptySuggestionsLabel: string;\n  emptyResultsLabel: string;\n  createItem?: () => Promise;\n  editItem?: ({id: NodeId, preview: T}) => void;\n  deleteItem?: ({id: NodeId, preview: T}) => void;\n}\n\n/** This is an internal component used in the set editor. */\n@Component({\n  selector: 'app-set-editor-dialog',\n  templateUrl: './set-editor-dialog.component.html',\n  styleUrls: ['./set-editor-dialog.component.scss']\n})\nexport class SetEditorDialogComponent implements OnInit, OnDestroy {\n  public isLocalSet = false;\n  public localSet: NodeIdEnc[] = [];\n  public listSet$: DataList;\n  public listAll: MultiSourceList;\n  private listSetSub: Subscription;\n  private additions: Set = new Set();\n  private deletions: Set = new Set();\n  public searchQuery = '';\n\n  constructor(\n    private dataService: DataService,\n    private notifyService: UserNotifyService,\n    private dialogRef: MatDialogRef>,\n    @Inject(MAT_DIALOG_DATA) public data: SetEditorDialogData\n  ) {}\n\n  ngOnInit() {\n    if (Array.isArray(this.data.listSet)) {\n      this.isLocalSet = true;\n      this.localSet = [...this.data.listSet].map((id) => encodeNodeId(id));\n    } else {\n      this.listSet$ = this.dataService.getList(this.data.listSet);\n    }\n    this.listAll =\n      'staticSources' in this.data.listAll\n        ? new MultiSourceList(this.data.listAll, this.data.scoreKeys, this.dataService)\n        : MultiSourceList.fromSingleList(this.data.listAll, this.data.scoreKeys, this.dataService);\n\n    if (this.listSet$) {\n      this.listSetSub = this.listSet$?.subscribe();\n      // TODO: is this a reasonable heuristic for the listSet count? we need to cover >= results from listAll\n      this.listSet$.count = 10;\n      this.listSet$.interactive = true;\n    }\n  }\n\n  searchQueryDidChange() {\n    if (this.listSet$) {\n      this.listSet$.filter = this.data.makeFilter(this.searchQuery);\n    }\n    this.listAll.setFilter(this.searchQuery, this.data.makeFilter(this.searchQuery));\n  }\n\n  getNodeId(item): NodeId {\n    const type = nodeTypeFromTypename(item.__typename);\n    return {type, id: item.id};\n  }\n\n  getEncodedId(item): NodeIdEnc {\n    return encodeNodeId(this.getNodeId(item));\n  }\n\n  isInSet(item): boolean {\n    const id = this.getEncodedId(item);\n    if (this.additions.has(id)) {\n      return true;\n    }\n    if (this.deletions.has(id)) {\n      return false;\n    }\n    if (this.isLocalSet) {\n      return this.localSet.includes(id);\n    }\n    return this.listSet$.current?.has(id) || false;\n  }\n\n  toggleInSet(item): void {\n    const id = this.getEncodedId(item);\n    if (this.isInSet(item)) {\n      this.additions.delete(id);\n      this.deletions.add(id);\n    } else {\n      this.deletions.delete(id);\n      this.additions.add(id);\n    }\n  }\n\n  apply() {\n    if (this.additions.size + this.deletions.size === 0) {\n      this.dialogRef.close(null);\n      return;\n    }\n\n    this.data\n      .applyChangeset([...this.additions].map(decodeNodeId), [...this.deletions].map(decodeNodeId))\n      .then(() => {\n        this.dialogRef.close(null);\n      })\n      .catch((error) => {\n        this.notifyService.notifyError('Failed to apply changes', error);\n      });\n  }\n\n  createItem() {\n    this.data.createItem().then((node) => {\n      if (node) {\n        this.additions.add(encodeNodeId(node));\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n    this.listAll.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SetMultiSource.html":{"url":"interfaces/SetMultiSource.html","title":"interface - SetMultiSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SetMultiSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/set-editor/set-editor-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This interface is used to source items from multiple sources in the set editor.\nstaticSources specifies lists whose items will always be loaded.\nsourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            listFromNode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sourceNodes\n                                        \n                                \n                                \n                                        \n                                            staticSources\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        listFromNode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listFromNode:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maps nodes from sourceNodes to lists from which items will be sourced.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceNodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceNodes:     ListId | NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ListId | NodeId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A list of nodes that will be passed to listFromNode.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        staticSources\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        staticSources:         ListId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListId[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A static list of source lists.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, OnDestroy, OnInit, TemplateRef} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {\n  decodeListId,\n  decodeNodeId,\n  encodeListId,\n  encodeNodeId,\n  ListId,\n  ListIdEnc,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename\n} from '@app/data-dgql/id';\nimport {DataList} from '@app/data-dgql/query';\nimport {Subscription} from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {quickScore} from 'quick-score';\n\n/**\n * This interface is used to source items from multiple sources in the set editor.\n *\n * staticSources specifies lists whose items will always be loaded.\n * sourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n */\nexport interface SetMultiSource {\n  /** A static list of source lists. */\n  staticSources: ListId[];\n  /** A list of nodes that will be passed to listFromNode. */\n  sourceNodes?: ListId | NodeId[];\n  /** Maps nodes from sourceNodes to lists from which items will be sourced. */\n  listFromNode?: (n: NodeId) => ListId;\n}\n\n/**\n * This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n */\nclass MultiSourceList {\n  /** A DataList that loads the value of sourceNodes, if it's a ListId. */\n  public sourceNodeList?: DataList;\n  /**\n   * @ignore\n   * Internal: subscription to the sourceNodeList.\n   */\n  private sourceNodeListSub?: Subscription;\n  /** The list of nodes specified in sourceNodes, if it's a NodeId[]. */\n  public staticSourceNodeList?: NodeId[];\n  /** List of all sources that will be included in the results. */\n  public sources: Map> = new Map();\n  /**\n   * @ignore\n   * Internal: subscriptions to all of the sources.\n   */\n  private sourceSubs: Map = new Map();\n  /** Max number of items in results. */\n  public limit = 10;\n  /** Current results. */\n  public results?: T[];\n  /** If true, there are more than `limit` items in the source data. */\n  public hasMore = false;\n  /**\n   * Current search query. Used to rank results by relevance.\n   * The filters are computed separately! Use {@link #setFilter} to set both simultaneously.\n   */\n  public query = '';\n\n  constructor(public spec: SetMultiSource, public scoreKeys: string[], private dataService: DataService) {\n    if (Array.isArray(spec.sourceNodes)) {\n      this.staticSourceNodeList = spec.sourceNodes;\n    } else if (typeof spec.sourceNodes === 'object') {\n      this.sourceNodeList = dataService.getList(spec.sourceNodes);\n      this.sourceNodeListSub = this.sourceNodeList.subscribe(() => this.update());\n    }\n    this.update();\n  }\n\n  /** Creates a new MultiSourceList that actually just loads a single list. */\n  static fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService) {\n    return new this({staticSources: [list]}, scoreKeys, dataService);\n  }\n\n  /** Updates lists. */\n  update() {\n    const newSourceSet = new Set();\n    for (const id of this.sourceNodeList?.current?.keys() || []) {\n      const nodeId = decodeNodeId(id);\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const nodeId of this.staticSourceNodeList || []) {\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const source of this.spec.staticSources) {\n      newSourceSet.add(encodeListId(source));\n    }\n\n    for (const source of newSourceSet) {\n      if (!this.sources.has(source)) {\n        const list = this.dataService.getList(decodeListId(source));\n        list.interactive = true;\n        this.sources.set(source, list);\n        this.sourceSubs.set(\n          source,\n          list.subscribe(() => this.updateResults())\n        );\n      }\n    }\n    for (const source of [...this.sources.keys()]) {\n      if (!newSourceSet.has(source)) {\n        this.sourceSubs.get(source).unsubscribe();\n        this.sourceSubs.delete(source);\n        this.sources.delete(source);\n      }\n    }\n  }\n\n  /** Sets a filter on all lists. */\n  setFilter(query: string, filter: F) {\n    this.query = query;\n    for (const source of this.sources.values()) {\n      source.filter = filter;\n    }\n  }\n\n  /** Scores an item for ranking in results. */\n  score(item: T) {\n    const matchStrings = [];\n    for (const key of this.scoreKeys) {\n      let cursor = item;\n      for (const objKey of key.split('.')) {\n        cursor = cursor[objKey];\n        if (!cursor) {\n          break;\n        }\n      }\n      if (cursor) {\n        matchStrings.push(cursor);\n      }\n    }\n\n    return quickScore(matchStrings.join(' '), this.query);\n  }\n\n  /** Updates the results array from loaded data. */\n  updateResults() {\n    const seenItems = new Set();\n    const items = [];\n    this.hasMore = false;\n    for (const source of this.sources.values()) {\n      if (!source.hasData) {\n        continue;\n      }\n      for (const [id, item] of source.current.entries()) {\n        if (!seenItems.has(id)) {\n          seenItems.add(id);\n          items.push(item);\n        }\n      }\n      this.hasMore = this.hasMore || source.current.size  this.score(a) - this.score(b));\n    items.splice(this.limit);\n\n    this.results = items;\n  }\n\n  /** If true, something is loading somewhere. */\n  isLoading() {\n    if (this.sourceNodeList?.loading) {\n      return true;\n    }\n    for (const source of this.sources.values()) {\n      if (source.loading) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** Unsubscribes from all subscriptions. This object should no longer be used afterwards. */\n  unsubscribe() {\n    this.sourceNodeListSub?.unsubscribe();\n    this.sourceSubs.forEach((sub) => sub.unsubscribe());\n  }\n}\n\n/** Types of item operations that may be made available. */\nexport type ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\nexport interface SetEditorDialogData {\n  title: string;\n  listSet: ListId | NodeId[];\n  listAll: ListId | SetMultiSource;\n  applyChangeset: (add: NodeId[], del: NodeId[]) => Promise;\n  itemTemplate: TemplateRef;\n  makeFilter: (query: string) => F;\n  scoreKeys: string[];\n  emptySuggestionsLabel: string;\n  emptyResultsLabel: string;\n  createItem?: () => Promise;\n  editItem?: ({id: NodeId, preview: T}) => void;\n  deleteItem?: ({id: NodeId, preview: T}) => void;\n}\n\n/** This is an internal component used in the set editor. */\n@Component({\n  selector: 'app-set-editor-dialog',\n  templateUrl: './set-editor-dialog.component.html',\n  styleUrls: ['./set-editor-dialog.component.scss']\n})\nexport class SetEditorDialogComponent implements OnInit, OnDestroy {\n  public isLocalSet = false;\n  public localSet: NodeIdEnc[] = [];\n  public listSet$: DataList;\n  public listAll: MultiSourceList;\n  private listSetSub: Subscription;\n  private additions: Set = new Set();\n  private deletions: Set = new Set();\n  public searchQuery = '';\n\n  constructor(\n    private dataService: DataService,\n    private notifyService: UserNotifyService,\n    private dialogRef: MatDialogRef>,\n    @Inject(MAT_DIALOG_DATA) public data: SetEditorDialogData\n  ) {}\n\n  ngOnInit() {\n    if (Array.isArray(this.data.listSet)) {\n      this.isLocalSet = true;\n      this.localSet = [...this.data.listSet].map((id) => encodeNodeId(id));\n    } else {\n      this.listSet$ = this.dataService.getList(this.data.listSet);\n    }\n    this.listAll =\n      'staticSources' in this.data.listAll\n        ? new MultiSourceList(this.data.listAll, this.data.scoreKeys, this.dataService)\n        : MultiSourceList.fromSingleList(this.data.listAll, this.data.scoreKeys, this.dataService);\n\n    if (this.listSet$) {\n      this.listSetSub = this.listSet$?.subscribe();\n      // TODO: is this a reasonable heuristic for the listSet count? we need to cover >= results from listAll\n      this.listSet$.count = 10;\n      this.listSet$.interactive = true;\n    }\n  }\n\n  searchQueryDidChange() {\n    if (this.listSet$) {\n      this.listSet$.filter = this.data.makeFilter(this.searchQuery);\n    }\n    this.listAll.setFilter(this.searchQuery, this.data.makeFilter(this.searchQuery));\n  }\n\n  getNodeId(item): NodeId {\n    const type = nodeTypeFromTypename(item.__typename);\n    return {type, id: item.id};\n  }\n\n  getEncodedId(item): NodeIdEnc {\n    return encodeNodeId(this.getNodeId(item));\n  }\n\n  isInSet(item): boolean {\n    const id = this.getEncodedId(item);\n    if (this.additions.has(id)) {\n      return true;\n    }\n    if (this.deletions.has(id)) {\n      return false;\n    }\n    if (this.isLocalSet) {\n      return this.localSet.includes(id);\n    }\n    return this.listSet$.current?.has(id) || false;\n  }\n\n  toggleInSet(item): void {\n    const id = this.getEncodedId(item);\n    if (this.isInSet(item)) {\n      this.additions.delete(id);\n      this.deletions.add(id);\n    } else {\n      this.deletions.delete(id);\n      this.additions.add(id);\n    }\n  }\n\n  apply() {\n    if (this.additions.size + this.deletions.size === 0) {\n      this.dialogRef.close(null);\n      return;\n    }\n\n    this.data\n      .applyChangeset([...this.additions].map(decodeNodeId), [...this.deletions].map(decodeNodeId))\n      .then(() => {\n        this.dialogRef.close(null);\n      })\n      .catch((error) => {\n        this.notifyService.notifyError('Failed to apply changes', error);\n      });\n  }\n\n  createItem() {\n    this.data.createItem().then((node) => {\n      if (node) {\n        this.additions.add(encodeNodeId(node));\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n    this.listAll.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsDialogComponent.html":{"url":"components/SettingsDialogComponent.html","title":"component - SettingsDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/settings-dialog/settings-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-dialog\n            \n\n            \n                styleUrls\n                ./settings-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                mode\n                            \n                            \n                                modeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                openAccessTokenSettings\n                            \n                            \n                                    Public\n                                openProfileSettings\n                            \n                            \n                                    Public\n                                switchTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openAccessTokenSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    openAccessTokenSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openProfileSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    openProfileSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        switchTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    switchTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Dark Mode'\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modeIcon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'dark_mode'\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Inject} from '@angular/core';\nimport {Component, OnInit} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {Output, EventEmitter, Input} from '@angular/core';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {Observable} from 'rxjs';\nimport {map, shareReplay} from 'rxjs/operators';\nimport {AuthenticationService} from '@app/auth/authentication.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ProfileSettingsDialogComponent} from '../profile-settings-dialog/profile-settings-dialog.component';\nimport {AccessTokenDialogComponent} from '../access-token-dialog/access-token-dialog.component';\n\n@Component({\n  selector: 'app-settings-dialog',\n  templateUrl: './settings-dialog.component.html',\n  styleUrls: ['./settings-dialog.component.scss']\n})\nexport class SettingsDialogComponent implements OnInit {\n  mode = 'Dark Mode';\n  modeIcon = 'dark_mode';\n\n  constructor(public dialogRef: MatDialogRef, private dialog: MatDialog) {}\n\n  ngOnInit(): void {}\n\n  //open the dialog with profile settings\n  public openProfileSettings() {\n    this.dialogRef.close();\n    this.dialog.open(ProfileSettingsDialogComponent);\n  }\n\n  //open the dialog with access token settings\n  public openAccessTokenSettings() {\n    this.dialogRef.close();\n    this.dialog.open(AccessTokenDialogComponent);\n  }\n\n  //switch to dark mode / light mode (TODO)\n  public switchTheme() {\n    if (this.mode === 'Light Mode') {\n      this.mode = 'Dark Mode';\n    } else {\n      this.mode = 'Light Mode';\n    }\n\n    if (this.modeIcon === 'light_mode') {\n      this.modeIcon = 'dark_mode';\n    } else {\n      this.modeIcon = 'light_mode';\n    }\n\n    console.log('dark mode / light mode');\n  }\n}\n\n    \n\n    \n        Settings\n\n  \n    \n      \n         account_circle \n      \n      Profile Settings\n    \n  \n  \n    \n        token \n      Access Token\n    \n  \n  \n    \n        {{ modeIcon }} \n      {{ mode }}\n    \n  \n\n\n    \n\n    \n                \n                    ./settings-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Settings                     account_circle             Profile Settings                    token       Access Token                    {{ modeIcon }}       {{ mode }}      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SideNavComponent.html":{"url":"components/SideNavComponent.html","title":"component - SideNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SideNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/side-nav/side-nav.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays and manages the sidemenu showing\nthe name of the current project at the top. Beneath it\nnavigation points e.g. 'Graph' are displayed.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-side-nav\n            \n\n            \n                styleUrls\n                ./side-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./side-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                defaultMenuTitle\n                            \n                            \n                                graphLink\n                            \n                            \n                                issuesLink\n                            \n                            \n                                membersLink\n                            \n                            \n                                    Public\n                                menuTitle\n                            \n                            \n                                    Public\n                                notify\n                            \n                            \n                                overviewLink\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                ss\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ss: StateService, router: Router, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/side-nav/side-nav.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ss\n                                                  \n                                                        \n                                                                        StateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        defaultMenuTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Menu'\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/']\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issuesLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/']\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        membersLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/']\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        menuTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.defaultMenuTitle\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        notify\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserNotifyService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overviewLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/']\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StateService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {StateService} from '@app/state.service';\nimport {Router} from '@angular/router';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\n\n/**\n * This component displays and manages the sidemenu showing\n * the name of the current project at the top. Beneath it\n * navigation points e.g. 'Graph' are displayed.\n */\n@Component({\n  selector: 'app-side-nav',\n  templateUrl: './side-nav.component.html',\n  styleUrls: ['./side-nav.component.scss']\n})\nexport class SideNavComponent {\n  readonly defaultMenuTitle = 'Menu';\n  public menuTitle = this.defaultMenuTitle;\n  overviewLink = ['/'];\n  graphLink = ['/'];\n  issuesLink = ['/'];\n  membersLink = ['/'];\n\n  constructor(public ss: StateService, public router: Router, public notify: UserNotifyService) {\n    ss.state$.subscribe((appState) => {\n      if (!appState.project) {\n        return;\n      }\n\n      if (appState.project.node) {\n        this.menuTitle = appState.project.node.name;\n        this.overviewLink = ['/projects', appState.project.node.id];\n        this.graphLink = ['/projects', appState.project.node.id, 'graph'];\n        this.issuesLink = ['/projects', appState.project.node.id, 'issues'];\n        this.membersLink = ['/projects', appState.project.node.id, 'members'];\n      } else {\n        this.router.navigate(['/']);\n        notify.notifyError('The specified project does not exist!');\n      }\n    });\n  }\n}\n\n    \n\n    \n        {{ menuTitle }}\n\n  \n    info\n    Overview\n  \n  \n    account_tree\n    Graph\n  \n  \n    bug_report\n    Issues\n  \n  \n    group\n    Members\n  \n\n\n    \n\n    \n                \n                    ./side-nav.component.scss\n                \n                @import \"~@angular/material/theming\";\n@import \"variables\";\n\nmat-icon {\n  color: rgba(0, 0, 0, 0.54);\n  margin-right: 20px;\n  padding-left: 4px;\n}\n\n.list-item-active {\n  font-weight: bold;\n  background-color: mat-color($accent, 300) !important;\n}\n\nmat-nav-list {\n  padding-top: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ menuTitle }}      info    Overview        account_tree    Graph        bug_report    Issues        group    Members  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'SideNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateService.html":{"url":"injectables/StateService.html","title":"injectable - StateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service exposes an observable of the name and id of the current project.\nIt determines the current project by listening for url changes and parsing the url.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                state\n                            \n                            \n                                state$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isProjectURL\n                            \n                            \n                                syncStateWithUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, ps: ProjectStoreService)\n                    \n                \n                        \n                            \n                                Defined in src/app/state.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ps\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isProjectURL\n                        \n                    \n                \n            \n            \n                \n                    \n                    isProjectURL(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/state.service.ts:57\n                \n            \n\n\n            \n                \n                    Caution:\nIf you change the routing you might have to change this function too.\nThat is if it has the form 'projects/:id' + further stuff.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true iff url is a route pertaining to a project\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncStateWithUrl\n                        \n                    \n                \n            \n            \n                \nsyncStateWithUrl(router: Router, ps: ProjectStoreService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/state.service.ts:31\n                \n            \n\n\n            \n                \n                    Sets up two mutually exclusive (look at filter) subscriptions to track whether we are at a\nurl referring to a project or not. If we are at a project we retrieve information about it\nfrom the backend and make it available in the state observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    router\n                                    \n                                                Router\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        allows to listen for routing events\n\n                                    \n                                \n                                \n                                    ps\n                                    \n                                                ProjectStoreService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppState\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/state.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/state.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {NavigationEnd, PRIMARY_OUTLET, Router} from '@angular/router';\nimport {ReplaySubject} from 'rxjs';\nimport {filter, switchMap} from 'rxjs/operators';\nimport {GetBasicProjectQuery} from 'src/generated/graphql';\nimport {ProjectStoreService} from './data/project/project-store.service';\n\n/**\n * This service exposes an observable of the name and id of the current project.\n * It determines the current project by listening for url changes and parsing the url.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n  state: AppState = {};\n  state$ = new ReplaySubject(1);\n\n  constructor(private router: Router, private ps: ProjectStoreService) {\n    this.syncStateWithUrl(router, ps);\n  }\n\n  /**\n   * Sets up two mutually exclusive (look at filter) subscriptions to track whether we are at a\n   * url referring to a project or not. If we are at a project we retrieve information about it\n   * from the backend and make it available in the state observable\n   *\n   * @param router allows to listen for routing events\n   * @param ps\n   */\n  syncStateWithUrl(router: Router, ps: ProjectStoreService) {\n    router.events\n      .pipe(\n        filter((event) => event instanceof NavigationEnd && this.isProjectURL(event.url)),\n        switchMap((event: NavigationEnd) =>\n          ps.getBasicProject(this.router.parseUrl(event.url).root?.children[PRIMARY_OUTLET].segments[1].path)\n        )\n      )\n      .subscribe((project) => {\n        this.state.project = project;\n        this.state$.next(this.state);\n      });\n    // set project to null if new url is not specific to a project\n    router.events.pipe(filter((event) => event instanceof NavigationEnd && !this.isProjectURL(event.url))).subscribe((_) => {\n      this.state.project = null;\n      this.state$.next(this.state);\n    });\n  }\n\n  /**\n   * Caution:\n   * If you change the routing you might have to change this function too.\n   * That is if it has the form 'projects/:id' + further stuff.\n   * @param url\n   * @returns true iff url is a route pertaining to a project\n   */\n  private isProjectURL(url: string): boolean {\n    const tree = this.router.parseUrl(url);\n    const primary = tree.root.children[PRIMARY_OUTLET];\n    if (primary) {\n      const primarySegments = primary.segments;\n      return primarySegments[0].path === 'projects' && primary.segments.length >= 2;\n    }\n    return false;\n  }\n}\n\nexport interface AppState {\n  project?: GetBasicProjectQuery;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextDisplayComponent.html":{"url":"components/TextDisplayComponent.html","title":"component - TextDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/text-display/text-display.component.ts\n\n\n\n    \n        Description\n    \n    \n        The text display component shows text in a labeled box, and if desired, allows the user to edit and save the\ntext\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-display\n            \n\n            \n                styleUrls\n                ./text-display.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-display.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editMode\n                            \n                            \n                                editText\n                            \n                            \n                                showPlaceholder\n                            \n                            \n                                    Private\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                finishEditing\n                            \n                            \n                                startEditing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                labelText\n                            \n                            \n                                onEditFinished\n                            \n                            \n                                placeholder\n                            \n                            \n                                readonly\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    text\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        labelText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:22\n                            \n                        \n                \n                    \n                        The title text.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        onEditFinished\n                    \n                \n                \n                    \n                        Type :         TextDisplayEditCallbackFn\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:20\n                            \n                        \n                \n                    \n                        A callback function.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:36\n                            \n                        \n                \n                    \n                        The placeholder will be shown if the content is empty\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        readonly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:34\n                            \n                        \n                \n                    \n                        If true, the edit button is not shown\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:24\n                            \n                        \n                \n                    \n                        Sets the content of the text display, and shows the placeholder if the text is empty\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        finishEditing\n                        \n                    \n                \n            \n            \n                \nfinishEditing(saved: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/text-display/text-display.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saved\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startEditing\n                        \n                    \n                \n            \n            \n                \nstartEditing()\n                \n            \n\n\n            \n                \n                    Defined in src/app/text-display/text-display.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/text-display/text-display.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/text-display/text-display.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPlaceholder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/text-display/text-display.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        value\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/text-display/text-display.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n\n                \n                    \n                        gettext()\n                    \n                \n                            \n                                \n                                    Defined in src/app/text-display/text-display.component.ts:29\n                                \n                            \n\n                \n                    \n                        settext(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/text-display/text-display.component.ts:24\n                                \n                            \n                    \n                        \n                                Sets the content of the text display, and shows the placeholder if the text is empty\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n/**\n * A callback function that is called once the user finishes editing the text.\n * @param saved true if the user clicked save, false if the user cancelled the editing\n */\nexport type TextDisplayEditCallbackFn = (saved: boolean) => void;\n\n/**\n * The text display component shows text in a labeled box, and if desired, allows the user to edit and save the\n * text\n */\n@Component({\n  selector: 'app-text-display',\n  templateUrl: './text-display.component.html',\n  styleUrls: ['./text-display.component.scss']\n})\nexport class TextDisplayComponent {\n  /** A callback function. */\n  @Input() onEditFinished: TextDisplayEditCallbackFn;\n  /** The title text. */\n  @Input() labelText: string;\n  /** Sets the content of the text display, and shows the placeholder if the text is empty */\n  @Input() set text(value: string) {\n    this.value = value;\n    this.showPlaceholder = !value || value.length === 0;\n  }\n\n  get text() {\n    return this.value;\n  }\n\n  /** If true, the edit button is not shown */\n  @Input() readonly: boolean;\n  /** The placeholder will be shown if the content is empty */\n  @Input() placeholder = '';\n\n  private value;\n  editMode = false;\n  editText = '';\n  showPlaceholder = false;\n\n  finishEditing(saved: boolean): void {\n    this.editMode = false;\n    if (saved) {\n      this.text = this.editText;\n    }\n\n    if (this.onEditFinished) {\n      this.onEditFinished(saved);\n    }\n  }\n\n  startEditing() {\n    this.editText = this.text;\n    this.editMode = true;\n  }\n}\n\n    \n\n    \n        \n  \n    {{ labelText }}\n    \n    \n      \n        save\n      \n      \n        cancel\n      \n    \n  \n\n\n\n  \n    \n      {{ labelText }}\n    \n    \n      edit\n    \n    \n      \n        {{ line.replace(\"\\n\", \"\") }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./text-display.component.scss\n                \n                @import \"src/styles/variables\";\n\n.text-display-label-container {\n  position: relative;\n  width: fit-content;\n  height: 0.8em;\n  line-height: 0.8em;\n  padding: 0 2px 0 2px;\n  top: -0.5em;\n  left: -1px;\n  background-color: #fafafa; // FIXME: Hardcoded background color\n  color: rgba(0, 0, 0, 0.6);\n  text-align: center;\n}\n\n.text-display-label {\n  display: inline-block;\n  vertical-align: middle;\n  font-size: 0.8em;\n}\n\n.text-display-container {\n  margin-top: 10px;\n  padding: 0 8px 16px 8px;\n  width: 100%;\n  height: 100%;\n  border: 1px rgba(0, 0, 0, 0.2) solid;\n  border-radius: 4px;\n  word-break: break-all;\n  min-height: 60px;\n}\n\n.text-content-container {\n  padding-top: 8px;\n}\n\n.text-content-container-placeholder {\n  padding-top: 8px;\n  color: gray;\n  font-style: italic;\n}\n\n.text-edit-container {\n  width: 100%;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ labelText }}                      save                    cancel                        {{ labelText }}              edit                      {{ line.replace(\"\\n\", \"\") }}            '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TextFragment.html":{"url":"interfaces/TextFragment.html","title":"interface - TextFragment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TextFragment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/label-search/label-search.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {concat, of, Subject, Observable, BehaviorSubject} from 'rxjs';\nimport {catchError, distinctUntilChanged, switchMap, tap} from 'rxjs/operators';\nimport {FilterLabel, isFilterLabel, LabelStoreService} from '../../data/label/label-store.service';\nimport {StateService} from '../../state.service';\n\n/**\n * This component is responsible for the display of the search bar above the graph.\n * It allows for filtering issues by multiple labels and text fragments.\n */\n@Component({\n  selector: 'app-label-search',\n  templateUrl: './label-search.component.html',\n  styleUrls: ['./label-search.component.scss']\n})\nexport class LabelSearchComponent implements OnInit {\n  public filterSelection$ = new BehaviorSubject({\n    labels: [],\n    texts: []\n  });\n\n  labels$: Observable;\n  labelsLoading = false;\n  labelsInput$ = new Subject();\n  selectedLabels: FilterElement[] = [];\n\n  constructor(private labelStore: LabelStoreService, private ss: StateService) {}\n\n  ngOnInit() {\n    this.loadLabels();\n  }\n\n  trackByFn(item: FilterLabel) {\n    return item.id;\n  }\n\n  /**\n   * Emit value representing label and text fragments in the search bar via this.filterSelection$\n   */\n  emitSelectedLabels() {\n    const selection: FilterSelection = {texts: [], labels: []};\n    // find out which elements in search bar correspond to an existing label on the backend and which to a text fragment\n    selection.texts = this.selectedLabels.filter((item) => !isFilterLabel(item)).map((item) => item.name);\n    selection.labels = this.selectedLabels.filter((label) => isFilterLabel(label)) as FilterLabel[];\n    this.filterSelection$.next(selection);\n  }\n\n  /**\n   * Load all labels from backend that match the currently typed in ng-select element\n   */\n  private loadLabels() {\n    this.labels$ = concat(\n      of([]), // default items\n      this.labelsInput$.pipe(\n        distinctUntilChanged(),\n        tap(() => (this.labelsLoading = true)),\n        switchMap((term) =>\n          this.labelStore.getMatchingLabels(this.ss.state.project.node.id, term).pipe(\n            catchError(() => of([])), // empty list on error\n            tap(() => (this.labelsLoading = false))\n          )\n        )\n      )\n    );\n  }\n}\n\n/**\n * The bar can contain elements standing for labels and elements for text fragments.\n */\ntype FilterElement = TextFragment | FilterLabel;\n\ninterface TextFragment {\n  name: string;\n}\n\nexport interface FilterSelection {\n  texts: string[];\n  labels: FilterLabel[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeFormatter.html":{"url":"classes/TimeFormatter.html","title":"class - TimeFormatter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeFormatter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/time-formatter.ts\n        \n\n\n            \n                Description\n            \n            \n                This class contains functionality for time formatting which is needed for correct time representation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatTime\n                            \n                            \n                                formatTimeDifference\n                            \n                            \n                                pluralize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatTime\n                        \n                    \n                \n            \n            \n                \nformatTime(time: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/time-formatter.ts:10\n                \n            \n\n\n            \n                \n                    E.g. converts (2021-10-01T19:44:04.813Z) to\n(Fri Oct 01 2021 21:44:04 GMT+0200 (Mitteleuropäische Sommerzeit))\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any string that can be parsed by Date\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatTimeDifference\n                        \n                    \n                \n            \n            \n                \nformatTimeDifference(dateString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/time-formatter.ts:18\n                \n            \n\n\n            \n                \n                    E.g. converts (2021-11-02T12:27:58.192Z) to (8 days ago)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dateString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any string that can be parsed by Date\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluralize\n                        \n                    \n                \n            \n            \n                \npluralize(n: number, singular: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/time-formatter.ts:47\n                \n            \n\n\n            \n                \n                    Change singular form of a word into pluralized form if necessary.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        number of entities\n\n                                    \n                                \n                                \n                                    singular\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        singular form of the word\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class TimeFormatter {\n  /**\n   * E.g. converts (2021-10-01T19:44:04.813Z) to\n   * (Fri Oct 01 2021 21:44:04 GMT+0200 (Mitteleuropäische Sommerzeit))\n   * @param time any string that can be parsed by `Date`\n   */\n  formatTime(time: string): string {\n    return new Date(time).toString();\n  }\n\n  /**\n   * E.g. converts (2021-11-02T12:27:58.192Z) to (8 days ago)\n   * @param dateString any string that can be parsed by `Date`\n   */\n  formatTimeDifference(dateString: string): string {\n    const now = new Date();\n    const pastTime = new Date(dateString);\n\n    const months = now.getMonth() - pastTime.getMonth() + (now.getFullYear() - pastTime.getFullYear()) * 12;\n    const minutes = Math.round((+now - +pastTime) / 1000 / 60);\n    const hours = Math.round(minutes / 60);\n    const days = Math.round(hours / 24);\n\n    if (months >= 12) {\n      return this.pluralize(months / 12, 'year') + ' ago';\n    } else if (days >= 31) {\n      return this.pluralize(months, 'month') + ' ago';\n    } else if (hours >= 24) {\n      return this.pluralize(days, 'day') + ' ago';\n    } else if (minutes >= 60) {\n      return this.pluralize(hours, 'hour') + ' ago';\n    } else if (minutes >= 1) {\n      return this.pluralize(minutes, 'minute') + ' ago';\n    }\n\n    return 'just now';\n  }\n\n  /**\n   * Change singular form of a word into pluralized form if necessary.\n   * @param n number of entities\n   * @param singular singular form of the word\n   */\n  pluralize(n: number, singular: string): string {\n    return n === 1 ? n + ' ' + singular : n + ' ' + singular + 's';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TimelineCoalescedItemsDirective.html":{"url":"directives/TimelineCoalescedItemsDirective.html","title":"directive - TimelineCoalescedItemsDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  TimelineCoalescedItemsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used in conjunction with an ng-template.\nThe content of the ng-template specifies the content of a timeline item, if it was coalesced\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appCoalescedTimelineItems]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef<>)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, ContentChild, Directive, Input, TemplateRef} from '@angular/core';\nimport {CoalescedTimelineItem} from '@app/issue-detail/timeline/timeline.component';\nimport {TimeFormatter} from '@app/issue-detail/time-formatter';\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was *not* coalesced\n */\n@Directive({\n  selector: '[appSingleTimelineItem]'\n})\nexport class TimelineSingleItemDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was coalesced\n */\n@Directive({\n  selector: '[appCoalescedTimelineItems]'\n})\nexport class TimelineCoalescedItemsDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if the attribute `showDeleted` of the\n * {@link TimelineItemComponent} is set to `true`.\n */\n@Directive({\n  selector: '[appTimelineItemDeleted]'\n})\nexport class TimelineItemDeletedDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n/**\n * This component provides an easy method to switch between the different possible content types of a timeline item,\n * such as single, coalesced or deleted.\n * Additionally, the formatted time is shown.\n */\n@Component({\n  selector: 'app-timeline-item',\n  templateUrl: './timeline-item.component.html',\n  styleUrls: ['../timeline.component.scss']\n})\nexport class TimelineItemComponent implements AfterViewInit {\n  /** The timeline item to show */\n  @Input() timelineItem: CoalescedTimelineItem;\n  /** If this option is set to true, the template with the `appTimelineItemDeleted` directive is shown */\n  @Input() showDeleted = false;\n\n  /** The content to be shown if the timeline item was not coalesced */\n  @ContentChild(TimelineSingleItemDirective)\n  timelineItemContent: TimelineSingleItemDirective;\n  /** The content to be shown if the timeline item was coalesced */\n  @ContentChild(TimelineCoalescedItemsDirective)\n  timelineItemsContent: TimelineCoalescedItemsDirective;\n  /** The content to be shown if the timeline item contains deleted data */\n  @ContentChild(TimelineItemDeletedDirective)\n  timelineItemDeletedContent: TimelineItemDeletedDirective;\n\n  timeFormatter: TimeFormatter = new TimeFormatter();\n  activeItemContent: TemplateRef = null;\n\n  constructor(private changeDetector: ChangeDetectorRef) {}\n\n  ngAfterViewInit() {\n    if (this.showDeleted) {\n      this.activeItemContent = this.timelineItemDeletedContent.template;\n    } else if (this.timelineItem.isCoalesced && this.timelineItemsContent) {\n      this.activeItemContent = this.timelineItemsContent.template;\n    } else if (!this.timelineItem.isCoalesced) {\n      this.activeItemContent = this.timelineItemContent.template;\n    }\n\n    this.changeDetector.detectChanges();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelineItemComponent.html":{"url":"components/TimelineItemComponent.html","title":"component - TimelineItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TimelineItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component provides an easy method to switch between the different possible content types of a timeline item,\nsuch as single, coalesced or deleted.\nAdditionally, the formatted time is shown.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-timeline-item\n            \n\n            \n                styleUrls\n                ../timeline.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./timeline-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeItemContent\n                            \n                            \n                                timeFormatter\n                            \n                            \n                                timelineItemContent\n                            \n                            \n                                timelineItemDeletedContent\n                            \n                            \n                                timelineItemsContent\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showDeleted\n                            \n                            \n                                timelineItem\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showDeleted\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:53\n                            \n                        \n                \n                    \n                        If this option is set to true, the template with the appTimelineItemDeleted directive is shown\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        timelineItem\n                    \n                \n                \n                    \n                        Type :         CoalescedTimelineItem\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:51\n                            \n                        \n                \n                    \n                        The timeline item to show\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeItemContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeFormatter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimeFormatter\n\n                    \n                \n                \n                    \n                        Default value : new TimeFormatter()\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timelineItemContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimelineSingleItemDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TimelineSingleItemDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:57\n                        \n                    \n\n            \n                \n                    The content to be shown if the timeline item was not coalesced\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timelineItemDeletedContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimelineItemDeletedDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TimelineItemDeletedDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:63\n                        \n                    \n\n            \n                \n                    The content to be shown if the timeline item contains deleted data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timelineItemsContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimelineCoalescedItemsDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TimelineCoalescedItemsDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:60\n                        \n                    \n\n            \n                \n                    The content to be shown if the timeline item was coalesced\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, ContentChild, Directive, Input, TemplateRef} from '@angular/core';\nimport {CoalescedTimelineItem} from '@app/issue-detail/timeline/timeline.component';\nimport {TimeFormatter} from '@app/issue-detail/time-formatter';\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was *not* coalesced\n */\n@Directive({\n  selector: '[appSingleTimelineItem]'\n})\nexport class TimelineSingleItemDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was coalesced\n */\n@Directive({\n  selector: '[appCoalescedTimelineItems]'\n})\nexport class TimelineCoalescedItemsDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if the attribute `showDeleted` of the\n * {@link TimelineItemComponent} is set to `true`.\n */\n@Directive({\n  selector: '[appTimelineItemDeleted]'\n})\nexport class TimelineItemDeletedDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n/**\n * This component provides an easy method to switch between the different possible content types of a timeline item,\n * such as single, coalesced or deleted.\n * Additionally, the formatted time is shown.\n */\n@Component({\n  selector: 'app-timeline-item',\n  templateUrl: './timeline-item.component.html',\n  styleUrls: ['../timeline.component.scss']\n})\nexport class TimelineItemComponent implements AfterViewInit {\n  /** The timeline item to show */\n  @Input() timelineItem: CoalescedTimelineItem;\n  /** If this option is set to true, the template with the `appTimelineItemDeleted` directive is shown */\n  @Input() showDeleted = false;\n\n  /** The content to be shown if the timeline item was not coalesced */\n  @ContentChild(TimelineSingleItemDirective)\n  timelineItemContent: TimelineSingleItemDirective;\n  /** The content to be shown if the timeline item was coalesced */\n  @ContentChild(TimelineCoalescedItemsDirective)\n  timelineItemsContent: TimelineCoalescedItemsDirective;\n  /** The content to be shown if the timeline item contains deleted data */\n  @ContentChild(TimelineItemDeletedDirective)\n  timelineItemDeletedContent: TimelineItemDeletedDirective;\n\n  timeFormatter: TimeFormatter = new TimeFormatter();\n  activeItemContent: TemplateRef = null;\n\n  constructor(private changeDetector: ChangeDetectorRef) {}\n\n  ngAfterViewInit() {\n    if (this.showDeleted) {\n      this.activeItemContent = this.timelineItemDeletedContent.template;\n    } else if (this.timelineItem.isCoalesced && this.timelineItemsContent) {\n      this.activeItemContent = this.timelineItemsContent.template;\n    } else if (!this.timelineItem.isCoalesced) {\n      this.activeItemContent = this.timelineItemContent.template;\n    }\n\n    this.changeDetector.detectChanges();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{ this.timeFormatter.formatTimeDifference(timelineItem.time) }}\n    \n  \n\n\n    \n\n    \n                \n                    ../timeline.component.scss\n                \n                .timeline {\n  list-style: none;\n  margin: 0;\n  padding: 20px 0 20px;\n  position: relative;\n\n  &::before {\n    top: 0;\n    bottom: 0;\n    position: absolute;\n    content: \" \";\n    width: 2px;\n    background: rgba(0, 0, 0, 0.12);\n    left: 35px;\n  }\n\n  & > li {\n    margin-bottom: 20px;\n    position: relative;\n    display: flex;\n    align-items: flex-start;\n\n    & > .timeline-badge {\n      color: #fff;\n      $size: 50px;\n      width: $size;\n      height: $size;\n      line-height: 50px;\n      font-size: 2.5em;\n      text-align: center;\n      position: relative;\n      top: 16px;\n      margin-left: calc(36px - (#{$size} / 2));\n      margin-right: 12px;\n      background-color: #999999;\n      z-index: 100;\n      border-radius: 50%;\n    }\n\n    & > .timeline-panel {\n      flex: 1;\n      border: 1px solid #d4d4d4;\n      border-radius: 2px;\n      padding: 20px;\n      position: relative;\n      -webkit-box-shadow: 0 1px 6px rgba(0, 0, 0, 0.175);\n      box-shadow: 0 1px 6px rgba(0, 0, 0, 0.175);\n\n      &::before {\n        position: absolute;\n        top: 26px;\n        display: inline-block;\n        border-top: 15px solid transparent;\n        border-left: 15px solid #ccc;\n        border-right: 0 solid #ccc;\n        border-bottom: 15px solid transparent;\n        content: \" \";\n        border-left-width: 0;\n        border-right-width: 15px;\n        left: -15px;\n        right: auto;\n      }\n\n      &::after {\n        position: absolute;\n        top: 27px;\n        display: inline-block;\n        border-top: 14px solid transparent;\n        border-left: 14px solid #fafafa;\n        border-right: 0 solid #fafafa;\n        border-bottom: 14px solid transparent;\n        content: \" \";\n        border-left-width: 0;\n        border-right-width: 14px;\n        left: -14px;\n        right: auto;\n      }\n    }\n\n    & > .commentContainer {\n      flex: 1;\n      left: -36px;\n      z-index: 100;\n\n      ::ng-deep .timeline-item::before {\n        display: none; // hide duplicate line\n      }\n    }\n  }\n}\n.timeline-badge.warning {\n  background-color: #f0ad4e !important;\n}\n\n.timeline-badge.closed {\n  background-color: #ff0036 !important;\n}\n\n.timeline-badge.reopened {\n  background-color: #00ba39 !important;\n}\n\n.timeline-title {\n  margin-top: 0;\n  color: inherit;\n}\n\n.timeline-body > p,\n.timeline-body > ul {\n  margin-bottom: 0;\n}\n\n.timeline-body > p + p {\n  margin-top: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{ this.timeFormatter.formatTimeDifference(timelineItem.time) }}      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimelineItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TimelineItemDeletedDirective.html":{"url":"directives/TimelineItemDeletedDirective.html","title":"directive - TimelineItemDeletedDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  TimelineItemDeletedDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used in conjunction with an ng-template.\nThe content of the ng-template specifies the content of a timeline item, if the attribute showDeleted of the\nTimelineItemComponent is set to true.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appTimelineItemDeleted]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef<>)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, ContentChild, Directive, Input, TemplateRef} from '@angular/core';\nimport {CoalescedTimelineItem} from '@app/issue-detail/timeline/timeline.component';\nimport {TimeFormatter} from '@app/issue-detail/time-formatter';\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was *not* coalesced\n */\n@Directive({\n  selector: '[appSingleTimelineItem]'\n})\nexport class TimelineSingleItemDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was coalesced\n */\n@Directive({\n  selector: '[appCoalescedTimelineItems]'\n})\nexport class TimelineCoalescedItemsDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if the attribute `showDeleted` of the\n * {@link TimelineItemComponent} is set to `true`.\n */\n@Directive({\n  selector: '[appTimelineItemDeleted]'\n})\nexport class TimelineItemDeletedDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n/**\n * This component provides an easy method to switch between the different possible content types of a timeline item,\n * such as single, coalesced or deleted.\n * Additionally, the formatted time is shown.\n */\n@Component({\n  selector: 'app-timeline-item',\n  templateUrl: './timeline-item.component.html',\n  styleUrls: ['../timeline.component.scss']\n})\nexport class TimelineItemComponent implements AfterViewInit {\n  /** The timeline item to show */\n  @Input() timelineItem: CoalescedTimelineItem;\n  /** If this option is set to true, the template with the `appTimelineItemDeleted` directive is shown */\n  @Input() showDeleted = false;\n\n  /** The content to be shown if the timeline item was not coalesced */\n  @ContentChild(TimelineSingleItemDirective)\n  timelineItemContent: TimelineSingleItemDirective;\n  /** The content to be shown if the timeline item was coalesced */\n  @ContentChild(TimelineCoalescedItemsDirective)\n  timelineItemsContent: TimelineCoalescedItemsDirective;\n  /** The content to be shown if the timeline item contains deleted data */\n  @ContentChild(TimelineItemDeletedDirective)\n  timelineItemDeletedContent: TimelineItemDeletedDirective;\n\n  timeFormatter: TimeFormatter = new TimeFormatter();\n  activeItemContent: TemplateRef = null;\n\n  constructor(private changeDetector: ChangeDetectorRef) {}\n\n  ngAfterViewInit() {\n    if (this.showDeleted) {\n      this.activeItemContent = this.timelineItemDeletedContent.template;\n    } else if (this.timelineItem.isCoalesced && this.timelineItemsContent) {\n      this.activeItemContent = this.timelineItemsContent.template;\n    } else if (!this.timelineItem.isCoalesced) {\n      this.activeItemContent = this.timelineItemContent.template;\n    }\n\n    this.changeDetector.detectChanges();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TimelineSingleItemDirective.html":{"url":"directives/TimelineSingleItemDirective.html","title":"directive - TimelineSingleItemDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  TimelineSingleItemDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used in conjunction with an ng-template.\nThe content of the ng-template specifies the content of a timeline item, if it was not coalesced\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appSingleTimelineItem]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef<>)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, ContentChild, Directive, Input, TemplateRef} from '@angular/core';\nimport {CoalescedTimelineItem} from '@app/issue-detail/timeline/timeline.component';\nimport {TimeFormatter} from '@app/issue-detail/time-formatter';\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was *not* coalesced\n */\n@Directive({\n  selector: '[appSingleTimelineItem]'\n})\nexport class TimelineSingleItemDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was coalesced\n */\n@Directive({\n  selector: '[appCoalescedTimelineItems]'\n})\nexport class TimelineCoalescedItemsDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if the attribute `showDeleted` of the\n * {@link TimelineItemComponent} is set to `true`.\n */\n@Directive({\n  selector: '[appTimelineItemDeleted]'\n})\nexport class TimelineItemDeletedDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n/**\n * This component provides an easy method to switch between the different possible content types of a timeline item,\n * such as single, coalesced or deleted.\n * Additionally, the formatted time is shown.\n */\n@Component({\n  selector: 'app-timeline-item',\n  templateUrl: './timeline-item.component.html',\n  styleUrls: ['../timeline.component.scss']\n})\nexport class TimelineItemComponent implements AfterViewInit {\n  /** The timeline item to show */\n  @Input() timelineItem: CoalescedTimelineItem;\n  /** If this option is set to true, the template with the `appTimelineItemDeleted` directive is shown */\n  @Input() showDeleted = false;\n\n  /** The content to be shown if the timeline item was not coalesced */\n  @ContentChild(TimelineSingleItemDirective)\n  timelineItemContent: TimelineSingleItemDirective;\n  /** The content to be shown if the timeline item was coalesced */\n  @ContentChild(TimelineCoalescedItemsDirective)\n  timelineItemsContent: TimelineCoalescedItemsDirective;\n  /** The content to be shown if the timeline item contains deleted data */\n  @ContentChild(TimelineItemDeletedDirective)\n  timelineItemDeletedContent: TimelineItemDeletedDirective;\n\n  timeFormatter: TimeFormatter = new TimeFormatter();\n  activeItemContent: TemplateRef = null;\n\n  constructor(private changeDetector: ChangeDetectorRef) {}\n\n  ngAfterViewInit() {\n    if (this.showDeleted) {\n      this.activeItemContent = this.timelineItemDeletedContent.template;\n    } else if (this.timelineItem.isCoalesced && this.timelineItemsContent) {\n      this.activeItemContent = this.timelineItemsContent.template;\n    } else if (!this.timelineItem.isCoalesced) {\n      this.activeItemContent = this.timelineItemContent.template;\n    }\n\n    this.changeDetector.detectChanges();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopToolbarComponent.html":{"url":"components/TopToolbarComponent.html","title":"component - TopToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/top-toolbar/top-toolbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is responsible for showing the top bar containing the home icon\non the left-hand side and the mock settings and user icon as well as the functional\nlog out button on the right-hand side. It does NOT determine whether to show the sandwich\nmenu icon itself, but gets this information passed from FrameComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-top-toolbar\n            \n\n            \n                styleUrls\n                ./top-toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./top-toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                isHandset$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                handleClick\n                            \n                            \n                                    Public\n                                openSettingsDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showMenuButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                menuClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, authService: AuthenticationService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/top-toolbar/top-toolbar.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showMenuButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/top-toolbar/top-toolbar.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        menuClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/top-toolbar/top-toolbar.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        handleClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/top-toolbar/top-toolbar.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openSettingsDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openSettingsDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/top-toolbar/top-toolbar.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthenticationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/top-toolbar/top-toolbar.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHandset$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map((result) => result.matches),\n    shareReplay()\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/top-toolbar/top-toolbar.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Output, EventEmitter, Input} from '@angular/core';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {Observable} from 'rxjs';\nimport {map, shareReplay} from 'rxjs/operators';\nimport {AuthenticationService} from '@app/auth/authentication.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {SettingsDialogComponent} from '@app/dialogs/settings-dialog/settings-dialog.component';\n\n/**\n * This component is responsible for showing the top bar containing the home icon\n * on the left-hand side and the mock settings and user icon as well as the functional\n * log out button on the right-hand side. It does NOT determine whether to show the sandwich\n * menu icon itself, but gets this information passed from FrameComponent.\n */\n@Component({\n  selector: 'app-top-toolbar',\n  templateUrl: './top-toolbar.component.html',\n  styleUrls: ['./top-toolbar.component.scss']\n})\nexport class TopToolbarComponent {\n  @Input()\n  showMenuButton = false;\n\n  @Output()\n  public menuClick = new EventEmitter();\n\n  isHandset$: Observable = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map((result) => result.matches),\n    shareReplay()\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver, public authService: AuthenticationService, private dialog: MatDialog) {}\n\n  public handleClick() {\n    this.menuClick.emit();\n  }\n\n  public openSettingsDialog() {\n    this.dialog.open(SettingsDialogComponent);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    menu\n  \n  \n    home\n  \n  \n  \n  \n    \n      settings\n    \n    \n      account_circle\n    \n    \n      logout\n    \n  \n\n\n    \n\n    \n                \n                    ./top-toolbar.component.scss\n                \n                mat-toolbar {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n.toolbar-spacer {\n  flex: 1 1 auto;\n}\n\n.mat-toolbar {\n  justify-content: space-between;\n}\n\n.toolbar-spacer {\n  flex: 1 1 auto;\n}\n\n#current-project {\n  font-size: 12px;\n  border: 3px solid white;\n  border-radius: 0.5em;\n  padding: 0 4px 0 4px;\n  margin: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        menu        home                  settings              account_circle              logout      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'TopToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/authentication.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {environment} from '@environments/environment';\nimport {Router} from '@angular/router';\nimport {map} from 'rxjs/operators';\n\n/**\n * Responsible for saving user name, id and jwt token in localstorage\n * and exposing the name and id through currentUserSubject\n */\n@Injectable({providedIn: 'root'})\nexport class AuthenticationService {\n  readonly userStorageKey = 'currentUser';\n  private currentUserSubject: BehaviorSubject;\n  public currentUser: Observable;\n\n  constructor(private http: HttpClient, private router: Router) {\n    this.currentUserSubject = new BehaviorSubject(this.fetchUserFromStorage());\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  fetchUserFromStorage(): User {\n    return JSON.parse(localStorage.getItem(this.userStorageKey));\n  }\n\n  saveUserToStorage(user: User): void {\n    localStorage.setItem(this.userStorageKey, JSON.stringify(user));\n  }\n\n  /**\n   * If login is sucessfull save the user name, id and jwt token to local storage and expose the name and id\n   * through currentUserSubject. If the login fails the returned observable errors.\n   * @param username provided by user to LoginComponent\n   * @param password provided by user to LoginComponent\n   * @returns the logged in user, errors if login is not successful\n   */\n  login(username: string, password: string): Observable {\n    return this.http.post(environment.loginUrl, {username, password}).pipe(\n      map((response) => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('token', response.token);\n        const tokenPayload = JSON.parse(atob(response.token.split('.')[1]));\n        const user = {name: tokenPayload.name, id: tokenPayload.sub};\n        this.saveUserToStorage(user);\n        this.currentUserSubject.next(user);\n        return user;\n      })\n    );\n  }\n\n  /**\n   * remove user from local storage and set subject holding the current user to null\n   */\n  logout() {\n    localStorage.removeItem('currentUser');\n    localStorage.removeItem('token');\n    this.router.navigate(['login']);\n    this.currentUserSubject.next(null);\n  }\n}\n\ninterface User {\n  name: string;\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserItemComponent.html":{"url":"components/UserItemComponent.html","title":"component - UserItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user-item/user-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a user.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-item\n            \n\n            \n                styleUrls\n                ./user-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                noDisplay\n                            \n                            \n                                short\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        noDisplay\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/user-item/user-item.component.ts:16\n                            \n                        \n                \n                    \n                        Hides the display name.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        short\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/user-item/user-item.component.ts:14\n                            \n                        \n                \n                    \n                        Will show only the display name or username.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/user-item/user-item.component.ts:12\n                            \n                        \n                \n                    \n                        The user data.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {User} from 'src/generated/graphql-dgql';\n\n/** This component displays a user. */\n@Component({\n  selector: 'app-user-item',\n  templateUrl: './user-item.component.html',\n  styleUrls: ['./user-item.component.scss']\n})\nexport class UserItemComponent {\n  /** The user data. */\n  @Input() user: User;\n  /** Will show only the display name or username. */\n  @Input() short = false;\n  /** Hides the display name. */\n  @Input() noDisplay = false;\n}\n\n    \n\n    \n        \n   {{ user.displayName }} \n  \n    {{ user.username }}\n  \n\n\n    \n\n    \n                \n                    ./user-item.component.scss\n                \n                .display-name {\n  font-weight: 500;\n}\n.username {\n  &.has-display-name {\n    opacity: 0.7;\n  }\n  &:not(.has-display-name) {\n    font-weight: 500;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ user.displayName }}       {{ user.username }}  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserNotifyService.html":{"url":"injectables/UserNotifyService.html","title":"injectable - UserNotifyService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserNotifyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user-notify/user-notify.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service provides functions for user notification\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                notifyError\n                            \n                            \n                                notifyInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-notify/user-notify.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        notifyError\n                        \n                    \n                \n            \n            \n                \nnotifyError(message: string, error?: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-notify/user-notify.service.ts:32\n                \n            \n\n\n            \n                \n                    Notify the user that an error occurred\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message to be shown\n\n                                    \n                                \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optionally, the error. This will be logged in the console, if defined.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifyInfo\n                        \n                    \n                \n            \n            \n                \nnotifyInfo(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-notify/user-notify.service.ts:44\n                \n            \n\n\n            \n                \n                    Notify the user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message to be shown\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {IndividualConfig, ToastrService} from 'ngx-toastr';\n\n/**\n * This service provides functions for user notification\n */\n@Injectable({providedIn: 'root'})\nexport class UserNotifyService {\n  /** @ignore */\n  private errorConfig: Partial = {\n    timeOut: 10000,\n    closeButton: true,\n    positionClass: 'toast-top-center',\n    enableHtml: true\n  };\n\n  /** @ignore */\n  private infoConfig: Partial = {\n    timeOut: 4000,\n    closeButton: true,\n    positionClass: 'toast-top-center',\n    enableHtml: true\n  };\n\n  constructor(private toastr: ToastrService) {}\n\n  /**\n   * Notify the user that an error occurred\n   * @param message The message to be shown\n   * @param error Optionally, the error. This will be logged in the console, if defined.\n   */\n  notifyError(message: string, error?: Error) {\n    if (error !== undefined) {\n      console.log('Error:', error);\n    }\n\n    this.toastr.error(message, 'Error!', this.errorConfig);\n  }\n\n  /**\n   * Notify the user\n   * @param message The message to be shown\n   */\n  notifyInfo(message: string) {\n    this.toastr.info(message, 'Info', this.infoConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                searchUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(qSearchUsers: SearchUsersGQL, qCurrentUser: CurrentUserGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/queries/users.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        qSearchUsers\n                                                  \n                                                        \n                                                                        SearchUsersGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qCurrentUser\n                                                  \n                                                        \n                                                                        CurrentUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n            \n                \ncurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/users.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchUsers\n                        \n                    \n                \n            \n            \n                \nsearchUsers(filter: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/users.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {CurrentUserGQL, SearchUsersGQL} from 'src/generated/graphql-dgql';\nimport {promisifyApolloFetch} from '@app/data-dgql/queries/util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  constructor(private qSearchUsers: SearchUsersGQL, private qCurrentUser: CurrentUserGQL) {}\n\n  searchUsers(filter: {username: string}) {\n    let query = '';\n    // The searchUser query is special in that it does not use a filter object.\n    // However, this is not compatible with the rest of our API, which uses UserFilter\n    // (e.g. issue assignees).\n    // Hence, this function uses the username search field, even though this is technically\n    // incorrect (searchUsers will also search by display name).\n    if (filter) {\n      query = filter.username;\n    }\n\n    if (!query) {\n      // searchUser does not work without a search string\n      return Promise.resolve([]);\n    }\n\n    return promisifyApolloFetch(this.qSearchUsers.fetch({query})).then((data) => data.searchUser);\n  }\n\n  currentUser() {\n    return promisifyApolloFetch(this.qCurrentUser.fetch());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Vector.html":{"url":"classes/Vector.html","title":"class - Vector","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Vector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/automatic-layout.ts\n        \n\n\n            \n                Description\n            \n            \n                A simple 2D vector class.\nThe value of this vector is essentially immutable, every operation returns a new vector!\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                x\n                            \n                            \n                                    Public\n                                y\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                addSelf\n                            \n                            \n                                    Public\n                                distanceToLine\n                            \n                            \n                                    Public\n                                dot\n                            \n                            \n                                    Static\n                                isBehind\n                            \n                            \n                                    Public\n                                isZero\n                            \n                            \n                                    Public\n                                length\n                            \n                            \n                                    Public\n                                normalize\n                            \n                            \n                                    Public\n                                perpendicularClockwise\n                            \n                            \n                                    Public\n                                perpendicularCounterClockwise\n                            \n                            \n                                    Public\n                                scale\n                            \n                            \n                                    Public\n                                subtract\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(x: number, y: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/automatic-layout.ts:9\n                            \n                        \n\n                \n                    \n                            Vector constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        x\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                X component, 0 by default\n\n                                                        \n                                                \n                                                \n                                                        y\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Y component, 0 by default\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add(other: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:64\n                \n            \n\n\n            \n                \n                    Add this vector and another vector\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new vector, the sum of this vector and the other vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addSelf\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSelf(other: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:73\n                \n            \n\n\n            \n                \n                    Add another vector on this vector\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        This vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        distanceToLine\n                        \n                    \n                \n            \n            \n                \n                    \n                    distanceToLine(sourcePoint: Vector, targetPoint: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:123\n                \n            \n\n\n            \n                \n                    Calculate the distance of a point, as represented by this vector, to a line, as defined by two other points.\nNote that the length of the line is infinite, and that this function calculates the distance to this infinitely\nlong line.\nIf this is not desired, the #isBehind function can be used to determine if a point is outside the defined\nline segment.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sourcePoint\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source point of the line\n\n                                    \n                                \n                                \n                                    targetPoint\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The target point of the line\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The distance to the infinitely long line\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dot\n                        \n                    \n                \n            \n            \n                \n                    \n                    dot(other: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:109\n                \n            \n\n\n            \n                \n                    Calculate the dot product\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        dot(this, other)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isBehind\n                        \n                    \n                \n            \n            \n                \n                    \n                    isBehind(source: Vector, target: Vector, point: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:29\n                \n            \n\n\n            \n                \n                    Check if the vector pointing from source to point is pointing away more than 90 degrees to the vector pointing\nfrom the source to the target.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source point, as a vector\n\n                                    \n                                \n                                \n                                    target\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The target point, as a vector\n\n                                    \n                                \n                                \n                                    point\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The point to check, as a vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        dot(target - source, point - source) \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isZero\n                        \n                    \n                \n            \n            \n                \n                    \n                    isZero()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:135\n                \n            \n\n\n            \n                \n                    Check if both components of this vector are zero\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if it is zero\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        length\n                        \n                    \n                \n            \n            \n                \n                    \n                    length()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:47\n                \n            \n\n\n            \n                \n                    Length of the vector\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        normalize\n                        \n                    \n                \n            \n            \n                \n                    \n                    normalize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:55\n                \n            \n\n\n            \n                \n                    Normalize the vector\n\n\n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new, normalized vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        perpendicularClockwise\n                        \n                    \n                \n            \n            \n                \n                    \n                    perpendicularClockwise()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:92\n                \n            \n\n\n            \n                \n                    Rotate this vector by 90 degrees in the clockwise direction\n\n\n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new, rotated vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        perpendicularCounterClockwise\n                        \n                    \n                \n            \n            \n                \n                    \n                    perpendicularCounterClockwise()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:100\n                \n            \n\n\n            \n                \n                    Rotate this vector by 90 degrees in the counter-clockwise direction\n\n\n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new, rotated vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        scale\n                        \n                    \n                \n            \n            \n                \n                    \n                    scale(factor: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:40\n                \n            \n\n\n            \n                \n                    Scale the vector\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    factor\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The scalar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new, scaled vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        subtract\n                        \n                    \n                \n            \n            \n                \n                    \n                    subtract(other: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:84\n                \n            \n\n\n            \n                \n                    Subtract this vector and another vector\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new vector, the difference of this vector and the other vector\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {NodeType} from '@app/graphs/issue-graph/issue-graph-nodes';\n\n/**\n * A simple 2D vector class.\n * The value of this vector is essentially immutable, every operation returns a new vector!\n */\nclass Vector {\n  public x: number;\n  public y: number;\n\n  /**\n   * Vector constructor\n   * @param x X component, 0 by default\n   * @param y Y component, 0 by default\n   */\n  constructor(x: number = 0, y: number = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Check if the vector pointing from `source` to `point` is pointing away more than 90 degrees to the vector pointing\n   * from the `source` to the `target`.\n   * @param source The source point, as a vector\n   * @param target The target point, as a vector\n   * @param point The point to check, as a vector\n   * @return dot(target - source, point - source)  = new Set();\n\n  /** Padding to be added to this node */\n  readonly padding: number;\n\n  constructor(id: string | number, positionX: number, positionY: number, nodeType: NodeType) {\n    this.id = id;\n    this.padding = nodeType === NodeType.Component ? LayoutNode.PADDING_COMPONENT : LayoutNode.PADDING_INTERFACE;\n    this.position = new Vector(positionX, positionY);\n  }\n\n  /**\n   * Create an edge between this node and another node.\n   * Does **not** create a connection from the other node to this node!\n   * @param other The other node\n   */\n  public connectTo(other: LayoutNode): void {\n    this.connectedTo.add(other);\n  }\n\n  /**\n   * Calculate the movement direction that this node should move in, based on all other nodes around it\n   * @param allNodes All nodes, can include this node as well\n   * @returns The direction in which this node wants to travel\n   */\n  public calculateMovement(allNodes: Array): Vector {\n    if (this.fixed) {\n      return new Vector();\n    }\n\n    // Total force acting on this node\n    const result = new Vector();\n\n    // Keeps track of edges already visited\n    const otherNodesVisited = new Set();\n\n    for (const otherNode of allNodes) {\n      // Iterate over all other nodes\n      if (otherNode.id === this.id) {\n        continue;\n      }\n\n      // If both nodes are at an identical position, add a small randomized offset to this nodes position\n      let towardsOther = otherNode.position.subtract(this.position);\n      if (towardsOther.isZero()) {\n        this.position.x += Math.random() - 0.5;\n        this.position.y += Math.random() - 0.5;\n        towardsOther = otherNode.position.subtract(this.position);\n      }\n\n      const pad = this.padding + otherNode.padding;\n      const distance = Math.max(1, towardsOther.length() - pad);\n      towardsOther = towardsOther.scale(1 / distance);\n\n      // Move this node towards connected nodes, and away from non-connected nodes.\n      // Also make sure that a minimum spacing between nodes exists, regardless of connection.\n      let scale = 0;\n      if (this.connectedTo.has(otherNode)) {\n        if (distance ): void {\n  if (nodes.length === 0) {\n    return;\n  }\n\n  const directions = new Array(nodes.length);\n  // Fix an arbitrary node in place to prevent the graph from flying away\n  const firstNode = nodes[0];\n  firstNode.fixed = true;\n\n  // FIXME: This loop should stop early if no more (significant) changes happen\n  for (let v = 0; v \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            antDesignIcons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            icons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            toasterConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/app/auth/authentication.service.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/cache-node.component.ts\n            \n            component\n            CacheNodeComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/components/cursor-paginator/cursor-paginator.component.ts\n            \n            component\n            CursorPaginatorComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/issue-category/issue-category.component.ts\n            \n            component\n            IssueCategoryComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/issue-icon/issue-icon.component.ts\n            \n            component\n            IssueIconComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/components/issue-item/issue-item.component.ts\n            \n            component\n            IssueItemComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/components/issue-label/issue-label.component.ts\n            \n            component\n            IssueLabelComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/issue-label/issue-label.component.ts\n            \n            function\n            readCssColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/issue-label/issue-label.component.ts\n            \n            variable\n            colorTestCanvas\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/issue-label/issue-label.component.ts\n            \n            variable\n            colorTestCtx\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/issue-location/issue-location.component.ts\n            \n            component\n            IssueLocationComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/components/item.directive.ts\n            \n            directive\n            ItemDirective\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor-dialog.component.ts\n            \n            component\n            SetEditorDialogComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor-dialog.component.ts\n            \n            class\n            MultiSourceList\n            \n                83 %\n                (15/18)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor-dialog.component.ts\n            \n            interface\n            SetEditorDialogData\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor-dialog.component.ts\n            \n            interface\n            SetMultiSource\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor.component.ts\n            \n            component\n            SetEditorComponent\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/components/user-item/user-item.component.ts\n            \n            component\n            UserItemComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            interface\n            ListId\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            interface\n            ListParams\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            interface\n            NodeId\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            decodeListId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            decodeNodeId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            encodeListId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            encodeNodeId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            nodeTypeFromTypename\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            variable\n            CURRENT_USER_NODE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            variable\n            ROOT_NODE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/index.ts\n            \n            injectable\n            DataService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            function\n            listParams\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            variable\n            listQueries\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            variable\n            nodeQueries\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            variable\n            queryList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            variable\n            queryNode\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/mutate.ts\n            \n            class\n            Mutations\n            \n                14 %\n                (4/27)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/components.service.ts\n            \n            injectable\n            ComponentsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/issues.service.ts\n            \n            injectable\n            IssuesService\n            \n                0 %\n                (0/43)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/projects.service.ts\n            \n            injectable\n            ProjectsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/queries.service.ts\n            \n            injectable\n            QueriesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/util.ts\n            \n            interface\n            QueryListParams\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/util.ts\n            \n            function\n            promisifyApolloFetch\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            class\n            DataList\n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            class\n            DataNode\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            class\n            DataQuery\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            class\n            NodeCache\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            variable\n            CACHE_FAST_DEBOUNCE_TIME_MS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            variable\n            CACHE_INTERACTIVE_DEBOUNCE_TIME_MS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            variable\n            CACHE_STALE_TIME_MS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data/component/component-store.service.ts\n            \n            injectable\n            ComponentStoreService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/data/interface/interface-store.service.ts\n            \n            injectable\n            InterfaceStoreService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            class\n            GraphComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            class\n            GraphDataFactory\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            class\n            GraphInterface\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            class\n            GraphIssue\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            interface\n            GraphData\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            function\n            computeRelatedFolders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            function\n            issueCounts\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            function\n            removeOfferingComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/issue-graph-api.service.ts\n            \n            injectable\n            IssueGraphApiService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/issue-graph-state.service.ts\n            \n            injectable\n            IssueGraphStateService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/data/issue/issue-store.service.ts\n            \n            injectable\n            IssueStoreService\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/app/data/label/label-store.service.ts\n            \n            injectable\n            LabelStoreService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/data/label/label-store.service.ts\n            \n            function\n            isFilterLabel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/project/project-store.service.ts\n            \n            injectable\n            ProjectStoreService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/dialogs/access-token-dialog/access-token-dialog.component.ts\n            \n            component\n            AccessTokenDialogComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts\n            \n            component\n            AddProjectMemberDialogComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-component-dialog/create-component-dialog.component.ts\n            \n            component\n            CreateComponentDialogComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-component-dialog/create-component-dialog.component.ts\n            \n            interface\n            CreateComponentData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts\n            \n            component\n            CreateInterfaceDialogComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts\n            \n            interface\n            CreateInterfaceData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts\n            \n            component\n            CreateIssueDialogComponent\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts\n            \n            interface\n            DialogData\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts\n            \n            component\n            CreateEditLabelDialogComponent\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts\n            \n            interface\n            CreateEditLabelDialogData\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-project-dialog/create-project-dialog.component.ts\n            \n            component\n            CreateProjectDialogComponent\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts\n            \n            component\n            ProfileSettingsDialogComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/dialogs/remove-dialog/remove-dialog.component.ts\n            \n            component\n            RemoveDialogComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/dialogs/remove-dialog/remove-dialog.component.ts\n            \n            interface\n            DialogData\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts\n            \n            component\n            RemoveProjectMemberComponentComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/dialogs/settings-dialog/settings-dialog.component.ts\n            \n            component\n            SettingsDialogComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/frame/frame.component.ts\n            \n            component\n            FrameComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            function\n            createErrorLink\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            function\n            provideDefaultApollo\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            function\n            providePublicApollo\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            variable\n            basic\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            variable\n            defaultOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            variable\n            networkErrorToast\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphs/automatic-layout.ts\n            \n            class\n            LayoutNode\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/graphs/automatic-layout.ts\n            \n            class\n            Vector\n            \n                87 %\n                (14/16)\n            \n        \n        \n            \n                \n                src/app/graphs/automatic-layout.ts\n            \n            function\n            doGraphLayout\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphs/component-context-menu/component-context-menu.component.ts\n            \n            component\n            ComponentContextMenuComponent\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/graphs/component-context-menu/component-context-menu.component.ts\n            \n            injectable\n            ComponentContextMenuService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/graphs/component-context-menu/component-context-menu.component.ts\n            \n            interface\n            ComponentContextMenuData\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/graphs/component-context-menu/component-context-menu.component.ts\n            \n            variable\n            COMPONENT_CONTEXT_MENU_DATA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts\n            \n            component\n            IssueGraphControlsComponent\n            \n                23 %\n                (4/17)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/class-setters/issue-graph-class-setters.service.ts\n            \n            injectable\n            IssueGraphClassSettersService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/dynamic-template-registry/issue-graph-dynamic-template-registry.service.ts\n            \n            injectable\n            IssueGraphDynamicTemplateRegistryService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/group-behaviours.ts\n            \n            class\n            IssueGroupContainerBehaviour\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/group-behaviours.ts\n            \n            class\n            IssueGroupContainerParentBehaviour\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/group-behaviours.ts\n            \n            function\n            distance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            ComponentNode\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            InterfaceNode\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            IssueFolderNode\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            IssueGroupContainerNode\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            IssueNode\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            Position\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            RelationEdge\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createComponentNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createConsumptionEdge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createInterfaceNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createInterfaceProvisionEdge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createIssueFolderNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createIssueGroupContainerNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createRelationEdge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            getIssueFolderId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            variable\n            zeroPosition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph.component.ts\n            \n            component\n            IssueGraphComponent\n            \n                62 %\n                (37/59)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph.component.ts\n            \n            interface\n            Positions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts\n            \n            injectable\n            IssueGraphLinkHandlesService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/graphs/label-search/label-search.component.ts\n            \n            component\n            LabelSearchComponent\n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/graphs/label-search/label-search.component.ts\n            \n            interface\n            FilterSelection\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/graphs/label-search/label-search.component.ts\n            \n            interface\n            TextFragment\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/graphs/shared.ts\n            \n            interface\n            FilterState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/issue-detail/comment/comment.component.ts\n            \n            component\n            CommentComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/issue-detail/issue-contents.component.ts\n            \n            component\n            IssueContentsComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/issue-detail/issue-detail.component.ts\n            \n            component\n            IssueDetailComponent\n            \n                17 %\n                (3/17)\n            \n        \n        \n            \n                \n                src/app/issue-detail/issue-sidebar.component.ts\n            \n            component\n            IssueSidebarComponent\n            \n                2 %\n                (1/39)\n            \n        \n        \n            \n                \n                src/app/issue-detail/linked-issue-item.component.ts\n            \n            component\n            LinkedIssueItemComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/issue-detail/time-formatter.ts\n            \n            class\n            TimeFormatter\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n            \n            component\n            TimelineItemComponent\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n            \n            directive\n            TimelineCoalescedItemsDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n            \n            directive\n            TimelineItemDeletedDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n            \n            directive\n            TimelineSingleItemDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/timeline.component.ts\n            \n            component\n            TimelineComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/timeline.component.ts\n            \n            interface\n            CoalescedTimelineItem\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            component\n            IssueFilterComponent\n            \n                88 %\n                (15/17)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            function\n            convertValueForFilter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            function\n            getDefaultForType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            variable\n            listAllIssues\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            variable\n            PREDICATES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-list.component.ts\n            \n            component\n            IssueListComponent\n            \n                29 %\n                (8/27)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/markdown/markdown-editor/markdown-editor.component.ts\n            \n            component\n            MarkdownEditorComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/markdown/markdown-preview/markdown-preview.component.ts\n            \n            component\n            MarkdownPreviewComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/node-details-page/node-details-page.component.ts\n            \n            component\n            NodeDetailsPageComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/node-details/node-details.component.ts\n            \n            component\n            NodeDetailsComponent\n            \n                27 %\n                (8/29)\n            \n        \n        \n            \n                \n                src/app/project-header/project-header.component.ts\n            \n            component\n            ProjectHeaderComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/project-issue-list/project-issue-list.component.ts\n            \n            component\n            ProjectIssueListComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/project-list-component/project-list.component.ts\n            \n            component\n            ProjectListComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/project-members/project-members.component.ts\n            \n            component\n            ProjectMembersComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                src/app/project-members/project-members.component.ts\n            \n            interface\n            userMock\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/project-overview/project-overview.component.ts\n            \n            component\n            ProjectOverviewComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/route-animations.ts\n            \n            function\n            slideTo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/route-animations.ts\n            \n            variable\n            slider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/side-nav/side-nav.component.ts\n            \n            component\n            SideNavComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/state.service.ts\n            \n            injectable\n            StateService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/state.service.ts\n            \n            interface\n            AppState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/text-display/text-display.component.ts\n            \n            component\n            TextDisplayComponent\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                src/app/top-toolbar/top-toolbar.component.ts\n            \n            component\n            TopToolbarComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/user-notify/user-notify.service.ts\n            \n            injectable\n            UserNotifyService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/utils/query-component/query.component.ts\n            \n            component\n            QueryComponent\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                src/app/utils/query-component/query.component.ts\n            \n            directive\n            QueryBodyDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/utils/query-component/query.component.ts\n            \n            directive\n            QueryButtonDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/utils/validators.ts\n            \n            class\n            CCIMSValidators\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            host\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            host\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^9.1.13\n        \n            @angular/cdk : ^9.2.4\n        \n            @angular/common : ^9.1.13\n        \n            @angular/compiler : ^9.1.13\n        \n            @angular/core : ^9.1.13\n        \n            @angular/forms : ^9.1.13\n        \n            @angular/material : ^9.2.4\n        \n            @angular/platform-browser : ^9.1.13\n        \n            @angular/platform-browser-dynamic : ^9.1.13\n        \n            @angular/router : ^9.1.13\n        \n            @apollo/client : ^3.5.5\n        \n            @apollo/link-context : ^2.0.0-beta.3\n        \n            @clr/ui : ^4.0.16\n        \n            @github/time-elements : ^3.1.2\n        \n            @ng-select/ng-option-highlight : 0.0.5\n        \n            @ng-select/ng-select : ^4.0.4\n        \n            @primer/css : ^15.2.0\n        \n            @ustutt/grapheditor-webcomponent : ^0.6.2\n        \n            apollo-angular : ^2.6.0\n        \n            graphql : ^15.7.2\n        \n            monaco-editor : ^0.27.0\n        \n            ng-zorro-antd : ^9.3.0\n        \n            ngx-color-picker : ^10.1.0\n        \n            ngx-markdown : ^8.2.2\n        \n            ngx-monaco-editor : ^9.0.0\n        \n            ngx-toastr : ^13.2.1\n        \n            quick-score : ^0.0.12\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.14.1\n        \n            typescript-collections : ^1.3.3\n        \n            zone.js : ~0.10.2\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            folderEdgeTypes   (src/.../issue-graph-nodes.ts)\n                        \n                        \n                            ListType   (src/.../id.ts)\n                        \n                        \n                            NodeDetailsType   (src/.../node-details.component.ts)\n                        \n                        \n                            NodeType   (src/.../id.ts)\n                        \n                        \n                            NodeType   (src/.../issue-graph-nodes.ts)\n                        \n                        \n                            QueryComponentState   (src/.../query.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/graphs/issue-graph/issue-graph-nodes.ts\n    \n        \n            \n                \n                    \n                        \n                        folderEdgeTypes\n                    \n                \n                        \n                            \n                                 RelatedTo\n                            \n                        \n                        \n                            \n                                Value : relatedTo\n                            \n                        \n                        \n                            \n                                 Depends\n                            \n                        \n                        \n                            \n                                Value : dependency\n                            \n                        \n                        \n                            \n                                 Duplicates\n                            \n                        \n                        \n                            \n                                Value : duplicate\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        NodeType\n                    \n                \n                        \n                            \n                                 Component\n                            \n                        \n                        \n                            \n                                Value : component\n                            \n                        \n                        \n                            \n                                 Interface\n                            \n                        \n                        \n                            \n                                Value : interface\n                            \n                        \n                        \n                            \n                                 InterfaceConsumer\n                            \n                        \n                        \n                            \n                                Value : interface-connect\n                            \n                        \n                        \n                            \n                                 IssueGroupContainer\n                            \n                        \n                        \n                            \n                                Value : issue-group-container\n                            \n                        \n            \n        \n\n    src/app/data-dgql/id.ts\n    \n        \n            \n                \n                    \n                        \n                        ListType\n                    \n                \n                    \n                        \n                            All list types represent their respective list queries in the backend API.\n\n                        \n                    \n                        \n                            \n                                 Projects\n                            \n                        \n                        \n                            \n                                 Components\n                            \n                        \n                        \n                            \n                                 ComponentInterfaces\n                            \n                        \n                        \n                            \n                                 Issues\n                            \n                        \n                        \n                            \n                                 IssuesOnLocation\n                            \n                        \n                        \n                            \n                                 IssueLocations\n                            \n                        \n                        \n                            \n                                 TimelineItems\n                            \n                        \n                        \n                            \n                                 Labels\n                            \n                        \n                        \n                            \n                                 Artifacts\n                            \n                        \n                        \n                            \n                                 Participants\n                            \n                        \n                        \n                            \n                                 Assignees\n                            \n                        \n                        \n                            \n                                 SearchUsers\n                            \n                        \n                        \n                            \n                                 LinkedIssues\n                            \n                        \n                        \n                            \n                                 LinkedByIssues\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        NodeType\n                    \n                \n                    \n                        \n                            Backend API node types.\nThe names should match the respective value of __typename in the GraphQL data for any given node.\n\n                        \n                    \n                        \n                            \n                                 Root\n                            \n                        \n                        \n                            \n                                 Component\n                            \n                        \n                        \n                            \n                                 ComponentInterface\n                            \n                        \n                        \n                            \n                                 Issue\n                            \n                        \n                        \n                            \n                                 IssueTimelineItem\n                            \n                        \n                        \n                            \n                                 Label\n                            \n                        \n                        \n                            \n                                 Project\n                            \n                        \n                        \n                            \n                                 Artifact\n                            \n                        \n                        \n                            \n                                 User\n                            \n                        \n                        \n                            \n                                 IssueComment\n                            \n                        \n            \n        \n\n    src/app/node-details/node-details.component.ts\n    \n        \n            \n                \n                    \n                        \n                        NodeDetailsType\n                    \n                \n                    \n                        \n                            A node shown in the details component can either be a component or an interface\n\n                        \n                    \n                        \n                            \n                                 Component\n                            \n                        \n                        \n                            \n                                 Interface\n                            \n                        \n            \n        \n\n    src/app/utils/query-component/query.component.ts\n    \n        \n            \n                \n                    \n                        \n                        QueryComponentState\n                    \n                \n                    \n                        \n                            The current state of the query\n\n                        \n                    \n                        \n                            \n                                 Ready\n                            \n                        \n                        \n                            \n                                 Loading\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontend for the Gropius system\nIntroduction to Gropius\nModern software systems are often built as component-based architectures. The whole idea behind this type of architecture is to decompose functionality into autonomous autonomous components, e.g., microservices. This results into components that are (almost) entirely self-contained and reusable, thus making the whole software developing process much easier.\nEven though component-based architectures have many benefits like ease of deployment, there are also challenges that need to be resolved. One of the most critical occurs when different components are managed in different issue management systems (IMS). This can lead to issues (in one group of components) not having a direct link to the root issues (in another group of components) that caused them in the first place. Dependencies between components can thus cause bugs to propagate through the components along the call chain.\nGropius is a cross component issue management system (CCIMS) that solves the described problem by enabling direct dependency links over issues which are managed in different issue management systems.\nThe frontend\nAs already mentioned, the idea behind Gropius is to manage cross-component issues for component-based architectures. The system graphically models cross-component problems along with the system architecture. The graphical representation is similar to that of an UML component diagram.\nArchitecture of the project:\n\n\n\nfrontend\nbackend\nIMS\n\n\n\n\nccims-frontend\nccims-backend\nccims-backend-gql\n\n\n\nThe current repository handles the frontend of the Gropius system. The frontend is responsible for visualizing the part of the system the user can interact with aka. the graphical representation of components and issues and also different methods of managing them. Said methods include 1. creating components, interfaces and issues, 2. editing them, 3. analysing the current status of given issues and their propagation, etc.\nBelow is an example how Gropius visualizes a project as a graph. It shows all the components, issues, interfaces and links between the issues. As seen on the picture, a bug (red symbol) in Component 1 has propagated to Component 2, Component 3 and Component 4 because of Interface A that is connecting them all. What's more, Component 1 and Component 4 have feature requests (blue symbol) that need to be handled. Above the graph there are different check boxes / buttons that make handling the graph much easier, e.g., the fourth one shows / hides connections between linked issues. A search bar can help the user find a component / interface / issue by filtering for a specific text or label. The button in the top right corner is used to create new components. And there are also many other pages the user can visit, like \"Settings\", \"Issues\", etc.\n\n\n\n\n\n\nOf course the frontend of the Gropius system includes many more features. Information about most of them can be found on Using Gropius.p.s. If running the documentation locally, then click here.\nLayout of the documentation\n\nDocumentation:can be found on http://ccims.github.io/ccims-frontend.\n\nDocumentation generation:run npm run compodoc.p.s. If folder Additional documentation is not visible below Getting started, run compodoc -p tsconfig.doc.json --includes additional and then npm run compodoc.\n\nGropius features:can be found on Using Gropius.p.s. If running the documentation locally, then click here.\n\nProject structure, used technologies, mocked members page and more:can be found on Managing Gropius.p.s. If running the documentation locally, then click here.\n\nDevelopment server:run npm start and navigate to http://localhost:4200/.\n\nCode generation from .graphql files:run npm run generate.\n\nBackend:can be found on https://github.com/ccims/ccims-backend-gql.\n\n\n\n\nCredits\nFurther information regarding the members who have worked on the frontend of the system can be found on page Contributors located in the documentation.\nAdditional literature\n\nSpeth, S., Breitenbücher, U., & Becker, S. (2020). Gropius—A Tool for Managing Cross-component Issues. In H. Muccini, P. Avgeriou, B. Buhnova, J. Camara, M. Camporuscio, M. Franzago, A. Koziolek, P. Scandurra, C. Trubiani, D. Weyns, & U. Zdun (Hrsg.), Communications in Computer and Information Science (Bd. 1269, S. 82--94). Springer.\n\nSpeth, S., Becker, S., & Breitenbücher, U. (2021). Cross-Component Issue Metamodel and Modelling Language. Proceedings of the 11th International Conference on Cloud Computing and Services Science (CLOSER 2021), 304–311. https://doi.org/10.5220/0010497703040311\n\nSpeth, S., Krieger, N., Breitenbücher, U., & Becker, S. (2021). Gropius-VSC: IDE Support for Cross-Component Issue Management. In R. Heinrich, R. Mirrandola, & D. Weyns (Hrsg.), Companion Proceedings of the 15th European Conference on Software Architecture. CEUR. http://ceur-ws.org/Vol-2978/tool-paper103.pdf\n\n\nLicense\nEverything in this repository is licensed under the MIT License unless otherwise specified.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 Gropius - A Cross-Component Issue Management System for Component-based Architectures\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_GraphsModule\n\n\n\ncluster_GraphsModule_declarations\n\n\n\ncluster_GraphsModule_exports\n\n\n\n\nAccessTokenDialogComponent\n\nAccessTokenDialogComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccessTokenDialogComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nComponentContextMenuComponent\n\nComponentContextMenuComponent\n\nAppModule -->\n\nComponentContextMenuComponent->AppModule\n\n\n\n\n\nCreateComponentDialogComponent\n\nCreateComponentDialogComponent\n\nAppModule -->\n\nCreateComponentDialogComponent->AppModule\n\n\n\n\n\nCreateEditLabelDialogComponent\n\nCreateEditLabelDialogComponent\n\nAppModule -->\n\nCreateEditLabelDialogComponent->AppModule\n\n\n\n\n\nCreateInterfaceDialogComponent\n\nCreateInterfaceDialogComponent\n\nAppModule -->\n\nCreateInterfaceDialogComponent->AppModule\n\n\n\n\n\nCreateIssueDialogComponent\n\nCreateIssueDialogComponent\n\nAppModule -->\n\nCreateIssueDialogComponent->AppModule\n\n\n\n\n\nCreateProjectDialogComponent\n\nCreateProjectDialogComponent\n\nAppModule -->\n\nCreateProjectDialogComponent->AppModule\n\n\n\n\n\nFrameComponent\n\nFrameComponent\n\nAppModule -->\n\nFrameComponent->AppModule\n\n\n\n\n\nIssueContentsComponent\n\nIssueContentsComponent\n\nAppModule -->\n\nIssueContentsComponent->AppModule\n\n\n\n\n\nIssueDetailComponent\n\nIssueDetailComponent\n\nAppModule -->\n\nIssueDetailComponent->AppModule\n\n\n\n\n\nLinkedIssueItemComponent\n\nLinkedIssueItemComponent\n\nAppModule -->\n\nLinkedIssueItemComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMarkdownEditorComponent\n\nMarkdownEditorComponent\n\nAppModule -->\n\nMarkdownEditorComponent->AppModule\n\n\n\n\n\nMarkdownPreviewComponent\n\nMarkdownPreviewComponent\n\nAppModule -->\n\nMarkdownPreviewComponent->AppModule\n\n\n\n\n\nNodeDetailsComponent\n\nNodeDetailsComponent\n\nAppModule -->\n\nNodeDetailsComponent->AppModule\n\n\n\n\n\nNodeDetailsPageComponent\n\nNodeDetailsPageComponent\n\nAppModule -->\n\nNodeDetailsPageComponent->AppModule\n\n\n\n\n\nProfileSettingsDialogComponent\n\nProfileSettingsDialogComponent\n\nAppModule -->\n\nProfileSettingsDialogComponent->AppModule\n\n\n\n\n\nProjectListComponent\n\nProjectListComponent\n\nAppModule -->\n\nProjectListComponent->AppModule\n\n\n\n\n\nProjectOverviewComponent\n\nProjectOverviewComponent\n\nAppModule -->\n\nProjectOverviewComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nRemoveDialogComponent\n\nRemoveDialogComponent\n\nAppModule -->\n\nRemoveDialogComponent->AppModule\n\n\n\n\n\nRemoveProjectMemberComponentComponent\n\nRemoveProjectMemberComponentComponent\n\nAppModule -->\n\nRemoveProjectMemberComponentComponent->AppModule\n\n\n\n\n\nSettingsDialogComponent\n\nSettingsDialogComponent\n\nAppModule -->\n\nSettingsDialogComponent->AppModule\n\n\n\n\n\nSideNavComponent\n\nSideNavComponent\n\nAppModule -->\n\nSideNavComponent->AppModule\n\n\n\n\n\nTextDisplayComponent\n\nTextDisplayComponent\n\nAppModule -->\n\nTextDisplayComponent->AppModule\n\n\n\n\n\nTimelineCoalescedItemsDirective\n\nTimelineCoalescedItemsDirective\n\nAppModule -->\n\nTimelineCoalescedItemsDirective->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nTimelineItemComponent\n\nTimelineItemComponent\n\nAppModule -->\n\nTimelineItemComponent->AppModule\n\n\n\n\n\nTimelineItemDeletedDirective\n\nTimelineItemDeletedDirective\n\nAppModule -->\n\nTimelineItemDeletedDirective->AppModule\n\n\n\n\n\nTimelineSingleItemDirective\n\nTimelineSingleItemDirective\n\nAppModule -->\n\nTimelineSingleItemDirective->AppModule\n\n\n\n\n\nTopToolbarComponent\n\nTopToolbarComponent\n\nAppModule -->\n\nTopToolbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nGraphsModule\n\nGraphsModule\n\nAppModule -->\n\nGraphsModule->AppModule\n\n\n\n\n\nCursorPaginatorComponent \n\nCursorPaginatorComponent \n\nCursorPaginatorComponent  -->\n\nGraphsModule->CursorPaginatorComponent \n\n\n\n\n\nIssueCategoryComponent \n\nIssueCategoryComponent \n\nIssueCategoryComponent  -->\n\nGraphsModule->IssueCategoryComponent \n\n\n\n\n\nIssueGraphComponent \n\nIssueGraphComponent \n\nIssueGraphComponent  -->\n\nGraphsModule->IssueGraphComponent \n\n\n\n\n\nIssueGraphControlsComponent \n\nIssueGraphControlsComponent \n\nIssueGraphControlsComponent  -->\n\nGraphsModule->IssueGraphControlsComponent \n\n\n\n\n\nIssueIconComponent \n\nIssueIconComponent \n\nIssueIconComponent  -->\n\nGraphsModule->IssueIconComponent \n\n\n\n\n\nIssueItemComponent \n\nIssueItemComponent \n\nIssueItemComponent  -->\n\nGraphsModule->IssueItemComponent \n\n\n\n\n\nIssueLabelComponent \n\nIssueLabelComponent \n\nIssueLabelComponent  -->\n\nGraphsModule->IssueLabelComponent \n\n\n\n\n\nIssueListComponent \n\nIssueListComponent \n\nIssueListComponent  -->\n\nGraphsModule->IssueListComponent \n\n\n\n\n\nIssueLocationComponent \n\nIssueLocationComponent \n\nIssueLocationComponent  -->\n\nGraphsModule->IssueLocationComponent \n\n\n\n\n\nIssueSidebarComponent \n\nIssueSidebarComponent \n\nIssueSidebarComponent  -->\n\nGraphsModule->IssueSidebarComponent \n\n\n\n\n\nItemDirective \n\nItemDirective \n\nItemDirective  -->\n\nGraphsModule->ItemDirective \n\n\n\n\n\nProjectHeaderComponent \n\nProjectHeaderComponent \n\nProjectHeaderComponent  -->\n\nGraphsModule->ProjectHeaderComponent \n\n\n\n\n\nQueryBodyDirective \n\nQueryBodyDirective \n\nQueryBodyDirective  -->\n\nGraphsModule->QueryBodyDirective \n\n\n\n\n\nQueryButtonDirective \n\nQueryButtonDirective \n\nQueryButtonDirective  -->\n\nGraphsModule->QueryButtonDirective \n\n\n\n\n\nQueryComponent \n\nQueryComponent \n\nQueryComponent  -->\n\nGraphsModule->QueryComponent \n\n\n\n\n\nSetEditorComponent \n\nSetEditorComponent \n\nSetEditorComponent  -->\n\nGraphsModule->SetEditorComponent \n\n\n\n\n\nUserItemComponent \n\nUserItemComponent \n\nUserItemComponent  -->\n\nGraphsModule->UserItemComponent \n\n\n\n\n\nAddProjectMemberDialogComponent\n\nAddProjectMemberDialogComponent\n\nGraphsModule -->\n\nAddProjectMemberDialogComponent->GraphsModule\n\n\n\n\n\nCacheNodeComponent\n\nCacheNodeComponent\n\nGraphsModule -->\n\nCacheNodeComponent->GraphsModule\n\n\n\n\n\nCursorPaginatorComponent\n\nCursorPaginatorComponent\n\nGraphsModule -->\n\nCursorPaginatorComponent->GraphsModule\n\n\n\n\n\nIssueCategoryComponent\n\nIssueCategoryComponent\n\nGraphsModule -->\n\nIssueCategoryComponent->GraphsModule\n\n\n\n\n\nIssueFilterComponent\n\nIssueFilterComponent\n\nGraphsModule -->\n\nIssueFilterComponent->GraphsModule\n\n\n\n\n\nIssueGraphComponent\n\nIssueGraphComponent\n\nGraphsModule -->\n\nIssueGraphComponent->GraphsModule\n\n\n\n\n\nIssueGraphControlsComponent\n\nIssueGraphControlsComponent\n\nGraphsModule -->\n\nIssueGraphControlsComponent->GraphsModule\n\n\n\n\n\nIssueIconComponent\n\nIssueIconComponent\n\nGraphsModule -->\n\nIssueIconComponent->GraphsModule\n\n\n\n\n\nIssueItemComponent\n\nIssueItemComponent\n\nGraphsModule -->\n\nIssueItemComponent->GraphsModule\n\n\n\n\n\nIssueLabelComponent\n\nIssueLabelComponent\n\nGraphsModule -->\n\nIssueLabelComponent->GraphsModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nGraphsModule -->\n\nIssueListComponent->GraphsModule\n\n\n\n\n\nIssueLocationComponent\n\nIssueLocationComponent\n\nGraphsModule -->\n\nIssueLocationComponent->GraphsModule\n\n\n\n\n\nIssueSidebarComponent\n\nIssueSidebarComponent\n\nGraphsModule -->\n\nIssueSidebarComponent->GraphsModule\n\n\n\n\n\nItemDirective\n\nItemDirective\n\nGraphsModule -->\n\nItemDirective->GraphsModule\n\n\n\n\n\nLabelSearchComponent\n\nLabelSearchComponent\n\nGraphsModule -->\n\nLabelSearchComponent->GraphsModule\n\n\n\n\n\nProjectHeaderComponent\n\nProjectHeaderComponent\n\nGraphsModule -->\n\nProjectHeaderComponent->GraphsModule\n\n\n\n\n\nProjectIssueListComponent\n\nProjectIssueListComponent\n\nGraphsModule -->\n\nProjectIssueListComponent->GraphsModule\n\n\n\n\n\nProjectMembersComponent\n\nProjectMembersComponent\n\nGraphsModule -->\n\nProjectMembersComponent->GraphsModule\n\n\n\n\n\nQueryBodyDirective\n\nQueryBodyDirective\n\nGraphsModule -->\n\nQueryBodyDirective->GraphsModule\n\n\n\n\n\nQueryButtonDirective\n\nQueryButtonDirective\n\nGraphsModule -->\n\nQueryButtonDirective->GraphsModule\n\n\n\n\n\nQueryComponent\n\nQueryComponent\n\nGraphsModule -->\n\nQueryComponent->GraphsModule\n\n\n\n\n\nSetEditorComponent\n\nSetEditorComponent\n\nGraphsModule -->\n\nSetEditorComponent->GraphsModule\n\n\n\n\n\nSetEditorDialogComponent\n\nSetEditorDialogComponent\n\nGraphsModule -->\n\nSetEditorDialogComponent->GraphsModule\n\n\n\n\n\nUserItemComponent\n\nUserItemComponent\n\nGraphsModule -->\n\nUserItemComponent->GraphsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    51 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    20 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    28 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        21 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EnumDictionary   (src/.../shared.ts)\n                        \n                        \n                            FilterElement   (src/.../label-search.component.ts)\n                        \n                        \n                            FilterLabel   (src/.../label-store.service.ts)\n                        \n                        \n                            GQLGraphComponent   (src/.../graph-data.ts)\n                        \n                        \n                            GQLInterface   (src/.../graph-data.ts)\n                        \n                        \n                            GQLIssue   (src/.../graph-data.ts)\n                        \n                        \n                            GraphFolder   (src/.../graph-data.ts)\n                        \n                        \n                            GraphLocation   (src/.../graph-data.ts)\n                        \n                        \n                            HydrateList   (src/.../query.ts)\n                        \n                        \n                            IssueListParams   (src/.../issues.service.ts)\n                        \n                        \n                            ItemFilterFunction   (src/.../timeline.component.ts)\n                        \n                        \n                            ItemOps   (src/.../set-editor-dialog.component.ts)\n                        \n                        \n                            ItemOps   (src/.../set-editor.component.ts)\n                        \n                        \n                            ListIdEnc   (src/.../id.ts)\n                        \n                        \n                            ListQueries   (src/.../load.ts)\n                        \n                        \n                            ListQueryInput   (src/.../load.ts)\n                        \n                        \n                            ListResult   (src/.../load.ts)\n                        \n                        \n                            LocalIssueData   (src/.../issue-sidebar.component.ts)\n                        \n                        \n                            LocationId   (src/.../graph-data.ts)\n                        \n                        \n                            MaybeLocalList   (src/.../issue-sidebar.component.ts)\n                        \n                        \n                            NodeIdEnc   (src/.../id.ts)\n                        \n                        \n                            NodeQueries   (src/.../load.ts)\n                        \n                        \n                            NodeQueryInput   (src/.../load.ts)\n                        \n                        \n                            NodeUpdatedCallbackFn   (src/.../node-details.component.ts)\n                        \n                        \n                            SelectedCategories   (src/.../shared.ts)\n                        \n                        \n                            TextDisplayEditCallbackFn   (src/.../text-display.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/graphs/shared.ts\n    \n    \n        \n            \n                \n                    \n                    EnumDictionary\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SelectedCategories\n                \n            \n            \n                \n                            EnumDictionary\n\n                \n            \n        \n    \n    src/app/graphs/label-search/label-search.component.ts\n    \n    \n        \n            \n                \n                    \n                    FilterElement\n                \n            \n            \n                \n                    The bar can contain elements standing for labels and elements for text fragments.\n\n                \n            \n            \n                \n                            TextFragment | FilterLabel\n\n                \n            \n        \n    \n    src/app/data/label/label-store.service.ts\n    \n    \n        \n            \n                \n                    \n                    FilterLabel\n                \n            \n            \n                \n                        Pick\n\n                \n            \n        \n    \n    src/app/data/issue-graph/graph-data.ts\n    \n    \n        \n            \n                \n                    \n                    GQLGraphComponent\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GQLInterface\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GQLIssue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GraphFolder\n                \n            \n            \n                \n                            [LocationId, IssueCategory]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GraphLocation\n                \n            \n            \n                \n                        GraphInterface | GraphComponent\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LocationId\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/app/data-dgql/query.ts\n    \n    \n        \n            \n                \n                    \n                    HydrateList\n                \n            \n            \n                \n                    List hydration object (constructing this manually shouldn't be necessary as it mirrors the structure of GQL objects)\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/data-dgql/queries/issues.service.ts\n    \n    \n        \n            \n                \n                    \n                    IssueListParams\n                \n            \n            \n                \n                        QueryListParams\n\n                \n            \n        \n    \n    src/app/issue-detail/timeline/timeline.component.ts\n    \n    \n        \n            \n                \n                    \n                    ItemFilterFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/components/set-editor/set-editor-dialog.component.ts\n    \n    \n        \n            \n                \n                    \n                    ItemOps\n                \n            \n            \n                \n                    Types of item operations that may be made available.\n\n                \n            \n            \n                \n                        \"none\" | \"edit\" | \"create-edit\" | \"create-edit-delete\"\n\n                \n            \n        \n    \n    src/app/components/set-editor/set-editor.component.ts\n    \n    \n        \n            \n                \n                    \n                    ItemOps\n                \n            \n            \n                \n                        \"none\" | \"edit\" | \"create-edit\" | \"create-edit-delete\"\n\n                \n            \n        \n    \n    src/app/data-dgql/id.ts\n    \n    \n        \n            \n                \n                    \n                    ListIdEnc\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NodeIdEnc\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    src/app/data-dgql/load.ts\n    \n    \n        \n            \n                \n                    \n                    ListQueries\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListQueryInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListResult\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NodeQueries\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NodeQueryInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/issue-detail/issue-sidebar.component.ts\n    \n    \n        \n            \n                \n                    \n                    LocalIssueData\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MaybeLocalList\n                \n            \n            \n                \n                            ListId | T[]\n\n                \n            \n        \n    \n    src/app/node-details/node-details.component.ts\n    \n    \n        \n            \n                \n                    \n                    NodeUpdatedCallbackFn\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/text-display/text-display.component.ts\n    \n    \n        \n            \n                \n                    \n                    TextDisplayEditCallbackFn\n                \n            \n            \n                \n                    A callback function that is called once the user finishes editing the text.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/userMock.html":{"url":"interfaces/userMock.html","title":"interface - userMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  userMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/project-members/project-members.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            displayName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ProjectStoreService} from '@app/data/project/project-store.service';\nimport {GetFullProjectQuery} from 'src/generated/graphql';\nimport {Observable} from 'rxjs';\nimport {FormControl} from '@angular/forms';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSort, MatSortable} from '@angular/material/sort';\nimport {MatPaginator, MatPaginatorModule, PageEvent} from '@angular/material/paginator';\nimport {AddProjectMemberDialogComponent} from '@app/dialogs/add-project-member-dialog/add-project-member-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {RemoveProjectMemberComponentComponent} from '@app/dialogs/remove-project-member-component/remove-project-member-component.component';\n\n/**\n * This component is an example for the manage members view\n * All users are displayed in a paginated list. The list can be filtered.\n * The members are hardcoded\n * If the backend offers an interface to get all users the mockUsers list schould be replaced\n */\n@Component({\n  selector: 'app-project-members',\n  templateUrl: './project-members.component.html',\n  styleUrls: ['./project-members.component.scss']\n})\nexport class ProjectMembersComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatPaginatorModule) paginatorModule: MatPaginatorModule;\n  @ViewChild(MatSort) sort: MatSort;\n  public projectId: string;\n  public project$: Observable;\n  public project: GetFullProjectQuery;\n  validationFilter = new FormControl('');\n\n  columnsToDisplay = ['Name', 'Role', 'email'];\n  dataSource: MatTableDataSource;\n\n  //users\n  mockUsers: Array = [\n    {id: '1', displayName: 'User1', email: 'User1.de'},\n    {id: '2', displayName: 'User2', email: 'User2.de'},\n    {id: '3', displayName: 'User3', email: 'User3.de'},\n    {id: '4', displayName: 'User4', email: 'User4.de'},\n    {id: '5', displayName: 'User5', email: 'User5.de'},\n    {id: '6', displayName: 'User6', email: 'User6.de'}\n  ];\n\n  // list of users who can be added to the project\n  //hardcoded\n  addableUsers: Array = [\n    {id: '7', displayName: 'AddedUser1', email: 'AddedUser1.de'},\n    {id: '8', displayName: 'AddedUser2', email: 'AddedUser2.de'},\n    {id: '9', displayName: 'AddedUser3', email: 'AddedUser3.de'}\n  ];\n\n  constructor(private dialog: MatDialog, private projectStore: ProjectStoreService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.project$ = this.projectStore.getFullProject(this.projectId);\n    this.project$.subscribe((project) => {\n      this.project = project;\n      // MOCK DATA for table\n      // FIXME Api change\n      // project.node.users.nodes.forEach(u => this.mockUsers.push(u));\n      this.dataSource = new MatTableDataSource(this.mockUsers);\n\n      // sort data in table\n      this.sort.sort({id: 'Name', start: 'asc'} as MatSortable);\n      this.dataSource.sort = this.sort;\n\n      //paginator\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  // This method adds a user to the project members list without processing a task in the back-end\n  onAddClick() {\n    const addMemberDialogRef = this.dialog.open(AddProjectMemberDialogComponent, {\n      data: {addableMembers: this.addableUsers, projectId: this.projectId}\n    });\n    addMemberDialogRef.afterClosed().subscribe((data) => {\n      if (data) {\n        for (const user of data.usersToAdd) {\n          this.addableUsers.forEach((addableUser) => {\n            if (addableUser.id == user) {\n              this.mockUsers.push(addableUser);\n            }\n          });\n        }\n        this.dataSource = new MatTableDataSource(this.mockUsers);\n      }\n    });\n  }\n\n  // This method deletes a user to the project members list without processing a task in the back-end\n  onDeleteClick() {\n    const deleteMemberDialogRef = this.dialog.open(RemoveProjectMemberComponentComponent, {\n      data: {mockMembers: this.mockUsers, projectId: this.projectId}\n    });\n    deleteMemberDialogRef.afterClosed().subscribe((data) => {\n      if (data) {\n        for (const user of data.usersToDelete) {\n          for (let i = 0; i (this.mockUsers);\n      }\n    });\n  }\n\n  //change pages\n  onPageChange(event: PageEvent) {}\n\n  // on every key pressed in the filter-field this method is triggered and reduces the shown users in the list (table)\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  clickedOnRow(rowData) {\n    // there schould be the code when a user is selected\n    // TODO jump to the user information page\n  }\n}\n\n// defines the structure of a user\nexport interface userMock {\n  id: string;\n  displayName?: string;\n  username?: string;\n  email?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            antDesignIcons   (src/.../app.module.ts)\n                        \n                        \n                            basic   (src/.../graphql.module.ts)\n                        \n                        \n                            CACHE_FAST_DEBOUNCE_TIME_MS   (src/.../query.ts)\n                        \n                        \n                            CACHE_INTERACTIVE_DEBOUNCE_TIME_MS   (src/.../query.ts)\n                        \n                        \n                            CACHE_STALE_TIME_MS   (src/.../query.ts)\n                        \n                        \n                            colorTestCanvas   (src/.../issue-label.component.ts)\n                        \n                        \n                            colorTestCtx   (src/.../issue-label.component.ts)\n                        \n                        \n                            COMPONENT_CONTEXT_MENU_DATA   (src/.../component-context-menu.component.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            CURRENT_USER_NODE   (src/.../id.ts)\n                        \n                        \n                            defaultOptions   (src/.../graphql.module.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            host   (src/.../environment.prod.ts)\n                        \n                        \n                            host   (src/.../environment.ts)\n                        \n                        \n                            icons   (src/.../app.module.ts)\n                        \n                        \n                            listAllIssues   (src/.../issue-filter.component.ts)\n                        \n                        \n                            listQueries   (src/.../load.ts)\n                        \n                        \n                            networkErrorToast   (src/.../graphql.module.ts)\n                        \n                        \n                            nodeQueries   (src/.../load.ts)\n                        \n                        \n                            PREDICATES   (src/.../issue-filter.component.ts)\n                        \n                        \n                            queryList   (src/.../load.ts)\n                        \n                        \n                            queryNode   (src/.../load.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            ROOT_NODE   (src/.../id.ts)\n                        \n                        \n                            slider   (src/.../route-animations.ts)\n                        \n                        \n                            toasterConfig   (src/.../app.module.ts)\n                        \n                        \n                            zeroPosition   (src/.../issue-graph-nodes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        antDesignIcons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AllIcons as {\n  [key: string]: IconDefinition;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IconDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : Object.keys(antDesignIcons).map((key) => antDesignIcons[key])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toasterConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n  maxOpened: 4,\n  autoDismiss: true\n}\n                    \n                \n\n\n        \n    \n\n    src/app/graphql.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        basic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : setContext((operation, context) => ({\n  headers: {\n    Accept: 'charset=utf-8'\n  }\n}))\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DefaultOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  query: {\n    fetchPolicy: 'no-cache',\n    errorPolicy: 'all'\n  }\n}\n                    \n                \n\n            \n                \n                    This modules purpose is to provide define functions returning configurations\nfor the automatic creation of ApolloClients for graphql communication with the backend.\nThe key functions are providePublicApollo and provideDefaultApollo. The apollo instance\nconstructed from providePublicApollo is only used for registering.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        networkErrorToast\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n  timeOut: 5000,\n  closeButton: true,\n  positionClass: 'toast-top-center',\n  enableHtml: true\n}\n                    \n                \n\n            \n                \n                    Congiuration for network error toast on register page.\n\n                \n            \n\n        \n    \n\n    src/app/data-dgql/query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CACHE_FAST_DEBOUNCE_TIME_MS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n\n            \n                \n                    How long DataQuery will wait to debounce requests until actually sending a request, in milliseconds.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CACHE_INTERACTIVE_DEBOUNCE_TIME_MS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n\n            \n                \n                    How long DataQuery will wait to debounce requests, if the undefined flag is set, in milliseconds.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CACHE_STALE_TIME_MS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5000\n                    \n                \n\n            \n                \n                    Number of milliseconds beyond which cached data will be considered stale, and will be reloaded if a new subscriber is added.\n\n                \n            \n\n        \n    \n\n    src/app/components/issue-label/issue-label.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        colorTestCanvas\n                        \n                    \n                \n            \n                \n                    \n                        Default value : document.createElement('canvas')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        colorTestCtx\n                        \n                    \n                \n            \n                \n                    \n                        Default value : colorTestCanvas.getContext('2d')\n                    \n                \n\n\n        \n    \n\n    src/app/graphs/component-context-menu/component-context-menu.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        COMPONENT_CONTEXT_MENU_DATA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('COMPONENT_CONTEXT_MENU_DATA')\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/app/data-dgql/id.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CURRENT_USER_NODE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {type: NodeType.User, id: 'self'}\n                    \n                \n\n            \n                \n                    The special ID of the current user node.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROOT_NODE\n                        \n                    \n                \n            \n                \n                    \n                        Type :     miscellaneous\n\n                    \n                \n                \n                    \n                        Default value : {type: NodeType.Root, id: ''}\n                    \n                \n\n            \n                \n                    The ID of the root node.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiUrl: `${host}/api`,\n  signUpUrl: `${host}/api/public`,\n  loginUrl: `${host}/login`,\n  publicClientName: 'publicClient'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:8080'\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl: `${host}/api`,\n  // url for public api endpoint offering signup\n  signUpUrl: `${host}/api/public`,\n  loginUrl: `${host}/login`,\n  publicClientName: 'publicClient'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:8080'\n                    \n                \n\n\n        \n    \n\n    src/app/issue-list/issue-filter.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        listAllIssues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (self: IssueFilterComponent) => ({\n  node: {type: NodeType.Project, id: self.projectId},\n  type: ListType.Issues\n})\n                    \n                \n\n            \n                \n                    Returns the ListId for listing all project issues.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PREDICATES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  isOpen: {type: 'bool', label: 'Is open'},\n  isDuplicate: {type: 'bool', label: 'Is duplicate'},\n  category: {\n    type: 'enum',\n    label: 'Category',\n    options: [\n      [IssueCategory.Unclassified, 'Unclassified'],\n      [IssueCategory.Bug, 'Bug'],\n      [IssueCategory.FeatureRequest, 'Feature Request']\n    ]\n  },\n  labels: {\n    type: 'ids',\n    label: 'Labels',\n    dataType: 'label',\n    scoreKeys: ['name'],\n    listAll: (self: IssueFilterComponent) => self.allLabelsList,\n    makeFilter: (query: string) => ({name: query}),\n    ifEmpty: 'No labels selected'\n  },\n  linksIssues: {type: 'bool', label: 'Has linked issues'},\n  linkedIssues: {\n    type: 'ids',\n    label: 'Linked issues',\n    dataType: 'issue',\n    scoreKeys: ['title'],\n    listAll: listAllIssues,\n    makeFilter: (query: string) => ({title: query}),\n    ifEmpty: 'No issues selected'\n  },\n  isLinkedByIssues: {type: 'bool', label: 'Is linked by issues'},\n  linkedByIssues: {\n    type: 'ids',\n    label: 'Linked by issues',\n    dataType: 'issue',\n    scoreKeys: ['title'],\n    listAll: listAllIssues,\n    makeFilter: (query: string) => ({title: query}),\n    ifEmpty: 'No issues selected'\n  },\n  participants: {\n    type: 'ids',\n    label: 'Participants',\n    dataType: 'user',\n    scoreKeys: ['username', 'displayName'],\n    listAll: () => ({node: ROOT_NODE, type: ListType.SearchUsers}),\n    makeFilter: (query: string) => ({username: query}),\n    ifEmpty: 'No users selected'\n  },\n  locations: {\n    type: 'ids',\n    label: 'Locations',\n    dataType: 'location',\n    scoreKeys: ['name'],\n    listAll: (self: IssueFilterComponent) => ({\n      staticSources: [\n        {\n          node: {type: NodeType.Project, id: self.projectId},\n          type: ListType.Components\n        },\n        {\n          node: {type: NodeType.Project, id: self.projectId},\n          type: ListType.ComponentInterfaces\n        }\n      ]\n    }),\n    makeFilter: (query: string) => ({title: query}),\n    ifEmpty: 'No locations selected'\n  }\n}\n                    \n                \n\n            \n                \n                    List of all possible issue filter predicates.\nKeyed by their name, each predicate has a type, label,\nand possibly additional options depending on their type.\n\n                \n            \n\n        \n    \n\n    src/app/data-dgql/load.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        listQueries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListQueries\n\n                    \n                \n                \n                    \n                        Default value : {\n  [ListType.Projects]: {\n    [NodeType.Root]: (i, list, params) =>\n      i.q.projects.listProjects(listParams(params)).then((data) => ({\n        totalCount: data.projects.totalCount,\n        pageInfo: data.projects.pageInfo,\n        items: i.c.insertNodes(data.projects.nodes)\n      }))\n  },\n  [ListType.Components]: {\n    [NodeType.Project]: (i, list, params) =>\n      i.q.components.listProjectComponents(list.node.id, listParams(params)).then((data) => ({\n        totalCount: data.node.components.totalCount,\n        pageInfo: data.node.components.pageInfo,\n        items: i.c.insertNodes(data.node.components.nodes)\n      })),\n    [NodeType.Issue]: (i, list, params) =>\n      i.q.issues.listIssueComponents(list.node.id, listParams(params)).then((data) => ({\n        totalCount: data.node.components.totalCount,\n        pageInfo: data.node.components.pageInfo,\n        items: i.c.insertNodes(data.node.components.nodes)\n      })),\n    [NodeType.Label]: (i, list, params) =>\n      i.q.issues.listLabelComponents(list.node.id, listParams(params)).then((data) => ({\n        totalCount: data.node.components.totalCount,\n        pageInfo: data.node.components.pageInfo,\n        items: i.c.insertNodes(data.node.components.nodes)\n      }))\n  },\n  [ListType.ComponentInterfaces]: {\n    [NodeType.Project]: (i, list, params) =>\n      i.q.components.listProjectInterfaces(list.node.id, listParams(params)).then((data) => ({\n        totalCount: data.node.interfaces.totalCount,\n        pageInfo: data.node.interfaces.pageInfo,\n        items: i.c.insertNodes(data.node.interfaces.nodes)\n      }))\n  },\n  [ListType.Issues]: {\n    [NodeType.Project]: (i, list, params) =>\n      i.q.issues.listProjectIssues(list.node.id, listParams(params)).then((data) => ({\n        totalCount: data.node.issues.totalCount,\n        pageInfo: data.node.issues.pageInfo,\n        items: i.c.insertNodes(data.node.issues.nodes)\n      })),\n    [NodeType.Component]: (i, list, params) =>\n      i.q.issues.listComponentIssues(list.node.id, listParams(params)).then((data) => ({\n        totalCount: data.node.issues.totalCount,\n        pageInfo: data.node.issues.pageInfo,\n        items: i.c.insertNodes(data.node.issues.nodes)\n      }))\n  },\n  [ListType.IssuesOnLocation]: {\n    [NodeType.Component]: (i, list, params) =>\n      i.q.issues.listComponentIssuesOnLocation(list.node.id, listParams(params)).then((data) => ({\n        totalCount: data.node.issuesOnLocation.totalCount,\n        pageInfo: data.node.issuesOnLocation.pageInfo,\n        items: i.c.insertNodes(data.node.issuesOnLocation.nodes)\n      })),\n    [NodeType.ComponentInterface]: (i, list, params) =>\n      i.q.issues.listComponentInterfaceIssuesOnLocation(list.node.id, listParams(params)).then((data) => ({\n        totalCount: data.node.issuesOnLocation.totalCount,\n        pageInfo: data.node.issuesOnLocation.pageInfo,\n        items: i.c.insertNodes(data.node.issuesOnLocation.nodes)\n      }))\n  },\n  [ListType.TimelineItems]: {\n    [NodeType.Issue]: (i, list, params) =>\n      i.q.issues.listIssueTimelineItems(list.node.id, listParams(params)).then((data) => ({\n        totalCount: data.node.timeline.totalCount,\n        pageInfo: data.node.timeline.pageInfo,\n        items: i.c.insertNodes(data.node.timeline.nodes)\n      }))\n  },\n  [ListType.IssueLocations]: {\n    [NodeType.Issue]: (i, list, params) =>\n      i.q.issues.listIssueLocations(list.node.id, listParams(params)).then((data) => ({\n        totalCount: data.node.locations.totalCount,\n        pageInfo: data.node.locations.pageInfo,\n        items: i.c.insertNodes(data.node.locations.nodes)\n      }))\n  },\n  [ListType.Labels]: {\n    [NodeType.Project]: (i, list, params) =>\n      i.q.issues.listProjectLabels(list.node.id, listParams(params)).then((data) => ({\n        totalCount: data.node.labels.totalCount,\n        pageInfo: data.node.labels.pageInfo,\n        items: i.c.insertNodes(data.node.labels.nodes)\n      })),\n    [NodeType.Component]: (i, list, params) =>\n      i.q.issues.listComponentLabels(list.node.id, listParams(params)).then((data) => ({\n        totalCount: data.node.labels.totalCount,\n        pageInfo: data.node.labels.pageInfo,\n        items: i.c.insertNodes(data.node.labels.nodes)\n      })),\n    [NodeType.Issue]: (i, list, params) =>\n      i.q.issues.listIssueLabels(list.node.id, listParams(params)).then((data) => ({\n        totalCount: data.node.labels.totalCount,\n        pageInfo: data.node.labels.pageInfo,\n        items: i.c.insertNodes(data.node.labels.nodes)\n      }))\n  },\n  [ListType.Assignees]: {\n    [NodeType.Issue]: (i, list, params) =>\n      i.q.issues.listIssueAssignees(list.node.id, listParams(params)).then((data) => ({\n        totalCount: data.node.assignees.totalCount,\n        pageInfo: data.node.assignees.pageInfo,\n        items: i.c.insertNodes(data.node.assignees.nodes)\n      }))\n  },\n  [ListType.LinkedIssues]: {\n    [NodeType.Issue]: (i, list, params) =>\n      i.q.issues.listIssueLinksToIssues(list.node.id, listParams(params)).then((data) => ({\n        totalCount: data.node.linksToIssues.totalCount,\n        pageInfo: data.node.linksToIssues.pageInfo,\n        items: i.c.insertNodes(data.node.linksToIssues.nodes)\n      }))\n  },\n  [ListType.LinkedByIssues]: {\n    [NodeType.Issue]: (i, list, params) =>\n      i.q.issues.listIssueLinkedByIssues(list.node.id, listParams(params)).then((data) => ({\n        totalCount: data.node.linkedByIssues.totalCount,\n        pageInfo: data.node.linkedByIssues.pageInfo,\n        items: i.c.insertNodes(data.node.linkedByIssues.nodes)\n      }))\n  },\n  [ListType.SearchUsers]: {\n    [NodeType.Root]: (i, list, params) =>\n      i.q.users.searchUsers(params.filter as {username: string}).then((data) => ({\n        totalCount: data.length,\n        pageInfo: {\n          startCursor: data[0]?.id || null,\n          endCursor: data[data.length - 1]?.id || null,\n          hasNextPage: false,\n          hasPreviousPage: false\n        },\n        items: i.c.insertNodes(data)\n      }))\n  }\n}\n                    \n                \n\n            \n                \n                    Available list queries.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeQueries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeQueries\n\n                    \n                \n                \n                    \n                        Default value : {\n  [NodeType.Project]: (i, id) => i.q.projects.getProject(id).then((data) => data.node),\n  [NodeType.Component]: (i, id) => i.q.components.getComponent(id).then((data) => data.node),\n  [NodeType.ComponentInterface]: (i, id) => i.q.components.getInterface(id).then((data) => data.node),\n  [NodeType.Issue]: (i, id) => i.q.issues.getIssueHeader(id).then((data) => data.node),\n  [NodeType.User]: (i, id) =>\n    id === CURRENT_USER_NODE.id ? i.q.users.currentUser().then((data) => data.currentUser) : Promise.reject(new Error('not implemented')),\n  [NodeType.Label]: (i, id) => i.q.issues.getLabel(id).then((data) => data.node)\n}\n                    \n                \n\n            \n                \n                    Types of nodes that can be loaded directly.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (q: QueriesService, c: NodeCache) =>\n  async (listId: ListId, params: ListParams): Promise> => {\n    const {node, type} = listId;\n\n    if (!listQueries[type] || !listQueries[type][node.type]) {\n      throw new Error(`${NodeType[node.type]} has no list ${ListType[type]}`);\n    }\n\n    const i = {q, c};\n    return (await listQueries[type][node.type](i, {node, type}, params)) as ListResult;\n  }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryNode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (q: QueriesService) =>\n  async (nodeId: NodeId): Promise => {\n    const {type, id} = nodeId;\n\n    if (!nodeQueries[type]) {\n      throw new Error(`${NodeType[type]} cannot be loaded directly`);\n    }\n\n    const i = {q};\n    return (await nodeQueries[type](i, id)) as T;\n  }\n                    \n                \n\n            \n                \n                    Loads a node.\n\n                \n            \n\n        \n    \n\n    src/app/route-animations.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        slider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('routeAnimations', [transition('* => isRight', slideTo('right'))])\n                    \n                \n\n            \n                \n                    Describes an animation of sliding to to the right, used for the entry of the ComponentDetails component\n\n                \n            \n\n        \n    \n\n    src/app/graphs/issue-graph/issue-graph-nodes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        zeroPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {x: 0, y: 0}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/using-gropius.html":{"url":"additional-documentation/using-gropius.html","title":"additional-page - Using Gropius","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing the Project\nThis page lists all the features of the Gropius system and provides a description of how they can be used. In addition, the use of the features is visualized with pictures.\nCreating, Filtering and Deleting Projects\nThe main page contains a list of projects. To create a new project, click the \"Create Project\" button and enter a name and description (optional) for the project. \nThe search field above the project list allows to search for projects and filter the list. \nOnce a project is selected, the project overview is opened. After clicking on \"Delete project\" a confirmation is expected. \nA direct link to the project's component diagram is provided on the right side of each project item in the project list.\n\n\n\n\nProject Overview\nThe \"Project Overview\" view contains the name and ID of the current project, the description that can be edited as well as the \"Delete Project\" button.\n\n\n\n\nGraph and Components\nThe graph of the project represents all components, issues (bugs, feature requests and unclassified issues), interfaces and relations between entities. \nIn the upper left corner there are filters that allow the user to hide different types of issues (bugs, feature requests and unclassified issues) or issue connections to get a better visualization of the components and interfaces. \nIn the upper right corner there is a button to create new components. The user is required to provide a name, repository URL, provider type (IMS), IMS-URL, and description (optional) for the component to be created.  \n\n\n\n\nA new interface is created by connecting two components. The user is expected to provide a name, a type, and optionally a description of the interface.\n\nClicking on a component displays a popup window with a list of issues and details associated with the current component. There, new issues can be created for this component (\"Create issue\" button), issues can be filtered, the details can be edited and the component can be deleted. \nClicking on an interface displays a pop-up window with the interface details and the issues associated with that interface. The \"Create Issue\" button can be used to create new issues associated with this interface.  \n\n\n\n\nIssues (Component Issues and Inteface Issues)\nAn issue can be a bug, a feature request, and an unclassified issue. Issues can be created for interfaces and for components in the component / interface pop-up. The user is expected to specify the issue title, type (bug, feature request, or unclassified), associated components, issue location, labels, assignees (not yet functional), and linked issues. Each of these fields is optional, except for the issue title. New labels for the issues can also be created.\n\n\n\n\n\nThe issues are also displayed as a list in a separate view. Said view is either displayed as a component / interface pop-up, or it is shown in page \"Issues\". Each issue has a title, author, assignees, labels and a category. The list of issues can be filtered so that specific ones will be targeted. After selecting an issue, its details are displayed on its own issue details page. There the issue can be edited, commented and closed. What's more, the details page for each issue includes a timeline, more about which can be found in section Timeline.\n\n\n\n\n\nTimeline\nAfter an issue is selected in page \"Issues\", the issue details page for the corresponding issue opens. There the issue can be managed. All changes made to the issue are reflected on its own timeline. In a way, the timeline visualizes the whole lifecycle of an issue, including: a) when it has been created, b) who and how has edited it, c) who has commented it, d) what labels have been assigned to it, e) which user has been assigned to it, f) to which other issue / component / interface it has been linked and finally g) who has closed it.\n\n\n\n\n\nAuthentication\nTo use the app, the user must first sign up (if no account has been created yet) and then log in to the corresponding account. The sign up form requires a username, email and password. More details about the user's account can be managed in the settings menu once the user has logged in.  \n\n\n\n\nMocked Members Page\nEvery project offers a mocked \"Members\" page. It shows a list of users in the project and\noffers a dialog to add users. However, this area is purely a mock, changes are not persistent\nand there are no other users who have access to the currently handled project.\n\n\n\n\nMocked Settings Menu\nThe application contains a mocked settings menu. The menu includes profile settings to update the display name, username, email and password. What's more, there is an option to create an access token and a \"Dark Mode\" option. However, the menu is purely a mock and changes are not persistent, nor are the latter two features functioning.\n \n \n\n\n \n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/managing-gropius.html":{"url":"additional-documentation/managing-gropius.html","title":"additional-page - Managing Gropius","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nManaging the Project\nDevelopment server\nThis project was generated with Angular CLI version 9.1.12.\nRun npm start for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nProject structure\nHave a look at the routing module to get a nice overview\nof the primary components of the app.\n\n\n\nAspect\nCode\n\n\n\n\nApp Layout\nFrameComponent\n\n\nGraph\nGraphsModule, look at the declarations\n\n\nProject Context\nStateService\n\n\nAccount Management and Auth with Backend\nLoginComponent, RegisterComponent, AuthenticationService, AuthGuard\n\n\nApollo GraphQL Client Setup\nGraphQLModule\n\n\nType Definitions for Data from Backend  Helper Objects for Queries & Mutations  All of this is output of code generator\ngenerated\n\n\n\nDocumentation generation\nThe documentation is generated with Compodoc. Run npm run compodocfor a documentation server. Navigate to http://localhost:6060/. The documentation will automatically reload if you change any of the source files. The configuration for the documentation is managed in tsconfig.doc.json.\nCode quality\nCode quality concerns are handled with ESLint and code formatting concerns with Prettier. The Prettier code formatter is integrated in the ESLint configuration.\nRun ng lint --fix for a static code analysis and code formatting of all files except the ones excluded in .eslintignore.\nCode formatting\nConsistent code formatting is guaranteed with Prettier. Run npx prettier --write . to format all files except the ones that are excluded in the .prettierignore file.\nBindings to the Backend API\nThe app uses GraphQL to communicate with the backend.\nThe following documentation will assume you are familiar with the CCIMS backend API.\nThere are currently two different APIs for communicating with the backend:\ndata API\nThe data API provides simple wrappers around the inner GraphQL queries\n(e.g. ComponentStoreService) that can be included into any Angular class using dependency\ninjection.\nGraphql source files are located in the data directory, subdivided by the entities\nthey pertain to (components, issues, etc.)\nRefer to the code documentation for the handler of each entity type for more information.\nIt is not recommended that you use the data API for new code, as it has several drawbacks:\n\nQueries do not have any granularity: a lot of list queries will fetch all items in that list at\nonce, without any pagination. A lot of node queries will fetch the node and all of its child nodes\nused in the GUI, often every time the GUI control accessing the data is created.\nUpdates to data in one area (e.g. changing the name of a component) are not propagated to other\nareas. This is, however, sort of canceled out by the fact that data is reloaded every time.\n\ndata-dgql API\nThe declarative data API attempts to improve upon the data API by introducing following new\nconcepts:\n\nDataNode: a shared, cached view into a node, agnostic of where the data was loaded from.\nData may be loaded by lists, parent nodes, or queries about the node itself.\nAll subscribers to the node (such as GUI components) can see the data and any updates\nsimultaneously.\nViewers will cause data to be loaded by default, but can be configured to prefer cached data\n(with subscribeLazy - useful when data has already been loaded by a DataList).\nDataList: a view into a list that makes use of pagination and provides an interface for\nserver-side filtering.\nLists will automatically load data into the corresponding DataNode of each item.\nDataQuery: a superclass of both DataNode and DataList that contains common methods.\nDataService: a single injectable that provides access to all data.\nData is accessed using NodeIds and ListIds.\nNodeId: DataNodes are identified by a Node ID, which is a backend ID with a type tag.\nListId: The specific list a DataList will provide a view into is identified by a List ID.\nList IDs are a NodeId with a list type tag\n(e.g. \"the list of issues (type) in component abcdef (node)\").\n\nAlso see the code documentation for more information.\nCode generation from .graphql files\nWe use a code generator (https://graphql-code-generator.com/) to create typescript classes from\n.graphql files containing queries and mutations. The code generator generates one Angular service\nclass per query/mutation. These can then be included using dependency injection. These objects make\nit easy to parameterize the mutations and queries and invoke them in typescript code.\nYou should, however, never need to use the GraphQL queries directly, as abstractions are provided in\ndata and data-dgql.\nWhen you change .graphql files you have to rerun the code generator.\nIt will update the files in src/generated to match the changes in the .graphql files.\n:warning: The backend has to be running with debugNoLogin set to true to make the backend schema\ndefinition accessible to the generator via the urls defined in the codegen configuration file.Run npm run generate to execute the code generator when this condition is met.\nMocked Members Page\nEvery project offers a mocked 'Members' page. It shows a list of users in the project and\noffers a dialog to add users. However this area is purely a mock, changes are not persisted\nand there are no other users who really have access to your project.\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/contributors.html":{"url":"additional-documentation/contributors.html","title":"additional-page - Contributors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContributors\nFrontend Team\n\nFabian Danner, Fabiandanner\n\nJimmy Wagner, Jimmy-Wagner\n\nKliment Klimentov, KKlimentov1618\n\nKristina Pencheva, Kristinapn\n\nMoritz Pfeffer, moemode\n\nTill Mayer, tlmrgvf\n\nVincent Brandt, st161848\n\n\nOthers\n...\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
